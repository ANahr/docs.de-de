<Type Name="ActivationArguments" FullName="System.Runtime.Hosting.ActivationArguments">
  <TypeSignature Language="C#" Value="public sealed class ActivationArguments : System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationArguments extends System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ActivationArguments" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Daten für die manifestbasierte Aktivierung einer Anwendung bereit. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Hosting.ActivationArguments> Klasse wird verwendet, durch die <xref:System.AppDomainSetup> Klasse.  
  
 Das Modell der manifestbasierten Aktivierung verwendet ein Anwendungsmanifest anstelle einer Assembly für die Aktivierung. Ein Manifest beschreibt vollständig an die Anwendung, seiner Abhängigkeiten, sicherheitsanforderungen usw.. Das manifest Modell hat mehrere Vorteile gegenüber dem Modell Assembly Nachrichtenbasierte Aktivierung besonders für Webanwendungen. Beispielsweise enthält das Manifest die sicherheitsanforderungen der Anwendung, die wodurch der Benutzer entscheiden, ob Sie die Anwendung vor dem Herunterladen des Codes ausgeführt werden kann. Das Manifest enthält auch Informationen zu den anwendungsabhängigkeiten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen des aktuellen <xref:System.Runtime.Hosting.ActivationArguments> -Objekt aus der <xref:System.AppDomainSetup> für die <xref:System.AppDomain> ein Manifest-basiertes-Anwendung.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationData" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationData">Ein Objekt, das die Anwendung der manifestbasierten Aktivierung bezeichnet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Runtime.Hosting.ActivationArguments" /> Klasse mit dem angegebenen Aktivierungskontext.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext> dargestellte Objekt die `activationData` Parameter enthält die <xref:System.ApplicationIdentity> und Kontextinformationen für die manifestbasierte Aktivierung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationData" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">Ein Objekt, das die Anwendung der manifestbasierten Aktivierung bezeichnet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Runtime.Hosting.ActivationArguments" /> -Klasse mit der angegebenen Identität.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anwendungsidentität identifiziert eindeutig eine Manifest-basiertes Anwendung in einer neuen Domäne aktiviert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationContext, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">Ein Objekt, das die Anwendung der manifestbasierten Aktivierung bezeichnet.</param>
        <param name="activationData">Ein Array von Zeichenfolgen, die mit Host bereitgestellte Aktivierungsdaten.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Runtime.Hosting.ActivationArguments" /> Klasse mit dem angegebenen Aktivierungskontext und Aktivierungsdaten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext> dargestellte Objekt die `activationContext` Parameter enthält die <xref:System.ApplicationIdentity> und Kontextinformationen für die manifestbasierte Aktivierung. Die Aktivierungsdaten enthalten Informationen wie z. B. die Zeichenfolge Abfrageteil einer URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">Ein Objekt, das die Anwendung der manifestbasierten Aktivierung bezeichnet.</param>
        <param name="activationData">Ein Array von Zeichenfolgen, die mit Host bereitgestellte Aktivierungsdaten.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Runtime.Hosting.ActivationArguments" /> -Klasse mit der angegebenen Identität und der Aktivierung von Anwendungsdaten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anwendungsidentität identifiziert eindeutig eine Manifest-basiertes Anwendung in einer neuen Domäne aktiviert werden. Die Aktivierungsdaten enthalten Informationen wie z. B. die Zeichenfolge Abfrageteil einer URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationContext">
      <MemberSignature Language="C#" Value="public ActivationContext ActivationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ActivationContext ActivationContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Aktivierungskontext für die manifestbasierte Aktivierung einer Anwendung ab.</summary>
        <value>Ein Objekt, das eine Anwendung für die manifestbasierte Aktivierung bezeichnet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ActivationContext> Objekt enthält eine <xref:System.ApplicationIdentity> und bietet nur intern-Zugriff auf das Anwendungsmanifest. Der Aktivierungskontext wird während der manifestbasierten Aktivierung die Domänenrichtlinie einrichten und Bereitstellen einer Anwendung basierenden Sicherheitsmodell verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie den Wert des abzurufenden der <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext%2A> Eigenschaft aus der <xref:System.Runtime.Hosting.ActivationArguments> für ein Manifest-basiertes-Anwendung.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.Hosting.ActivationArguments> Klasse.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#4)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationData">
      <MemberSignature Language="C#" Value="public string[] ActivationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ActivationData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aktivierungsdaten vom Host ab.</summary>
        <value>Ein Array von Zeichenfolgen, die mit Host bereitgestellte Aktivierungsdaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Aktivierungsdaten enthalten Informationen wie z. B. die Zeichenfolge Abfrageteil einer URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIdentity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity ApplicationIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity ApplicationIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ApplicationIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Identität für ein Manifest aktivierte Anwendung ab.</summary>
        <value>Ein Objekt, eine Anwendung für die manifestbasierte Aktivierung identifiziert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anwendungsidentität identifiziert eindeutig eine Manifest-basiertes Anwendung in einer neuen Domäne aktiviert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie des aktuellen <see cref="T:System.Runtime.Hosting.ActivationArguments" /> Objekt.</summary>
        <returns>Eine Kopie des aktuellen Objekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt ein neues <xref:System.Runtime.Hosting.ActivationArguments> -Objekt und füllt es dann mit Kopien der Elemente des aktuellen <xref:System.Runtime.Hosting.ActivationArguments> Objekt  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
