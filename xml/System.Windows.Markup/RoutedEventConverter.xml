<Type Name="RoutedEventConverter" FullName="System.Windows.Markup.RoutedEventConverter">
  <TypeSignature Language="C#" Value="public sealed class RoutedEventConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutedEventConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.RoutedEventConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konvertiert eine <see cref="T:System.Windows.RoutedEvent" /> Objekt aus einer Zeichenfolge.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Markup.RoutedEventConverter> Klasse konvertiert nur eine Instanz von <xref:System.Windows.RoutedEvent> aus einem <xref:System.String>.  
  
<a name="xamlTextUsage_RoutedEventConverter"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedEventConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.RoutedEventConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Markup.RoutedEventConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="sourceType">Der Typ für die Konvertierung ausgewertet wird.</param>
        <summary>Bestimmt, ob ein Objekt des angegebenen Typs kann, mit einer Instanz von konvertiert werden <see cref="T:System.Windows.RoutedEvent" />.</summary>
        <returns>
          <see langword="true" />Wenn dieser Konverter den Vorgang ausführen kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Markup.RoutedEventConverter> Klasse konvertiert nur von <xref:System.String>. `typeDescriptorContext`wird von dieser Implementierung nicht verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="destinationType">Der Typ für die Konvertierung ausgewertet wird.</param>
        <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.RoutedEvent" /> in den angegebenen Typ konvertiert werden kann.</summary>
        <returns>Gibt immer <see langword="false" /> zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="cultureInfo">Kulturabhängige Informationen.</param>
        <param name="source">Das zu konvertierende Objekt.</param>
        <summary>Versucht, konvertiert das angegebene Objekt in ein <see cref="T:System.Windows.RoutedEvent" /> -Objekt, mit dem angegebenen Kontext.</summary>
        <returns>Das Ergebnis der Konvertierung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Markup.RoutedEventConverter> Klasse konvertiert nur von <xref:System.String>. Verschiedene Techniken beschäftigt sind bei einem Versuch, ein Ergebnis zu erzielen. `typeDescriptorContext`wird geprüft, ob verschiedene Dienste, einschließlich <xref:System.Windows.Markup.IXamlTypeResolver>, <xref:System.Xaml.IXamlSchemaContextProvider>, und <xref:System.Xaml.IAmbientProvider>. Die bereitgestellte Zeichenfolge wird auch für die interne Liste der registrierten WPF weitergeleitet Ereignisse auf überprüft <xref:System.Windows.FrameworkElement>. Wenn alle diese Versuche, zur Lösung des Problems fehlschlagen <xref:System.NotSupportedException> ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="source" />ist keine Zeichenfolge oder kann nicht konvertiert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="cultureInfo">Kulturabhängige Informationen.</param>
        <param name="value">Das zu konvertierende Objekt.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Versucht, Konvertieren einer <see cref="T:System.Windows.RoutedEvent" /> in den angegebenen Typ. Löst eine Ausnahme in allen Fällen.</summary>
        <returns>Löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> kann nicht konvertiert werden. Dies ist kein funktionierender Konverter für einen Sicherungspunkt Pfad...</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> oder <paramref name="destinationType" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
