<Type Name="RangeValuePattern+RangeValuePatternInformation" FullName="System.Windows.Automation.RangeValuePattern+RangeValuePatternInformation">
  <TypeSignature Language="C#" Value="public struct RangeValuePattern.RangeValuePatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit RangeValuePattern/RangeValuePatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den Zugriff auf die Eigenschaftswerte einer <see cref="T:System.Windows.Automation.RangeValuePattern" /> -Objekt mithilfe seiner <see cref="P:System.Windows.Automation.TransformPattern.Current" /> oder <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> Accessoren.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob der Wert des einem [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />Wenn der Wert schreibgeschützt ist. <see langword="false" /> wenn er geändert werden kann. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Müsste ein Steuerelement seine <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> festgelegt `true` und dessen <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> festgelegt `false` vor dem Erstellen eines eine <xref:System.Windows.Automation.RangeValuePattern> Objekt.  
  
   
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.RangeValuePattern> Steuerelementmuster verfügt über einen Wert inkrementiert oder dekrementiert durch die steuerelementspezifische <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange%2A> Wert.  
  
 [!code-csharp[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103largechange)]
 [!code-vb[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103largechange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den steuerelementspezifischen LargeChange-Wert, der addiert oder von diesem subtrahiert wird die <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> Eigenschaft.</summary>
        <value>Der LargeChange-Wert oder <see langword="null" /> Wenn das Element nicht unterstützt <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange" />. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.RangeValuePattern> Steuerelementmuster verfügt über einen Wert inkrementiert oder dekrementiert durch die steuerelementspezifische <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.LargeChange%2A> Wert.  
  
 [!code-csharp[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103largechange)]
 [!code-vb[UIARangeValuePattern_snip#103LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103largechange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den maximalen Bereichswert von unterstützt die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element.</summary>
        <value>Der maximale Wert von unterstützt die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element oder <see langword="null" /> Wenn das Element nicht unterstützt <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Maximum" />. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.RangeValuePattern> Steuerelementmuster verfügt über einen Wert auf den steuerelementspezifischen Höchstwert festgelegt.  
  
 [!code-csharp[UIARangeValuePattern_snip#104Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104maximum)]
 [!code-vb[UIARangeValuePattern_snip#104Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104maximum)]  
[!code-csharp[UIARangeValuePattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104)]
[!code-vb[UIARangeValuePattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des mindestbereichs von unterstützt die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element.</summary>
        <value>Der Mindestwert von unterstützt die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element oder <see langword="null" /> Wenn das Element nicht unterstützt <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Minimum" />. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.RangeValuePattern> Steuerelementmuster verfügt über einen Wert auf den steuerelementspezifischen Mindestwert festgelegt.  
  
 [!code-csharp[UIARangeValuePattern_snip#104Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104minimum)]
 [!code-vb[UIARangeValuePattern_snip#104Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104minimum)]  
[!code-csharp[UIARangeValuePattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#104)]
[!code-vb[UIARangeValuePattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#104)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das kleine Änderungswert, um die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] -Element, das hinzugefügt oder aus den Elementen subtrahiert <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" /> Eigenschaft.</summary>
        <value>Um eindeutige Änderungswert der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element oder <see langword="null" /> Wenn das Element nicht unterstützt <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange" />. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.RangeValuePattern> Steuerelementmuster verfügt über einen Wert inkrementiert oder dekrementiert durch die steuerelementspezifische <xref:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.SmallChange%2A> Wert.  
  
 [!code-csharp[UIARangeValuePattern_snip#103SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103smallchange)]
 [!code-vb[UIARangeValuePattern_snip#103SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103smallchange)]  
[!code-csharp[UIARangeValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#103)]
[!code-vb[UIARangeValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#103)]  
[!code-csharp[UIARangeValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#101)]
[!code-vb[UIARangeValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Wert von der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element.</summary>
        <value>Der aktuelle Wert der die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element oder <see langword="null" /> Wenn das Element nicht unterstützt <see cref="P:System.Windows.Automation.RangeValuePattern.RangeValuePatternInformation.Value" />. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.RangeValuePattern> -Objekt abgerufen, die von einem Zielsteuerelement wird in einer Funktion, die das aktuelle abruft übergeben <xref:System.Windows.Automation.RangeValuePattern> Eigenschaftswerte.  
  
 [!code-csharp[UIARangeValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIARangeValuePattern_snip/CSharp/UIARangeValuePattern_snippets.cs#102)]
 [!code-vb[UIARangeValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIARangeValuePattern_snip/VisualBasic/UIARangeValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
