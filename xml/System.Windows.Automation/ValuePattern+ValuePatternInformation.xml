<Type Name="ValuePattern+ValuePatternInformation" FullName="System.Windows.Automation.ValuePattern+ValuePatternInformation">
  <TypeSignature Language="C#" Value="public struct ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ValuePattern/ValuePatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ValuePattern.ValuePatternInformation" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht den Zugriff auf die Eigenschaftswerte einer <see cref="T:System.Windows.Automation.ValuePattern" /> -Objekt mithilfe seiner <see cref="P:System.Windows.Automation.ValuePattern.Current" /> oder <see cref="P:System.Windows.Automation.ValuePattern.Cached" /> Accessoren.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob der Wert des einem [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Element schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />Wenn der Wert schreibgeschützt ist. <see langword="false" /> wenn er geändert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Steuerelement muss seine <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> festgelegt `true` und seine <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> festgelegt `false` vor einen Aufruf wird vom Client versucht <xref:System.Windows.Automation.ValuePattern.SetValue%2A>.  
  
   
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.AutomationElement> , unterstützt die <xref:System.Windows.Automation.ValuePattern> Steuerelementmuster sind seine <xref:System.Windows.Automation.RangeValuePattern.ValueProperty> auf ein vom Benutzer angegebener Wert festgelegt.  
  
 [!code-csharp[UIAValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#103)]
 [!code-vb[UIAValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elements ab.</summary>
        <value>Der Wert, der die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] -Elements als Zeichenfolge. Der Standardwert ist eine leere Zeichenfolge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einzeilige Bearbeitungssteuerelemente unterstützen programmgesteuerten Zugriff auf ihre Inhalte über <xref:System.Windows.Automation.ValuePattern>. Mehrzeilige Bearbeitungssteuerelemente unterstützen jedoch nicht die <xref:System.Windows.Automation.ValuePattern> -Steuerelementmuster.  
  
 Zum Abrufen der Textinhalt des mehrzeilige edit-Steuerelemente, die die Steuerelemente unterstützen müssen die <xref:System.Windows.Automation.TextPattern> -Steuerelementmuster. Allerdings <xref:System.Windows.Automation.TextPattern> unterstützt nicht das Festlegen des Werts eines Steuerelements.  
  
 <xref:System.Windows.Automation.ValuePattern>das Abrufen von Formatierungsinformationen oder Teilzeichenfolgen unterstützt nicht. Die <xref:System.Windows.Automation.TextPattern> Steuerelementmuster muss in diesen Szenarien verwendet werden.  
  
   
  
## Examples  
 Im folgenden Beispiel ein <xref:System.Windows.Automation.ValuePattern> -Objekt abgerufen, die von einem Zielsteuerelement wird in einer Funktion, die das aktuelle abruft übergeben <xref:System.Windows.Automation.ValuePattern> Eigenschaftswerte.  
  
 [!code-csharp[UIAValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#102)]
 [!code-vb[UIAValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
