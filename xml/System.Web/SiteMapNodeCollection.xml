<Type Name="SiteMapNodeCollection" FullName="System.Web.SiteMapNodeCollection">
  <TypeSignature Language="C#" Value="public class SiteMapNodeCollection : System.Collections.IList, System.Web.UI.IHierarchicalEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteMapNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Web.UI.IHierarchicalEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SiteMapNodeCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IHierarchicalEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine stark typisierte Auflistung für <see cref="T:System.Web.SiteMapNode" /> Objekte und implementiert die <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> -Schnittstelle zur Unterstützung von Navigieren in der Auflistung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SiteMapNodeCollection> -Klasse stellt eine stark typisierte Auflistung für <xref:System.Web.SiteMapNode> Objekte. Sie speichert <xref:System.Web.SiteMapNode> Objekte intern in einem nullbasierten Array.  
  
 Sie können ändern, eine <xref:System.Web.SiteMapNodeCollection> Auflistung bei zuerst erstellt und anschließend mithilfe der folgenden Methoden zum Hinzufügen, kopieren und Entfernen von <xref:System.Web.SiteMapNode> Objekte:  
  
-   Hinzuzufügende <xref:System.Web.SiteMapNode> verwenden Sie die Objekte, die <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, und <xref:System.Web.SiteMapNodeCollection.Insert%2A> Methoden.  
  
-   So kopieren Sie <xref:System.Web.SiteMapNode> Objekte, verwenden die <xref:System.Web.SiteMapNodeCollection.CopyTo%2A> Methode.  
  
-   So entfernen Sie <xref:System.Web.SiteMapNode> Objekte, verwenden die <xref:System.Web.SiteMapNodeCollection.Remove%2A> Methode.  
  
 Sie können ein schreibgeschütztes erstellen <xref:System.Web.SiteMapNodeCollection>, dem lässt nicht zu hinzufügen, kopieren und Entfernen von <xref:System.Web.SiteMapNode> Objekte mithilfe der statischen <xref:System.Web.SiteMapNodeCollection.ReadOnly%2A> Methode. Die <xref:System.Web.SiteMapNodeCollection> Sammlungen, die von zurückgegeben werden die <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=nameWithType> und <xref:System.Web.UI.IHierarchyData.GetChildren%2A> Methoden sind schreibgeschützt, wie die <xref:System.Web.SiteMapNodeCollection> , wird zurückgegeben, wenn die <xref:System.Web.SiteMapNode.ChildNodes%2A> Eigenschaft erfolgt auf eine <xref:System.Web.SiteMapNode> von zurückgegebene Objekt eine Anbieter. Ein <xref:System.NotSupportedException> Ausnahme ausgelöst wird, wenn Sie versuchen, ein schreibgeschützter ändern <xref:System.Web.SiteMapNodeCollection> durch Festlegen der Standardindexereigenschaft oder mithilfe einer der folgenden Methoden:  
  
-   <xref:System.Web.SiteMapNodeCollection.Add%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.AddRange%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Clear%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Insert%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Remove%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>  
  
 Verwenden der <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> -Eigenschaft die Auflistung vor dem Aufrufen einer der Methoden in der vorangehenden Liste überprüft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.SiteMapNodeCollection> -Auflistung, und fügen Sie dann <xref:System.Web.SiteMapNode> Objekte mithilfe der <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode. Die <xref:System.Web.SiteMapNodeCollection> ist eine Teilmenge der aktuellen Siteübersicht und zeigt nur die ersten beiden hierarchischen Ebenen.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.SiteMapNodeCollection" /> -Klasse, die die Standardinstanz ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zum Erstellen eines leeren <xref:System.Web.SiteMapNodeCollection> Auflistung. Sie können Elemente hinzufügen der <xref:System.Web.SiteMapNodeCollection> mithilfe der <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, oder <xref:System.Web.SiteMapNodeCollection.Insert%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Web.SiteMapNodeCollection> -Auflistung, und fügen Sie dann Elemente, die die <xref:System.Web.SiteMapNodeCollection> mit der <xref:System.Web.SiteMapNodeCollection.Add%2A> Methode.  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">Die Anfangskapazität des der <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.SiteMapNodeCollection" /> -Klasse mit der angegebenen Anfangskapazität.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zur Erstellung einer <xref:System.Web.SiteMapNodeCollection> Auflistung mit der angegebenen Anfangskapazität.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Web.SiteMapNode" />, das zu <see cref="T:System.Web.SiteMapNodeCollection" /> hinzugefügt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.Web.SiteMapNodeCollection" /> -Klasse und fügt die <see cref="T:System.Web.SiteMapNode" /> -Objekt an die <see cref="P:System.Collections.CollectionBase.InnerList" /> -Eigenschaft für die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zur Erstellung einer <xref:System.Web.SiteMapNodeCollection> Auflistung mit einem einzelnen anfänglichen <xref:System.Web.SiteMapNode> Objekt. Sie können Elemente hinzufügen der <xref:System.Web.SiteMapNodeCollection> mithilfe der <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, oder <xref:System.Web.SiteMapNodeCollection.Insert%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.SiteMapNodeCollection> Auflistung mit einem einzelnen anfänglichen <xref:System.Web.SiteMapNode> -Objekt, und fügen Sie eine <xref:System.Web.SiteMapNodeCollection> von <xref:System.Web.SiteMapNode> Objekte mithilfe der <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode. Sie können ändern, die <xref:System.Web.SiteMapNodeCollection>, obwohl der einzelnen <xref:System.Web.SiteMapNode> Objekte möglicherweise schreibgeschützt sein.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNode[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNode[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.Web.SiteMapNode" /> hinzuzufügende der <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.Web.SiteMapNodeCollection" /> -Klasse und fügt das Array des Typs <see cref="T:System.Web.SiteMapNode" /> auf die <see cref="P:System.Collections.CollectionBase.InnerList" /> -Eigenschaft für die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor entspricht dem Aufrufen der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor und Hinzufügen von Elementen, die <xref:System.Web.SiteMapNodeCollection> Auflistung mit der <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNodeCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNodeCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Web.SiteMapNodeCollection" /> , enthält die <see cref="T:System.Web.SiteMapNode" /> hinzuzufügende mit dem aktuellen <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.SiteMapNodeCollection" /> -Klasse und fügt die Listenelemente der angegebenen <see cref="T:System.Web.SiteMapNodeCollection" /> -Auflistung, um die <see cref="P:System.Collections.CollectionBase.InnerList" /> -Eigenschaft für die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor entspricht dem Aufrufen der <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor und Hinzufügen von Elementen, die <xref:System.Web.SiteMapNodeCollection> Auflistung mit der <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.SiteMapNodeCollection> unter Verwendung einer anderen Auflistung <xref:System.Web.SiteMapNodeCollection> von <xref:System.Web.SiteMapNode> Objekte als Basis verwendet wird. Die <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=nameWithType> Methodenrückgabe ein schreibgeschütztes <xref:System.Web.SiteMapNodeCollection>, welche wird erkannt, wenn die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> -Eigenschaft gibt `true`. Ein neues <xref:System.Web.SiteMapNodeCollection> erstellt, wobei der schreibgeschützten <xref:System.Web.SiteMapNodeCollection> und <xref:System.Web.SiteMapNodeCollection.Add%2A> und <xref:System.Web.SiteMapNodeCollection.Remove%2A> Methoden erfolgreich aufgerufen werden können.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Web.SiteMapNode" />, das in <see cref="T:System.Web.SiteMapNodeCollection" /> eingefügt werden soll.</param>
        <summary>Fügt ein einzelnes <see cref="T:System.Web.SiteMapNode" /> Objekt der Auflistung.</summary>
        <returns>Der Index des der <see cref="P:System.Collections.CollectionBase.InnerList" /> , in dem die <see cref="T:System.Web.SiteMapNode" /> eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht hinzugefügt werden eine <xref:System.Web.SiteMapNode> Objekt um eine nur-Lese- oder eine feste Größe <xref:System.Web.SiteMapNodeCollection> Auflistung. Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> schreibgeschützt ist, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Erstellen eines neuen <xref:System.Web.SiteMapNodeCollection> Auflistung und Elemente hinzuzufügen. Im zweiten Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Website Kartenanbieter Elemente hinzu.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Web.SiteMapNodeCollection>, und klicken Sie dann Elemente hinzufügen, mit der <xref:System.Web.SiteMapNodeCollection.Add%2A> Methode.  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 Das folgende Codebeispiel veranschaulicht die Implementierung eines Zuordnung und zeigt, wie die <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor zum Erstellen eines neuen <xref:System.Web.SiteMapNodeCollection> und Elemente zum Hinzufügen der <xref:System.Web.SiteMapNodeCollection> mit der <xref:System.Web.SiteMapNodeCollection.Add%2A> Methode.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, das sich für die <xref:System.Web.SiteMapProvider> Klasse.  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Web.SiteMapNode[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Web.SiteMapNode[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.Web.SiteMapNode" /> hinzuzufügende mit dem aktuellen <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Fügt ein Array vom Typ <see cref="T:System.Web.SiteMapNode" /> auf die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Array, das an die <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode darf `null` Werte; Dies führt jedoch zu unerwarteten Ausnahmen beim der <xref:System.Web.SiteMapNodeCollection> Auflistung bearbeitet wird.  
  
 Sie können nicht hinzugefügt werden eine <xref:System.Web.SiteMapNode> Objekt um eine nur-Lese- oder eine feste Größe <xref:System.Web.SiteMapNodeCollection>. Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> schreibgeschützt ist, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Web.SiteMapNodeCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Web.SiteMapNodeCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Web.SiteMapNodeCollection" /> , enthält die <see cref="T:System.Web.SiteMapNode" /> Objekten, die das aktuelle hinzugefügt <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Fügt die Knoten in der angegebenen <see cref="T:System.Web.SiteMapNodeCollection" /> mit der aktuellen Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SiteMapNodeCollection> -Auflistung, die an die <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode darf `null` <xref:System.Web.SiteMapNode> Objekte; Dies führt jedoch zu unerwarteten Ausnahmen bei der <xref:System.Web.SiteMapNodeCollection> bearbeitet wird.  
  
 Sie können nicht hinzugefügt werden eine <xref:System.Web.SiteMapNode> Objekt um eine nur-Lese- oder eine feste Größe <xref:System.Web.SiteMapNodeCollection>. Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> schreibgeschützt ist, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine änderbare erstellen <xref:System.Web.SiteMapNodeCollection> -Auflistung, und fügen Sie dann <xref:System.Web.SiteMapNode> Objekte mithilfe der <xref:System.Web.SiteMapNodeCollection.AddRange%2A> Methode.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
 So entfernen Sie bestimmte Elemente der <xref:System.Web.SiteMapNodeCollection>, verwenden Sie die <xref:System.Web.SiteMapNodeCollection.Remove%2A> oder <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Web.SiteMapNode" />, das in der <see cref="T:System.Web.SiteMapNodeCollection" /> gesucht werden soll.</param>
        <summary>Bestimmt, ob die Auflistung einen bestimmten <see cref="T:System.Web.SiteMapNode" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Web.SiteMapNodeCollection" /> enthält die angegebene <see cref="T:System.Web.SiteMapNode" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SiteMapNodeCollection.Contains%2A> Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.Contains%2A> und <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> Methoden die <xref:System.Web.SiteMapNodeCollection> Klasse. Der Code überprüft, ob zwei Anbieter `AspNetXmlSiteMapProvider` und `MyXmlSiteMapProvider`, für die untergeordneten Knoten des Stammknotens, die Duplikate sind.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/cs/sourcecs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (System.Web.SiteMapNode[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Web.SiteMapNode[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.SiteMapNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das eindimensionale Array, das muss eine nullbasierte Indizierung aufweisen und das Ziel der aus kopierten Elemente ist die <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <param name="index">Der nullbasierte Index im <c>Array</c> an dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die gesamte Auflistung in ein kompatibles eindimensionales Array, wobei am angegebenen Index im Zielarray begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SiteMapNodeCollection.CopyTo%2A> Methode delegiert an die <xref:System.Collections.CollectionBase.List%2A?displayProperty=nameWithType> Eigenschaft, die für die möglichen Ausnahmen, die aufgelisteten "Ausnahmen".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der <see cref="T:System.Web.SiteMapNode" /> Objekte in der Quelle <see cref="T:System.Web.SiteMapNodeCollection" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente im <see cref="T:System.Web.SiteMapNodeCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView(class System.Web.UI.WebControls.SiteMapDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SiteMapDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> Steuerelement, das die Ansicht zugeordnet ist.</param>
        <param name="viewName">Der Name der Sicht.</param>
        <summary>Ruft die <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> -Objekt, das die Knoten in der aktuellen Auflistung zugeordnet ist.</summary>
        <returns>Eine benannte <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> für die <see cref="T:System.Web.SiteMapNode" /> Objekte in der aktuellen <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Verweis auf ein Enumeratorobjekt, das zum Durchlaufen der Auflistung verwendet wird.</summary>
        <returns>Ein Objekt, implementiert die <see cref="T:System.Collections.IEnumerator" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> -Objekt, das die Knoten in der aktuellen Auflistung zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> für die <see cref="T:System.Web.SiteMapNode" /> Objekte in der aktuellen <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHierarchyData">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetHierarchyData(object enumeratedItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumeratedItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumeratedItem">Das Objekt, für das eine <see cref="T:System.Web.UI.IHierarchyData" />-Schnittstelle zurückgegeben werden soll.</param>
        <summary>Gibt ein hierarchisches Datenelement für das angegebene aufgelistete Element zurück.</summary>
        <returns>Eine <see cref="T:System.Web.UI.IHierarchyData" />-Schnittstelle, die das Objekt darstellt, das an das <see cref="M:System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)" /> übergeben wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Web.SiteMapNode" />, das in der <see cref="T:System.Web.SiteMapNodeCollection" /> gesucht werden soll.</param>
        <summary>Sucht nach dem angegebenen <see cref="T:System.Web.SiteMapNode" /> -Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der gesamten Auflistung zurück.</summary>
        <returns>Der nullbasierte Index des ggf. ersten Vorkommens von <paramref name="value" /> in der gesamten <see cref="T:System.Web.SiteMapNodeCollection" />, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.Contains%2A> und <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> Methoden die <xref:System.Web.SiteMapNodeCollection> Klasse. Der Code überprüft, ob zwei Anbieter `AspNetXmlSiteMapProvider` und `MyXmlSiteMapProvider`, für die untergeordneten Knoten des Stammknotens, die Duplikate sind.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/cs/sourcecs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem die <see cref="T:System.Web.SiteMapNode" /> eingefügt wird.</param>
        <param name="value">Der einzufügende <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.SiteMapNode" /> Objekt am angegebenen Index in die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.  
  
 - oder -   
  
 <paramref name="index" />ist größer als die <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.  
  
 - oder -   
  
 <see cref="T:System.Web.SiteMapNodeCollection" /> hat eine feste Größe.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert, der angibt, ob ein Knoten hinzugefügt oder aus der Auflistung entfernt werden können.</summary>
        <value>
          <see langword="true" />Wenn Sie hinzufügen können <see cref="T:System.Web.SiteMapNode" /> Objekte oder entfernen <see cref="T:System.Web.SiteMapNode" /> Objekte aus der <see cref="T:System.Web.SiteMapNodeCollection" />ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />Wenn Sie ändern können, die <see cref="T:System.Web.SiteMapNodeCollection" />ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher).</summary>
        <value>
          <see langword="true" />Wenn der Zugriff synchronisiert ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des der <see cref="T:System.Web.SiteMapNode" /> gefunden.</param>
        <summary>Ruft ab oder legt die <see cref="T:System.Web.SiteMapNode" /> Objekt am angegebenen Index in der Auflistung.</summary>
        <value>Ein <see cref="T:System.Web.SiteMapNode" /> , die stellt ein Element in der <see cref="T:System.Web.SiteMapNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Web.SiteMapNodeCollection.Item%2A> Indexer können Sie den Inhalt des durchlaufen eine <xref:System.Web.SiteMapNodeCollection> Auflistung oder Ersetzen der <xref:System.Web.SiteMapNode> Objekt am angegebenen Index.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.Item%2A> Indexer zum Abrufen einer <xref:System.Web.SiteMapNode> -Objekt aus der <xref:System.Web.SiteMapNodeCollection> Auflistung. In diesem Beispiel wird eine <xref:System.Web.SiteMapNode> wird das bereitstellungspaketobjekt aus seiner Position auf das zweite Element des internen Arrays mithilfe der <xref:System.Web.SiteMapNodeCollection.Remove%2A> Methode und angefügt an das Array mit der <xref:System.Web.SiteMapNodeCollection.Add%2A> Methode. Zum Einfügen einer <xref:System.Web.SiteMapNode> -Objekt am angegebenen Index, statt es an das Ende des Arrays angefügt wird, verwendet die <xref:System.Web.SiteMapNodeCollection.Insert%2A> Methode.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.  
  
 \- oder –  
  
 <paramref name="index" />ist größer als die <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.ArgumentNullException">Ist der Wert für den Setter bereitgestellte <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende <see cref="T:System.Web.SiteMapNode" />.</param>
        <summary>Führt zusätzliche benutzerdefinierte Prozesse aus, bei der Überprüfung eines Werts.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist keine <see cref="T:System.Web.SiteMapNode" />.</exception>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> Methode kann während der Implementierung Prozesse zu definieren, die ausgeführt werden muss, wenn das Standardverhalten des zugrunde liegenden <see cref="T:System.Collections.ArrayList" /> Objekt. Durch die Definition der <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> Methode Implementierer können Funktionen hinzufügen geerbten Methoden ohne alle anderen Methoden überschreiben. Insbesondere die <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> -Methode aufgerufen wird, können Sie jederzeit die <see cref="T:System.Web.SiteMapNodeCollection" /> -Auflistung wird verwendet, über einen Verweis auf eine <see cref="T:System.Collections.IList" /> Schnittstelle.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapNodeCollection ReadOnly (System.Web.SiteMapNodeCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.SiteMapNodeCollection ReadOnly(class System.Web.SiteMapNodeCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="collection">Die <see cref="T:System.Web.SiteMapNodeCollection" /> , enthält die <see cref="T:System.Web.SiteMapNode" /> Objekten, die die schreibgeschützte hinzugefügt <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Gibt eine schreibgeschützte Auflistung, die die Knoten in der angegebenen enthält <see cref="T:System.Web.SiteMapNodeCollection" /> Auflistung.</summary>
        <returns>Ein schreibgeschützter <see cref="T:System.Web.SiteMapNodeCollection" /> mit dem gleichen <see cref="T:System.Web.SiteMapNode" /> Elemente und Struktur wie die ursprüngliche <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft. Die <xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A> Eigenschaft auch gibt `true` bei einer <xref:System.Web.SiteMapNodeCollection> ist schreibgeschützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft, um zu testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt oder bearbeitbar. Wenn `siteNodes` kann geändert werden, `MoveNode` darauf aufgerufen wurde, andernfalls ein Klon <xref:System.Web.SiteMapNodeCollection> mit erstellt, `siteNodes` als Basis verwendet wird.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Ein schreibgeschützter <see cref="T:System.Web.SiteMapNodeCollection" /> Auflistung Lese-und Suche unterstützt, unterstützt jedoch nicht die <see cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />, <see cref="Overload:System.Web.SiteMapNodeCollection.AddRange" />, <see cref="M:System.Web.SiteMapNodeCollection.Clear" />, <see cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />, <see cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />, und <see cref="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" /> Methoden noch auf den Standardindexer Setter-Methode Eigenschaft <see cref="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Web.SiteMapNode" />, der aus der <see cref="T:System.Web.SiteMapNodeCollection" /> entfernt werden soll.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Web.SiteMapNode" />-Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
 Die <xref:System.Web.SiteMapNodeCollection.Remove%2A> Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.SiteMapNodeCollection.Remove%2A> -Methode zum Entfernen einer <xref:System.Web.SiteMapNode> -Objekt aus eine <xref:System.Web.SiteMapNodeCollection> -Auflistung, und fügen Sie dann die <xref:System.Web.SiteMapNode> Objekt an das Ende der <xref:System.Web.SiteMapNodeCollection> mit der <xref:System.Web.SiteMapNodeCollection.Add%2A> Methode. Wenn die <xref:System.Web.SiteMapNodeCollection> ist schreibgeschützt, eine <xref:System.NotSupportedException> Ausnahme abgefangen wird.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />ist in der Auflistung nicht vorhanden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.  
  
 - oder -   
  
 <see cref="T:System.Web.SiteMapNodeCollection" /> hat eine feste Größe.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt die <see cref="T:System.Web.SiteMapNode" /> Objekt am angegebenen Index der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können testen, ob eine <xref:System.Web.SiteMapNodeCollection> Auflistung ist schreibgeschützt, indem Sie überprüfen die <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> Eigenschaft.  
  
 So entfernen Sie ein Element aus der <xref:System.Web.SiteMapNodeCollection> durch Angabe einer <xref:System.Web.SiteMapNode> Objekt zu entfernen, verwenden die <xref:System.Web.SiteMapNodeCollection.Remove%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.  
  
 \- oder –  
  
 <paramref name="index" />ist größer als die <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.NotSupportedException"><see cref="T:System.Web.SiteMapNodeCollection" /> ist schreibgeschützt.  
  
 \- oder –  
  
 Die <see cref="T:System.Web.SiteMapNodeCollection" /> hat eine feste Größe.</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt, das mit der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Web.SiteMapNodeCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auflisten von einem <xref:System.Web.SiteMapNodeCollection> Auflistung ist systemintern keine threadsichere Prozedur. Selbst wenn eine <xref:System.Web.SiteMapNodeCollection> wird synchronisiert, andere Threads können weiterhin ändern. die <xref:System.Web.SiteMapNodeCollection>, dies bedeutet, dass den Enumerator eine Ausnahme auslöst. Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder Sperre der <xref:System.Web.SiteMapNodeCollection> während der gesamten Enumeration oder aufgrund von Änderungen von anderen Threads ausgelösten Ausnahmen abfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein eindimensionales Array, muss eine nullbasierte Indizierung und das Ziel der aus kopierten Elemente ist, die <see cref="T:System.Collections.CollectionBase" />.</param>
        <param name="index">Der nullbasierte Index im <c>Array</c> an dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> Schnittstelle, um ein Array, beginnend an einem bestimmten Arrayindex begonnen. Diese Klasse kann nicht vererbt werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der <see cref="T:System.Web.SiteMapNode" /> Objekte in der Quelle <see cref="T:System.Web.SiteMapNodeCollection" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der <see cref="T:System.Collections.ICollection" /> Schnittstelle. Diese Klasse kann nicht vererbt werden.</summary>
        <value>Die Anzahl der Elemente, die in <see cref="T:System.Collections.ICollection" /> enthalten sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see langword="Boolean" /> Wert, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> -Schnittstelle synchronisiert (threadsicher). Diese Klasse kann nicht vererbt werden.</summary>
        <value>
          <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <see cref="T:System.Collections.ICollection" /> Schnittstelle. Diese Klasse kann nicht vererbt werden.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der <see cref="T:System.Web.SiteMapNodeCollection" /> verwendet werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das <see cref="T:System.Collections.IList" /> hinzugefügt werden soll.</param>
        <summary>Fügt ein Element der Auflistung in der <see cref="T:System.Collections.IList" /> Schnittstelle. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung in der <see cref="T:System.Collections.IList" /> Schnittstelle. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das im <see cref="T:System.Collections.IList" /> zu suchende Objekt.</param>
        <summary>Bestimmt, ob die Auflistung in die <see cref="T:System.Collections.IList" /> Schnittstelle enthält den angegebenen booleschen Wert.</summary>
        <returns>
          <see langword="true" />, wenn das Objekt in <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das im <see cref="T:System.Collections.IList" /> zu suchende Objekt.</param>
        <summary>Bestimmt den Index eines bestimmten Elements in der Auflistung, die von zurückgegeben wird die <see cref="T:System.Collections.IList" /> Schnittstelle. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Der Index des Werts, in der Liste aus, wenn gefunden; andernfalls -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte <c>Index</c> an der eingefügt <c>Wert</c>.</param>
        <param name="value">Das in die <see cref="T:System.Collections.IList" /> einzufügende Objekt.</param>
        <summary>Fügt ein Element in der Auflistung in der <see cref="T:System.Collections.IList" /> Schnittstelle am angegebenen Index. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see langword="Boolean" /> Wert, der angibt, ob die Auflistung eine feste Größe aufweist. Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" />, wenn das <see cref="T:System.Web.SiteMapNodeCollection" /> schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see langword="Boolean" /> Wert, der angibt, ob die Auflistung schreibgeschützt ist. Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
        <value>
          <see langword="true" />, wenn das <see cref="T:System.Web.SiteMapNodeCollection" /> schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
        <summary>Ruft das <see cref="T:System.Collections.IList" />-Element am angegebenen Index ab.</summary>
        <value>Das Element am angegebenen Index.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das aus der <see cref="T:System.Collections.IList" /> zu entfernende Objekt.</param>
        <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der Auflistung in der <see cref="T:System.Collections.IList" /> Schnittstelle. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchicalEnumerable.GetHierarchyData">
      <MemberSignature Language="C#" Value="System.Web.UI.IHierarchyData IHierarchicalEnumerable.GetHierarchyData (object enumeratedItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.IHierarchyData System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(object enumeratedItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumeratedItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumeratedItem">Das Objekt, für das eine <see cref="T:System.Web.UI.IHierarchyData" />-Schnittstelle zurückgegeben werden soll.</param>
        <summary>Gibt ein hierarchisches Datenelement für das angegebene aufgelistete Element zurück. Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)" />.</summary>
        <returns>Eine <see cref="T:System.Web.UI.IHierarchyData" />-Schnittstelle, die das Objekt darstellt, das an das <see cref="M:System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)" /> übergeben wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
