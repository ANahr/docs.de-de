<Type Name="HttpModuleCollection" FullName="System.Web.HttpModuleCollection">
  <TypeSignature Language="C#" Value="public sealed class HttpModuleCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpModuleCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpModuleCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet eine Möglichkeit zum Indizieren und Abrufen einer Auflistung von <see cref="T:System.Web.IHttpModule" /> Objekte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpModuleCollection.AllKeys%2A> Eigenschaft und die <xref:System.Web.HttpModuleCollection.GetKey%2A> und <xref:System.Web.HttpModuleCollection.CopyTo%2A> Methoden die <xref:System.Web.HttpModuleCollection> Klasse. Im Beispiel ruft das Anwendungsobjekt für die aktuelle Anforderung aus dem aktuellen <xref:System.Web.HttpContext> Objekt. Extrahiert dann die <xref:System.Web.HttpModuleCollection> -Objekt aus der Anwendungsinstanz und zeigt die Namen der <xref:System.Web.IHttpModule> Objekte.  
  
 [!code-aspx-csharp[HttpModuleCollection1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpModuleCollection1/CS/httpmodulecollection1cs.aspx#1)]
 [!code-aspx-vb[HttpModuleCollection1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpModuleCollection1/VB/httpmodulecollection1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpModuleCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Zeichenfolgenarray mit den Schlüsseln (Modulnamen) in der <see cref="T:System.Web.HttpModuleCollection" />.</summary>
        <value>Ein Array von Modulnamen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpModuleCollection.AllKeys%2A> Eigenschaft und die <xref:System.Web.HttpModuleCollection.GetKey%2A> und <xref:System.Web.HttpModuleCollection.CopyTo%2A> Methoden die <xref:System.Web.HttpModuleCollection> Klasse. Im Beispiel ruft das Anwendungsobjekt für die aktuelle Anforderung aus dem aktuellen <xref:System.Web.HttpContext> Objekt. Extrahiert dann die <xref:System.Web.HttpModuleCollection> -Objekt aus der Anwendungsinstanz und zeigt die Namen der <xref:System.Web.IHttpModule> Objekte.  
  
 [!code-aspx-csharp[HttpModuleCollection1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpModuleCollection1/CS/httpmodulecollection1cs.aspx#1)]
 [!code-aspx-vb[HttpModuleCollection1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpModuleCollection1/VB/httpmodulecollection1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpModuleCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Der Ziel-<see cref="T:System.Array" />.</param>
        <param name="index">Der Index des Ziels <see cref="T:System.Array" /> , ab dem kopiert.</param>
        <summary>Kopiert die Elemente der modulauflistung, um eine <see cref="T:System.Array" />, beginnend am angegebenen Index des Arrays.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpModuleCollection.AllKeys%2A> Eigenschaft und die <xref:System.Web.HttpModuleCollection.GetKey%2A> und <xref:System.Web.HttpModuleCollection.CopyTo%2A> Methoden die <xref:System.Web.HttpModuleCollection> Klasse. Im Beispiel ruft das Anwendungsobjekt für die aktuelle Anforderung aus dem aktuellen <xref:System.Web.HttpContext> Objekt. Extrahiert dann die <xref:System.Web.HttpModuleCollection> -Objekt aus der Anwendungsinstanz und zeigt die Namen der <xref:System.Web.IHttpModule> Objekte.  
  
 [!code-aspx-csharp[HttpModuleCollection1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpModuleCollection1/CS/httpmodulecollection1cs.aspx#1)]
 [!code-aspx-vb[HttpModuleCollection1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpModuleCollection1/VB/httpmodulecollection1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.IHttpModule Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHttpModule Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpModuleCollection.Get(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpModule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des der <see cref="T:System.Web.IHttpModule" /> aus der Auflistung zurückzugebenden Objekts.</param>
        <summary>Gibt die <see cref="T:System.Web.IHttpModule" /> Objekt mit dem angegebenen Index aus der <see cref="T:System.Web.HttpModuleCollection" />.</summary>
        <returns>Die <see cref="T:System.Web.IHttpModule" /> durch angegebene Element der <paramref name="index" /> Parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.IHttpModule Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.IHttpModule Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpModuleCollection.Get(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpModule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Schlüssel des Elements abgerufen werden sollen.</param>
        <summary>Gibt die <see cref="T:System.Web.IHttpModule" /> Objekt mit dem angegebenen Namen aus der <see cref="T:System.Web.HttpModuleCollection" />.</summary>
        <returns>Die <see cref="T:System.Web.IHttpModule" /> durch angegebene Element der <paramref name="name" /> Parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpModuleCollection.GetKey(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Schlüssels aus der Auflistung abgerufen.</param>
        <summary>Gibt den Schlüssel (Namen), der die <see cref="T:System.Web.IHttpModule" /> Objekt am angegebenen numerischen Index.</summary>
        <returns>Der Name des der <see cref="T:System.Web.IHttpModule" /> durch angegebene Element der <paramref name="index" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Web.HttpModuleCollection.AllKeys%2A> Eigenschaft und die <xref:System.Web.HttpModuleCollection.GetKey%2A> und <xref:System.Web.HttpModuleCollection.CopyTo%2A> Methoden die <xref:System.Web.HttpModuleCollection> Klasse. Im Beispiel ruft das Anwendungsobjekt für die aktuelle Anforderung aus dem aktuellen <xref:System.Web.HttpContext> Objekt. Extrahiert dann die <xref:System.Web.HttpModuleCollection> -Objekt aus der Anwendungsinstanz und zeigt die Namen der <xref:System.Web.IHttpModule> Objekte.  
  
 [!code-aspx-csharp[HttpModuleCollection1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpModuleCollection1/CS/httpmodulecollection1cs.aspx#1)]
 [!code-aspx-vb[HttpModuleCollection1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpModuleCollection1/VB/httpmodulecollection1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.IHttpModule this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpModule Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpModuleCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpModule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des der <see cref="T:System.Web.IHttpModule" /> aus der Auflistung abzurufenden Objekts.</param>
        <summary>Ruft die <see cref="T:System.Web.IHttpModule" /> Objekt mit dem angegebenen numerischen Index aus der <see cref="T:System.Web.HttpModuleCollection" />.</summary>
        <value>Die <see cref="T:System.Web.IHttpModule" /> Objektmodul gemäß der <paramref name="index" /> Parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.IHttpModule this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpModule Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpModuleCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpModule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Schlüssel des Elements abgerufen werden sollen.</param>
        <summary>Ruft die <see cref="T:System.Web.IHttpModule" /> Objekt mit dem angegebenen Namen aus der <see cref="T:System.Web.HttpModuleCollection" />.</summary>
        <value>Die <see cref="T:System.Web.IHttpModule" /> Objektmodul gemäß der <paramref name="name" /> Parameter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
