<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Satz von Datenbefehlen und eine datenbankverbindung, die zum Füllen der <see cref="T:System.Data.DataSet" /> und Aktualisieren einer SQL Server-Datenbank. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.SqlClient.SqlDataAdapter>, dient als Brücke zwischen einer <xref:System.Data.DataSet> und SQL Server für das Abrufen und Speichern von Daten. Die <xref:System.Data.SqlClient.SqlDataAdapter> stellt diese Brücke bereit, durch die Zuordnung <xref:System.Data.Common.DbDataAdapter.Fill%2A>, geändert wird, die die Daten in der <xref:System.Data.DataSet> zum Abgleich der Daten in der Datenquelle und <xref:System.Data.Common.DbDataAdapter.Update%2A>, geändert wird, die die Daten in der Datenquelle entsprechend der Daten in der <xref:System.Data.DataSet>unter Verwendung der entsprechende Transact-SQL-Anweisungen für die Datenquelle. Das Update wird regelmäßig eine Zeile ausgeführt. Für jede Zeile eingefügt, geänderten und gelöschten der <xref:System.Data.Common.DbDataAdapter.Update%2A> Methode bestimmt den Typ der Änderung, die für sie ausgeführt wurde (`Insert`, `Update`, oder `Delete`). Abhängig von der Art der Änderung die `Insert`, `Update`, oder `Delete` -Befehlsvorlage ausgeführt wird, wenn die geänderte Zeile an die Datenquelle weitergegeben werden sollen. Wenn die <xref:System.Data.SqlClient.SqlDataAdapter> füllt eine <xref:System.Data.DataSet>, erstellt er die erforderlichen Tabellen und Spalten für die zurückgegebenen Daten, sofern sie nicht bereits vorhanden sind. Allerdings Primärschlüsselinformationen ist nicht im enthalten implizit erstellten Schemas, wenn die <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf <xref:System.Data.MissingSchemaAction.AddWithKey>. Möglicherweise müssen Sie auch die <xref:System.Data.SqlClient.SqlDataAdapter> erstellen das Schema der <xref:System.Data.DataSet>, einschließlich Primärschlüsselinformationen vor dem Füllen mit Daten mithilfe `FillSchema`. Weitere Informationen finden Sie unter [Hinzufügen vorhandener Einschränkungen zu einem DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 <xref:System.Data.SqlClient.SqlDataAdapter>Dient in Verbindung mit <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlCommand> Leistung zu verbessern, wenn die Verbindung mit einer SQL Server-Datenbank.  
  
> [!NOTE]
>  Wenn Sie zum Bearbeiten oder Löschen von Daten mit einem `DataAdapter` gespeicherte SQL Server-Prozeduren verwenden, müssen Sie sicherstellen, dass in der Definition der gespeicherten Prozedur nicht SET NOCOUNT ON verwendet wird. Anderenfalls ist die zurückgegebene Anzahl der betroffenen Zeilen gleich Null (0), was der `DataAdapter` als Parallelitätskonflikt interpretiert. In diesem Fall wird eine <xref:System.Data.DBConcurrencyException> ausgelöst.  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter> umfasst auch die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, und <xref:System.Data.Common.DataAdapter.TableMappings%2A> Eigenschaften, um das Laden und Aktualisieren von Daten zu ermöglichen.  
  
 Wenn eine Instanz von <xref:System.Data.SqlClient.SqlDataAdapter> erstellt wird, werden die Lese-/Schreibzugriff Eigenschaften werden festgelegt, um die Anfangswerte fest. Eine Liste der folgenden Werte sind, finden Sie unter der <xref:System.Data.SqlClient.SqlDataAdapter> Konstruktor.  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, und <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> sind generische Vorlagen, die automatisch mit einzelnen Werten von jeder geänderten Zeile über den Mechanismus der Parameter ausgefüllt werden.  
  
 Für jede Spalte, die Sie mit der Datenquelle auf weitergeben <xref:System.Data.Common.DbDataAdapter.Update%2A>, ein Parameter hinzugefügt werden sollen die `InsertCommand`, `UpdateCommand`, oder `DeleteCommand`. Die <xref:System.Data.Common.DbParameter.SourceColumn%2A> Eigenschaft von der <xref:System.Data.Common.DbParameter> Objekt sollte auf den Namen der Spalte festgelegt werden. Diese Einstellung gibt an, dass der Wert des Parameters nicht manuell festgelegt ist, aber der betreffenden Spalte in der derzeit verarbeiteten Zeile entnommen.  
  
> [!NOTE]
>  Ein <xref:System.InvalidOperationException> tritt auf, wenn die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode wird aufgerufen, und die Tabelle enthält einen benutzerdefinierten Typ, der nicht auf dem Clientcomputer verfügbar ist. Weitere Informationen finden Sie unter [Creating and Using User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=139492) in SQL Server-Onlinedokumentation.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, und <xref:System.Data.SqlClient.SqlConnection> zum Auswählen von Datensätzen aus einer Datenbank und zum Auffüllen einer <xref:System.Data.DataSet> mit den ausgewählten Zeilen. Die ausgefüllte <xref:System.Data.DataSet> wird zurückgegeben. Um dies zu erreichen, wird die Methode eine initialisierte übergeben <xref:System.Data.DataSet>, eine Verbindungszeichenfolge und eine Abfragezeichenfolge, die eine Transact-SQL SELECT-Anweisung ist.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlClient.SqlDataAdapter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Instanz von <xref:System.Data.SqlClient.SqlDataAdapter> erstellt wird, werden die folgenden Eigenschaften werden festgelegt, um die folgenden Anfangswerte Lese-/Schreibzugriff.  
  
|Eigenschaften|Anfangswert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert der alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">Ein <see cref="T:System.Data.SqlClient.SqlCommand" /> , die eine Transact-SQL SELECT-Anweisung oder gespeicherte Prozedur und festgelegt ist als die <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> Klasse mit dem angegebenen <see cref="T:System.Data.SqlClient.SqlCommand" /> als die <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Data.SqlClient.SqlDataAdapter> Standardkonstruktor legt die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> -Eigenschaft auf den Wert im angegebenen der `selectCommand` Parameter.  
  
 Wenn eine Instanz von <xref:System.Data.SqlClient.SqlDataAdapter> erstellt wird, werden die folgenden Eigenschaften werden festgelegt, um die folgenden Anfangswerte Lese-/Schreibzugriff.  
  
|Eigenschaften|Anfangswert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert der alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
 Wenn <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (oder keines der anderen Befehlseigenschaften) zugewiesen ist, ein zuvor erstelltes <xref:System.Data.SqlClient.SqlCommand>, die <xref:System.Data.SqlClient.SqlCommand> nicht geklont. Die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Ein <see cref="T:System.String" /> also eine Transact-SQL SELECT-Anweisung oder gespeicherte Prozedur von verwendet die <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnection">Ein <see cref="T:System.Data.SqlClient.SqlConnection" /> , die die Verbindung darstellt. Wenn Ihre Verbindungszeichenfolge nicht <see langword="Integrated Security = true" />, können Sie <see cref="T:System.Data.SqlClient.SqlCredential" /> , übergeben den Benutzer-ID und das Kennwort sicherer als durch Angabe von Benutzer-ID und Kennwort als Text in der Verbindungszeichenfolge angegeben.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> -Klasse mit einer <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> und ein <see cref="T:System.Data.SqlClient.SqlConnection" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung von der <xref:System.Data.SqlClient.SqlDataAdapter> öffnet und schließt eine <xref:System.Data.SqlClient.SqlConnection> , wenn er nicht bereits geöffnet ist. Dies kann in einer Anwendung, die aufgerufen werden muss, nützlich sein, die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode für zwei oder mehr <xref:System.Data.SqlClient.SqlDataAdapter> Objekte. Wenn die <xref:System.Data.SqlClient.SqlConnection> ist bereits geöffnet ist, müssen Sie explizit aufrufen **schließen** oder **Dispose** zu schließen.  
  
 Wenn eine Instanz von <xref:System.Data.SqlClient.SqlDataAdapter> erstellt wird, werden die folgenden Eigenschaften werden festgelegt, um die folgenden Anfangswerte Lese-/Schreibzugriff.  
  
|Eigenschaften|Anfangswert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert dieser Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Ein <see cref="T:System.String" /> also eine Transact-SQL SELECT-Anweisung oder gespeicherte Prozedur von verwendet die <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnectionString">Verbindungszeichenfolge. Wenn Ihre Verbindungszeichenfolge nicht <see langword="Integrated Security = true" />, können Sie <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> und <see cref="T:System.Data.SqlClient.SqlCredential" /> , übergeben den Benutzer-ID und das Kennwort sicherer als durch Angabe von Benutzer-ID und Kennwort als Text in der Verbindungszeichenfolge angegeben.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> -Klasse mit einem <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> und eine Verbindungszeichenfolge enthalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung der der <xref:System.Data.SqlClient.SqlDataAdapter> Konstruktor verwendet den `selectCommandText` zum Festlegen der <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Eigenschaft. Die <xref:System.Data.SqlClient.SqlDataAdapter> erstellt und verwaltet die Verbindung mit erstellt die `selectConnectionString` Parameter.  
  
 Wenn eine Instanz von <xref:System.Data.SqlClient.SqlDataAdapter> erstellt wird, werden die folgenden Eigenschaften werden festgelegt, um die folgenden Anfangswerte Lese-/Schreibzugriff.  
  
|Eigenschaften|Anfangswert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert der alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Transact-SQL-Anweisung oder gespeicherte Prozedur zum Löschen von Datensätzen aus dem DataSet.</summary>
        <value>Ein <see cref="T:System.Data.SqlClient.SqlCommand" /> verwendet werden, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Löschen von Datensätzen in der Datenbank, die entsprechen die gelöschten Zeilen in der <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen in vorhanden ist die <xref:System.Data.DataSet>, die <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> können automatisch generiert werden, wenn Sie festlegen, die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> -Eigenschaft und die Verwendung der <xref:System.Data.SqlClient.SqlCommandBuilder>. Anschließend werden alle weiteren Befehle, die Sie nicht festlegen von generiert die <xref:System.Data.SqlClient.SqlCommandBuilder>. Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Wenn <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.SqlClient.SqlCommand>, die <xref:System.Data.SqlClient.SqlCommand> nicht geklont. Die <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Für jede Spalte, die Sie mit der Datenquelle auf weitergeben <xref:System.Data.Common.DbDataAdapter.Update%2A>, ein Parameter hinzugefügt werden sollen die `InsertCommand`, `UpdateCommand`, oder `DeleteCommand`. Die `SourceColumn` Eigenschaft des Parameters sollte auf den Namen der Spalte festgelegt werden. Dies gibt an, dass der Wert des Parameters nicht manuell festgelegt ist, aber der betreffenden Spalte in der derzeit verarbeiteten Zeile entnommen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, und <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> Eigenschaften. Es wird vorausgesetzt, Sie haben bereits erstellt eine <xref:System.Data.SqlClient.SqlConnection> Objekt.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Transact-SQL-Anweisung oder gespeicherte Prozedur zum Einfügen neuer Datensätze in der Datenquelle.</summary>
        <value>Ein <see cref="T:System.Data.SqlClient.SqlCommand" /> verwendet werden, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Einfügen von Datensätzen in der Datenbank, die neuen Zeilen in entsprechen den <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen in vorhanden ist die <xref:System.Data.DataSet>, die <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> können automatisch generiert werden, wenn Sie festlegen, die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> -Eigenschaft und die Verwendung der <xref:System.Data.SqlClient.SqlCommandBuilder>. Anschließend werden alle weiteren Befehle, die Sie nicht festlegen von generiert die <xref:System.Data.SqlClient.SqlCommandBuilder>. Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Wenn <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.SqlClient.SqlCommand>, die <xref:System.Data.SqlClient.SqlCommand> nicht geklont. Die <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Wenn Ausführung dieses Befehls Zeilen zurückgibt, können diese Zeilen hinzugefügt werden, um die <xref:System.Data.DataSet> abhängig davon, wie Sie festlegen der **"UpdatedRowSource"** Eigenschaft von der <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Für jede Spalte, die Sie mit der Datenquelle auf weitergeben <xref:System.Data.Common.DbDataAdapter.Update%2A>, ein Parameter hinzugefügt werden sollen `InsertCommand`, `UpdateCommand`, oder `DeleteCommand`. Die `SourceColumn` Eigenschaft des Parameters sollte auf den Namen der Spalte festgelegt werden. Dies gibt an, dass der Wert des Parameters nicht manuell festgelegt ist, aber der betreffenden Spalte in der derzeit verarbeiteten Zeile entnommen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, und <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> Eigenschaften. Es wird vorausgesetzt, Sie haben bereits erstellt eine <xref:System.Data.SqlClient.SqlConnection> Objekt.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> nach dem ein Befehl für die Datenquelle ausgeführt wird. Der Versuch, zu aktualisieren ist vorgenommen werden, damit dieses Ereignis wird ausgelöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, es gibt zwei Ereignisse, die pro Datenzeile aktualisiert auftreten. Die Reihenfolge der Ausführung lautet wie folgt:  
  
1.  Die Werte in der <xref:System.Data.DataRow> in die Parameterwerte verschoben werden.  
  
2.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.  
  
3.  Der Befehl ausgeführt wird.  
  
4.  Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, das erste zurückgegebene Ergebnis befindet sich der <xref:System.Data.DataRow>.  
  
5.  Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.  
  
6.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie sowohl die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> und <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> Ereignisse.  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> -Ereignis wird diese Ausgabe zurückgegeben:  
  
 Ereignis-Args: (command=System.Data.SqlClient.SqlCommand CommandType = 2 Status = 0)  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> -Ereignis wird diese Ausgabe zurückgegeben:  
  
 Ereignis-Args: (command=System.Data.SqlClient.SqlCommand CommandType = 2 RecordsAffected = 1 row=System.Data.DataRow[37] Status = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> , bevor ein Befehl für die Datenquelle ausgeführt wird. Der Versuch, zu aktualisieren ist vorgenommen werden, damit dieses Ereignis wird ausgelöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung <xref:System.Data.Common.DbDataAdapter.Update%2A>, es gibt zwei Ereignisse, die pro Datenzeile aktualisiert auftreten. Die Reihenfolge der Ausführung lautet wie folgt:  
  
1.  Die Werte in der <xref:System.Data.DataRow> in die Parameterwerte verschoben werden.  
  
2.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.  
  
3.  Der Befehl ausgeführt wird.  
  
4.  Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, das erste zurückgegebene Ergebnis befindet sich der <xref:System.Data.DataRow>.  
  
5.  Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.  
  
6.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie sowohl die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> und <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> Ereignisse.  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> -Ereignis wird diese Ausgabe zurückgegeben:  
  
 Ereignis-Args: (command=System.Data.SqlClient.SqlCommand CommandType = 2 Status = 0)  
  
 Die <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> -Ereignis wird diese Ausgabe zurückgegeben:  
  
 Ereignis-Args: (command=System.Data.SqlClient.SqlCommand CommandType = 2 RecordsAffected = 1 row=System.Data.DataRow[37] Status = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Transact-SQL-Anweisung oder gespeicherte Prozedur, die zum Auswählen von Datensätzen in der Datenquelle verwendet.</summary>
        <value>Ein <see cref="T:System.Data.SqlClient.SqlCommand" /> verwendet werden, während der <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> zum Auswählen von Datensätzen aus der Datenbank für die Platzierung in der <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.SqlClient.SqlCommand>, die <xref:System.Data.SqlClient.SqlCommand> nicht geklont. Die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Wenn die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> werden keine Zeilen zurückgegeben werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, und keine Ausnahme ausgelöst wird.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, und <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> Eigenschaften. Es wird vorausgesetzt, Sie haben bereits erstellt eine <xref:System.Data.SqlClient.SqlConnection> Objekt.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IDbCommand" />, der bei <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Löschen von Datensätzen in der Datenquelle für gelöschte Zeilen im Dataset verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IDbCommand" /> wird, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Einfügen von Datensätzen in der Datenquelle für neue Zeilen im DataSet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IDbCommand" /> wird, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Auswählen von Datensätzen aus der Datenquelle für die Platzierung im DataSet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IdbCommand" /> wird, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> zum Aktualisieren von Datensätzen in der Datenquelle für geänderte Zeilen im DataSet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.SqlClient.SqlDataAdapter>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Anzahl der Zeilen, die verarbeitet werden bei jedem Zugriff auf dem Server.</summary>
        <value>Die Anzahl der Zeilen pro Batch verarbeitet werden soll.  
  
 <list type="table"><listheader><term>Wert ist  
  
 </term><description>Auswirkung  
  
 </description></listheader><item><term> 0  
  
 </term><description>Es ist nicht begrenzt die Batchgröße...  
  
 </description></item><item><term> 1  
  
 </term><description>Deaktiviert die Batchaktualisierung.  
  
 </description></item><item><term> &gt;1  
  
 </term><description>Änderungen gesendet werden, verwenden von Batches von <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> Vorgänge zu einem Zeitpunkt.  
  
 </description></item></list>  
  
 Wenn dies auf einen anderen Wert als 1 festlegen, alle Befehle zugeordneten der <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> haben ihre **"UpdatedRowSource"** -Eigenschaftensatz auf <see langword="None" /> oder <see langword="OutputParameters" />. Andernfalls wird eine Ausnahme ausgelöst.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft ab oder legt einen Wert, der aktiviert oder deaktiviert die Batchverarbeitung, und gibt die Anzahl der Befehle, die in einem Batch ausgeführt werden kann.  
  
 Verwenden der <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> Eigenschaft so aktualisieren eine Datenquelle mit Änderungen von einem <xref:System.Data.DataSet>. Dies kann die Leistung der Anwendung verbessern, durch das Reduzieren der Anzahl von Roundtrips an den Server.  
  
 Die Ausführung eines extrem großen Batches könnte die Leistung verringern. Daher sollten Sie die Einstellung für eine optimale Batchgröße vor der Implementierung Ihrer Anwendung austesten.  
  
 Ein <xref:System.ArgumentOutOfRangeException> wird ausgelöst, wenn der Wert, auf eine Zahl festgelegt ist kleiner als 0 (null).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Transact-SQL-Anweisung oder gespeicherte Prozedur, die zum Aktualisieren von Datensätzen in der Datenquelle verwendet.</summary>
        <value>Ein <see cref="T:System.Data.SqlClient.SqlCommand" /> verwendet werden, während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verändert wurden Aktualisieren von Datensätzen in der Datenbank, die entsprechen Zeilen in der <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Data.Common.DbDataAdapter.Update%2A>, wenn diese Eigenschaft nicht festgelegt ist und Primärschlüsselinformationen in vorhanden ist die <xref:System.Data.DataSet>, die <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> können automatisch generiert werden, wenn Sie festlegen, die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> -Eigenschaft und die Verwendung der <xref:System.Data.SqlClient.SqlCommandBuilder>. Anschließend werden alle weiteren Befehle, die Sie nicht festlegen von generiert die <xref:System.Data.SqlClient.SqlCommandBuilder>. Diese Generierungslogik müssen Schlüsselspalteninformationen vorhanden sein der <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Wenn <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.SqlClient.SqlCommand>, die <xref:System.Data.SqlClient.SqlCommand> nicht geklont. Die <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
> [!NOTE]
>  Wenn die Ausführung dieses Befehls Zeilen zurückgibt, können die aktualisierten Zeilen mit zusammengeführt werden die <xref:System.Data.DataSet> abhängig davon, wie Sie festlegen der **"UpdatedRowSource"** Eigenschaft von der <xref:System.Data.SqlClient.SqlCommand> Objekt.  
  
 Für jede Spalte, die Sie mit der Datenquelle auf weitergeben <xref:System.Data.Common.DbDataAdapter.Update%2A>, ein Parameter hinzugefügt werden sollen `InsertCommand`, `UpdateCommand`, oder `DeleteCommand`.  
  
 Die `SourceColumn` Eigenschaft des Parameters sollte auf den Namen der Spalte festgelegt werden. Dies gibt an, dass der Wert des Parameters nicht manuell festlegen, sondern der betreffenden Spalte in der derzeit verarbeiteten Zeile entnommen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.SqlClient.SqlDataAdapter> und legt die <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> und <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> Eigenschaften. Es wird vorausgesetzt, Sie haben bereits erstellt eine <xref:System.Data.SqlClient.SqlConnection> Objekt.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
