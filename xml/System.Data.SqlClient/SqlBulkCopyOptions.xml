<Type Name="SqlBulkCopyOptions" FullName="System.Data.SqlClient.SqlBulkCopyOptions">
  <TypeSignature Language="C#" Value="public enum SqlBulkCopyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlBulkCopyOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopyOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bitweises Kennzeichen, der angibt, eine oder mehrere Optionen für die Verwendung mit einer Instanz von <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.SqlClient.SqlBulkCopyOptions> Enumeration, die beim Erstellen einer <xref:System.Data.SqlClient.SqlBulkCopy> ändern wie die <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> Verhalten von Methoden für diese Instanz.  
  
   
  
## Examples  
 Die folgende Konsolenanwendung zeigt, wie ein Massenladen ausführen, die den Wert in der Identitätsspalte der Quelltabelle auf die entsprechende Spalte in der Zieltabelle, generiert einen neuen Wert für jede Zeile Identity-Spalte, sondern kopiert wird.  
  
 Um festzustellen, wie die Option die Funktionsweise des Bulk Load, führen Sie das Beispiel mit ändert die **Dbo. BulkCopyDemoMatchingColumns** Tabelle leer. Alle Zeilen aus der Quelle geladen werden. Als Nächstes führen Sie das Beispiel erneut ohne die Tabelle zu leeren. Eine Ausnahme wird ausgelöst, und der Code schreibt eine Meldung an das Konsolenfenster benachrichtigt, dass Zeilen nicht aufgrund von primary Key-Verletzungen hinzugefügt wurden.  
  
> [!IMPORTANT]
>  Dieses Beispiel wird nicht ausgeführt, es sei denn, Sie die Arbeitstabellen erstellt haben, wie in beschrieben [Einrichtung der Massenkopierbeispiele](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md). Die angegebene Code dient zum Veranschaulichen der Syntax für die Verwendung von **"SqlBulkCopy"** nur. Wenn Quell-und Ziel in derselben SQL Server-Instanz befinden, ist es einfacher und schneller mit eine Transact-SQL- `INSERT … SELECT` Anweisung, um die Daten zu kopieren.  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowEncryptedValueModifications">
      <MemberSignature Language="C#" Value="AllowEncryptedValueModifications" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions AllowEncryptedValueModifications = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn angegeben,**"allowencryptedvaluemodifications"** Massenkopieren von verschlüsselten Daten zwischen Tabellen oder Datenbanken ohne Entschlüsselung der Daten ermöglicht. Normalerweise würde eine Anwendung Daten von verschlüsselten Spalten aus einer Tabelle auswählen, ohne die Daten zu entschlüsseln (die App würde eine Verbindung mit der Datenbank mit deaktivierter Einstellung für das Schlüsselwort für die Spaltenverschlüsselung herstellen) und dann diese Option verwenden, um einen Masseneinfügevorgang der immer noch verschlüsselten Daten vorzunehmen. Weitere Informationen finden Sie unter [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).  
  
 Seien Sie vorsichtig beim Angeben von **"allowencryptedvaluemodifications"** da dies zur Beschädigung der Datenbank, da der Treiber nicht überprüft, ob die Daten tatsächlich verschlüsselt führen kann, oder wenn ordnungsgemäß mit der gleichen Verschlüsselung verschlüsselt wurden Typ, Algorithmus und Schlüssel wie die Zielspalte.</summary>
      </Docs>
    </Member>
    <Member MemberName="CheckConstraints">
      <MemberSignature Language="C#" Value="CheckConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions CheckConstraints = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Einschränkungen überprüfen, während Daten eingefügt werden. Standardmäßig werden Einschränkungen nicht überprüft.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Standardwerte für alle Optionen verwenden.</summary>
      </Docs>
    </Member>
    <Member MemberName="FireTriggers">
      <MemberSignature Language="C#" Value="FireTriggers" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions FireTriggers = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bewirkt, falls angegeben, dass der Server die Insert-Trigger für die in die Datenbank eingefügten Zeilen auslöst.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeepIdentity">
      <MemberSignature Language="C#" Value="KeepIdentity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions KeepIdentity = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quellidentitätswerte beibehalten. Falls nicht angegeben, werden die Identitätswerte vom Ziel zugewiesen.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeepNulls">
      <MemberSignature Language="C#" Value="KeepNulls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions KeepNulls = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>NULL-Werte in der Zieltabelle unabhängig von den Einstellungen für Standardwerte beibehalten. Falls nicht angegeben, werden NULL-Werte ggf. durch Standardwerte ersetzt.</summary>
      </Docs>
    </Member>
    <Member MemberName="TableLock">
      <MemberSignature Language="C#" Value="TableLock" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions TableLock = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.TableLock" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Massenaktualisierungssperre für die Dauer des Massenkopiervorgangs aktivieren. Falls nicht angegeben, werden Zeilensperren verwendet.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseInternalTransaction">
      <MemberSignature Language="C#" Value="UseInternalTransaction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlClient.SqlBulkCopyOptions UseInternalTransaction = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Falls angegeben, tritt jedes Batch des Massenkopiervorgangs innerhalb einer Transaktion auf. Wenn Sie diese Option, und geben Sie auch eine <see cref="T:System.Data.SqlClient.SqlTransaction" /> Objekt an den Konstruktor ein <see cref="T:System.ArgumentException" /> auftritt.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
