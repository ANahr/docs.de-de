<Type Name="WebApplicationLifetimeEvent" FullName="System.Web.Management.WebApplicationLifetimeEvent">
  <TypeSignature Language="C#" Value="public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationLifetimeEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebApplicationLifetimeEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein wichtiges Ereignis in der Lebensdauer einer Anwendung dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Systemüberwachung kann Produktions- und Vorgänge Mitarbeiter bereitgestellte Webanwendungen verwalten. Die <xref:System.Web.Management> Namespace enthält die integritätsereignis Typen, die verantwortlich für das Verpacken Integritätsstatus Anwendungsdaten und die Anbietertypen, die für die Verarbeitung dieser Daten verantwortlich. Darüber hinaus wird die unterstützende Typen, mit denen bei der Verwaltung von integritätsereignisse enthält.  
  
 Lebensdauer Anwendungsereignisse umfassen Ereignisse wie das Starten der Anwendung und Herunterfahren. Wenn eine Anwendung beendet wird, können Sie die verdeutlichen, warum durch Anzeigen der zugehörigen Meldung Ereignisfeld bestimmen.  
  
 Wenn eine <xref:System.Web.Management.WebApplicationLifetimeEvent> Instanz auftritt, den Leistungsindikator Lebensdauer Anwendungsereignisse ASP.NET-Systemüberwachung aktualisiert. Sie können diese Ereignisse protokollieren, durch Hinzufügen der <xref:System.Web.Management.WebApplicationLifetimeEvent> -Objekt an die `rules` -Unterabschnitt des der `healthMonitoring` Abschnitt der Konfigurationsdatei, wie im folgenden Beispiel gezeigt.  
  
```  
<rules>  
  <add name="Application Events"  
    eventName="Application Lifetime Events"  
    provider="EventLogProvider"  
    profile="Default"  
    minInterval="00:01:00" />  
</rules>  
  
```  
  
 Der Leistungsindikator Lebensdauer Anwendungsereignisse enthält die Gesamtsumme aller ASP.NET Lebensdauer Ereignisse. Zum Anzeigen dieser Leistungsindikator des Systemmonitors (PerfMon) in der **Leistungsindikatoren hinzufügen** aus **ASP.NET** aus der **Leistungsobjekt** Dropdown-Liste. Wählen Sie die **Lebensdauer Anwendungsereignisse** Leistungsindikator, und klicken Sie auf die **hinzufügen** Schaltfläche. Weitere Informationen finden Sie unter "Verwenden des Systemmonitors (PerfMon) mit ASP.NET-Anwendungen" auf [MSDN](http://go.microsoft.com/fwlink/?linkid=37118). Wenn Sie zulassen, dass Ereignisse gemäß dem Standard protokolliert <xref:System.Web.Management.EventLogWebEventProvider>, Sie können sie in der Ereignisanzeige anzeigen, indem Auswählen der **Anwendung** Protokoll. Weitere Informationen finden Sie unter [Ereignisanzeige](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) in der Windows Server 2003-Dokumentation auf TechNet.  
  
> [!CAUTION]
>  Da die <xref:System.Web.Management.WebApplicationLifetimeEvent> Objekt wird ein Ereignis mit hohem Volumen Fehleranzahl ist ressourcenintensiv und Ihr System verlangsamt. Kann auch andere Ereignisse in der überschrieben werden, verursachen die <xref:System.Web.Management.EventLogWebEventProvider> -Klasse aufgrund der großen Anzahl von Ereignissen und die Möglichkeit der ereignisprotokollierung funktioniert.  
  
> [!NOTE]
>  In den meisten Fällen werden Sie die ASP.NET Systemüberwachung Typen verwenden, wie implementiert, und Sie werden das System Systemüberwachung steuern, durch Angeben von Werten in der `healthMonitoring` Konfigurationsabschnitt. Sie können auch aus den Typen Systemüberwachung, erstellen Sie eine eigene benutzerdefinierte Ereignisse und Anbieter ableiten. Ein Beispiel für das Ableiten von der <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse, finden Sie im Beispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Ableitung der <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse, um ein benutzerdefiniertes Ereignis zu erstellen.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#1)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#1)]  
  
 Der folgende Auszug aus der Konfigurationsdatei wird gezeigt, wie so konfigurieren Sie die `healthMonitoring` Abschnitt einer Konfigurationsdatei hinzufügen der `SampleWebApplicationLifetimeEvent` Code oben mit dem ASP.NET Systemüberwachung System definiert. Um das System das Ereignis hinzugefügt haben, müssen Sie das Ereignis definieren, indem Sie einen neuen Eintrag zur Hinzufügen der `eventMappings` Abschnitt und das Ereignis zu einem Anbieter zuordnen, indem Sie einen neuen Eintrag zur Hinzufügen der `rules` Abschnitt.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <eventMappings>  
       <clear />  
       <!-- Configure the application lifetime event -->  
       <!-- object to handle the Web application events. -->  
       <add name="SampleApplicationLifetimeEvents"  
         type="System.Web.Management.SampleWebApplicationLifetimeEvent,  
         System.Web,Version=2.0.3600.0,  
         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" />  
     </eventMappings>  
  
    <rules>  
      <clear/>  
       // Configure the connection between the   
       // application lifetime event object   
       // and the provider that must process it.  
       <add name="Custom Application Events"  
         eventName="SampleApplicationLifetimeEvents"  
         provider="EventLogProvider"  
         profile="Default"  
         minInterval="00:01:00" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Überschreiben Sie beim Formatieren der benutzerdefinierten Ereignisinformationen für die Anzeige der <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> Methode statt über das <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> Methode. Dadurch wird vermieden, überschreiben oder Manipulation von vertraulichen Informationen.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, die dem Ereignis zugeordnet wird.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet wird. Wenn Sie ein benutzerdefiniertes Ereignis implementieren, der Ereigniscode muss größer sein als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Initialisiert die <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> -Klasse mit den angegebenen Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Sie werden nie verwendet, um eine Instanz erstellen die <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse, aber Sie können diesen Konstruktor aufrufen, wenn Sie eigene-Ereignis des Typs implementieren, die von dieser Klasse erbt.  
  
> [!NOTE]
>  Die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. Er wird von ASP.NET aufgerufen. Sie erreichen die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor beim Ableiten von der <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in einem ASP.NET benutzerdefinierte Integrität-Ereignis. Dieses Codebeispiel dient in erster Linie zeigen die richtige Syntax zu verwenden.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#2)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, die dem Ereignis zugeordnet wird.</param>
        <param name="eventSource">Das Objekt, das die Quelle des Ereignisses ist.</param>
        <param name="eventCode">Der Code, der dem Ereignis zugeordnet wird. Wenn Sie ein benutzerdefiniertes Ereignis implementieren, der Ereigniscode muss größer sein als <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Die <see cref="T:System.Web.Management.WebEventCodes" /> Wert, der den ausführlichen Bezeichner für das Ereignis angibt.</param>
        <summary>Initialisiert die <see cref="T:System.Web.Management.WebApplicationLifetimeEvent" /> -Klasse mit den angegebenen Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern vom ASP.NET Systemüberwachung System verwendet. Sie werden nie verwendet, um eine Instanz erstellen die <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse, aber Sie können diesen Konstruktor aufrufen, wenn Sie eigene-Ereignis des Typs implementieren, die von dieser Klasse erbt.  
  
> [!NOTE]
>  Die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. Er wird von ASP.NET aufgerufen. Sie erreichen die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> Konstruktor beim Ableiten von der <xref:System.Web.Management.WebApplicationLifetimeEvent> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Management.WebApplicationLifetimeEvent.%23ctor%2A> in einem ASP.NET benutzerdefinierte Integrität-Ereignis. Dieses Codebeispiel dient in erster Linie zeigen die richtige Syntax zu verwenden.  
  
 [!code-csharp[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/CS/webapplicationlifetimeevent.cs#3)]
 [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebApplicationLifetimeEvent/VB/webapplicationlifetimeevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird intern verwendet, um Leistungsindikatoren zu erhöhen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
