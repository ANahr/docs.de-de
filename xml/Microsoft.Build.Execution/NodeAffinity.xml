<Type Name="NodeAffinity" FullName="Microsoft.Build.Execution.NodeAffinity">
  <TypeSignature Language="C#" Value="public enum NodeAffinity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NodeAffinity extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.NodeAffinity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Enumerierten Datentyps, der bestimmt, in dem Projekte erstellt werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity Any = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das Projekt kann an einer beliebigen Stelle geplant werden.</summary>
      </Docs>
    </Member>
    <Member MemberName="InProc">
      <MemberSignature Language="C#" Value="InProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity InProc = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.InProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das Projekt kann nur für den prozessinternen Knoten geplant werden. Dies geschieht automatisch, wenn ein Hostobjekt vorhanden ist oder wenn eine ProjectInstance angegeben wurde. Ein Host möchten möglicherweise angeben, dass es, wenn sie wissen, dass eine Aufgabe explizit von freigegebenen statischen Daten oder andere Objekte Host bereitgestellte abhängt.</summary>
      </Docs>
    </Member>
    <Member MemberName="OutOfProc">
      <MemberSignature Language="C#" Value="OutOfProc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Build.Execution.NodeAffinity OutOfProc = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Build.Execution.NodeAffinity.OutOfProc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.NodeAffinity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das Projekt kann nur auf einem Knoten für die Out-of-Proc geplant werden. Ein Host möglicherweise möchten Sie diese angeben, wenn es ist bekannt, dass das Projekt erstellt wird, die hostumgebung verunreinigt konnte (oder der Host contaminates der umgebungs aus, während ein Build ausgeführt wird.)</summary>
      </Docs>
    </Member>
  </Members>
</Type>
