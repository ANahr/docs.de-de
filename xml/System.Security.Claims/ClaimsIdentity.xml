<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine anspruchsbasierte Identität dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Claims.ClaimsIdentity> Klasse ist eine konkrete Implementierung einer anspruchsbasierten Identität; d. h. eine Identität, die durch eine Sammlung von Ansprüchen beschrieben. Ein Anspruch ist eine Aussage über eine Entität mittels eines Ausstellers, das beschreibt, rechts, eine Eigenschaft oder andere Qualität dieser Entität. Solche Entität ist als der Antragsteller des Anspruchs. Ein Anspruch dargestellte der <xref:System.Security.Claims.Claim> Klasse. Die Ansprüche im eine <xref:System.Security.Claims.ClaimsIdentity> beschreiben die Entität, die die entsprechende Identität darstellt, und kann verwendet werden, um Autorisierungs- und Authentifizierungsfunktionen Entscheidungen zu treffen. Ein auf anspruchsbasierter Zugriffssteuerung Modell hat viele Vorteile gegenüber herkömmlicheren Dateisystemzugriff modelliert, die ausschließlich Rollen abhängig sind. Ansprüche können z. B. viel umfangreichere Informationen zur Identität bereitzustellen, die Sie darstellen, und für die Autorisierung oder Authentifizierung in einer wesentlich mehr bestimmten Weise ausgewertet werden können.  
  
 Ab .NET Framework 4.5, wurden Windows Identity Foundation (WIF) und anspruchsbasierte Identität vollständig in .NET Framework integriert. Dies bedeutet, dass viele Klassen, die jetzt eine Identität in .NET Framework darstellen Ableitung <xref:System.Security.Claims.ClaimsIdentity> und eine Beschreibung für ihre Eigenschaften über eine Sammlung von Ansprüchen. Dies unterscheidet sich von früheren Versionen von .NET Framework, in dem diese Klassen implementiert die <xref:System.Security.Principal.IIdentity> -Schnittstelle direkt. Die Auflistung der Ansprüche, die beschreiben, die Identität durch zugegriffen werden kann die <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Eigenschaft. Die <xref:System.Security.Claims.ClaimsIdentity> -Klasse stellt mehrere Methoden zum Auffinden von, und Ändern von Ansprüchen und LINQ-Abfragen (LINQ) vollständig unterstützt. Im Code der <xref:System.Security.Claims.ClaimsIdentity> Objekte in der Regel erfolgt über <xref:System.Security.Claims.ClaimsPrincipal> Objekte, z. B. den Prinzipal zurückgegebenes <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Die <xref:System.Security.Claims.ClaimsPrincipal> -Klasse verfügt über eine <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> -Eigenschaft ebenfalls. In den meisten Fällen sollten Sie den Ansprüchen des Benutzers über Zugriff auf die <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> Auflistung Umweg über den <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung. Sie benötigen die Ansprüche eines einzelnen Zugriff auf <xref:System.Security.Claims.ClaimsIdentity> nur in den Fällen, in denen der Prinzipal enthält mehr als ein <xref:System.Security.Claims.ClaimsIdentity> und auszuwerten, oder Ändern einer bestimmten Identität ausgeführt werden müssen.  
  
> [!IMPORTANT]
>  Zum Hinzufügen oder Entfernen von Ansprüchen aus der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> -Auflistung ein Aufrufer muss volle Vertrauenswürdigkeit haben.  
  
 In der anspruchsbasiertes Modell die <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> Methode durch das Auswerten der Ansprüche Identität implementiert werden. Die Basis-Implementierungen in der anspruchsbasiertes Modell werden bereitgestellt, von der <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> Methode. Die <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> Eigenschaften ermöglichen es Ihnen, einen Anspruchstyp angeben, die zum Auswerten der Ansprüche durch die Identität bei diesen Vorgängen verwendet werden soll.  
  
 Delegierungsszenarien werden unterstützt, über die <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> und <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Eigenschaften.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Klasse mit einem leeren anspruchsauflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Eine leere Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Die Ansprüche, mit denen die anspruchsidentität aufgefüllt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> -Klasse unter Verwendung einer aufgelisteten Auflistung von <see cref="T:System.Security.Claims.Claim" /> Objekte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisiert aus dem `claims` Parameter.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein <see cref="T:System.IO.BinaryReader" /> zeigen eine <see cref="T:System.Security.Claims.ClaimsIdentity" />.</param>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Security.Claims.ClaimsIdentity" /> mit dem angegebenen <see cref="T:System.IO.BinaryReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise wird der Reader erstellt, aus der von zurückgegebenen Bytes <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>. 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Die serialisierten Daten.</param>
        <summary>Initialisiert mithilfe von <see cref="T:System.Runtime.Serialization.ISerializable" /> eine neue Instanz der <see cref="T:System.Security.Claims.ClaimsIdentity" />-Klasse aus einem serialisierten Stream.</summary>
        <remarks>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="other">Das <see cref="T:System.Security.Claims.ClaimsIdentity" />, das kopiert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Klasse aus einer vorhandenen <see cref="T:System.Security.Claims.ClaimsIdentity" /> Instanz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die Eigenschaft-Wert-Zuweisungen für eine Instanz von der <xref:System.Security.Claims.ClaimsIdentity> -Klasse aus den <xref:System.Security.Claims.ClaimsIdentity> für den Konstruktor bereitgestellt.  
  
| Eigenschaft | Wert |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Wenn der Wert von der `other.Actor` -Eigenschaft ist nicht `null`, die `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> geklonten und zugewiesen ist, andernfalls wird `null`.|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert der `other.AuthenticationType`-Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Der Wert der `other.BootstrapContext`-Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Die `List<Claim>` von Ansprüchen, sofern vorhanden, in der `other.Claims` Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Der Wert der `other.Label`-Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Der Wert der `other.NameClaimType`-Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Der Wert der `other.RoleClaimType`-Eigenschaft.|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|Wenn `other.CustomSerializationData` ist nicht `null`, `other.CustomSerializationData` geklonten und zugewiesen ist, andernfalls wird `null`.|
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="other" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Die Identität aus der die neue anspruchsidentität basieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> -Klasse mithilfe der Name "und" Authentifizierung "aus dem angegebenen <see cref="T:System.Security.Principal.IIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Actor` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert, der die `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) Eigenschaft wird verwendet.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.BootStrapContext` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, die Ansprüche aus `identity` werden mit der neuen Instanz hinzugefügt wurde, andernfalls eine leere Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Label` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Wenn `identity` abfragesichtausdrucks kann nicht aus <xref:System.Security.Claims.ClaimsIdentity>, ist nicht `null`, und verfügt über eine <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft, die nicht `null`; ein Name-Anspruch wird hinzugefügt, mit der neuen Instanz mit dem Wert des der <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft. **Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert von der `identity.NameClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> verwendet wird.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert von der `identity.RoleClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> verwendet wird.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Der Typ der Authentifizierung verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Anspruchsanbieter-Klasse mit einer leeren Auflistung und den angegebenen Authentifizierungstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert des `authenticationType`-Parameters. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Eine leere Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Die Ansprüche, mit denen die anspruchsidentität aufgefüllt werden soll.</param>
        <param name="authenticationType">Der Typ der Authentifizierung verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Klasse mit dem angegebenen Ansprüche und Authentifizierungstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert des `authenticationType`-Parameters. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisiert aus dem `claims` Parameter.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Die serialisierten Daten.</param>
        <param name="context">Der Kontext für die Serialisierung.</param>
        <summary>Initialisiert mithilfe von <see cref="T:System.Runtime.Serialization.ISerializable" /> eine neue Instanz der <see cref="T:System.Security.Claims.ClaimsIdentity" />-Klasse aus einem serialisierten Stream.</summary>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" />ist **null**.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity">Die Identität aus der die neue anspruchsidentität basieren.</param>
        <param name="claims">Die Ansprüche, mit denen die anspruchsidentität aufgefüllt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> -Klasse unter Verwendung der angegebenen Ansprüche und der angegebenen <see cref="T:System.Security.Principal.IIdentity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Actor` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Die `authenticationType` Parameter. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die den Wert von der `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) Eigenschaft wird verwendet.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.BootStrapContext` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisiert aus dem `claims` Parameter. Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, die Ansprüche aus `identity` werden hinzugefügt, mit der neuen Instanz vor der durch die `claims` Parameter.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Label` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Wenn `identity` abfragesichtausdrucks kann nicht aus <xref:System.Security.Claims.ClaimsIdentity>, ist nicht `null`, und verfügt über eine <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft, die nicht `null`; ein Name-Anspruch wird hinzugefügt, mit der neuen Instanz mit dem Wert des der <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft. **Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert von der `identity.NameClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> verwendet wird.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert von der `identity.RoleClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> verwendet wird.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Der Typ der Authentifizierung verwendet werden soll.</param>
        <param name="nameType">Der Typ des Anspruchs für Namensansprüche im verwendet.</param>
        <param name="roleType">Der Typ des Anspruchs, der für Rollenansprüche verwendet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Klasse mit dem angegebenen Authentifizierungstyp, den Anspruchstyp Name und die Rolle der Anspruchstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert des `authenticationType`-Parameters. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Eine leere Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Der Wert des `nameType`-Parameters. Wenn die `nameType` -Parameter ist null oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Der Wert des `roleType`-Parameters. Wenn die `roleType` -Parameter ist null oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Die Ansprüche, mit denen die anspruchsidentität aufgefüllt werden soll.</param>
        <param name="authenticationType">Der Typ der Authentifizierung verwendet werden soll.</param>
        <param name="nameType">Der Typ des Anspruchs für Namensansprüche im verwendet.</param>
        <param name="roleType">Der Typ des Anspruchs, der für Rollenansprüche verwendet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> -Klasse mit angegebenen Ansprüche, Authentifizierungstyp, Anspruchstyp Name und die Rolle der Anspruchstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Der Wert des `authenticationType`-Parameters. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisiert aus dem `claims` Parameter.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Der Wert des `nameType`-Parameters. Jedoch, wenn die `nameType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Der Wert des `roleClaimType`-Parameters. Jedoch, wenn die `roleClaimType` Parameter ist `null` oder eine leere Zeichenfolge, die Eigenschaft wird festgelegt, um <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Die Identität aus der die neue anspruchsidentität basieren.</param>
        <param name="claims">Die Ansprüche, mit denen die neue anspruchsidentität aufgefüllt werden soll.</param>
        <param name="authenticationType">Der Typ der Authentifizierung verwendet werden soll.</param>
        <param name="nameType">Der Typ des Anspruchs für Namensansprüche im verwendet.</param>
        <param name="roleType">Der Typ des Anspruchs, der für Rollenansprüche verwendet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Claims.ClaimsIdentity" /> Klasse aus dem angegebenen <see cref="T:System.Security.Principal.IIdentity" /> mithilfe der angegebenen Ansprüche, Authentifizierungstyp, Namen Anspruchstyp und Rolle Anspruchstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Security.Claims.ClaimsIdentity>-Klasse aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Actor` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Die `authenticationType` Parameter. Wenn die `authenticationType` Parameter ist `null` oder eine leere Zeichenfolge, die den Wert von der `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) Eigenschaft wird verwendet.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.BootStrapContext` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisiert aus dem `claims` Parameter. Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, die Ansprüche aus `identity` werden hinzugefügt, mit der neuen Instanz vor der durch die `claims` Parameter.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> Eigenschaft zurückgegeben basierend auf dem Wert der <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Wenn `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert der `identity.Label` Eigenschaft ist, andernfalls `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Wenn `identity` abfragesichtausdrucks kann nicht aus <xref:System.Security.Claims.ClaimsIdentity>, ist nicht `null`, und verfügt über eine <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft, die nicht `null`; ein Name-Anspruch wird hinzugefügt, mit der neuen Instanz mit dem Wert des der <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> Eigenschaft. **Hinweis:** beim Zugriff auf den Wert des der <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft wird zurückgegeben, auf der Grundlage der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> und der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Der Wert des `nameType`-Parameters. Jedoch wenn den Wert des der `nameType` Parameter ist `null` oder eine leere Zeichenfolge und `identity` wird von <xref:System.Security.Claims.ClaimsIdentity>, den Wert des der `identity.NameClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> verwendet wird.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Der Wert des `roleClaimType`-Parameters. Jedoch wenn den Wert des der `roleClaimType` Parameter ist `null` oder ist eine leere Zeichenfolge und die Identität von <xref:System.Security.Claims.ClaimsIdentity>, den Wert des der `identity.RoleClaimType` Eigenschaft verwendet wird; andernfalls, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> verwendet wird.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Identität des aufrufenden Partei, die Delegierung Rechte erteilt wurden.</summary>
        <value>Die aufrufende Partei, die Delegierung Rechte erteilt wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann der identitätsdelegierungskette ausgeführt, die für den aktuellen Aufruf durch Untersuchen der rekursiv geführt zugreifen die <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Eigenschaft. Das Token Benutzerebenenrichtlinie des Aufrufs delegiert ist möglich, die über die <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Fehler beim Festlegen der Eigenschaft auf die aktuelle Instanz auftritt.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Der hinzuzufügende Anspruch.</param>
        <summary>Fügt ein einzelner Anspruch auf diese Identität Ansprüche hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Anspruch wird untersucht, und wenn der Antragsteller unterscheidet, wird diese Anspruchsanbieter-Identität, die <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> Methode wird aufgerufen, mit dieser Identitätsansprüche als Parameter an eine neue Anforderung mit dem richtigen Betreff erstellen.  
  
 Diese Methode hat die `SecurityCritical` Attribut angewendet wird, um zu steuern, welche Entitäten können Ansprüche an die Identität hinzuzufügen. Weiter unten die Pipe autorisierungsentscheidungen erfolgen basierend auf den Ansprüchen, die in vorhandenen der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claim" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Die Ansprüche hinzufügen.</param>
        <summary>Fügt eine Liste der Ansprüche dieser Identität Ansprüche hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Anspruch wird untersucht, und wenn der Antragsteller unterscheidet, wird diese Anspruchsanbieter-Identität, die <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> Methode wird aufgerufen, mit dieser Identitätsansprüche als Parameter an eine neue Anforderung mit dem richtigen Betreff zu erstellen.  
  
 Diese Methode hat die `SecurityCritical` Attribut angewendet wird, um zu steuern, welche Entitäten können Ansprüche an die Identität hinzuzufügen. Weiter unten die Pipe autorisierungsentscheidungen erfolgen basierend auf den Ansprüchen, die in vorhandenen der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claims" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Authentifizierungstyp ab.</summary>
        <value>Der Authentifizierungstyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel einer der Werte von definiert die <xref:System.Security.Claims.AuthenticationTypes> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Token, das zur Erstellung verwendet wurde dies anspruchsidentität.</summary>
        <value>Der bootstrap-Kontext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zugrunde liegende Objekt ist eine Instanz von der <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> Klasse.  
  
 Legen Sie die `saveBootstrapContext` Attribut entweder auf die [ &lt;IdentityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) oder [ &lt;SecurityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) Element in einer Konfigurationsdatei angeben, ob das Token verwendet wird, generiert der <xref:System.Security.Claims.ClaimsIdentity> beibehalten werden soll, der <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Eigenschaft.  
  
 Wenn die <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Eigenschaft ist nicht `null`, Anwendungen können über die Eigenschaften und Methoden von der ursprünglichen Token und die Ansprüche, die sie generiert zugreifen die <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Set-Vorgang erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code festgelegt werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zugeordneten Ansprüche dies anspruchsidentität.</summary>
        <value>Die Auflistung der Ansprüche im Zusammenhang mit dieser anspruchsidentität.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enthält die Auflistung möglicherweise Einträge `null`.  
  
 Die Ansprüche den <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Sammlung beschreiben im Wesentlichen die Entität, die durch dargestellt wird die <xref:System.Security.Claims.ClaimsIdentity>. Ansprüche beschreiben die Eigenschaften und die Entität zugewiesenen und können von Clientanwendungen für Entscheidungen zu Authentifizierung und Autorisierung überprüft werden.  
  
> [!NOTE]
>  Die <xref:System.Security.Claims.ClaimsPrincipal> -Klasse verfügt über eine <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> -Eigenschaft ebenfalls. In den meisten Fällen sollten Sie den Ansprüchen des Benutzers über Zugriff auf die <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> Auflistung Umweg über den <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung. Sie benötigen die Ansprüche eines einzelnen Zugriff auf <xref:System.Security.Claims.ClaimsIdentity> nur in den Fällen, in denen der Prinzipal enthält mehr als ein <xref:System.Security.Claims.ClaimsIdentity> und auszuwerten, oder Ändern einer bestimmten Identität ausgeführt werden müssen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine neue <see cref="T:System.Security.Claims.ClaimsIdentity" /> aus kopiert diese Anspruchsanbieter-Identität.</summary>
        <returns>Eine Kopie der aktuellen Instanz.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Die <see cref="T:System.IO.BinaryReader" /> , der auf den Anspruch verweist.</param>
        <summary>Bietet einen Erweiterungspunkt für abgeleitete Typen zum Erstellen eines benutzerdefinierten <see cref="T:System.Security.Claims.Claim" />.</summary>
        <returns>Ein neuer <see cref="T:System.Security.Claims.Claim" />.</returns>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enthält alle zusätzlichen Daten, die von einem abgeleiteten Typ bereitgestellt. In der Regel legen Sie beim Aufrufen von <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</summary>
        <value>Ein <see cref="T:System.Byte" /> Array darstellt, die zusätzlichen serialisierten Daten.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standardaussteller; "LOCAL AUTHORITY".</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Standardname Anspruchstyp; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Standardrolle Anspruchstyp; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Die Funktion, die die entsprechende Logik ausführt.</param>
        <summary>Ruft alle Ansprüche ab, die mit dem angegebenen Prädikat übereinstimmen.</summary>
        <returns>Die übereinstimmenden Ansprüche. Die Liste ist schreibgeschützt.</returns>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der Anspruchstyp, dem Ansprüche entsprechen sollen.</param>
        <summary>Ruft alle Ansprüche, die den angegebenen Anspruchstyp aufweisen.</summary>
        <returns>Die übereinstimmenden Ansprüche. Die Liste ist schreibgeschützt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Vergleich erfolgt sowohl Ordinal Groß-/Kleinschreibung unterschieden auf `type`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Die Funktion, die die entsprechende Logik ausführt.</param>
        <summary>Ruft den ersten Anspruch ab, der dem angegebenen Prädikat entspricht.</summary>
        <returns>Der erste übereinstimmende Anspruch oder <see langword="null" /> , wenn keine Übereinstimmung gefunden wird.</returns>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der abzugleichende Anspruchstyp.</param>
        <summary>Ruft den ersten Anspruch mit den angegebenen Anspruchstyp ab.</summary>
        <returns>Der erste übereinstimmende Anspruch oder <see langword="null" /> , wenn keine Übereinstimmung gefunden wird.</returns>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten zu füllende Objekt.</param>
        <param name="context">Das Ziel dieser Serialisierung. Kann <see langword="null" />.</param>
        <summary>Füllt die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit Daten, die zum Serialisieren des aktuellen <see cref="T:System.Security.Claims.ClaimsIdentity" /> Objekt.</summary>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Die Funktion, die die entsprechende Logik ausführt.</param>
        <summary>Bestimmt, ob diese Ansprüche Identität einen Anspruch auf, der vom angegebenen Prädikat verglichen wird.</summary>
        <returns>
          <see langword="true" />, wenn ein übereinstimmender Anspruch vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ des Anspruchs, mit dem eine Übereinstimmung gefunden werden soll.</param>
        <param name="value">Der Wert des Anspruchs, mit dem eine Übereinstimmung gefunden werden soll.</param>
        <summary>Bestimmt, ob diese Ansprüche, dass die Identität ein Anspruch mit dem angegebenen Typ und Wert Anspruch besitzt.</summary>
        <returns>
          <see langword="true" />Wenn eine Übereinstimmung gefunden wurde. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüft nicht die <xref:System.Security.Claims.Claim.Issuer%2A> oder <xref:System.Security.Claims.Claim.OriginalIssuer%2A> Eigenschaften. Verwendung von Ordinal, Groß-/Kleinschreibung beachtet, auf den Wert, der Vergleich gemacht; Fall für den Typ unterschieden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" />ist **null**.  
  
 - oder -   
  
 <paramref name="value" />ist **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die Identität authentifiziert wurde.</summary>
        <value>
          <see langword="true" />Wenn die Identität authentifiziert wurde; andernfalls **"false"**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true`Wenn die <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> Eigenschaft ist nicht `null` oder eine leere Zeichenfolge.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Bezeichnung für diese Anspruchsanbieter-Identität.</summary>
        <value>Die Bezeichnung.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft der Namen dieses anspruchsidentität.</summary>
        <value>Der Name oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt der Wert, der den ersten Anspruch mit einem Typ, der mit dem Namen übereinstimmt Anspruchstyp legen Sie in der <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Eigenschaft. Wenn kein Anspruch, entspricht der Typ des Anspruchs Name gefunden wird, gibt `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Anspruchs, der verwendet wird, um zu bestimmen, welche Ansprüche Geben Sie den Wert für die <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> -Eigenschaft dieser anspruchsidentität.</summary>
        <value>Der Name der Anspruchstyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Eigenschaft gibt den Typ des Anspruchs (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>), die zum Bereitstellen des Namens für diese Identität verwendet wird. Der Namen erfolgt über die <xref:System.Security.Claims.ClaimsIdentity.Name%2A> Eigenschaft.  
  
 Diese Eigenschaft wird vom Konstruktor festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Der zu entfernende Anspruch.</param>
        <summary>Versucht, einen Anspruch aus der Ansprüche Identität zu entfernen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist möglich, dass der Anspruch kann nicht entfernt werden, da Sie nicht die Identität der Besitzer ist. Dazu gehören beispielsweise der Fall für Rollenansprüche Daten, die vom Prinzipal gehören. Im Gegensatz zu den <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> Methode, die einen booleschen Wert, der angibt zurückgibt, ob der Anspruch entfernt wurde, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> löst eine Ausnahme aus, wenn der Anspruch konnten nicht entfernt werden  
  
 Der angegebene Anspruch anhand der Objektverweis abgeglichen wird (<xref:System.Object.ReferenceEquals%2A>).  
  
 Diese Methode hat die `SecurityCritical` Attribut angewendet wird, um zu steuern, welche Entitäten können Ansprüche von der Identität zu entfernen. Weiter unten die Pipe autorisierungsentscheidungen erfolgen basierend auf den Ansprüchen, die in vorhandenen der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Anspruch werden nicht entfernt.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anspruchstyp, der interpretiert wird, wie eine .NET Framework-Rolle für die Ansprüche in dieser Identität Ansprüche ab.</summary>
        <value>Die Rolle der Anspruchstyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Anspruchstyp "Rolle" ist der Typ des Anspruchs (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>), die verwendet wird, wenn diese Identität für die Auswertung der <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> Methode. Die <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> Methode wird aufgerufen, um zu bestimmen, ob der aktuelle Prinzipal in einer bestimmten Rolle ist. Das anspruchsbasierte Modell erweitert diese Überprüfung zur Verwendung von Ansprüchen ab, die vom Prinzipal bereitgestellt. Ein <xref:System.Security.Claims.ClaimsPrincipal> -Objekt enthalten kann, eine oder mehrere <xref:System.Security.Claims.ClaimsIdentity> Objekte und jede Identitätsobjekt können mehrere enthalten <xref:System.Security.Claims.Claim> Objekte. Die <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> Eigenschaft gibt an, den Anspruchstyp des Anspruchs, der verwendet werden soll, um den Wert für die Rolle bereitzustellen, bei der Auswertung dieser <xref:System.Security.Claims.ClaimsIdentity> Objekt. Die Eigenschaft wird vom Konstruktor festgelegt. Ein allgemeinen Wert ist <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Der zu entfernende Anspruch.</param>
        <summary>Versucht, einen Anspruch aus der Ansprüche Identität zu entfernen.</summary>
        <returns>
          <see langword="true" />Wenn der Anspruch erfolgreich entfernt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist möglich, dass der Anspruch kann nicht entfernt werden, da Sie nicht die Identität der Besitzer ist. Dazu gehören beispielsweise der Fall für Rollenansprüche Daten, die vom Prinzipal gehören.  
  
 Der angegebene Anspruch anhand der Objektverweis abgeglichen wird (<xref:System.Object.ReferenceEquals%2A>).  
  
 Diese Methode hat die `SecurityCritical` Attribut angewendet wird, um zu steuern, welche Entitäten können Ansprüche von der Identität zu entfernen. Weiter unten die Pipe autorisierungsentscheidungen erfolgen basierend auf den Ansprüchen, die in vorhandenen der <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> Auflistung.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der Writer, die für die Speicherung von Daten verwendet werden soll.</param>
        <summary>Serialisiert mithilfe einer <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer">Der Writer, die für die Speicherung von Daten verwendet werden soll.</param>
        <param name="userData">Zusätzliche Daten, die von den abgeleiteten Typ bereitgestellt werden.</param>
        <summary>Serialisiert mithilfe einer <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
