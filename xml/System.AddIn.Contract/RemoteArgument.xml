<Type Name="RemoteArgument" FullName="System.AddIn.Contract.RemoteArgument">
  <TypeSignature Language="C#" Value="public struct RemoteArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit RemoteArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.RemoteArgument" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Instanz eines Typs, der über den Prozess übergeben werden können und Grenzen von Anwendungsdomänen hinweg.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.AddIn.Contract.RemoteArgument> Struktur zum Weitergeben der Argumente von Typen, die erst zur Laufzeit nicht, über Prozess-bestimmt werden und Grenzen von Anwendungsdomänen hinweg. Der Zweck der <xref:System.AddIn.Contract.RemoteArgument> ähnelt dem von der `VARIANT` Typ in COM  
  
 Sie können <xref:System.AddIn.Contract.RemoteArgument> , die folgenden Typen und Werte als remote Argumente übergeben:  
  
-   <xref:System.Type.Missing?displayProperty=nameWithType>.  
  
-   <xref:System.AddIn.Contract.IContract>.  
  
-   Systeminterne Datentypen.  
  
-   Arrays, die Elemente mit systeminternen Datentypen enthalten.  
  
 Ein systeminterner Datentyp ist ein primitiver Datentyp (d. h. die <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Eigenschaft des Typs ist `true`) oder ein <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, oder <xref:System.DBNull>.  
  
 <xref:System.AddIn.Contract.RemoteArgument>Stellt Konstruktoren für alle Typen, die dies unterstützt. Sie können auch die <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> Methoden zum Erstellen <xref:System.AddIn.Contract.RemoteArgument> Objekte. Die <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> Methoden rufen automatisch die entsprechende <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> Konstruktor für den Argumenttyp.  
  
 Bei Erstellung einer <xref:System.AddIn.Contract.RemoteArgument> mit dem parameterlosen Standardkonstruktor die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaftensatz wird auf den Wert <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=nameWithType> und die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft auf den Wert festgelegt ist <xref:System.TypeCode?displayProperty=nameWithType>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.IContract value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.AddIn.Contract.IContract" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.AddIn.Contract.IContract" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Contract>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">Ein <see cref="T:System.Array" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.Array" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft, um <xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um den Typcode des Arraytyps Element und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Arrayelementtyp ist keinem Basistyp (d. h. die <see cref="M:System.Type.GetTypeCode(System.Type)" /> Methodenrückgabe für den Elementtyp des Arrays <see cref="F:System.TypeCode.Object" />).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Boolean" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Boolean" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Byte" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Byte" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Char" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Char" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.DateTime" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.DateTime" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DBNull value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DBNull value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DBNull" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.DBNull" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.DBNull" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Decimal" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Decimal" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Double" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Double" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int16" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.Int16" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int32" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.Int32" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int64" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.Int64" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.SByte" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse, repräsentiert ein <see cref="T:System.SByte" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Single" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.Single" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.String" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.String" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt16" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.UInt16" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt32" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.UInt32" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt64" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Initialisiert eine neue Instanz der der <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse, die stellt eine <see cref="T:System.UInt64" /> Argument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.IContract value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.AddIn.Contract.IContract" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.AddIn.Contract.IContract" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Contract>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Contract.RemoteArgumentKind remoteArgKind, valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteArgKind" Type="System.AddIn.Contract.RemoteArgumentKind" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="remoteArgKind">Eines der <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> Werte, der angibt, ob die <see cref="T:System.AddIn.Contract.RemoteArgument" /> einen systeminternen Typ, ein Array von systeminternen Typen stellt ein <see cref="T:System.AddIn.Contract.IContract" />, oder die <see cref="F:System.Type.Missing" /> Wert.</param>
        <param name="typeCode">Ein <see cref="T:System.TypeCode" /> , der den Basistyp des remote-Arguments angibt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse mit dem angegebenen <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> und <see cref="T:System.TypeCode" /> für ein Argument, das nicht als Verweis übergeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor weist den Standardwert des Datentyps gemäß der `typeCode` Parameter an die <xref:System.AddIn.Contract.RemoteArgument>.  
  
 Ein systeminterner Datentyp ist ein primitiver Datentyp (d. h. die <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Eigenschaft des Typs ist `true`) oder ein <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, oder <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="remoteArgKind" />ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> oder <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" />, und <paramref name="typeCode" /> ist <see cref="F:System.TypeCode.Object" /> oder <see cref="F:System.TypeCode.Empty" />.  
  
 - oder -   
  
 <paramref name="remoteArgKind" /> ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" />, und <paramref name="typeCode" /> ist nicht <see cref="F:System.TypeCode.Empty" />.  
  
 - oder -   
  
 <paramref name="remoteArgKind" /> ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" />, und <paramref name="typeCode" /> ist nicht <see cref="F:System.TypeCode.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (Array array, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Array array, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">Ein <see cref="T:System.Array" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Array</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Array" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um den Typcode des Arraytyps Element und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Arrayelementtyp ist keinem Basistyp (d. h. die <see cref="M:System.Type.GetTypeCode(System.Type)" /> -Methode zurückkehrt <see cref="F:System.TypeCode.Object" /> für den Elementtyp des Arrays).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (bool value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Boolean" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Boolean" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (byte value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Byte" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Byte" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (char value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Char" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Char" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DateTime value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.DateTime" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.DateTime" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (DBNull value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DBNull value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.DBNull" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.DBNull" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.DBNull" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (decimal value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Decimal" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Decimal" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (double value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Double" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Double" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (short value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int16" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Int16" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (int value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int32" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Int32" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (long value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Int64" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Int64" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (sbyte value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.SByte" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.SByte" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (float value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Single" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.Single" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (string value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.String" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.String" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ushort value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int16 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt16" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.UInt16" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (uint value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt32" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.UInt32" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (ulong value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.UInt64" /> Argument, das über den Prozess übergeben werden kann oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Wenn <c>Wert</c> ist ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> Klasse dar ein <see cref="T:System.UInt64" /> Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> Eigenschaft <xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic>, die <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> Eigenschaft, um <xref:System.TypeCode?displayProperty=nameWithType>, und die <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> auf den Wert der Eigenschaft der `isByRef` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Contract.RemoteArgumentKind remoteArgKind, valuetype System.TypeCode typeCode, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteArgKind" Type="System.AddIn.Contract.RemoteArgumentKind" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="remoteArgKind">Eines der <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> Werte, der angibt, ob die <see cref="T:System.AddIn.Contract.RemoteArgument" /> einen systeminternen Typ, ein Array von systeminternen Typen stellt ein <see cref="T:System.AddIn.Contract.IContract" />, oder die <see cref="F:System.Type.Missing" /> Wert.</param>
        <param name="typeCode">Ein <see cref="T:System.TypeCode" /> , der den Basistyp des remote-Arguments angibt.</param>
        <param name="isByRef">
          <see langword="true" />Wenn der remote-Argument als Verweis übergeben wird; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.AddIn.Contract.RemoteArgument" /> -Klasse mit dem angegebenen <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> und <see cref="T:System.TypeCode" /> für ein Argument, das als Verweis übergeben werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor weist den Standardwert des Datentyps gemäß der `typeCode` Parameter an die <xref:System.AddIn.Contract.RemoteArgument>.  
  
 Ein systeminterner Datentyp ist ein primitiver Datentyp (d. h. die <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Eigenschaft des Typs ist `true`) oder ein <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, oder <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="remoteArgKind" />ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> oder <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" />, und <paramref name="typeCode" /> ist <see cref="F:System.TypeCode.Object" /> oder <see cref="F:System.TypeCode.Empty" />.  
  
 - oder -   
  
 <paramref name="remoteArgKind" /> ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Missing" />, und <paramref name="typeCode" /> ist nicht <see cref="F:System.TypeCode.Empty" />.  
  
 - oder -   
  
 <paramref name="remoteArgKind" /> ist <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" />, und <paramref name="typeCode" /> ist nicht <see cref="F:System.TypeCode.Object" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="remoteArgKind" /> ist kein gültiger <see cref="T:System.AddIn.Contract.RemoteArgumentKind" />-Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayValue">
      <MemberSignature Language="C#" Value="public Array ArrayValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Array ArrayValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.ArrayValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Array" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Array" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see langword="null" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> -Eigenschaftensatz auf die <see cref="F:System.TypeCode.Object" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BooleanValue">
      <MemberSignature Language="C#" Value="public bool BooleanValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BooleanValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.BooleanValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Boolean" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Boolean" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see langword="false" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Boolean" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ByteValue">
      <MemberSignature Language="C#" Value="public byte ByteValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ByteValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.ByteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Byte" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Byte" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Byte" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CharValue">
      <MemberSignature Language="C#" Value="public char CharValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char CharValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.CharValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Char" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Char" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see cref="F:System.Char.MinValue" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Char" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContractValue">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract ContractValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract ContractValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.ContractValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.AddIn.Contract.IContract" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.AddIn.Contract.IContract" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see langword="null" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Contract" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Object" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Argument, das über den Prozess übergeben wird oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <summary>Erstellt eine <see cref="T:System.AddIn.Contract.RemoteArgument" /> für ein Argument, das nicht als Verweis übergeben wird.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.RemoteArgument" /> , die das angegebene Argument darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> Konstruktor, der in den Typ des gilt die `value` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Object" /> und <paramref name="value" /> ist ein <see cref="T:System.AddIn.Contract.IContract" />.  
  
 - oder -   
  
 Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Empty" /> und <paramref name="value" /> nicht festgelegt ist, um <see cref="F:System.Reflection.Missing.Value" />.  
  
 - oder -   
  
 <paramref name="value" />implementiert nicht die <see cref="T:System.IConvertible" /> Schnittstelle und <paramref name="value" /> ist ein <see cref="T:System.Array" />.  
  
 - oder -   
  
 <paramref name="value" />ist ein <see cref="T:System.Array" /> , enthält die Elemente mit einem <see cref="T:System.TypeCode" /> Wert <see cref="F:System.TypeCode.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value, bool isByRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isByRef" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Das Argument, das über den Prozess übergeben wird oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Übergeben der <c>Wert</c> Argument als Verweis; anderenfalls <see langword="false" />.</param>
        <summary>Erstellt eine <see cref="T:System.AddIn.Contract.RemoteArgument" /> für ein Argument, das als Verweis übergeben werden kann.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.RemoteArgument" /> , die das angegebene Argument darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> Konstruktor, der in den Typ des gilt die `value` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Object" /> und <paramref name="value" /> ist ein <see cref="T:System.AddIn.Contract.IContract" />.  
  
 - oder -   
  
 Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Empty" /> und <paramref name="value" /> nicht festgelegt ist, um <see cref="F:System.Reflection.Missing.Value" />.  
  
 - oder -   
  
 <paramref name="value" />implementiert nicht die <see cref="T:System.IConvertible" /> Schnittstelle und <paramref name="value" /> ist ein <see cref="T:System.Array" />.  
  
 - oder -   
  
 <paramref name="value" />ist ein <see cref="T:System.Array" /> , enthält die Elemente mit einem <see cref="T:System.TypeCode" /> Wert <see cref="F:System.TypeCode.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteArgument">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef, TypeCode typeCodeToUse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.AddIn.Contract.RemoteArgument CreateRemoteArgument(object value, bool isByRef, valuetype System.TypeCode typeCodeToUse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isByRef" Type="System.Boolean" />
        <Parameter Name="typeCodeToUse" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="value">Das Argument, das über den Prozess übergeben wird oder die Grenzen von Anwendungsdomänen hinweg.</param>
        <param name="isByRef">
          <see langword="true" />Das Argument als Verweis übergeben; andernfalls <see langword="false" />.</param>
        <param name="typeCodeToUse">Ein <see cref="T:System.TypeCode" /> , der den Typcode des angibt <c>Wert</c>, wenn <c>Wert</c> ist ein <see cref="T:System.Array" />. Andernfalls ein <see cref="T:System.TypeCode" /> , der den Typcode der Elemente im angibt <c>Wert</c>.</param>
        <summary>Erstellt eine <see cref="T:System.AddIn.Contract.RemoteArgument" /> für ein Argument, das über den angegebenen Typcode verfügt und als Verweis übergeben werden können.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.RemoteArgument" /> , die das angegebene Argument darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> Konstruktor, der in den Typ des gilt die `value` Parameter.  
  
 Nicht möglich, verwenden Sie diese Methode zum Erstellen einer <xref:System.AddIn.Contract.RemoteArgument> darstellt, die eine `null` Array, das Elemente von systeminternen Datentypen enthält. Ein systeminterner Datentyp ist ein primitiver Datentyp (d. h. die <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Eigenschaft des Typs ist `true`) oder ein <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, oder <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Object" />, <paramref name="value" /> ist ein <see cref="T:System.AddIn.Contract.IContract" />, und <paramref name="value" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> ist <see cref="F:System.TypeCode.Empty" /> und <paramref name="value" /> nicht <see cref="F:System.Reflection.Missing.Value" />.  
  
 - oder -   
  
 <paramref name="value" />implementiert nicht die <see cref="T:System.IConvertible" /> -Schnittstelle, <paramref name="value" /> ist nicht <see langword="null" />, und <paramref name="value" /> ist ein <see cref="T:System.Array" />.  
  
 - oder -   
  
 <paramref name="value" />ist ein <see cref="T:System.Array" /> , enthält die Elemente mit einem <see cref="T:System.TypeCode" /> Wert <see cref="F:System.TypeCode.Object" />.</exception>
        <exception cref="T:System.NotSupportedException">Die <see cref="T:System.TypeCode" /> von <paramref name="value" /> nicht <see cref="F:System.TypeCode.DBNull" /> und <paramref name="typeCodeToUse" /> ist <see cref="F:System.TypeCode.DBNull" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="typeCodeToUse" />gibt keine gültige <see cref="T:System.TypeCode" /> Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateTimeValue">
      <MemberSignature Language="C#" Value="public DateTime DateTimeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTimeValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.DateTimeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.DateTime" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.DateTime" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see cref="F:System.DateTime.MinValue" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.DateTime" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DBNullValue">
      <MemberSignature Language="C#" Value="public DBNull DBNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DBNull DBNullValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.DBNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DBNull</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.DBNull" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.DBNull" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see langword="null" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.DBNull" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecimalValue">
      <MemberSignature Language="C#" Value="public decimal DecimalValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal DecimalValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.DecimalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Decimal" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Decimal" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Decimal" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public double DoubleValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DoubleValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.DoubleValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Double" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Double" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0.0, wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Double" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Int16Value">
      <MemberSignature Language="C#" Value="public short Int16Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Int16Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.Int16Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Int16" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Int16" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Int16" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Int32Value">
      <MemberSignature Language="C#" Value="public int Int32Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Int32Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.Int32Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Int32" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Int32" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Int32" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Int64Value">
      <MemberSignature Language="C#" Value="public long Int64Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Int64Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.Int64Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Int64" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Int64" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Int64" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRef" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.IsByRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die <see cref="T:System.AddIn.Contract.RemoteArgument" /> stellt ein Argument, das als Verweis übergeben wird.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.AddIn.Contract.RemoteArgument" /> stellt ein Argument, das als Verweis übergeben wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingValue">
      <MemberSignature Language="C#" Value="public System.Reflection.Missing MissingValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Missing MissingValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.MissingValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Missing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="F:System.Type.Missing" /> Wert.</summary>
        <value>Der <see cref="F:System.Type.Missing" />-Wert.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Wert dieser Eigenschaft abgerufen wird während der <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Empty" /> Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteArgumentKind">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgumentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> , der die Art des Arguments angibt, die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Eines der <see cref="T:System.AddIn.Contract.RemoteArgumentKind" /> Werte, der angibt, ob die <see cref="T:System.AddIn.Contract.RemoteArgument" /> einen systeminternen Typ, ein Array von systeminternen Typen stellt ein <see cref="T:System.AddIn.Contract.IContract" />, oder die <see cref="F:System.Type.Missing" /> Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein systeminterner Datentyp ist ein primitiver Datentyp (d. h. die <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> Eigenschaft des Typs ist `true`) oder ein <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, oder <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SByteValue">
      <MemberSignature Language="C#" Value="public sbyte SByteValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int8 SByteValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.SByteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.SByte" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.SByte" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.SByte" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SingleValue">
      <MemberSignature Language="C#" Value="public float SingleValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SingleValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.SingleValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Single" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.Single" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0.0, wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.Single" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public string StringValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.StringValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.String" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.String" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt. <see langword="null" /> Wenn der Wert, der die <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.String" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.TypeCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.TypeCode" /> , der den Basistyp des Arguments angibt, die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Ein <see cref="T:System.TypeCode" /> , der den Basistyp des Arguments angibt, die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UInt16Value">
      <MemberSignature Language="C#" Value="public ushort UInt16Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int16 UInt16Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.UInt16Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.UInt16" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.UInt16" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.UInt16" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UInt32Value">
      <MemberSignature Language="C#" Value="public uint UInt32Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 UInt32Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.UInt32Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.UInt32" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.UInt32" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.UInt32" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UInt64Value">
      <MemberSignature Language="C#" Value="public ulong UInt64Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 UInt64Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Contract.RemoteArgument.UInt64Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.UInt64" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt.</summary>
        <value>Die <see cref="T:System.UInt64" /> , die die <see cref="T:System.AddIn.Contract.RemoteArgument" /> darstellt; 0 (null), wenn der Wert des der <see cref="T:System.AddIn.Contract.RemoteArgument" /> noch nicht angegeben.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.AddIn.Contract.RemoteArgumentKind.Intrinsic" /> Wert.  
  
 - oder -   
  
 Die <see cref="P:System.AddIn.Contract.RemoteArgument.TypeCode" /> Eigenschaft nicht festgelegt ist, um die <see cref="F:System.TypeCode.UInt64" /> Wert.  
  
 - oder -   
  
 Diese Eigenschaft festgelegt ist während der <see cref="P:System.AddIn.Contract.RemoteArgument.IsByRef" /> Eigenschaft ist <see langword="false" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
