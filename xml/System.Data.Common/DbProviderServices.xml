<Type Name="DbProviderServices" FullName="System.Data.Common.DbProviderServices">
  <TypeSignature Language="C#" Value="public abstract class DbProviderServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderServices" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die Factory zum Erstellen von Befehlsdefinitionen; Verwenden Sie den Typ dieses Objekts als Argument für die IServiceProvider.GetService-Methode für die Anbieterfactory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hier wird kein Inhalt aktualisiert; fügen Sie hier kein Material hinzu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderServices ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbProviderServices" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="commandTree">Die Befehlsstruktur.</param>
        <summary>Erstellt Befehlsdefinition aus Befehlsstruktur.</summary>
        <returns>Die Befehlsdefinition des erstellten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbCommand prototype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbCommand prototype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prototype" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="prototype">Der Befehl verwendet, um eine Befehlsdefinition zu erstellen.</param>
        <summary>Erstellt eine Befehlsdefinition, die einen bestimmten Befehl verwendet.</summary>
        <returns>Die erstellte Befehlsdefinition, die einen bestimmten Befehl verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCommandDefinition">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommandDefinition CreateCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommandDefinition CreateCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">Das Manifest.</param>
        <param name="commandTree">Die Befehlsstruktur.</param>
        <summary>Erstellt Befehlsdefinition aus angegebenen manifest Andcommand-Struktur.</summary>
        <returns>Die Befehlsdefinition des erstellten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer nicht vorhandenen Datenbank, die erstellt und mit den Speicherobjekten aufgefüllt werden muss Analysefehlern StoreItemCollection-Parameter.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle, die zum Erstellen der Datenbank benötigt.</param>
        <param name="storeItemCollection">Die Auflistung aller speichern Elemente basierend auf dem das Skript erstellt werden soll.</param>
        <summary>Erstellt eine durch die Verbindung angegebene Datenbank und für welche Schemaobjekte erstellt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabaseScript">
      <MemberSignature Language="C#" Value="public string CreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string CreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">Das Anbietermanifesttoken, identifiziert die Version des Zielservers.</param>
        <param name="storeItemCollection">Die Struktur der Datenbank.</param>
        <summary>Generiert eine Data Definition Language (DDL-Skript, für welche Schemaobjekte (Tabellen, Primärschlüssel, Fremdschlüssel) auf Basis der Inhalte des Parameters StoreItemCollection und als Ziel für die Version der Datenbank entspricht dem Anbietermanifesttoken erstellt .</summary>
        <returns>Ein DDL-Skript, für welche Schemaobjekte erstellt, basierend auf dem Inhalt des Parameters StoreItemCollection und als Ziel für die Version der Datenbank, die Anbietermanifesttoken entspricht.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommandDefinition">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbCommandDefinition CreateDbCommandDefinition (System.Data.Common.DbProviderManifest providerManifest, System.Data.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommandDefinition CreateDbCommandDefinition(class System.Data.Common.DbProviderManifest providerManifest, class System.Data.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommandDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifest" Type="System.Data.Common.DbProviderManifest" />
        <Parameter Name="commandTree" Type="System.Data.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="providerManifest">Das Anbietermanifest, die zuvor aus der Speicheranbieter abgerufen werden.</param>
        <param name="commandTree">Der Befehlsstruktur für die Anweisung.</param>
        <summary>Erstellt ein Befehlsobjekt für die Definition für das angegebene Anbietermanifest und Befehlsstruktur.</summary>
        <returns>Ein Objekt des ausführbaren Befehls Definition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer Datenbank, die von dieser Methode, dessen Vorhandensein überprüft wird.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle benötigt, um das Vorhandensein der Datenbank zu bestimmen.</param>
        <param name="storeItemCollection">Die Auflistung aller speichern Elemente in der Datenbank, dessen Vorhandensein durch diese Methode bestimmt wird.</param>
        <summary>Gibt einen Wert, der angibt, ob eine bestimmte Datenbank auf dem Server vorhanden ist, und gibt an, ob in der StoreItemCollection enthaltene Schemaobjekte erstellt wurden.</summary>
        <returns>"True", wenn der Anbieter, die Datenbank nur basierend auf der Verbindung ableiten kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbCreateDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbCreateDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer nicht vorhandenen Datenbank, die erstellt und mit den Speicherobjekten aufgefüllt werden muss Analysefehlern StoreItemCollection-Parameter.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle, die zum Erstellen der Datenbank benötigt.</param>
        <param name="storeItemCollection">Die Auflistung aller speichern Elemente basierend auf dem das Skript erstellt werden soll.</param>
        <summary>Erstellt eine Datenbank, die durch die Verbindung angegebene und Schemaobjekte (Tabellen, Primärschlüssel, Fremdschlüssel), die auf Basis der Inhalte von einem StoreItemCollection erstellt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbCreateDatabaseScript">
      <MemberSignature Language="C#" Value="protected virtual string DbCreateDatabaseScript (string providerManifestToken, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string DbCreateDatabaseScript(string providerManifestToken, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerManifestToken" Type="System.String" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="providerManifestToken">Das Anbietermanifesttoken, identifiziert die Version des Zielservers.</param>
        <param name="storeItemCollection">Die Struktur der Datenbank.</param>
        <summary>Generiert eine Data Definition Language (DDL-Skript, für welche Schemaobjekte (Tabellen, Primärschlüssel, Fremdschlüssel) auf Basis der Inhalte des Parameters StoreItemCollection und als Ziel für die Version der Datenbank entspricht dem Anbietermanifesttoken erstellt .</summary>
        <returns>Ein DDL-Skript, für welche Schemaobjekte erstellt, basierend auf dem Inhalt des Parameters StoreItemCollection und als Ziel für die Version der Datenbank, die Anbietermanifesttoken entspricht.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDatabaseExists">
      <MemberSignature Language="C#" Value="protected virtual bool DbDatabaseExists (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DbDatabaseExists(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer Datenbank, die von dieser Methode, dessen Vorhandensein überprüft wird.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle benötigt, um das Vorhandensein der Datenbank zu bestimmen.</param>
        <param name="storeItemCollection">Die Struktur der Datenbank, dessen Vorhandensein durch diese Methode bestimmt wird.</param>
        <summary>Gibt einen Wert, der angibt, ob eine bestimmte Datenbank auf dem Server vorhanden ist, und gibt an, ob in der StoreItemCollection enthaltene Schemaobjekte erstellt wurden.</summary>
        <returns>
          <see langword="True" />Wenn die Verbindung und die StoreItemCollection-Parameter angegebene Datenbank vorhanden ist. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbDeleteDatabase">
      <MemberSignature Language="C#" Value="protected virtual void DbDeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DbDeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer vorhandenen Datenbank, die gelöscht werden soll.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle benötigt, um die Datenbank zu löschen.</param>
        <param name="storeItemCollection">Die Struktur der Datenbank gelöscht werden soll.</param>
        <summary>Löscht alle Speicherobjekte in Store-Item-Auflistung aus der Datenbank und die Datenbank selbst angegeben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbGetSpatialServices">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialServices DbGetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialServices DbGetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Ruft ab, die räumliche Dienste für die <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Die räumliche Dienste.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase (System.Data.Common.DbConnection connection, Nullable&lt;int&gt; commandTimeout, System.Data.Metadata.Edm.StoreItemCollection storeItemCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase(class System.Data.Common.DbConnection connection, valuetype System.Nullable`1&lt;int32&gt; commandTimeout, class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="commandTimeout" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit einer vorhandenen Datenbank, die gelöscht werden soll.</param>
        <param name="commandTimeout">Ausführungstimeout für alle Befehle benötigt, um die Datenbank zu löschen.</param>
        <param name="storeItemCollection">Die Struktur der Datenbank gelöscht werden soll.</param>
        <summary>Löscht alle Speicherobjekte in Store-Item-Auflistung aus der Datenbank und die Datenbank selbst angegeben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifest">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbProviderManifest GetDbProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderManifest GetDbProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Instanz einer Klasse, die von der DbProviderManifest abgeleitet wird zurückgegeben.</summary>
        <returns>Ein DbProviderManifest-Objekt, das Anbietermanifest darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderManifestToken">
      <MemberSignature Language="C#" Value="protected abstract string GetDbProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDbProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit dem Anbieter.</param>
        <summary>Gibt Anbietermanifesttoken eine Verbindung angegeben.</summary>
        <returns>Das Anbietermanifesttoken für die angegebene Verbindung.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbSpatialDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Spatial.DbSpatialDataReader GetDbSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">Der Reader, woher die räumlichen Daten stammen.</param>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Ruft die räumlichen Datenreader für die <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Der Reader für räumliche Daten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetProviderFactory (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetProviderFactory(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Die zu verwendende Verbindung.</param>
        <summary>Ruft ab, der "DbProviderFactory" basierend auf den angegebenen ' DbConnection '.</summary>
        <returns>Der abgerufene "DbProviderFactory".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifest">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbProviderManifest GetProviderManifest (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbProviderManifest GetProviderManifest(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Gibt anhand der angegebenen Versionsinformationen das Anbietermanifest zurück.</summary>
        <returns>Das Anbietermanifest mithilfe der angegebenen Versionsinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderManifestToken">
      <MemberSignature Language="C#" Value="public string GetProviderManifestToken (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetProviderManifestToken(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit dem Anbieter.</param>
        <summary>Gibt Anbietermanifesttoken.</summary>
        <returns>Das Anbietermanifesttoken.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderServices">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderServices GetProviderServices (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderServices GetProviderServices(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Verbindung mit dem Anbieter.</param>
        <summary>Gibt-Anbieter eine Verbindung angegeben.</summary>
        <returns>Die <see cref="T:System.Data.Common.DbProviderServices" /> instanziiert anhand der angegebenen Verbindung.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialDataReader">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader (System.Data.Common.DbDataReader fromReader, string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialDataReader GetSpatialDataReader(class System.Data.Common.DbDataReader fromReader, string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromReader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromReader">Der Reader, woher die räumlichen Daten stammen.</param>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Ruft die räumlichen Datenreader für die <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Der Reader für räumliche Daten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpatialServices">
      <MemberSignature Language="C#" Value="public System.Data.Spatial.DbSpatialServices GetSpatialServices (string manifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Spatial.DbSpatialServices GetSpatialServices(string manifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Spatial.DbSpatialServices</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="manifestToken">Die Tokeninformationen Anbietermanifest zugeordnet.</param>
        <summary>Ruft ab, die räumliche Dienste für die <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <returns>Die räumliche Dienste.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDbParameterValue">
      <MemberSignature Language="C#" Value="protected virtual void SetDbParameterValue (System.Data.Common.DbParameter parameter, System.Data.Metadata.Edm.TypeUsage parameterType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDbParameterValue(class System.Data.Common.DbParameter parameter, class System.Data.Metadata.Edm.TypeUsage parameterType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="parameterType" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Der Parameter.</param>
        <param name="parameterType">Der Typ des Parameters.</param>
        <param name="value">Der Wert des Parameters.</param>
        <summary>Legt die Parameterwerte für die <see cref="T:System.Data.Common.DbProviderServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
