<Type Name="HierarchicalVirtualizationHeaderDesiredSizes" FullName="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes">
  <TypeSignature Language="C#" Value="public struct HierarchicalVirtualizationHeaderDesiredSizes" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HierarchicalVirtualizationHeaderDesiredSizes extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die gewünschte Größe für die Control-Header, in Pixel und in logischen Einheiten. Diese Struktur wird verwendet, durch die <see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> Schnittstelle.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalVirtualizationHeaderDesiredSizes (System.Windows.Size logicalSize, System.Windows.Size pixelSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size logicalSize, valuetype System.Windows.Size pixelSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logicalSize" Type="System.Windows.Size" />
        <Parameter Name="pixelSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="logicalSize">Die Größe des Headers in logischen Einheiten.</param>
        <param name="pixelSize">Die Größe des Headers im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object oCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object oCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oCompare" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oCompare">Das zu vergleichende Objekt.</param>
        <summary>Gibt einen Wert, der angibt, ob das angegebene Objekt gleich diesem <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene Objekt gleich diesem Objekt ist. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes comparisonHeaderSizes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes comparisonHeaderSizes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonHeaderSizes" Type="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
      </Parameters>
      <Docs>
        <param name="comparisonHeaderSizes">Das zu vergleichende Objekt.</param>
        <summary>Gibt einen Wert, der angibt, ob das angegebene <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> Objekt gleich diesem <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene Objekt gleich diesem Objekt ist. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Hashcode für die <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />.</summary>
        <returns>Ein Hashcode für die <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size LogicalSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size LogicalSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.LogicalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Headers, der in logischen Einheiten ab.</summary>
        <value>Die Größe des Headers in logischen Einheiten.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes1, System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes1, valuetype System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerDesiredSizes1" Type="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
        <Parameter Name="headerDesiredSizes2" Type="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
      </Parameters>
      <Docs>
        <param name="headerDesiredSizes1">Das erste zu vergleichende Objekt.</param>
        <param name="headerDesiredSizes2">Das zweite zu vergleichende Objekt.</param>
        <summary>Gibt einen Wert, der angibt, ob das angegebene <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> -Objekte gleich sind.</summary>
        <returns>
          <see langword="true" />, wenn die angegebenen Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes1, System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes1, valuetype System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes headerDesiredSizes2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerDesiredSizes1" Type="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
        <Parameter Name="headerDesiredSizes2" Type="System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />
      </Parameters>
      <Docs>
        <param name="headerDesiredSizes1">Das erste zu vergleichende Objekt.</param>
        <param name="headerDesiredSizes2">Das zweite zu vergleichende Objekt.</param>
        <summary>Gibt einen Wert, der angibt, ob das angegebene <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> Objekte ungleich sind.</summary>
        <returns>
          <see langword="true" />Wenn die angegebenen Objekte ungleich sind; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size PixelSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PixelSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.PixelSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der Header in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</summary>
        <value>Die Größe des Headers im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
