<Type Name="VirtualizingPanel" FullName="System.Windows.Controls.VirtualizingPanel">
  <TypeSignature Language="C#" Value="public abstract class VirtualizingPanel : System.Windows.Controls.Panel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualizingPanel extends System.Windows.Controls.Panel" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizingPanel" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet ein Framework für <see cref="T:System.Windows.Controls.Panel" /> Elemente, die die Auflistung der untergeordneten Daten virtualisieren. Dies ist eine abstrakte Klasse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Kontext "virtualisieren" bezieht sich auf eine Technik mit dem eine Teilmenge der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Elemente aus einer größeren Anzahl von Datenelementen, die basierend auf welche Elemente auf dem Bildschirm sichtbar sind, generiert werden. Rechenintensive, im Hinblick auf die Arbeitsspeicher- und Prozessorressourcen, um eine große Anzahl von zu generieren ist [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente angezeigt, wenn nur wenige zu einem bestimmten Zeitpunkt auf dem Bildschirm werden können. Einen Bereich, der von erbt <xref:System.Windows.Controls.VirtualizingPanel>, wie z. B. die <xref:System.Windows.Controls.VirtualizingStackPanel>, berechnet die sichtbaren Elemente und arbeitet mit der <xref:System.Windows.Controls.ItemContainerGenerator> aus einer <xref:System.Windows.Controls.ItemsControl> (z. B. <xref:System.Windows.Controls.ListBox> oder <xref:System.Windows.Controls.ListView>) nur erstellen [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente für die sichtbaren Elemente .  
  
 Die folgenden Listen werden Fälle beschrieben, wenn die <xref:System.Windows.Controls.VirtualizingPanel> Elementcontainer kann nicht virtualisiert:  
  
-   Die <xref:System.Windows.Controls.ItemsControl> Elementcontainer verschiedener Typen enthält.  Z. B. eine <xref:System.Windows.Controls.Menu> möglicherweise Elemente, die sowohl <xref:System.Windows.Controls.MenuItem> und <xref:System.Windows.Controls.Separator> Objekte als Elementcontainer.  
  
-   Sie explizit die Elementcontainer zum Erstellen der <xref:System.Windows.Controls.ItemsControl>. Weitere Informationen zu expliziten und implizite Elementcontainer erstellen, finden Sie unter der <xref:System.Windows.Controls.ItemsControl> Klasse.  
  
 Wenn eine <xref:System.Windows.Controls.VirtualizingPanel> ist virtualisiert Elementcontainer, müssen Sie möglicherweise Zustandsinformationen speichern, die einem Container anstelle von Datenelement selbst zugeordnet ist. Angenommen, ein Element enthalten ist ein <xref:System.Windows.Controls.Expander> -Steuerelement, die <xref:System.Windows.Controls.Expander.IsExpanded%2A> Zustand Elementcontainers und nicht zum Datenelement selbst gebunden ist. Wenn die <xref:System.Windows.Controls.Expander> wird wiederverwendet, für das neue Element, den aktuellen Wert der <xref:System.Windows.Controls.Expander.IsExpanded%2A> für das neue Element verwendet wird. Darüber hinaus wird das alte Element keine beibehalten seine <xref:System.Windows.Controls.Expander.IsExpanded%2A> Wert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die abgeleitete <xref:System.Windows.Controls.VirtualizingStackPanel> in Klasse [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[virtualizingstackpanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/VirtualizingStackPanel_Intro/CS/default.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualizingPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.VirtualizingPanel" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInternalChild">
      <MemberSignature Language="C#" Value="protected void AddInternalChild (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddInternalChild(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Die <see cref="T:System.Windows.UIElement" /> untergeordnetes Element der Auflistung hinzuzufügen.</param>
        <summary>Fügt das angegebene <see cref="T:System.Windows.UIElement" /> auf die <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> Auflistung von einem <see cref="T:System.Windows.Controls.VirtualizingPanel" /> Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine bessere Leistung für <xref:System.Windows.Controls.Panel> Elemente, die ihre untergeordnete Sammlung virtualisiert, als die <xref:System.Windows.Controls.UIElementCollection.Add%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIndexIntoView">
      <MemberSignature Language="C#" Value="protected virtual void BringIndexIntoView (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void BringIndexIntoView(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition des Elements, das generiert wird und sichtbar gemacht werden.</param>
        <summary>Beim Implementieren in einer abgeleiteten Klasse das Element an der angegebenen Indexposition generiert und sichtbar macht.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BringIndexIntoViewPublic">
      <MemberSignature Language="C#" Value="public void BringIndexIntoViewPublic (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIndexIntoViewPublic(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition des Elements, das generiert wird und sichtbar gemacht werden.</param>
        <summary>Generiert das Element an der angegebenen Indexposition aus, und macht sie sichtbar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.CacheLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLengthUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheLengthUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheLengthUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHierarchicallyScrollAndVirtualize">
      <MemberSignature Language="C#" Value="public bool CanHierarchicallyScrollAndVirtualize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHierarchicallyScrollAndVirtualize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Controls.VirtualizingPanel" /> Elemente virtualisieren kann, die gruppiert oder in einer Hierarchie organisiert sind.</summary>
        <value>Ein Wert, der angibt, ob das <see cref="T:System.Windows.Controls.VirtualizingPanel" /> Elemente virtualisieren kann, die gruppiert oder in einer Hierarchie organisiert sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft <xref:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore%2A> auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanHierarchicallyScrollAndVirtualizeCore">
      <MemberSignature Language="C#" Value="protected virtual bool CanHierarchicallyScrollAndVirtualizeCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHierarchicallyScrollAndVirtualizeCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Controls.VirtualizingPanel" /> Elemente virtualisieren kann, die gruppiert oder in einer Hierarchie organisiert sind.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von erben <xref:System.Windows.Controls.VirtualizingPanel> und Unterstützung für Elemente, die gruppiert oder in einer Hierarchie organisiert, die virtualisiert sollten überschreiben Sie diese Methode zurückgeben `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheLength">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.VirtualizationCacheLength GetCacheLength (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Controls.VirtualizationCacheLength GetCacheLength(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.VirtualizationCacheLength</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Element zum Abrufen der <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> angefügte Eigenschaft aus.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> Eigenschaft.</summary>
        <returns>Die Größe des Caches vor und nach den Viewport bei der <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheLengthUnit">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.VirtualizationCacheLengthUnit GetCacheLengthUnit (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Controls.VirtualizationCacheLengthUnit GetCacheLengthUnit(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.VirtualizationCacheLengthUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Element zum Abrufen der <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> angefügte Eigenschaft aus.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> Eigenschaft.</summary>
        <returns>Der Typ der Einheit, die von verwendet wird, die <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> Eigenschaft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardeinstellung ist von der <xref:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit%2A> Eigenschaft ist <xref:System.Windows.Controls.VirtualizationCacheLengthUnit.Page>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsContainerVirtualizable">
      <MemberSignature Language="C#" Value="public static bool GetIsContainerVirtualizable (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsContainerVirtualizable(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Element zum Abrufen der <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> angefügte Eigenschaft aus.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> Eigenschaft.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisieren, sollte ein Element ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardeinstellung ist von der <xref:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable%2A> angefügte Eigenschaft `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsVirtualizing">
      <MemberSignature Language="C#" Value="public static bool GetIsVirtualizing (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsVirtualizing(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, aus dem der Wert der angefügten Eigenschaft gelesen wird.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> -Eigenschaft.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.VirtualizingPanel" /> seinen Inhalt virtualisiert; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert der <xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizing%2A> Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsVirtualizingWhenGrouping">
      <MemberSignature Language="C#" Value="public static bool GetIsVirtualizingWhenGrouping (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsVirtualizingWhenGrouping(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Element zum Abrufen der <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> angefügte Eigenschaft aus.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> Eigenschaft.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert die gruppierten Elemente in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert der <xref:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping%2A> Eigenschaft ist `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemOffset">
      <MemberSignature Language="C#" Value="public double GetItemOffset (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetItemOffset(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Das Element, dessen Position gefunden.</param>
        <summary>Gibt die Position des angegebenen Elements relativ zu den <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
        <returns>Die Position des angegebenen Elements relativ zu den <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft <xref:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore%2A> auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemOffsetCore">
      <MemberSignature Language="C#" Value="protected virtual double GetItemOffsetCore (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance float64 GetItemOffsetCore(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Das Element, dessen Position gefunden.</param>
        <summary>Gibt die Position des angegebenen Elements relativ zu den <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
        <returns>0 in allen Fällen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von erben <xref:System.Windows.Controls.VirtualizingPanel> sollten überschreiben diese Methode, um die Position `child`, relativ zum Bereich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScrollUnit">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ScrollUnit GetScrollUnit (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Controls.ScrollUnit GetScrollUnit(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Element zum Abrufen der <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> angefügte Eigenschaft aus.</param>
        <summary>Ruft den Wert der <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> Eigenschaft.</summary>
        <returns>Ein Wert, der angibt, ob das Durchführen eines Bildlaufs als Elemente in der Auflistung oder Pixel gemessen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert der <xref:System.Windows.Controls.VirtualizingPanel.ScrollUnit%2A> Eigenschaft ist <xref:System.Windows.Controls.ScrollUnit.Item>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualizationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.VirtualizationMode GetVirtualizationMode (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Controls.VirtualizationMode GetVirtualizationMode(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.VirtualizationMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> -Eigenschaft schreibgeschützt ist.</param>
        <summary>Gibt die <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> -Eigenschaft für das angegebene Objekt.</summary>
        <returns>Einer der Enumerationswerte, der angibt, ob das Objekt Container wiederverwendet werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertInternalChild">
      <MemberSignature Language="C#" Value="protected void InsertInternalChild (int index, System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InsertInternalChild(int32 index, class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition innerhalb der Auflistung, an der das untergeordnete Element eingefügt wird.</param>
        <param name="child">Die <see cref="T:System.Windows.UIElement" /> untergeordnetes Element der Auflistung hinzuzufügen.</param>
        <summary>Fügt das angegebene <see cref="T:System.Windows.UIElement" /> auf die <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> Auflistung von einer <see cref="T:System.Windows.Controls.VirtualizingPanel" /> Element an der angegebenen Indexposition befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine bessere Leistung für <xref:System.Windows.Controls.Panel> Elemente, die ihre untergeordnete Sammlung virtualisiert, als die <xref:System.Windows.Controls.UIElementCollection.Add%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainerVirtualizableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsContainerVirtualizableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsContainerVirtualizableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVirtualizingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVirtualizingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizingWhenGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVirtualizingWhenGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVirtualizingWhenGroupingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerGenerator">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.IItemContainerGenerator ItemContainerGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.IItemContainerGenerator ItemContainerGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.IItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der identifiziert die <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> dafür <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</summary>
        <value>Das <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> für dieses <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClearChildren">
      <MemberSignature Language="C#" Value="protected virtual void OnClearChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird aufgerufen, wenn die Auflistung von untergeordneten Elementen vom Basistyp gelöscht wird <see cref="T:System.Windows.Controls.Panel" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsChanged (object sender, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsChanged(object sender, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Das <see cref="T:System.Object" />, das das Ereignis ausgelöst hat.</param>
        <param name="args">Stellt Daten für das <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />-Ereignis bereit.</param>
        <summary>Wird aufgerufen, wenn die <see cref="P:System.Windows.Controls.ItemsControl.Items" /> -Auflistung, die mit zugeordnetem der <see cref="T:System.Windows.Controls.ItemsControl" /> dafür <see cref="T:System.Windows.Controls.Panel" /> Änderungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInternalChildRange">
      <MemberSignature Language="C#" Value="protected void RemoveInternalChildRange (int index, int range);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveInternalChildRange(int32 index, int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Anfangsposition des Index innerhalb der Auflistung, an der das erste untergeordnete Element entfernt wird.</param>
        <param name="range">Die Gesamtzahl der untergeordneten Elemente aus der Auflistung zu entfernen.</param>
        <summary>Entfernt die untergeordneten Elemente aus der <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine bessere Leistung für <xref:System.Windows.Controls.Panel> Elemente, die ihre untergeordnete Sammlung virtualisiert, als die <xref:System.Windows.Controls.UIElementCollection.RemoveRange%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ScrollUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ScrollUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCacheLength">
      <MemberSignature Language="C#" Value="public static void SetCacheLength (System.Windows.DependencyObject element, System.Windows.Controls.VirtualizationCacheLength value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCacheLength(class System.Windows.DependencyObject element, valuetype System.Windows.Controls.VirtualizationCacheLength value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das die Eigenschaft auf festgelegt.</param>
        <param name="value">Die Größe des Caches vor und nach den Viewport bei der <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert wird.</param>
        <summary>Legt die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" />-Eigenschaft fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Cache ist der Platz über bzw. unter dem Viewport, in dem keine Elemente virtualisiert werden. Verwenden Sie einen Cache zu generieren vermeiden [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente, wie sie einen Bildlauf angezeigt werden.  Die <xref:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit%2A>-Eigenschaft legt die von <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A> verwendete Maßeinheit fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCacheLengthUnit">
      <MemberSignature Language="C#" Value="public static void SetCacheLengthUnit (System.Windows.DependencyObject element, System.Windows.Controls.VirtualizationCacheLengthUnit value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCacheLengthUnit(class System.Windows.DependencyObject element, valuetype System.Windows.Controls.VirtualizationCacheLengthUnit value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.VirtualizationCacheLengthUnit" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das die Eigenschaft auf festgelegt.</param>
        <param name="value">Der Typ der Einheit, die von verwendet wird, die <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> Eigenschaft.</param>
        <summary>Legt die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" />-Eigenschaft fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsContainerVirtualizable">
      <MemberSignature Language="C#" Value="public static void SetIsContainerVirtualizable (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsContainerVirtualizable(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das die Eigenschaft auf festgelegt.</param>
        <param name="value">
          <see langword="true" />Gibt an, dass die <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisieren, sollte ein Element ist, andernfalls <see langword="false" />.</param>
        <summary>Legt die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" />-Eigenschaft fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsVirtualizing">
      <MemberSignature Language="C#" Value="public static void SetIsVirtualizing (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsVirtualizing(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das auf den Wert der angefügten Eigenschaft festgelegt ist.</param>
        <param name="value">
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> wird andernfalls virtualisierender <see langword="false" />.</param>
        <summary>Legt den Wert für die <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> -Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsVirtualizingWhenGrouping">
      <MemberSignature Language="C#" Value="public static void SetIsVirtualizingWhenGrouping (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsVirtualizingWhenGrouping(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das die Eigenschaft auf festgelegt.</param>
        <param name="value">
          <see langword="true" />angeben, dass die <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert die gruppierten Elemente in der Auflistung befindet, andernfalls <see langword="false" />.</param>
        <summary>Legt die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" />-Eigenschaft fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScrollUnit">
      <MemberSignature Language="C#" Value="public static void SetScrollUnit (System.Windows.DependencyObject element, System.Windows.Controls.ScrollUnit value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetScrollUnit(class System.Windows.DependencyObject element, valuetype System.Windows.Controls.ScrollUnit value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.ScrollUnit" />
      </Parameters>
      <Docs>
        <param name="element">Das Objekt, das die Eigenschaft auf festgelegt.</param>
        <param name="value">Ein Wert, der angibt, ob das Durchführen eines Bildlaufs als Elemente in der Auflistung oder Pixel gemessen wird.</param>
        <summary>Legt die angefügte <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" />-Eigenschaft fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVirtualizationMode">
      <MemberSignature Language="C#" Value="public static void SetVirtualizationMode (System.Windows.DependencyObject element, System.Windows.Controls.VirtualizationMode value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetVirtualizationMode(class System.Windows.DependencyObject element, valuetype System.Windows.Controls.VirtualizationMode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.VirtualizationMode" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, für das Festlegen der <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> Eigenschaft.</param>
        <param name="value">Einer der Enumerationswerte, der angibt, ob <c>Element</c> Container Wiederverwendung verwendet.</param>
        <summary>Legt die <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> -Eigenschaft für das angegebene Objekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldItemsChangeAffectLayout">
      <MemberSignature Language="C#" Value="public bool ShouldItemsChangeAffectLayout (bool areItemChangesLocal, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldItemsChangeAffectLayout(bool areItemChangesLocal, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="areItemChangesLocal" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="areItemChangesLocal">
          <see langword="true" />Wenn das geänderte Element direkt untergeordnetes Element dieses <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> das geänderte Element ist eine indirekte Nachfolger der <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
        <param name="args">Enthält Daten über das geänderte Element.</param>
        <summary>Gibt einen Wert, der angibt, ob eine geänderte Element in einer <see cref="T:System.Windows.Controls.ItemsControl" /> wirkt sich auf das Layout für diesen Bereich.</summary>
        <returns>
          <see langword="true" />Wenn das geänderte Element in einer <see cref="T:System.Windows.Controls.ItemsControl" /> wirkt sich auf das Layout für diesen Bereich; anderenfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldItemsChangeAffectLayoutCore">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldItemsChangeAffectLayoutCore (bool areItemChangesLocal, System.Windows.Controls.Primitives.ItemsChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldItemsChangeAffectLayoutCore(bool areItemChangesLocal, class System.Windows.Controls.Primitives.ItemsChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="areItemChangesLocal" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Windows.Controls.Primitives.ItemsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="areItemChangesLocal">
          <see langword="true" />Wenn das geänderte Element direkt untergeordnetes Element dieses <see cref="T:System.Windows.Controls.VirtualizingPanel" />; <see langword="false" /> das geänderte Element ist eine indirekte Nachfolger der <see cref="T:System.Windows.Controls.VirtualizingPanel" />.</param>
        <param name="args">Enthält Daten über das geänderte Element.</param>
        <summary>Gibt einen Wert, der angibt, ob eine geänderte Element in einer <see cref="T:System.Windows.Controls.ItemsControl" /> wirkt sich auf das Layout für diesen Bereich.</summary>
        <returns>
          <see langword="true" />Wenn das geänderte Element in einer <see cref="T:System.Windows.Controls.ItemsControl" /> wirkt sich auf das Layout für diesen Bereich; anderenfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualizationModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VirtualizationModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VirtualizationModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.VirtualizingPanel.VirtualizationModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
