<Type Name="DataGrid" FullName="System.Windows.Controls.DataGrid">
  <TypeSignature Language="C#" Value="public class DataGrid : System.Windows.Controls.Primitives.MultiSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DataGrid extends System.Windows.Controls.Primitives.MultiSelector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataGrid" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MultiSelector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Steuerelement, das Daten in einem benutzerdefinierbaren Gitter anzeigt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid> Steuerelement bietet eine flexible Möglichkeit, eine Sammlung von Daten in Zeilen und Spalten anzeigen. Die <xref:System.Windows.Controls.DataGrid> integrierte Spaltentypen und eine Spalte für die Vorlage für das Hosten von benutzerdefinierten Inhalts enthält. Integrierte Zeilentyps enthält ein Dropdown-Detailbereich, die Sie verwenden können, um zusätzliche Inhalte unter den Zellenwerten anzuzeigen.  
  
## <a name="binding-to-data"></a>Binden an Daten  
 Binden der <xref:System.Windows.Controls.DataGrid> für Daten, Festlegen der <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Eigenschaft, um eine <xref:System.Collections.IEnumerable> Implementierung. Jede Zeile im Datenraster an ein Objekt in der Datenquelle gebunden ist, und jede Spalte im Datenraster an eine Eigenschaft des Datenobjekts gebunden ist. In der Reihenfolge für die <xref:System.Windows.Controls.DataGrid> Benutzeroberfläche für die automatisch aktualisiert, wenn Elemente hinzugefügt oder aus den Quelldaten entfernt der <xref:System.Windows.Controls.DataGrid> muss gebunden sein, um eine Auflistung, die implementiert die <xref:System.Collections.Specialized.INotifyCollectionChanged> Schnittstelle, wie ein <xref:System.Collections.ObjectModel.ObservableCollection%601>. Um eigenschaftsänderungen automatisch zu berücksichtigen, müssen die Objekte in der quellauflistung implementieren die <xref:System.ComponentModel.INotifyPropertyChanged> Schnittstelle. Weitere Informationen finden Sie unter [Data Binding (WPF)](~/docs/framework/wpf/data/data-binding-wpf.md).  
  
## <a name="columns"></a>Columns  
 Wird standardmäßig die <xref:System.Windows.Controls.DataGrid> Steuerelement generiert Spalten automatisch beim Festlegen der <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Eigenschaft. Der Datentyp der Spalte, die generiert wird, hängt von den Typ der Daten in der Spalte ab. In der folgenden Tabelle sind die generierten Spaltentypen aufgeführt.  
  
|Generierte Spaltentyp|Datentyp|  
|---------------------------|---------------|  
|<xref:System.Windows.Controls.DataGridTextColumn>|<xref:System.String>|  
|<xref:System.Windows.Controls.DataGridCheckBoxColumn>|<xref:System.Boolean>|  
|<xref:System.Windows.Controls.DataGridComboBoxColumn>|<xref:System.Enum>|  
|<xref:System.Windows.Controls.DataGridHyperlinkColumn>|<xref:System.Uri>|  
  
 Die folgende Abbildung zeigt die einzelnen Spaltentypen.  
  
 ![DataGrid mit allen vier Standardspaltentypen](~/add/media/ndp-datagriddefault.png "DataGrid mit allen vier Standardspaltentypen")  
  
 Wenn Spalten automatisch generiert werden, können Sie behandeln die <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> Ereignis Spalten Abbrechen, bevor sie hinzugefügt werden oder Anpassen der <xref:System.Windows.Controls.DataGrid>. Wenn Sie benutzerdefinierte Spalten und automatisch generierten Spalten zum Hinzufügen der <xref:System.Windows.Controls.DataGrid>, werden zuerst die benutzerdefinierten Spalten hinzugefügt. Um die Anzeigereihenfolge der Spalten neu anzuordnen, legen Sie die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> Eigenschaft für einzelne Spalten.  
  
 Sie können die Spalte automatische Generierung verhindern, durch Festlegen der <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> Eigenschaft `false`. Dies ist nützlich, wenn Sie möchten, erstellen und konfigurieren alle Spalten explizit.  
  
 Verwenden der <xref:System.Windows.Controls.DataGridTemplateColumn> Typ, eine benutzerdefinierte Spalte zu definieren, wenn die integrierte Spaltentypen nicht Ihren Bedürfnissen entsprechen. Die <xref:System.Windows.Controls.DataGridTemplateColumn> bietet <xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A> und <xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A> Eigenschaften, die Ihnen die Angabe von Inhalt von Vorlagen für sowohl anzeigen und Bearbeiten von Modi zu ermöglichen. Sie können z. B. eine benutzerdefinierte Spalte für Datumsangaben definieren. Die <xref:System.Windows.Controls.DataGridTemplateColumn.CellTemplate%2A> definieren konnte eine <xref:System.Windows.Controls.TextBlock> zum Anzeigen eines Datums und der <xref:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate%2A> können definieren, ein <xref:System.Windows.Controls.DatePicker> Steuerelement so bearbeiten Sie das Datum.  
  
 Sie können die <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung programmgesteuert hinzufügen, einfügen, entfernen und alle Spalten im Steuerelement zur Laufzeit ändern. Überprüfen Sie die <xref:System.Windows.Controls.DataGridColumn.IsAutoGenerated%2A> Eigenschaft, um zu bestimmen, ob eine Spalte automatisch generiert oder Benutzerdefiniert ist. Automatisch generierte Spalten wird automatisch hinzugefügt, entfernt oder erneut generiert, wenn die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> ändert.  
  
## <a name="selection"></a>Auswahl  
 Wird standardmäßig die gesamte Zeile ausgewählt ist, klickt ein Benutzer eine Zelle in einer <xref:System.Windows.Controls.DataGrid>, und Benutzer kann mehrere Zeilen auswählen. Sie können festlegen, die <xref:System.Windows.Controls.DataGrid.SelectionMode%2A> Eigenschaft, um anzugeben, ob Benutzer Zellen, vollständige Zeilen oder beides auswählen kann. Legen Sie die <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> Eigenschaft, um anzugeben, ob mehrere Zeilen oder Zellen ausgewählt werden können, oder nur Zeilen oder Zellen einzelne.  
  
 Sie erhalten Informationen zu den Zellen, die aus der ausgewählt werden die <xref:System.Windows.Controls.DataGrid.SelectedCells%2A> Eigenschaft. Erhalten Sie Informationen zu Zellen, die für die Auswahl, in geändert hat der <xref:System.Windows.Controls.SelectedCellsChangedEventArgs> von der <xref:System.Windows.Controls.DataGrid.SelectedCellsChanged> Ereignis. Rufen Sie die <xref:System.Windows.Controls.DataGrid.SelectAllCells%2A> oder <xref:System.Windows.Controls.DataGrid.UnselectAllCells%2A> Methoden, um programmgesteuert aktivieren oder deaktivieren alle Zellen. Weitere Informationen finden Sie unter [Standard Tastatur und Maus im DataGrid-Steuerelement](~/docs/framework/wpf/controls/default-keyboard-and-mouse-behavior-in-the-datagrid-control.md).  
  
## <a name="grouping-sorting-and-filtering"></a>Gruppieren, Sortieren und Filtern  
 Standardmäßig können Sie Sortieren der Elemente in einem <xref:System.Windows.Controls.DataGrid> durch Klicken auf die Spaltenüberschrift. Sie können anpassen, sortiert nach der Verarbeitung der <xref:System.Windows.Controls.DataGrid.Sorting> Ereignis. Legen Sie zum Abbrechen der standardsortierung der <xref:System.Windows.Controls.DataGridSortingEventArgs.Handled%2A> Eigenschaft `true`. Sie können auch die Quelldaten sortieren, bevor er in angezeigt wird der <xref:System.Windows.Controls.DataGrid>.  
  
 Zum Gruppieren, Sortieren und Filtern von Daten in der <xref:System.Windows.Controls.DataGrid>, binden Sie die <xref:System.Windows.Controls.DataGrid> auf eine <xref:System.ComponentModel.ICollectionView> Implementierung, die diese Vorgänge unterstützt. Sie führen dann die Vorgänge in der Auflistungsansicht. Wenn Elemente gruppiert sind, der <xref:System.Windows.Controls.DataGrid>, können Sie definieren eine <xref:System.Windows.Controls.GroupStyle> , die die Darstellung der Gruppe "Jeder" angibt. Sie gelten die <xref:System.Windows.Controls.GroupStyle> durch Hinzufügen zu den <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> Auflistung von der <xref:System.Windows.Controls.DataGrid>. Wenn Sie mehrere Gruppierungsebenen verfügen, können Sie verschiedene Formate auf jede Gruppierungsebene anwenden. Stile werden in der Reihenfolge angewendet, in denen sie definiert sind. Weitere Informationen finden Sie unter [wie: Gruppieren, Sortieren und Filtern von Daten im DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-group-sort-and-filter-data-in-the-datagrid-control.md).  
  
## <a name="editing"></a>Bearbeiten  
 Standardmäßig können Sie Elemente direkt im Bearbeiten der <xref:System.Windows.Controls.DataGrid>. Um sicherzustellen, dass die Änderungen ein Commit ausgeführt werden können und abgebrochen ordnungsgemäß, die Objekte in der <xref:System.Windows.Controls.DataGrid> implementieren müssen die <xref:System.ComponentModel.IEditableObject> Schnittstelle. Alternativ können Sie festlegen der <xref:System.Windows.Controls.DataGrid.IsReadOnly%2A> Eigenschaft `true` So deaktivieren Sie die Bearbeitung in der <xref:System.Windows.Controls.DataGrid>.  
  
 Die <xref:System.Windows.Controls.DataGrid> verfügt über integrierte Unterstützung für die folgenden Befehle zum Bearbeiten:  
  
|Befehl|Eingabebindung Standard|  
|-------------|---------------------------|  
|<xref:System.Windows.Controls.DataGrid.BeginEditCommand>|F2|  
|<xref:System.Windows.Controls.DataGrid.CancelEditCommand>|ESC|  
|<xref:System.Windows.Controls.DataGrid.CommitEditCommand>|EINGABETASTE|  
|<xref:System.Windows.Controls.DataGrid.DeleteCommand%2A>|DELETE|  
  
 Sie können Bearbeitungsmodus die aktiven Zelle abgelegt, indem Sie darauf klicken, oder F2 drücken. Eine Bearbeitung auf Zellenebene ist ein Commit ausgeführt, wenn Sie zu einer anderen Zelle in der gleichen Zeile verschieben, oder drücken Sie die EINGABETASTE, während die Zelle im Bearbeitungsmodus befindet. Alle Bearbeitungen in einer Zeile werden übernommen, wenn Sie in eine andere Zeile verschieben, oder drücken Sie die EINGABETASTE, während die Zeile im Bearbeitungsmodus befindet. Sie die Bearbeitung einer Zelle durch Drücken von ESC einmal Abbrechen und alle Bearbeitungen in einer Zeile durch Drücken der ESC-Taste zweimal Abbrechen. Weitere Informationen zum programmgesteuerten Ausführen eines Commits für und Abbrechen von Änderungen finden Sie unter der <xref:System.Windows.Controls.DataGrid.BeginEdit%2A>, <xref:System.Windows.Controls.DataGrid.CommitEdit%2A>, und <xref:System.Windows.Controls.DataGrid.CancelEdit%2A> Methoden. Weitere Informationen über Ereignisse in Zusammenhang mit bearbeiten, finden Sie unter <xref:System.Windows.Controls.DataGrid.BeginningEdit>, <xref:System.Windows.Controls.DataGrid.PreparingCellForEdit>, <xref:System.Windows.Controls.DataGrid.CellEditEnding>, und <xref:System.Windows.Controls.DataGrid.RowEditEnding>.  
  
 Legen Sie die <xref:System.Windows.Controls.DataGrid.CanUserAddRows%2A> und <xref:System.Windows.Controls.DataGrid.CanUserDeleteRows%2A> Eigenschaften zur Angabe, ob ein Benutzer kann Zeilen hinzufügen oder löschen. Ein Benutzer kann die ausgewählte Zeilen löschen, durch Drücken der ENTF-Taste. Wenn die <xref:System.Windows.Controls.DataGrid.CanUserAddRows%2A> -Eigenschaftensatz auf `true`, eine neue Elementzeile wird hinzugefügt, als die letzte Zeile in der <xref:System.Windows.Controls.DataGrid>. Sie können die Standardwerte für neue Elemente festlegen, durch Behandeln der <xref:System.Windows.Controls.DataGrid.InitializingNewItem> Ereignis.  
  
> [!NOTE]
>  Gibt an, ob Bearbeitungsaktionen zulässig sind, wird durch eine Vielzahl von weiteren Faktoren, einschließlich beeinflusst die <xref:System.Windows.Controls.DataGrid.IsReadOnly%2A> und <xref:System.Windows.UIElement.IsEnabled%2A> Status der <xref:System.Windows.Controls.DataGrid>, und gibt an, ob die zugrunde liegende Datensammlung die Aktion ermöglicht.  
  
## <a name="validation"></a>Validierung  
 Die <xref:System.Windows.Controls.DataGrid> ermöglicht es Ihnen, sowohl die Zeile der Zelle Ebene validiert. Überprüfen Sie mit Überprüfung auf Zellenebene einzelne Eigenschaften eines gebundenen Objekts aus, wenn ein Benutzer einen Wert aktualisiert. Mit Überprüfung auf Zeilenebene wird der gesamte Dataset Objekte überprüfen, wenn ein Benutzer Änderungen an einer Zeile ein Commit ausgeführt wird. Sie können angepasstes visuelles Feedback für Validierungsfehler auf Zeilenebene bereitstellen, durch Festlegen der <xref:System.Windows.Controls.DataGrid.RowValidationErrorTemplate%2A> -Eigenschaft, oder Sie können die Standard-Fehlerindikator verwenden. Um eine benutzerdefinierte Validierungsregel zu erstellen, erstellen Sie eine Klasse, die von abgeleitet ist die <xref:System.Windows.Controls.ValidationRule> Klasse und Implementieren der <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode. Fügen Sie die benutzerdefinierte Validierungsregel aus, um die <xref:System.Windows.Controls.DataGrid.RowValidationRules%2A> Auflistung.  
  
## <a name="customizing-the-datagrid-control"></a>Anpassen des DataGrid-Steuerelements  
 Die <xref:System.Windows.Controls.DataGrid> Steuerelement unterstützt allgemeine Tabelle Formatierungsoptionen, z. B. abwechselnden Zeilenhintergründe und die Möglichkeit zum Anzeigen oder Ausblenden von Headern, Gitternetzlinien, und Bildlaufleisten. Darüber hinaus bietet das Steuerelement mehrere Stil- und Eigenschaften, die Sie verwenden können, um die Darstellung des Steuerelements und seiner Zeilen, Spalten, Header und Zellen vollständig zu ändern.  
  
 Anpassen <xref:System.Windows.Controls.DataGrid> Verhalten, behandeln Sie Ereignisse für die Auswahl ändern, Bearbeiten der Zelle und Neuordnen der Spalte. Die <xref:System.Windows.Controls.DataGrid> auch mehrere Ereignisse verfügbar macht, für die Zeile, die Wiederverwendung, die Sie behandeln kann, um Zeilen anzupassen.  
  
 Zum Anwenden der gleichen eigenschafteneinstellungen mit mehreren <xref:System.Windows.Controls.DataGrid> -Steuerelemente verwenden die <xref:System.Windows.FrameworkElement.Style%2A> Eigenschaft. Sie können den Standardwert ändern <xref:System.Windows.Controls.ControlTemplate> auf dem Steuerelement ein einzigartiges aussehen zu verleihen. Weitere Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate>, finden Sie unter [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Um anzuzeigen, die Teile und Zustände, die spezifisch für die <xref:System.Windows.Controls.DataGrid>, finden Sie unter [DataGrid-Stile und Vorlagen](~/docs/framework/wpf/controls/datagrid-styles-and-templates.md).  
  
 Abhängigkeitseigenschaften für dieses Steuerelement können vom Standardformat für das Steuerelement festgelegt werden. Wenn eine Eigenschaft von einem Standardformat festgelegt ist, kann die Eigenschaft von seinem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird. Das Standardformat wird bestimmt, welche desktop Design verwendet wird, wenn die Anwendung ausgeführt wird. Weitere Informationen finden Sie unter [Standard-WPF-Designs](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Festlegen einer visuellen Eigenschaft haben nur Auswirkungen, wenn diese Eigenschaft in das DataGrid-Steuerelement-Standardvorlage vorhanden ist und mit festgelegt ist ein. Sie finden eine Liste der Eigenschaften visueller Elemente im Abschnitt "Ändern der visuellen Struktur eines Steuerelements" [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
## <a name="common-tasks"></a>Allgemeine Aufgaben  
 Die folgende Tabelle enthält Informationen zu Aufgaben, die in der Regel zugeordnet sind die <xref:System.Windows.Controls.DataGrid>.  
  
|Aufgabe|Implementierung|  
|----------|--------------------|  
|Festlegen von abwechselnden Zeilenhintergrundfarben|Festlegen der <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> -Eigenschaft auf 2 oder mehr, und weisen Sie ihm eine <xref:System.Windows.Media.Brush> auf die <xref:System.Windows.Controls.DataGrid.RowBackground%2A> und <xref:System.Windows.Controls.DataGrid.AlternatingRowBackground%2A> Eigenschaften.|  
|Definieren von Zellen- und Auswahlverhalten|Legen Sie für die Eigenschaften <xref:System.Windows.Controls.DataGrid.SelectionMode%2A> und <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> fest.|  
|Anpassen des Erscheinungsbilds von Headern, Zellen und Zeilen|Wenden Sie ein neues <xref:System.Windows.Style> auf die <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A>, <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A>, <xref:System.Windows.Controls.DataGrid.CellStyle%2A>, oder <xref:System.Windows.Controls.DataGrid.RowStyle%2A> Eigenschaften.|  
|Festlegen von Größenänderungsoptionen|Legen Sie die <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.MaxHeight%2A>, <xref:System.Windows.FrameworkElement.MinHeight%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.MaxWidth%2A>, oder <xref:System.Windows.FrameworkElement.MinWidth%2A> Eigenschaften. Weitere Informationen finden Sie unter [Größenänderungsoptionen im DataGrid-Steuerelement](~/docs/framework/wpf/controls/sizing-options-in-the-datagrid-control.md).|  
|Zugreifen auf ausgewählte Elemente|Überprüfen Sie die <xref:System.Windows.Controls.DataGrid.SelectedCells%2A> Eigenschaft, um die ausgewählten Zellen abzurufen, und überprüfen Sie die <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> Eigenschaft, um die ausgewählten Zeilen abzurufen. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.DataGrid.SelectedCells%2A>-Eigenschaft.|  
|Anpassen von Endbenutzerinteraktionen|Legen Sie die <xref:System.Windows.Controls.DataGrid.CanUserAddRows%2A>, <xref:System.Windows.Controls.DataGrid.CanUserDeleteRows%2A>, <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A>, <xref:System.Windows.Controls.DataGrid.CanUserResizeColumns%2A>, <xref:System.Windows.Controls.DataGrid.CanUserResizeRows%2A>, und <xref:System.Windows.Controls.DataGrid.CanUserSortColumns%2A> Eigenschaften.|  
|"Abbrechen", oder Ändern von automatisch generierten Spalten|Behandeln der <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> Ereignis.|  
|Fixieren einer Spalte|Legen Sie die <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> -Eigenschaft auf 1 und verschieben Sie die Spalte in die linke Position durch Festlegen der <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> Eigenschaft auf 0.|  
|Verwenden von XML-Daten als Datenquelle|Binden der <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> auf die <xref:System.Windows.Controls.DataGrid> der XPath-Abfrage, die die Auflistung von Elementen darstellt. Erstellen Sie jede Spalte in der <xref:System.Windows.Controls.DataGrid>. Binden Sie jede Spalte, durch Festlegen der XPath-Ausdruck für die Bindung an die Abfrage, die auf die Quelle für die Eigenschaft abruft. Ein Beispiel finden Sie unter <xref:System.Windows.Controls.DataGridTextColumn>.|  
|Gruppieren von Elementen|Binden an einen <xref:System.Windows.Data.CollectionView> oder <xref:System.Windows.Data.CollectionViewSource> , die Gruppieren unterstützt. Weitere Informationen finden Sie unter [wie: Gruppieren, Sortieren und Filtern von Daten im DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-group-sort-and-filter-data-in-the-datagrid-control.md).|  
|Zeigen Sie im Detailbereich für eine Zeile|Definieren einer <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> die Darstellung im Abschnitt Details angeben. Legen Sie die <xref:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode%2A> angeben, wenn der Abschnitt "Details" angezeigt wird. Weitere Informationen finden Sie unter [wie: Hinzufügen von Zeilendetails zu einem DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-add-row-details-to-a-datagrid-control.md).|  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Binden einer <xref:System.Windows.Controls.DataGrid> auf eine <xref:System.Data.DataTable> und verwenden Sie die automatische Generierung von Spalten. Die <xref:System.Data.DataTable> werden ausgefüllt, indem Sie mit der <xref:System.Data.Common.DataAdapter.Fill%2A> Methode eine <xref:System.Data.Common.DataAdapter> aus einer <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Erstellen eines Datasets](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-dataset.md) und [Auffüllen eines Datasets mit "DataAdapter"](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Verwenden der [!INCLUDE[wpfdesigner_current_long](~/includes/wpfdesigner-current-long-md.md)], finden Sie unter [Binden von WPF-Steuerelementen an Daten in Visual Studio](http://msdn.microsoft.com/library/00dd5147-db0b-4b59-8d6c-8229b09ca9dd).  
  
 [!code-xaml[DataGrid1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid1/csharp/window1.xaml#1)]  
  
 [!code-csharp[DataGrid1#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid1/csharp/window1.xaml.cs#2)]
 [!code-vb[DataGrid1#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid1/vb/window1.xaml.vb#2)]  
  
 Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Windows.Controls.DataGrid> mit einer benutzerdefinierten <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung.  
  
 [!code-xaml[DataGrid_CustomColumns#All1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml#all1)]  
  
 [!code-csharp[DataGrid_CustomColumns#Using](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#using)]
 [!code-vb[DataGrid_CustomColumns#Using](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#using)]  
[!code-csharp[DataGrid_CustomColumns#Top](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#top)]
[!code-vb[DataGrid_CustomColumns#Top](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#top)]  
[!code-csharp[DataGrid_CustomColumns#All2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#all2)]
[!code-vb[DataGrid_CustomColumns#All2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#all2)]  
[!code-csharp[DataGrid_CustomColumns#CustomerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#customerclass)]
[!code-vb[DataGrid_CustomColumns#CustomerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#customerclass)]  
[!code-csharp[DataGrid_CustomColumns#AllEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#allend)]
[!code-vb[DataGrid_CustomColumns#AllEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#allend)]  
[!code-csharp[DataGrid_CustomColumns#Enum](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#enum)]
[!code-vb[DataGrid_CustomColumns#Enum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#enum)]  
[!code-csharp[DataGrid_CustomColumns#Hyperlink3](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_customcolumns/csharp/window1.xaml.cs#hyperlink3)]
[!code-vb[DataGrid_CustomColumns#Hyperlink3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_customcolumns/vb/window1.xaml.vb#hyperlink3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.DataGrid" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddingNewItem">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.AddingNewItemEventArgs&gt; AddingNewItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.AddingNewItemEventArgs&gt; AddingNewItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.AddingNewItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.AddingNewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor ein neues Element hinzugefügt wird die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush AlternatingRowBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush AlternatingRowBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt diese fest des Hintergrundpinsels für die Verwendung sich abwechselnden Zeilen.</summary>
        <value>Die <see cref="T:System.Windows.Media.Brush" /> , zeichnet den Hintergrund des jeder n-te Zeile, in dem n wird, durch definiert, die <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> Eigenschaft. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid.AlternatingRowBackground%2A>, <xref:System.Windows.Controls.DataGrid.RowBackground%2A>, und <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> Eigenschaften zusammen bestimmen die Darstellung des jede Zeile im Hintergrund.  
  
 Wenn <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> ist kleiner als 2, Festlegen der <xref:System.Windows.Controls.DataGrid.AlternatingRowBackground%2A> Eigenschaftensätze <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> auf 2.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie festzulegende abwechselnde Zeilenhintergrundfarben auf die <xref:System.Windows.Controls.DataGrid>.  
  
 [!code-xaml[DataGrid1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid1/csharp/window1.xaml#1)]  
  
 Die folgende Abbildung zeigt, wie dieser Code sucht, wenn er ausgeführt wird.  
  
 ![Drei abwechselnde Farben für den Zeilenhintergrund](~/add/media/wpf-alternatingrowback.png "drei abwechselnde Farben für den Zeilenhintergrund")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternatingRowBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternatingRowBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreRowDetailsFrozen">
      <MemberSignature Language="C#" Value="public bool AreRowDetailsFrozen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreRowDetailsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Zeilendetails horizontal gescrollt werden können.</summary>
        <value>
          <see langword="true" />Wenn Zeilendetails Bildlauf durchgeführt werden können; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="false" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf `true` um sicherzustellen, dass der Inhalt der Zeile Detailabschnitte nicht aus der Sicht ein horizontaler Bildlauf durchgeführt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreRowDetailsFrozenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreRowDetailsFrozenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreRowDetailsFrozenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Spalten automatisch erstellt werden.</summary>
        <value>
          <see langword="true" />Wenn Spalten automatisch erstellt werden. andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen von <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> auf `true` oder `false` erstellt oder entfernt automatisch generierte Spalten. Wenn die <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> -Eigenschaftensatz auf `true`, die <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> Ereignis wird für jede Spalte, die erstellt wird. Sie können ändern, oder brechen Sie die Spalte erstellt wird, der <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> -Ereignishandler.  
  
 Nach Abschluss der automatischen Generierung aller Spalten wird die <xref:System.Windows.Controls.DataGrid.AutoGeneratedColumns> Ereignis wird ausgelöst.  
  
> [!NOTE]
>  <xref:System.Windows.Controls.DataGrid>kann nicht automatisch Spalten generieren, wenn die Quelle XML-Daten ist. In diesem Fall erstellen Sie einen benutzerdefinierten <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung. Ein Beispiel finden Sie unter <xref:System.Windows.Controls.DataGridTextColumn>.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie Spalten automatisch generiert, und ändern die Spalten zum Zeitpunkt der Erstellung in der <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> -Ereignishandler.  
  
 [!code-xaml[DataGrid_AutoGenColumns#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_autogencolumns/cs/datagrid_autogencolumns/window1.xaml#1)]  
  
 [!code-csharp[DataGrid_AutoGenColumns#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_autogencolumns/cs/datagrid_autogencolumns/window1.xaml.cs#2)]
 [!code-vb[DataGrid_AutoGenColumns#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_autogencolumns/vb/datagrid_autogencolumns_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumnsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoGenerateColumnsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoGenerateColumnsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGeneratedColumns">
      <MemberSignature Language="C#" Value="public event EventHandler AutoGeneratedColumns;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoGeneratedColumns" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn automatische Generierung aller Spalten abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> -Eigenschaftensatz auf `true`die <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> Ereignis wird für jede Spalte erstellt. Wenn alle Spalten erstellt werden, wird dieses Ereignis auftreten.  
  
> [!NOTE]
>  Die <xref:System.Windows.Controls.DataGrid.AutoGeneratedColumns> Ereignis wird jedes Mal ausgelöst, wenn die <xref:System.Windows.Controls.DataGrid> versucht, Spalten zu generieren. Beispielsweise <xref:System.Windows.Controls.DataGrid.AutoGeneratedColumns> ausgelöst wird, wenn die <xref:System.Windows.Controls.DataGrid> initialisiert wird, <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> auf festgelegt ist `true`, oder die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> geändert wird, auch wenn die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> ist `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGeneratingColumn">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs&gt; AutoGeneratingColumn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs&gt; AutoGeneratingColumn" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine einzelne Spalte automatisch generiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können ändern, oder brechen Sie die Spalte erstellt wird, der <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> -Ereignishandler.  
  
 Wenn alle Spalten automatisch generiert, werden die <xref:System.Windows.Controls.DataGrid.AutoGeneratedColumns> Ereignis auftritt.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie Spalten automatisch generiert, und ändern die Spalten zum Zeitpunkt der Erstellung in der <xref:System.Windows.Controls.DataGrid.AutoGeneratingColumn> -Ereignishandler.  
  
 [!code-xaml[DataGrid_AutoGenColumns#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_autogencolumns/cs/datagrid_autogencolumns/window1.xaml#1)]  
  
 [!code-csharp[DataGrid_AutoGenColumns#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_autogencolumns/cs/datagrid_autogencolumns/window1.xaml.cs#2)]
 [!code-vb[DataGrid_AutoGenColumns#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_autogencolumns/vb/datagrid_autogencolumns_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public bool BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.BeginEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> Befehl, der die aktive Zelle oder Zeile in den Bearbeitungsmodus abgelegt werden.</summary>
        <returns>
          <see langword="true" />Wenn die aktive Zelle oder Zeile eingibt Bearbeitungsmodus; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Befehl aktiviert ist, wird dadurch die <xref:System.Windows.Controls.DataGrid.BeginningEdit> und <xref:System.Windows.Controls.DataGrid.PreparingCellForEdit> Außerkraftsetzungen und Ereignisse auftreten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public bool BeginEdit (System.Windows.RoutedEventArgs editingEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool BeginEdit(class System.Windows.RoutedEventArgs editingEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingEventArgs" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="editingEventArgs">Wenn Sie von einem Ereignishandler, die Ereignisargumente aufgerufen wird. Kann <see langword="null" /> sein.</param>
        <summary>Ruft die <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> Befehl, der die aktive Zelle oder Zeile in den Bearbeitungsmodus abgelegt werden.</summary>
        <returns>
          <see langword="true" />Wenn die aktive Zelle oder Zeile eingibt Bearbeitungsmodus; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Befehl aktiviert ist, wird dadurch die <xref:System.Windows.Controls.DataGrid.BeginningEdit> und <xref:System.Windows.Controls.DataGrid.PreparingCellForEdit> Außerkraftsetzungen und Ereignisse auftreten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEditCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand BeginEditCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand BeginEditCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.BeginEditCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Befehl, der die Absicht an, mit dem Bearbeiten der aktuellen Zelle oder Zeile beginnen angibt der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginningEdit">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridBeginningEditEventArgs&gt; BeginningEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridBeginningEditEventArgs&gt; BeginningEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.BeginningEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridBeginningEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor eine Zeile oder Zelle den Bearbeitungsmodus wechselt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis können Sie die spezielle Verarbeitungsschritte vor einer Zelle oder Zeile in den Bearbeitungsmodus wechselt. Dieses Ereignis bietet darüber hinaus Informationen über die Tastatur oder Maus Geste, die verwendet wurde, bearbeiten-Modus und erhalten Sie die Möglichkeit, durch das Abbrechen der Bearbeitungsmodus eingeben.  
  
 Wenn dieses Ereignis nicht abgebrochen wird, die <xref:System.Windows.Controls.DataGrid.PreparingCellForEdit> Ereignis wird ausgelöst, wenn dieses Ereignis abgeschlossen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.CancelEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> -Befehl für die Zelle oder Zeile, die derzeit im Bearbeitungsmodus befindet.</summary>
        <returns>
          <see langword="true" />Wenn der Bearbeitungsmodus für die aktuelle Zelle oder Zeile wird beendet oder es sind keine Zellen oder Zeilen in den Bearbeitungsmodus; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Zelle derzeit im Bearbeitungsmodus befindet, ist die <xref:System.Windows.Controls.DataGrid.CancelEdit%2A> -Methode bricht die Bearbeitung der Zelle, aber keine ausstehenden Bearbeitungen der Zeile ab. Wenn eine Zelle nicht in den Bearbeitungsmodus wechseln, ist <xref:System.Windows.Controls.DataGrid.CancelEdit%2A> bricht alle ausstehenden Zeile Bearbeitungen ab.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit (System.Windows.Controls.DataGridEditingUnit editingUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit(valuetype System.Windows.Controls.DataGridEditingUnit editingUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingUnit" Type="System.Windows.Controls.DataGridEditingUnit" />
      </Parameters>
      <Docs>
        <param name="editingUnit">Einer der Enumerationswerte, der angibt, ob die Zeilen- oder Zellenebene Bearbeitungen "Abbrechen".</param>
        <summary>Ruft die <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> -Befehl für die angegebene Zelle oder Zeile im Bearbeitungsmodus befindet.</summary>
        <returns>
          <see langword="true" />Wenn die aktive Zelle oder Zeile den Bearbeitungsmodus verlässt; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode zurückgesetzt werden alle ausstehenden Änderungen für die angegebene bearbeiten <xref:System.Windows.Controls.DataGridEditingUnit> und den Bearbeitungsmodus verlässt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEditCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand CancelEditCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand CancelEditCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CancelEditCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Befehl, der gibt an, dass alle ausstehenden Änderungen an der aktiven Zelle oder Zeile abbrechen und in den Zustand vor dem Zurücksetzen der <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> -Befehl wurde ausgeführt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserAddRows">
      <MemberSignature Language="C#" Value="public bool CanUserAddRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserAddRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserAddRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer neue Zeilen hinzufügen kann die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>
          <see langword="true" />Wenn der Benutzer neue Zeilen hinzufügen kann; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt wird, um `true` wird eine leere Zeile am unteren Rand der <xref:System.Windows.Controls.DataGrid>. Ein Benutzer kann ein neues Element in die leere Zeile eingeben. Hinzufügen einer neuen Zeile Fügt ein Element aus, um die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>. Sie können die Standardwerte für das neue Element festlegen, durch Behandeln der <xref:System.Windows.Controls.DataGrid.InitializingNewItem> Ereignis und die Werte programmgesteuert festlegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserAddRowsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserAddRowsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserAddRowsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserAddRowsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserDeleteRows">
      <MemberSignature Language="C#" Value="public bool CanUserDeleteRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserDeleteRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer Zeilen löschen kann das <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>
          <see langword="true" />, wenn Zeilen gelöscht werden können, andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig kann der Benutzer Zeilen löschen, indem Sie eine oder mehrere Zeilen auswählen und die ENTF-Taste drücken. Das Löschen einer Zeile entfernt das Element, das die Zeile darstellt, aus der <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>. Wenn die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> lässt nicht zu löschen, der Benutzer kann keine Zeilen löschen, auch wenn diese Eigenschaft, um festgelegt wird `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserDeleteRowsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserDeleteRowsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserDeleteRowsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserDeleteRowsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserReorderColumns">
      <MemberSignature Language="C#" Value="public bool CanUserReorderColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserReorderColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer die Anzeigereihenfolge der Spalte ändern kann, indem Sie die Spaltenheader mit der Maus ziehen.</summary>
        <value>
          <see langword="true" />Wenn der Benutzer Spalten neu anordnen kann; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese neu anordnen Verhalten für einzelne Spalten festlegen, durch Festlegen der <xref:System.Windows.Controls.DataGridColumn.CanUserReorder%2A?displayProperty=nameWithType> Eigenschaft. Wenn die <xref:System.Windows.Controls.DataGridColumn.CanUserReorder%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A?displayProperty=nameWithType> Eigenschaft festgelegt werden, einen Wert von `false` Vorrang vor den Wert `true`.  
  
 Spalten fixiert werden können, durch Festlegen der <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> Eigenschaft größer als 0. Fixierte Spalten sind immer die am weitesten links stehende Spalten in der Reihenfolge angezeigt werden. Nicht fixierte Spalten in der Gruppe der nicht fixierten Spalten ziehen oder ziehen Sie den nicht fixierte Spalten in der Gruppe der fixierten Spalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserReorderColumnsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserReorderColumnsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserReorderColumnsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserResizeColumns">
      <MemberSignature Language="C#" Value="public bool CanUserResizeColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserResizeColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer die Breite der Spalten anpassen kann, indem Sie mit der Maus.</summary>
        <value>
          <see langword="true" />Wenn der Benutzer die Spaltenbreite angepasst werden kann; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich nicht, ob die Spaltenbreite programmgesteuert, z. B. geändert werden können durch Ändern der <xref:System.Windows.Controls.DataGridColumn.Width%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Sie können dieses Verhalten ändern der Größe für einzelne Spalten festlegen, durch Festlegen der <xref:System.Windows.Controls.DataGridColumn.CanUserResize%2A?displayProperty=nameWithType> Eigenschaft. Wenn die <xref:System.Windows.Controls.DataGridColumn.CanUserResize%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Windows.Controls.DataGrid.CanUserResizeColumns%2A?displayProperty=nameWithType> Eigenschaft festgelegt werden, einen Wert von `false` hat Vorrang vor einem Wert von `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserResizeColumnsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserResizeColumnsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserResizeColumnsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserResizeRows">
      <MemberSignature Language="C#" Value="public bool CanUserResizeRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserResizeRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserResizeRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer die Höhe der Zeilen mit der Maus anpassen kann.</summary>
        <value>
          <see langword="true" />Wenn der Benutzer die Höhe der Zeilen ändern kann. andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich nicht, ob die Höhe der Zeilen programmgesteuert, z. B. geändert werden kann durch Ändern der <xref:System.Windows.Controls.DataGrid.RowHeight%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserResizeRowsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserResizeRowsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserResizeRowsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserResizeRowsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserSortColumns">
      <MemberSignature Language="C#" Value="public bool CanUserSortColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUserSortColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CanUserSortColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer Spalten sortieren kann, indem Sie auf die Spaltenüberschrift.</summary>
        <value>
          <see langword="true" />Wenn der Benutzer die Spalten sortieren andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können festlegen, Sortierverhalten für einzelne Spalten durch Festlegen der <xref:System.Windows.Controls.DataGridColumn.CanUserSort%2A?displayProperty=nameWithType> Eigenschaft. Wenn die <xref:System.Windows.Controls.DataGridColumn.CanUserSort%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Windows.Controls.DataGrid.CanUserSortColumns%2A?displayProperty=nameWithType> Eigenschaft festgelegt werden, einen Wert von `false` hat Vorrang vor einem Wert von `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUserSortColumnsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanUserSortColumnsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanUserSortColumnsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellEditEnding">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridCellEditEndingEventArgs&gt; CellEditEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridCellEditEndingEventArgs&gt; CellEditEnding" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.CellEditEnding" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridCellEditEndingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor die Bearbeitung einer Zelle ein Commit oder abgebrochen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis abbrechen, indem die <xref:System.Windows.Controls.DataGridCellEditEndingEventArgs.Cancel%2A> Eigenschaft der `e` Argument `true` im Ereignishandler. Wenn abgebrochen, bleibt die Zelle im Bearbeitungsmodus befindet.  
  
 Wenn dieses Ereignis nicht abgebrochen wird, den angegebenen <xref:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction%2A> wird ausgeführt werden, um einen commit oder die Bearbeitung abgebrochen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellsPanelHorizontalOffset">
      <MemberSignature Language="C#" Value="public double CellsPanelHorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CellsPanelHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den horizontalen Offset für die <see cref="T:System.Windows.Controls.DataGridCellsPanel" />.</summary>
        <value>Der horizontale Offset für den Zellenbereich. Der registrierte Standardwert ist 0,0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGridCellsPanel> ist der Layoutcontainer für Zeilen. Beim Durchführen eines Bildlaufs, müssen die Bereiche berechnet einen Offset, um zu ermitteln, welcher Teil des Bereichs in der Viewport angezeigt werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellsPanelHorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellsPanelHorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellsPanelHorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Stil für alle Zellen in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Das Format für die Zellen in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden einer <xref:System.Windows.Style> aktualisieren Sie die visuelle Darstellung der Zellen in der <xref:System.Windows.Controls.DataGrid>. Definieren einer <xref:System.Windows.Style> für eine Zelle, geben Sie einen <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.DataGridCell>.  
  
 Ein <xref:System.Windows.Style> kann auf eine Zelle auf den Tabellen-, Spalten- oder Zellenebene angewendet werden. Anwenden einer <xref:System.Windows.Style> legen Sie für alle Zellen in einer Spalte der <xref:System.Windows.Controls.DataGridColumn.CellStyle%2A?displayProperty=nameWithType> Eigenschaft. Dies hat Vorrang gegenüber der <xref:System.Windows.Controls.DataGrid.CellStyle%2A?displayProperty=nameWithType> Eigenschaft. Anwenden einer <xref:System.Windows.Style> auf eine einzelne Zelle festgelegt die <xref:System.Windows.FrameworkElement.Style%2A> -Eigenschaft direkt auf die <xref:System.Windows.Controls.DataGridCell>. Dadurch werden alle anderen Formate, auf die Zelle angewendeten Vorrang.  
  
   
  
## Examples  
 Im folgenden Beispiel wird einen Trigger so ändern Sie die <xref:System.Windows.Controls.Control.Background%2A> Farbe ein <xref:System.Windows.Controls.DataGridCell> Wenn die Zelle ausgewählt ist.  
  
 [!code-xaml[DataGrid_CellStyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_cellstyle/CS/window1.xaml#1)]   
  
 Die folgende Abbildung zeigt die Ausgabe an.  
  
 ![Eine ausgewählte Zelle mit einem grünen Hintergrund](~/add/media/ndp-wpf-cellstyle.png "eine ausgewählte Zelle mit einem grünen Hintergrund")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CellStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CellStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Die <see cref="T:System.Windows.Controls.DataGridRow" /> zu deaktivieren.</param>
        <param name="item">Das Datenelement, das die Zeile enthält.</param>
        <summary>Entlädt die Zeile für das angegebene Element.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDetailsVisibilityForItem">
      <MemberSignature Language="C#" Value="public void ClearDetailsVisibilityForItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearDetailsVisibilityForItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.ClearDetailsVisibilityForItem(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das Datenelement in der Zeile für die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> deaktiviert ist.</param>
        <summary>Löscht die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> -Eigenschaft für die <see cref="T:System.Windows.Controls.DataGridRow" /> , die das angegebenen Datenelement darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Löschen den Wert wiederhergestellt nicht unbedingt die standardsichtbarkeit. Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridClipboardCopyMode ClipboardCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridClipboardCopyMode ClipboardCopyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridClipboardCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, wie Inhalt in die Zwischenablage kopiert werden.</summary>
        <value>Einer der Enumerationswerte, der angibt, wie Inhalt in die Zwischenablage kopiert werden. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft angeben, ob Benutzer Daten kopieren können ein <xref:System.Windows.Controls.DataGrid> Steuerelement in die Zwischenablage, und gibt an, ob der Header Spaltenwerte enthalten sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipboardCopyModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipboardCopyModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridColumnEventArgs&gt; ColumnDisplayIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridColumnEventArgs&gt; ColumnDisplayIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridColumnEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> Eigenschaft von einem <xref:System.Windows.Controls.DataGridColumn> programmgesteuert geändert werden kann oder wenn ein Benutzer eine Spalte durch Ziehen des Headers bewegt. Benutzer können die Spaltenreihenfolge ändern, indem Sie die Spaltenüberschriften ziehen, nur dann, wenn die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A> Eigenschaft ist `true`.  
  
 Wenn die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> einer Spalte ändert, die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> aller Spalten rechts von der Spalte in der <xref:System.Windows.Controls.DataGrid> werden ebenfalls geändert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnFromDisplayIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridColumn ColumnFromDisplayIndex (int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.DataGridColumn ColumnFromDisplayIndex(int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.ColumnFromDisplayIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="displayIndex">Der nullbasierte Index der abzurufenden Spalte.</param>
        <summary>Ruft den <see cref="T:System.Windows.Controls.DataGridColumn" /> am angegebenen Index ab.</summary>
        <returns>Die <see cref="T:System.Windows.Controls.DataGridColumn" /> an der angegebenen <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="displayIndex" />ist kleiner als 0 oder größer als oder gleich der Anzahl der Spalten an.</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderDragCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.Primitives.DragCompletedEventArgs&gt; ColumnHeaderDragCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.Primitives.DragCompletedEventArgs&gt; ColumnHeaderDragCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.Primitives.DragCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer einen Spaltenheader freigibt, nachdem es mit der Maus ziehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer können die Spaltenreihenfolge ändern, indem Sie die Spaltenüberschriften ziehen, nur dann, wenn die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A> Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderDragDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.Primitives.DragDeltaEventArgs&gt; ColumnHeaderDragDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.Primitives.DragDeltaEventArgs&gt; ColumnHeaderDragDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.Primitives.DragDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt jedes Mal, wenn die Position des Mauszeigers ändert, während der Benutzer einen Spaltenheader zieht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer können die Spaltenreihenfolge ändern, indem Sie die Spaltenüberschriften ziehen, nur dann, wenn die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A> Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderDragStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.Primitives.DragStartedEventArgs&gt; ColumnHeaderDragStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.Primitives.DragStartedEventArgs&gt; ColumnHeaderDragStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.Primitives.DragStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer beginnt, einen Spaltenheader mit der Maus ziehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer können die Spaltenreihenfolge ändern, indem Sie die Spaltenüberschriften ziehen, nur dann, wenn die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A> Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderHeight">
      <MemberSignature Language="C#" Value="public double ColumnHeaderHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnHeaderHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Höhe der Spaltenheaderzeile fest.</summary>
        <value>Die Höhe der Spaltenheader-Zeile in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist <see cref="F:System.Double.NaN" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf <xref:System.Double.NaN> um die Größe des Spaltenheaders automatisch anpassen, um ihren Inhalt zu machen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnHeaderHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnHeaderHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ColumnHeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ColumnHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Stil für alle Spaltenüberschriften in die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Das Format für alle Spaltenüberschriften in die <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden einer <xref:System.Windows.Style> aktualisieren Sie die visuelle Darstellung aller Spaltenköpfe in der <xref:System.Windows.Controls.DataGrid>. Zum Definieren einer <xref:System.Windows.Style> Geben Sie für eine Spaltenüberschrift ein <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.Primitives.DataGridColumnHeader>.  
  
 Ein <xref:System.Windows.Style> kann angewendet werden, um alle Spaltenüberschriften oder einen einzelnen Spaltenheader. Anwenden einer <xref:System.Windows.Style> auf einem einzelnen Header festgelegt die <xref:System.Windows.Controls.DataGridColumn.HeaderStyle%2A?displayProperty=nameWithType> -Eigenschaft, die Vorrang vor der <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Stilressource so ändern Sie den Stil der Spaltenüberschriften der <xref:System.Windows.Controls.DataGrid>. Der Stil der Überschrift der ersten Spalte legen Sie dann mit Inlineformatvorlage überschreibt die <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A?displayProperty=nameWithType>.  
  
 [!code-xaml[DataGrid_ColumnHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnheaderstyle/CS/mainwindow.xaml#1)]   
  
 Die folgende Abbildung zeigt die Ausgabe an.  
  
 ![DataGrid-Spaltenheader formatiert](~/add/media/wpf-datagridcolumnheader.png "formatiert DataGrid-Spaltenheader")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnHeaderStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnHeaderStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridColumnEventArgs&gt; ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridColumnEventArgs&gt; ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnReordered" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridColumnEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Spalte auf eine neue Position in der Anzeigereihenfolge verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Benutzer können die Spaltenreihenfolge ändern, indem Sie die Spaltenüberschriften ziehen, nur dann, wenn die <xref:System.Windows.Controls.DataGrid.CanUserReorderColumns%2A> Eigenschaft ist `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnReordering">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridColumnReorderingEventArgs&gt; ColumnReordering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridColumnReorderingEventArgs&gt; ColumnReordering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.ColumnReordering" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridColumnReorderingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor eine Spalte an eine neue Position in der Anzeigereihenfolge verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis die visuelle Darstellung der eines Ziehvorgangs ein Header Spalte anpassen oder vollständig ersetzt das Standardverhalten für die Drag & behandeln. Um die Darstellung von gezogenen Spaltenheaders und Indikators für den Ablagespeicherort anzupassen, legen Sie die <xref:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator%2A> und <xref:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator%2A> Eigenschaften. Sie können alternativ Festlegen der <xref:System.Windows.Controls.DataGrid.DragIndicatorStyle%2A> und <xref:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.DataGridColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.Windows.Controls.DataGridColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.DataGridColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung, die alle Spalten in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die Auflistung der Spalten in der <see cref="T:System.Windows.Controls.DataGrid" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Controls.DataGrid.Columns%2A> -Auflistung, um Spalten hinzufügen, entfernen Sie Spalten oder Eigenschaften für die Spalten aktualisieren.  
  
> [!NOTE]
>  Bestimmt die Reihenfolge der Spalten in der Auflistung nicht die Reihenfolge, die sie in angezeigt werden, werden die <xref:System.Windows.Controls.DataGrid>. Die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> Eigenschaft bestimmt die Reihenfolge der Spalten.  
  
 Jede Spalte in der <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung definiert eine Spalte in der <xref:System.Windows.Controls.DataGrid>. Die folgende Tabelle listet die vier Spalte eingibt, die die <xref:System.Windows.Controls.DataGrid> enthält.  
  
|Spaltentyp|Datenanzeige|  
|-----------------|------------------|  
|<xref:System.Windows.Controls.DataGridHyperlinkColumn>|Verwenden Sie zum Anzeigen von URI-Daten.|  
|<xref:System.Windows.Controls.DataGridComboBoxColumn>|Mit der Enumerationsdaten angezeigt.|  
|<xref:System.Windows.Controls.DataGridTextColumn>|Verwenden Sie zum Anzeigen von Text.|  
|<xref:System.Windows.Controls.DataGridCheckBoxColumn>|Verwenden Sie zum Anzeigen von booleschen Daten.|  
  
 Darüber hinaus können Sie eigene benutzerdefinierte Spalte definieren, mit <xref:System.Windows.Controls.DataGridTemplateColumn>. Spalten in der Auflistung leiten von <xref:System.Windows.Controls.DataGridColumn>. Beachten Sie, dass <xref:System.Windows.Controls.DataGridBoundColumn>, die Unterstützung für die Bindung hinzufügt, leitet sich von <xref:System.Windows.Controls.DataGridColumn> und stellt die Basis für mehrere Typen definierte Spalte.  
  
 Alle Spalten in der Auflistung verwenden die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> -Eigenschaft definiert, durch die <xref:System.Windows.Controls.DataGrid>.  
  
 Sie können die <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung zur Laufzeit unabhängig davon, ob sie enthält generierte Spalten.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie die Auflistung eine Spalte hinzugefügt wird.  
  
 [!code-xaml[DataGrid_ColumnsManipulation#DataGrid2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml#datagrid2)]  
  
 [!code-csharp[DataGrid_ColumnsManipulation#Add1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml.cs#add1)]
 [!code-vb[DataGrid_ColumnsManipulation#Add1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_columnsmanipulation/vb/datagrid_columnsmanipulation_vb/window1.xaml.vb#add1)]  
[!code-csharp[DataGrid_ColumnsManipulation#Add2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml.cs#add2)]
[!code-vb[DataGrid_ColumnsManipulation#Add2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_columnsmanipulation/vb/datagrid_columnsmanipulation_vb/window1.xaml.vb#add2)]  
  
 Im folgende Beispiel wird gezeigt, wie eine Spalte aus der Auflistung entfernt wird.  
  
 [!code-xaml[DataGrid_ColumnsManipulation#Delete](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml#delete)]  
[!code-xaml[DataGrid_ColumnsManipulation#DataGrid](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml#datagrid)]  
  
 [!code-csharp[DataGrid_ColumnsManipulation#Delete2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml.cs#delete2)]
 [!code-vb[DataGrid_ColumnsManipulation#Delete2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_columnsmanipulation/vb/datagrid_columnsmanipulation_vb/window1.xaml.vb#delete2)]  
  
 Im folgende Beispiel wird gezeigt, wie Eigenschaften für Spalten in der Auflistung festlegen, werden automatisch generiert und beim Auftreten eines Ereignisses wird.  
  
 [!code-xaml[DataGrid_ColumnsManipulation#Visible](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml#visible)]  
[!code-xaml[DataGrid_ColumnsManipulation#DataGrid](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml#datagrid)]  
  
 [!code-csharp[DataGrid_ColumnsManipulation#Visible2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_columnsmanipulation/cs/datagrid_columnsmanipulation/window1.xaml.cs#visible2)]
 [!code-vb[DataGrid_ColumnsManipulation#Visible2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_columnsmanipulation/vb/datagrid_columnsmanipulation_vb/window1.xaml.vb#visible2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridLength ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridLength ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.ColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridLength</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt sie fest, die Standardbreite und Größenanpassungsmodus für Spalten und Header in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die Breite und Größe der Modus der Spalten und Header, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist <see cref="P:System.Windows.Controls.DataGridLength.SizeToHeader" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGridColumn.Width%2A> Eigenschaftensatz für eine einzelnes <xref:System.Windows.Controls.DataGridColumn> hat Vorrang vor den <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A> Eigenschaft.  
  
 Die <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> von der <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A> Eigenschaft wird durch die folgenden Eigenschaften eingeschränkt, wenn sie, in Rangfolge aufgelistet festgelegt haben:  
  
-   <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.ColumnWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.CommitEdit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> -Befehl für die Zelle oder Zeile, die derzeit im Bearbeitungsmodus befindet.</summary>
        <returns>
          <see langword="true" />Wenn der Bearbeitungsmodus für die aktuelle Zelle oder Zeile wird beendet oder es sind keine Zellen oder Zeilen in den Bearbeitungsmodus; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Zelle derzeit bearbeitet wird, führt einen Commit für diese Methode alle ausstehenden Änderungen auf die Zelle ohne Commit sämtlicher ausstehenden Änderungen auf die Zeile. Dies bedeutet, dass Änderungen in der Zelle Bearbeitungssteuerelement auf die ausstehende Zeile weitergegeben werden. Wenn eine Zelle momentan nicht bearbeitet wird, sind alle ausstehenden Bearbeitungen der Zeile ein Commit ausgeführt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit (System.Windows.Controls.DataGridEditingUnit editingUnit, bool exitEditingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit(valuetype System.Windows.Controls.DataGridEditingUnit editingUnit, bool exitEditingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editingUnit" Type="System.Windows.Controls.DataGridEditingUnit" />
        <Parameter Name="exitEditingMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="editingUnit">Einer der Enumerationswerte, der angibt, ob die Zeilen- oder Zellenebene Änderungen zu übernehmen.</param>
        <param name="exitEditingMode">
          <see langword="true" />Bearbeitungsmodus zu beenden; andernfalls <see langword="false" />.</param>
        <summary>Ruft die <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> Befehl für die angegebene Zelle oder Zeile, die derzeit im Bearbeitungsmodus befindet.</summary>
        <returns>
          <see langword="true" />Wenn die aktive Zelle oder Zeile den Bearbeitungsmodus verlässt; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt einen Commit für alle ausstehenden Änderungen für den angegebenen <xref:System.Windows.Controls.DataGridEditingUnit> und den Bearbeitungsmodus verlässt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEditCommand">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Input.RoutedCommand CommitEditCommand;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Input.RoutedCommand CommitEditCommand" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CommitEditCommand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Befehl, der angibt, ändert sich die Absicht an, ausstehende commit für die aktive Zelle oder Zeile, und Beenden des Bearbeitungsmodus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyingRowClipboardContent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowClipboardEventArgs&gt; CopyingRowClipboardContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowClipboardEventArgs&gt; CopyingRowClipboardContent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowClipboardEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem Sie der Standardinhalt der Zeile vorbereitet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ereignislistener, ändern oder den Inhalt der Zwischenablage Zeile hinzufügen können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridCellInfo CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridCellInfo CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridCellInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Zelle, die Fokus besitzt.</summary>
        <value>Informationen über die Zelle, die Fokus besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der zurückgegebene Wert ist eine Struktur, die Informationen über die Zelle und das Datenelement der Zelle zugeordnet. Es ist keine tatsächliche Verweis auf die <xref:System.Windows.Controls.DataGridCell> Container.  
  
 Sie können einen Trigger zum Festlegen von Eigenschaften für die ausgewählte Zellen festlegen, in der <xref:System.Windows.Controls.DataGrid.CellStyle%2A> Eigenschaft. Weitere Informationen finden Sie unter <xref:System.Windows.Controls.DataGrid.CellStyle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.CurrentCellChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" />-Eigenschaft geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Windows.Controls.DataGrid.CurrentCell%2A> -Eigenschaft ändern, als Ergebnis der Maus oder Tastatur Gesten oder aufgrund einer Änderung der <xref:System.Windows.Controls.DataGrid.CurrentColumn%2A> Eigenschaftswert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CurrentCellProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CurrentCellProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CurrentCellProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridColumn CurrentColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataGridColumn CurrentColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CurrentColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Spalte, die die aktuelle Zelle enthält.</summary>
        <value>Die Spalte, die die aktuelle Zelle enthält. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert `null` gibt an, dass eine einzelne Zelle nicht den Fokus besitzt. Angenommen, hat eine Zeile den Fokus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentColumnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CurrentColumnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CurrentColumnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CurrentColumnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public object CurrentItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.CurrentItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenelement gebunden an die Zeile, die die aktuelle Zelle enthält.</summary>
        <value>Das Datenelement gebunden an die Zeile, die die aktuelle Zelle enthält. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ruft das Datenelement für die Zeile, die Fokus besitzt oder enthält die Zelle, die Fokus besitzt. Dies entspricht der <xref:System.Windows.Controls.DataGridCellInfo.Item%2A?displayProperty=nameWithType> zurückgegebene Wert den <xref:System.Windows.Controls.DataGrid.CurrentCell%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CurrentItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CurrentItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.CurrentItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Befehl, der die Absicht an, löschen Sie die aktuelle Zeile angibt.</summary>
        <value>Die <see cref="P:System.Windows.Input.ApplicationCommands.Delete" /> Befehl, der die Absicht an, löschen Sie die aktuelle Zeile angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragIndicatorStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style DragIndicatorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style DragIndicatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Format, das verwendet wird, wenn dem Drag-Indikator zu rendern, die beim Ziehen einer Spaltenüberschrift angezeigt wird.</summary>
        <value>Der Stil einer Spaltenüberschrift angewendet wird, wenn Sie ziehen. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Definieren einer <xref:System.Windows.Style> Geben Sie für den Indikator ziehen Sie eine <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.Control>.  
  
 Sie können Eigenschaften im entsprechenden Stil so ändern Sie die Darstellung der bestimmte Elemente des Indikators, ziehen Sie, wie z. B. die Rahmen um den Spaltenüberschrift festlegen. Die Standardvorlage für den Indikator ziehen Sie verwendet jedoch eine <xref:System.Windows.Media.VisualBrush> Paint-Ereignis ein <xref:System.Windows.Controls.Canvas> mit einem Bild der ursprünglichen Überschrift, das gezogen wird. Als Ergebnis, wenn Sie einige Eigenschaften wie z. B. in Ihren Stil festlegen <xref:System.Windows.Controls.Control.Background%2A> oder <xref:System.Windows.Controls.Control.Foreground%2A>, scheinen Sie nicht angewendet werden. Um die Darstellung des Spaltenheaders zu ändern, während es gezogen wird, wenden Sie eine neue Vorlage, die nicht die Standardeinstellung verwendet <xref:System.Windows.Media.VisualBrush>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragIndicatorStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DragIndicatorStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DragIndicatorStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropLocationIndicatorStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style DropLocationIndicatorStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style DropLocationIndicatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Format, das angewendet wird, um den Dateiablage-Speicherort anzugeben, wenn Sie eine Spaltenüberschrift ziehen.</summary>
        <value>Der Stil, die auf eine Spaltenüberschrift angewendet wird. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definieren einer <xref:System.Windows.Style> für Indikators für den Ablagespeicherort, geben Sie einen <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.Separator>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropLocationIndicatorStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DropLocationIndicatorStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DropLocationIndicatorStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableColumnVirtualization">
      <MemberSignature Language="C#" Value="public bool EnableColumnVirtualization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableColumnVirtualization" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Spaltenvirtualisierung aktiviert ist.</summary>
        <value>
          <see langword="true" />Wenn die Spaltenvirtualisierung aktiviert ist; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="false" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableColumnVirtualizationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EnableColumnVirtualizationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EnableColumnVirtualizationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.EnableColumnVirtualizationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRowVirtualization">
      <MemberSignature Language="C#" Value="public bool EnableRowVirtualization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRowVirtualization" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Zeilenvirtualisierung aktiviert ist.</summary>
        <value>
          <see langword="true" />Wenn die Zeilenvirtualisierung aktiviert ist; andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="true" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zur Verbesserung der Leistung der <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true` standardmäßig. Wenn die <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true`, die <xref:System.Windows.Controls.DataGrid> instanziieren keine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement in die gebundene Datenquelle. Stattdessen die <xref:System.Windows.Controls.DataGrid> erstellt <xref:System.Windows.Controls.DataGridRow> Objekte nur, wenn sie benötigt werden, und so viel wie möglich wiederverwendet. Z. B. die <xref:System.Windows.Controls.DataGrid> erstellt eine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement, das befindet sich derzeit in der Ansicht und die Zeile wiederverwendet wird, wenn es nicht aus der Sicht einen Bildlauf durchführt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableRowVirtualizationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EnableRowVirtualizationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EnableRowVirtualizationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.EnableRowVirtualizationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusBorderBrushKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ComponentResourceKey FocusBorderBrushKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ComponentResourceKey FocusBorderBrushKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.FocusBorderBrushKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ComponentResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel, der den Standard-Rahmen-Pinsel für eine fokussierte Zelle verweist.</summary>
        <value>Der Schlüssel, der den Standardrahmenpinsel für eine fokussierte Zelle verweist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Standardformat für <xref:System.Windows.Controls.DataGrid> verweist auf diesen Pinsel, um einen Dicker Rahmen um eine fokussierte Zelle zu erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrozenColumnCount">
      <MemberSignature Language="C#" Value="public int FrozenColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrozenColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.FrozenColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Anzahl der Spalten ohne Bildlauf.</summary>
        <value>Die Anzahl der Spalten ohne Bildlauf. Der registrierte Standardwert ist 0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fixierte Spalten sind Spalten, die immer angezeigt werden und nicht genügend Sichtbarkeit kein Bildlauf durchgeführt werden können. Fixierte Spalten sind immer die am weitesten links stehende Spalten in der Reihenfolge angezeigt werden. Nicht fixierte Spalten in der Gruppe der nicht fixierten Spalten ziehen oder ziehen Sie den nicht fixierte Spalten in der Gruppe der fixierten Spalten.  
  
 Um Spalten fixieren, legen die <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> Eigenschaft. Die am weitesten links stehende Spalten gemäß der <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> werden fixiert. Wenn Sie festlegen, z. B. die <xref:System.Windows.Controls.DataGrid.FrozenColumnCount%2A> auf 2, die zwei linken Spalten in der Anzeige fixiert werden. Um zu bestimmen, ob eine Spalte bereits eingefroren ist, überprüfen Sie die <xref:System.Windows.Controls.DataGridColumn.IsFrozen%2A> Eigenschaft auf die <xref:System.Windows.Controls.DataGridColumn>.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine Spalte fixiert, wenn "Fixieren der Spalte" auswählen, wird die <xref:System.Windows.Controls.ContextMenu>. Spalten werden nach links verschoben, um in die fixierten Spalten aufgenommen werden.  
  
 [!code-xaml[DataGrid_FrozenColumn#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_frozencolumn/cs/window1.xaml#1)]  
  
 [!code-csharp[DataGrid_FrozenColumn#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_frozencolumn/cs/window1.xaml.cs#2)]
 [!code-vb[DataGrid_FrozenColumn#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_frozencolumn/vb/window1.xaml.vb#2)]  
[!code-csharp[DataGrid_FrozenColumn#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_frozencolumn/cs/window1.xaml.cs#3)]
[!code-vb[DataGrid_FrozenColumn#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_frozencolumn/vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrozenColumnCountProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FrozenColumnCountProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FrozenColumnCountProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateColumns">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.DataGridColumn&gt; GenerateColumns (System.ComponentModel.IItemProperties itemProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.DataGridColumn&gt; GenerateColumns(class System.ComponentModel.IItemProperties itemProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.GenerateColumns(System.ComponentModel.IItemProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.DataGridColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemProperties" Type="System.ComponentModel.IItemProperties" />
      </Parameters>
      <Docs>
        <param name="itemProperties">Die Eigenschaften des Objekts in den Spalten sein.</param>
        <summary>Generiert Spalten für die angegebenen Eigenschaften eines Objekts.</summary>
        <returns>Die Auflistung von Spalten für die Eigenschaften des Objekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Zeile im Datenraster an ein Objekt in der Datenquelle gebunden ist, und jede Spalte im Datenraster an eine Eigenschaft des Datenobjekts gebunden ist. Diese Methode generiert eine Auflistung, die eine Spalte für jede Eigenschaft enthält.  
  
 Aufrufen der <xref:System.Windows.Controls.DataGrid.GenerateColumns%2A> Methode bietet dieselbe Funktionalität wie das Festlegen der <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> Eigenschaft `true`. Sie werden diese Methode normalerweise nicht aus dem Code aufrufen.  
  
 Diese Methode wird bereitgestellt, so aktivieren Sie die Designer-Tools, um eine Auflistung von Spalten zu generieren, die vom Benutzer bearbeitet und anschließend in das Datenraster eingefügt werden können. Ein Designer-Tool können Sie die <xref:System.Windows.Controls.DataGrid.GenerateColumns%2A> Methode, um eine Auflistung von automatisch generierten Spalten zurückzugeben. Das Designertool kann dann eine Benutzeroberfläche zum ermöglichen es dem Benutzer die Spaltentypen, bearbeiten und hinzufügen oder Entfernen von Spalten nach Bedarf bereitstellen. Die spaltenauflistung kann dann verwendet werden, zum Auffüllen der <xref:System.Windows.Controls.DataGrid.Columns%2A> Auflistung der Datentabelle durch Hinzufügen von jeder Spalte auf die Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemProperties" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.GetContainerForItemOverride" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Instanziiert eine neue <see cref="T:System.Windows.Controls.DataGridRow" />.</summary>
        <returns>Die Zeile, die der Container ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDetailsVisibilityForItem">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility GetDetailsVisibilityForItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Visibility GetDetailsVisibilityForItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.GetDetailsVisibilityForItem(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das Datenelement in der Zeile für die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> wird zurückgegeben.</param>
        <summary>Ruft die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> -Eigenschaft für die <see cref="T:System.Windows.Controls.DataGridRow" /> , die das angegebenen Datenelement darstellt.</summary>
        <returns>Die Sichtbarkeit für die Zeile mit der <paramref name="item" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLinesVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridGridLinesVisibility GridLinesVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridGridLinesVisibility GridLinesVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.GridLinesVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridGridLinesVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, welche Rasterlinien angezeigt werden.</summary>
        <value>Einer der Enumerationswerte, der angibt, welche Rasterlinien angezeigt werden, in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt an, ob die Zeilen, die separate Zeilen und Spalten angezeigt werden. Die Darstellung von Zeilen, wenn sie angezeigt werden, wird angegeben, indem die <xref:System.Windows.Controls.DataGrid.VerticalGridLinesBrush%2A> und <xref:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLinesVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GridLinesVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GridLinesVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Controls.DataGrid" /> benutzerdefinierte Tastatur Bildlauf unterstützt.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird zur Benachrichtigung verwendet die <xref:System.Windows.Controls.ScrollViewer> von der <xref:System.Windows.Controls.DataGrid> , Tastatureingaben von bearbeitet werden die <xref:System.Windows.Controls.DataGrid>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridHeadersVisibility HeadersVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridHeadersVisibility HeadersVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.HeadersVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridHeadersVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Wert, der angibt, die Sichtbarkeit der Zeilen- und Spaltenüberschriften.</summary>
        <value>Einer der Enumerationswerte, der die Sichtbarkeit der Zeilen- und Spaltenköpfe angibt. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.All" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt an, ob die Zeilen- und Spaltenköpfe sichtbar sind. Die Darstellung der Header, wenn sie angezeigt werden, wird angegeben, indem die <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A> und <xref:System.Windows.Controls.DataGrid.ColumnHeaderStyle%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersVisibilityConverter">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.IValueConverter HeadersVisibilityConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.IValueConverter HeadersVisibilityConverter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.HeadersVisibilityConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Konverter, der konvertiert eine <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> zu einem <see cref="T:System.Windows.Visibility" />.</summary>
        <value>Der Konverter, der konvertiert eine <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> zu einem <see cref="T:System.Windows.Visibility" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann verwendet werden, der <xref:System.Windows.Controls.DataGrid> zu steuern, welche Teile der Vorlage der <xref:System.Windows.Controls.DataGrid> sind für einen bestimmten sichtbar <xref:System.Windows.Controls.DataGridHeadersVisibility>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeadersVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeadersVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalGridLinesBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush HorizontalGridLinesBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush HorizontalGridLinesBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Pinsel ab, das die horizontale Rasterlinien gezeichnet werden soll.</summary>
        <value>Der Pinsel, der verwendet wird, um das horizontale Raster Zeichnen werden Zeilen in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist schwarz <see cref="T:System.Windows.Media.SolidColorBrush" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Horizontale Rasterlinien trennen Sie die Zeilen in der <xref:System.Windows.Controls.DataGrid>. Diese Eigenschaft hat keine Auswirkung, wenn die <xref:System.Windows.Controls.DataGrid.GridLinesVisibility%2A> -Eigenschaftensatz auf <xref:System.Windows.Controls.DataGridGridLinesVisibility.Vertical> oder <xref:System.Windows.Controls.DataGridGridLinesVisibility.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalGridLinesBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalGridLinesBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalGridLinesBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Wert, der gibt an, wie sich die horizontale Bildlaufleisten werden angezeigt, in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Einer der Enumerationswerte, der angibt, die Sichtbarkeit der horizontalen Bildlaufleisten in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializingNewItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InitializingNewItemEventHandler InitializingNewItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InitializingNewItemEventHandler InitializingNewItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.InitializingNewItem" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InitializingNewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein neues Element erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ermöglicht-Ereignishandler, um das neue Element mit benutzerdefinierten Standardwerten initialisiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das zu testende Element.</param>
        <summary>Bestimmt, ob ein Element ist ein <see cref="T:System.Windows.Controls.DataGridRow" />.</summary>
        <returns>
          <see langword="true" />Wenn das Element ist ein <see cref="T:System.Windows.Controls.DataGridRow" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der Benutzer kann Werte in Bearbeiten der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>
          <see langword="true" />Wenn die Zeilen und Zellen schreibgeschützt sind. andernfalls <see langword="false" />. Der registrierte Standardwert ist <see langword="false" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Windows.Controls.DataGrid.IsReadOnly%2A> Eigenschaft, um `true` , stellen alle Zellen in der <xref:System.Windows.Controls.DataGrid> schreibgeschützt. Um einzelne Spalten oder Zellen schreibgeschützt festzulegen, setzen die <xref:System.Windows.Controls.DataGridColumn.IsReadOnly%2A?displayProperty=nameWithType> oder <xref:System.Windows.Controls.DataGridCell.IsReadOnly%2A?displayProperty=nameWithType> Eigenschaften. Besteht ein Konflikt zwischen den Einstellungen in der <xref:System.Windows.Controls.DataGrid>, Spalte oder Zelle Stufen Wert `true` hat Vorrang vor einem Wert von `false`.  
  
 Wenn diese Eigenschaft, um festgelegt wird `true` während das Steuerelement im Bearbeitungsmodus befindet, werden alle ausstehenden Bearbeitungen verworfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingRow">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowEventArgs&gt; LoadingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowEventArgs&gt; LoadingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.LoadingRow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein <see cref="T:System.Windows.Controls.DataGridRow" /> instanziiert wird, so, dass Sie ihn anpassen können, bevor sie verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zur Verbesserung der Leistung der <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true` standardmäßig. Wenn die <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true`, die <xref:System.Windows.Controls.DataGrid> instanziieren keine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement in die gebundene Datenquelle. Stattdessen die <xref:System.Windows.Controls.DataGrid> erstellt <xref:System.Windows.Controls.DataGridRow> Objekte nur, wenn sie benötigt werden, und so viel wie möglich wiederverwendet. Z. B. die <xref:System.Windows.Controls.DataGrid> erstellt eine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement, das befindet sich derzeit in der Ansicht und die Zeile wiederverwendet wird, wenn es nicht aus der Sicht einen Bildlauf durchführt.  
  
 Dieses Ereignis ermöglicht Ihnen, nehmen alle erforderlichen Änderungen an einer Zeile, bevor sie verwendet wird. Diese Anpassungen rückgängig machen, bevor eine Zeile wiederverwendet wird, behandeln die <xref:System.Windows.Controls.DataGrid.UnloadingRow> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadingRowDetails">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt; LoadingRowDetails;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowDetailsEventArgs&gt; LoadingRowDetails" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine neue Zeile Detailvorlage auf eine Zeile angewendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt einmal für jede Zeile, der eine neue Zeile Detailvorlage angewendet wird. Eine neue Detailvorlage angewendet wird, eine Zeile in einer der folgenden Fälle:  
  
-   Die Zeile <xref:System.Windows.Controls.DataGridRow.DetailsTemplate%2A> Eigenschaftswert ändert.  
  
-   Die Zeile <xref:System.Windows.Controls.DataGridRow.DetailsTemplate%2A> Eigenschaftswert ist `null` und <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> Eigenschaftswert ändert.  
  
 Dieses Ereignis können Sie alle notwendigen Änderungen an das Zeilenelement Details vornehmen, bevor er verwendet wird. Diese Anpassungen rückgängig machen, bevor das Zeilenelement Details wiederverwendet wird, behandeln die <xref:System.Windows.Controls.DataGrid.UnloadingRowDetails> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxColumnWidth">
      <MemberSignature Language="C#" Value="public double MaxColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.MaxColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Einschränkung für die maximale Breite der Spalten und Header in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die maximale Breite der Spalten und Header in der <see cref="T:System.Windows.Controls.DataGrid" />im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist <see cref="F:System.Double.PositiveInfinity" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen eines Werts für die <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A> -Eigenschaft, muss er größer als oder gleich 0,0 sein.  
  
 <xref:System.Double?displayProperty=nameWithType>ist kein gültiger Wert für diese Eigenschaft. Die Beschränkungen auf der <xref:System.Double> Wert werden erzwungen, indem eine <xref:System.Windows.ValidateValueCallback> Mechanismus. Wenn Sie versuchen, einen Wert festlegen, der nicht gültig ist, wird eine Laufzeitausnahme ausgelöst.  
  
 Die <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> von der <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A?displayProperty=nameWithType> und <xref:System.Windows.Controls.DataGridColumn.Width%2A?displayProperty=nameWithType> Eigenschaften werden durch die folgenden Eigenschaften eingeschränkt, wenn sie, in Rangfolge aufgelistet festgelegt haben:  
  
-   <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxColumnWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxColumnWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxColumnWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">Die maximale Größe, die <see cref="T:System.Windows.Controls.DataGrid" /> einnehmen kann.</param>
        <summary>Bestimmt die gewünschte Größe für die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <returns>Die gewünschte Größe des <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinColumnWidth">
      <MemberSignature Language="C#" Value="public double MinColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.MinColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Einschränkung für die minimale Breite der Spalten und Header in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die minimale Breite der Spalten und Header, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist 20. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen eines Werts für die <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A> -Eigenschaft, muss er größer als oder gleich 0,0 sein.  
  
 <xref:System.Double?displayProperty=nameWithType>und <xref:System.Double?displayProperty=nameWithType> sind keine gültigen Werte für diese Eigenschaft. Die Beschränkungen auf der <xref:System.Double> Wert werden erzwungen, indem eine <xref:System.Windows.ValidateValueCallback> Mechanismus. Wenn Sie versuchen, einen Wert festlegen, der nicht gültig ist, wird eine Laufzeitausnahme ausgelöst.  
  
 Die <xref:System.Windows.Controls.DataGridLength.DisplayValue%2A> von der <xref:System.Windows.Controls.DataGrid.ColumnWidth%2A?displayProperty=nameWithType> und <xref:System.Windows.Controls.DataGridColumn.Width%2A?displayProperty=nameWithType> Eigenschaften werden durch die folgenden Eigenschaften eingeschränkt, wenn sie, in Rangfolge aufgelistet festgelegt haben:  
  
-   <xref:System.Windows.Controls.DataGridColumn.MaxWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MaxColumnWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGridColumn.MinWidth%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.DataGrid.MinColumnWidth%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinColumnWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinColumnWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinColumnWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRowHeight">
      <MemberSignature Language="C#" Value="public double MinRowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinRowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.MinRowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die minimale Höhe Einschränkung der Zeilen und Header in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die Einschränkung für die minimale Höhe der Zeilen im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist 0,0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen eines Werts für die <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> -Eigenschaft, muss er größer als oder gleich 0,0 sein.  
  
 <xref:System.Double?displayProperty=nameWithType>und <xref:System.Double?displayProperty=nameWithType> sind keine gültigen Werte für diese Eigenschaft. Die Beschränkungen auf der <xref:System.Double> Wert werden erzwungen, indem eine <xref:System.Windows.ValidateValueCallback> Mechanismus. Wenn Sie versuchen, einen Wert festlegen, der nicht gültig ist, wird eine Laufzeitausnahme ausgelöst.  
  
 Besteht ein Konflikt zwischen der <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> Eigenschaft und die <xref:System.Windows.Controls.DataGrid.RowHeight%2A> Eigenschaft <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> hat Vorrang vor. Allerdings die <xref:System.Windows.FrameworkElement.Height%2A> Eigenschaftensatz für ein einzelnes <xref:System.Windows.Controls.DataGridRow> hat Vorrang vor einer Eigenschaft, legen Sie auf der <xref:System.Windows.Controls.DataGrid> Ebene und ist nicht eingeschränkt durch die <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRowHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinRowHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinRowHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.MinRowHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemMargin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness NewItemMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness NewItemMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.NewItemMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Rand für das neue Elementzeile.</summary>
        <value>Der Rand für das neue Elementzeile.  
  
 Der registrierte Standardwert ist 0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_NewItemMargin"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.DataGrid.NewItemMarginProperty>|  
|Metadaten-Eigenschaften festgelegt auf.`True`|Keine|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemMarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NewItemMarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NewItemMarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.NewItemMarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonFrozenColumnsViewportHorizontalOffset">
      <MemberSignature Language="C#" Value="public double NonFrozenColumnsViewportHorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 NonFrozenColumnsViewportHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den horizontalen Offset des bildlauffähigen Spalten in der Viewport an.</summary>
        <value>Der horizontale Offset der bildlauffähigen Spalten. Der registrierte Standardwert ist 0,0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonFrozenColumnsViewportHorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NonFrozenColumnsViewportHorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NonFrozenColumnsViewportHorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAddingNewItem">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNewItem (System.Windows.Controls.AddingNewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNewItem(class System.Windows.Controls.AddingNewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnAddingNewItem(System.Windows.Controls.AddingNewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.AddingNewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird immer dann aufgerufen, wenn Anwendungscode oder interne Prozesse <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> aufrufen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGeneratedColumns">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGeneratedColumns (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGeneratedColumns(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGeneratingColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGeneratingColumn (System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGeneratingColumn(class System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBeginningEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginningEdit (System.Windows.Controls.DataGridBeginningEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginningEdit(class System.Windows.Controls.DataGridBeginningEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridBeginningEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht abgeleitete Klassen, um zu verhindern, dass die Zelle in den Bearbeitungsmodus wechselt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnBeginningEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCanExecuteBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCanExecuteBeginEdit (System.Windows.Input.CanExecuteRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanExecuteBeginEdit(class System.Windows.Input.CanExecuteRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCanExecuteCancelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCanExecuteCancelEdit (System.Windows.Input.CanExecuteRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanExecuteCancelEdit(class System.Windows.Input.CanExecuteRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCanExecuteCommitEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCanExecuteCommitEdit (System.Windows.Input.CanExecuteRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanExecuteCommitEdit(class System.Windows.Input.CanExecuteRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCanExecuteCopy">
      <MemberSignature Language="C#" Value="protected virtual void OnCanExecuteCopy (System.Windows.Input.CanExecuteRoutedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanExecuteCopy(class System.Windows.Input.CanExecuteRoutedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zugeordnete Ereignis der <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCanExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual void OnCanExecuteDelete (System.Windows.Input.CanExecuteRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanExecuteDelete(class System.Windows.Input.CanExecuteRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> zugeordnete Ereignis der <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCellEditEnding">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEditEnding (System.Windows.Controls.DataGridCellEditEndingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEditEnding(class System.Windows.Controls.DataGridCellEditEndingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridCellEditEndingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht abgeleitete Klassen, um den Vorgang abzubrechen.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnCellEditEnding%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDisplayIndexChanged (System.Windows.Controls.DataGridColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnDisplayIndexChanged(class System.Windows.Controls.DataGridColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.DataGrid>erfordert, dass die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> Eigenschaft aller Spalten muss eine eindeutige ganze Zahlen von 0 bis <xref:System.Windows.Controls.DataGrid.Columns%2A> <xref:System.Windows.Controls.ColumnDefinitionCollection.Count%2A> -1. Aus diesem Grund, dass bei der <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> von einer Spalte ändert, die Änderung wird in der Regel dazu führen, dass die <xref:System.Windows.Controls.DataGridColumn.DisplayIndex%2A> neben anderen Spalten zu ändern.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderDragCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderDragCompleted (System.Windows.Controls.Primitives.DragCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnHeaderDragCompleted(class System.Windows.Controls.Primitives.DragCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderDragDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderDragDelta (System.Windows.Controls.Primitives.DragDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnHeaderDragDelta(class System.Windows.Controls.Primitives.DragDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderDragStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderDragStarted (System.Windows.Controls.Primitives.DragStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnHeaderDragStarted(class System.Windows.Controls.Primitives.DragStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Controls.DataGridColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Controls.DataGridColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnReordered%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordering">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordering (System.Windows.Controls.DataGridColumnReorderingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnReordering(class System.Windows.Controls.DataGridColumnReorderingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridColumnReorderingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnColumnReordering%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das Element, dessen Kontextmenü geöffnet wurde.</param>
        <summary>Wählt eine Zelle aus, wenn das Kontextmenü geöffnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn auf eine nicht ausgewählte Zelle oder Zeile ein Kontextmenü geöffnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCopyingRowClipboardContent">
      <MemberSignature Language="C#" Value="protected virtual void OnCopyingRowClipboardContent (System.Windows.Controls.DataGridRowClipboardEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCopyingRowClipboardContent(class System.Windows.Controls.DataGridRowClipboardEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Controls.DataGridRowClipboardEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird der Inhalt der Zwischenablage vorbereitet, für jede ausgewählte Zeile vor der <xref:System.Windows.Controls.DataGrid.CopyingRowClipboardContent> Ereignis wird ausgelöst. Der Wert, der die <xref:System.Windows.Controls.DataGrid.ClipboardCopyMode%2A> Eigenschaft gibt an, ob der Inhalt des Spaltenheaders neben der Zeileninhalt vorbereitet ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Automatisierungspeer für diesen <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <returns>Der Automatisierungspeer für diesen <see cref="T:System.Windows.Controls.DataGrid" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Automation.Peers.DataGridAutomationPeer> macht die <xref:System.Windows.Controls.DataGrid> für die UI-Automatisierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnCurrentCellChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnExecutedBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnExecutedBeginEdit (System.Windows.Input.ExecutedRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExecutedBeginEdit(class System.Windows.Input.ExecutedRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecutedCancelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnExecutedCancelEdit (System.Windows.Input.ExecutedRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExecutedCancelEdit(class System.Windows.Input.ExecutedRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecutedCommitEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnExecutedCommitEdit (System.Windows.Input.ExecutedRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExecutedCommitEdit(class System.Windows.Input.ExecutedRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zugeordnete Ereignis der <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecutedCopy">
      <MemberSignature Language="C#" Value="protected virtual void OnExecutedCopy (System.Windows.Input.ExecutedRoutedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExecutedCopy(class System.Windows.Input.ExecutedRoutedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zugeordnete Ereignis der <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> Befehl.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          Für <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> ist <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.None" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnExecutedDelete">
      <MemberSignature Language="C#" Value="protected virtual void OnExecutedDelete (System.Windows.Input.ExecutedRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExecutedDelete(class System.Windows.Input.ExecutedRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Ermöglicht die Behandlung der <see cref="E:System.Windows.Input.CommandBinding.Executed" /> zugeordnete Ereignis der <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> Befehl.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitializingNewItem">
      <MemberSignature Language="C#" Value="protected virtual void OnInitializingNewItem (System.Windows.Controls.InitializingNewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitializingNewItem(class System.Windows.Controls.InitializingNewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InitializingNewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht abgeleitete Klassen, die das Element mit benutzerdefinierten Standardwerten initialisiert werden.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnInitializingNewItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Wird aufgerufen, wenn die <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> eigenschaftenänderungen für dieses Element.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Automatische Generierung von Spalten ausführt und Validierungsflag aktualisiert, wenn sich Elemente ändern.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsSourceChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsSourceChanged (System.Collections.IEnumerable oldValue, System.Collections.IEnumerable newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsSourceChanged(class System.Collections.IEnumerable oldValue, class System.Collections.IEnumerable newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="newValue" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="oldValue">Die alte Quelle.</param>
        <param name="newValue">Die neue Quelle.</param>
        <summary>Wird aufgerufen, wenn die <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> -Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Controls.DataGrid.AutoGenerateColumns%2A> Eigenschaft ist `true`, Spalten erneut generiert, wenn die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> -Eigenschaft ändert. Wenn möglich, wird die Auswahl der Zelle oder Zeile beibehalten werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Informationen zum Ereignis.</param>
        <summary>Wird aufgerufen, wenn die <see cref="E:System.Windows.UIElement.KeyDown" /> -Ereignis empfangen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen über die Tastatur Standardverhalten in der <xref:System.Windows.Controls.DataGrid>, finden Sie unter [Standard-Tastatur und Maus im DataGrid-Steuerelement](~/docs/framework/wpf/controls/default-keyboard-and-mouse-behavior-in-the-datagrid-control.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadingRow (System.Windows.Controls.DataGridRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadingRow(class System.Windows.Controls.DataGridRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnLoadingRow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoadingRowDetails">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadingRowDetails (System.Windows.Controls.DataGridRowDetailsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadingRowDetails(class System.Windows.Controls.DataGridRowDetailsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowDetailsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnLoadingRowDetails%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Mausdaten.</param>
        <summary>Aktualisiert die Auflistung von Elementen, die aufgrund der Benutzer das Ziehen des Mauszeigers ausgewählt sind die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreparingCellForEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnPreparingCellForEdit (System.Windows.Controls.DataGridPreparingCellForEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreparingCellForEdit(class System.Windows.Controls.DataGridPreparingCellForEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridPreparingCellForEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht abgeleitete Klassen, die den Inhalt der Zelle zu ändern, bevor er den Bearbeitungsmodus wechselt. Diese Methode wird aufgerufen, von <xref:System.Windows.Controls.DataGridCell> (anstelle von <xref:System.Windows.Controls.DataGrid>) Wenn sie in den Bearbeitungsmodus gewechselt hat.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnPreparingCellForEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDetailsVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDetailsVisibilityChanged (System.Windows.Controls.DataGridRowDetailsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowDetailsVisibilityChanged(class System.Windows.Controls.DataGridRowDetailsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowDetailsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowEditEnding">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditEnding (System.Windows.Controls.DataGridRowEditEndingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEditEnding(class System.Windows.Controls.DataGridRowEditEndingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowEditEndingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht abgeleitete Klassen, um den Vorgang abzubrechen.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnRowEditEnding%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedCellsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedCellsChanged (System.Windows.Controls.SelectedCellsChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedCellsChanged(class System.Windows.Controls.SelectedCellsChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectedCellsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnSelectedCellsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Wird aufgerufen, wenn die Auswahl ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ändert die ausgewählten Elemente in der <xref:System.Windows.Controls.DataGrid>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Windows.Controls.DataGridSortingEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Windows.Controls.DataGridSortingEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.Windows.Controls.DataGridSortingEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.Sorting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verursacht eine standardsortierung für die Spalte, auf die das Ereignis ausgelöst, wenn das Sortierereignis nicht als behandelt markiert ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnSorting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">Die alte Vorlage.</param>
        <param name="newTemplate">Die neue Vorlage.</param>
        <summary>Wird aufgerufen, wenn die Vorlage für die <see cref="T:System.Windows.Controls.DataGrid" /> ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.TextInput" />-Routingereignis bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.TextInput> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloadingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloadingRow (System.Windows.Controls.DataGridRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloadingRow(class System.Windows.Controls.DataGridRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnUnloadingRow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUnloadingRowDetails">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloadingRowDetails (System.Windows.Controls.DataGridRowDetailsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloadingRowDetails(class System.Windows.Controls.DataGridRowDetailsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DataGridRowDetailsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Daten für das Ereignis.</param>
        <summary>Löst das <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Windows.Controls.DataGrid.OnUnloadingRowDetails%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Die neue <see cref="T:System.Windows.Controls.DataGridRow" />.</param>
        <param name="item">Das Datenelement, das die Zeile enthält.</param>
        <summary>Bereitet eine neue Zeile für das angegebene Element.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreparingCellForEdit">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridPreparingCellForEditEventArgs&gt; PreparingCellForEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridPreparingCellForEditEventArgs&gt; PreparingCellForEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridPreparingCellForEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zelle den Bearbeitungsmodus wechselt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis, um eine Zelle zu ändern, wenn der Bearbeitungsmodus eingegeben behandeln.  
  
 Dieses Ereignis tritt auf, nachdem die <xref:System.Windows.Controls.DataGrid.BeginningEdit> Ereignis, wenn das Ereignis nicht abgebrochen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush RowBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush RowBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Standardrahmenpinsel für den Zeilenhintergrund.</summary>
        <value>Der Pinsel, der den Hintergrund einer Zeile zeichnet. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowBackground" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsScrollingConverter">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.IValueConverter RowDetailsScrollingConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.IValueConverter RowDetailsScrollingConverter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowDetailsScrollingConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Konverter, der einen booleschen Wert konvertiert eine <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />.</summary>
        <value>Der Konverter, der einen booleschen Wert konvertiert eine <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann verwendet werden, der <xref:System.Windows.Controls.DataGrid> Vorlage steuern, wie die Zeilendetails führen Sie einen Bildlauf auf der Grundlage der <xref:System.Windows.Controls.DataGrid.AreRowDetailsFrozen%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate RowDetailsTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate RowDetailsTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Vorlage, die zum Anzeigen der Details für die Zeile verwendet wird.</summary>
        <value>Die Vorlage, die zum Anzeigen der Details für die Zeile verwendet wird. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können anpassen, die Präsentation der Daten in der <xref:System.Windows.Controls.DataGrid> durch Hinzufügen eine Zeile im Abschnitt erläutert. Hinzufügen eines Zeilendetailabschnitts ermöglicht Ihnen, einige Daten in einer Vorlage zu gruppieren, die optional sichtbar oder reduziert ist.  
  
 Sie definieren die Details Zeilenvorlage als Inline-XAML oder als Ressource. Eine Datenvorlage, die als eine Ressource im Verlauf des Projekts verwendet werden kann, ohne das erneute Erstellen der Vorlage hinzugefügt wird. Eine Datenvorlage, die hinzugefügt wird, als Inline-XAML nur über das Steuerelement zugegriffen werden kann, wo er definiert ist.  
  
 Sie können die <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> vor der Anzeige durch Behandeln der <xref:System.Windows.Controls.DataGrid.LoadingRowDetails> Ereignis. Sie behandeln sollte die <xref:System.Windows.Controls.DataGrid.UnloadingRowDetails> Ereignis zum Rückgängigmachen von Änderungen, die beim Laden der Details für die Zeile vorgenommen werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine <xref:System.Windows.Controls.DataGrid> mit einem <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> Inline definiert. Die <xref:System.Windows.Controls.DataGrid> zeigt drei Werte in jeder Zeile und drei weitere Werte im Detailabschnitt an, wenn die Zeile ausgewählt ist. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der [wie: Hinzufügen von Zeilendetails zu einem DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-add-row-details-to-a-datagrid-control.md) Thema.  
  
 [!code-xaml[DataGrid_RowDetails#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_rowdetails/cs/mainwindow.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowDetailsTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowDetailsTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector RowDetailsTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector RowDetailsTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Selektor für die Vorlage, die für die Zeilendetails verwendet wird.</summary>
        <value>Die Vorlagenauswahl, die für die Zeilendetails verwendet wird. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowDetailsTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowDetailsTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowDetailsTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsVisibilityChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt; RowDetailsVisibilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowDetailsEventArgs&gt; RowDetailsVisibilityChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Sichtbarkeit einer Zeile Elements ändert details.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt einmal für jede Zeile Details-Element, dargestellt oder reduziert ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsVisibilityMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridRowDetailsVisibilityMode RowDetailsVisibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridRowDetailsVisibilityMode RowDetailsVisibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridRowDetailsVisibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, wenn der Abschnitt einer Zeile angezeigt wird.</summary>
        <value>Einer der Enumerationswerte, der die Sichtbarkeit der Zeilendetails angibt. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird im Detailbereich für die Zeile für ausgewählte Zeilen angezeigt, wenn eine <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> definiert ist. Legen Sie diese Eigenschaft auf <xref:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible> zum Anzeigen der Details für alle Zeilen oder <xref:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed> So blenden Sie die Details für alle Zeilen aus.  
  
 Die <xref:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged> Ereignis tritt auf, wenn diese Eigenschaft geändert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDetailsVisibilityModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowDetailsVisibilityModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowDetailsVisibilityModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowEditEnding">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowEditEndingEventArgs&gt; RowEditEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowEditEndingEventArgs&gt; RowEditEnding" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.RowEditEnding" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowEditEndingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor eine Zeile bearbeiten zugesichert oder abgebrochen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis abbrechen, indem die <xref:System.Windows.Controls.DataGridRowEditEndingEventArgs.Cancel%2A> Eigenschaft der `e` Argument `true` im Ereignishandler. Wenn abgebrochen, bleibt die Zeile im Bearbeitungsmodus befindet.  
  
 Wenn dieses Ereignis nicht abgebrochen wird, den angegebenen <xref:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction%2A> wird ausgeführt werden, um einen commit oder die Bearbeitung abgebrochen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderActualWidth">
      <MemberSignature Language="C#" Value="public double RowHeaderActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RowHeaderActualWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die gerenderten Breite der Spalte Header Zeile ab.</summary>
        <value>Die Breite der Zeilenheader, im gerenderten [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist 0,0. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Wert wird während des Layouts von dem Measure aller sichtbaren Zeile Header berechnet. Der Wert wird vom Layoutsystem selbst, basierend auf einem tatsächlichen Renderingdurchlauf festgelegt. Weitere Informationen dazu, wie das Layout berechnet wird, finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderActualWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeaderActualWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeaderActualWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeaderActualWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style RowHeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style RowHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Stil auf alle Zeilenheader angewendet.</summary>
        <value>Das Format für alle Zeilenheader der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden einer <xref:System.Windows.Style> die visuelle Darstellung der Spaltenköpfe im Aktualisieren der <xref:System.Windows.Controls.DataGrid>. Definieren einer <xref:System.Windows.Style> Geben Sie für einen Zeilenkopf ein <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.Primitives.DataGridRowHeader>.  
  
 Sie können auch die <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A> zu eine Eigenschaft der zu aktualisierende Eigenschaft <xref:System.Windows.Controls.Primitives.DataGridRowHeader>.  
  
 Ein <xref:System.Windows.Style> kann angewendet werden, um alle Zeilenheader oder eine einzelne Zeile mit einer Überschrift. Anwenden einer <xref:System.Windows.Style> auf einem einzelnen Header festgelegt die <xref:System.Windows.Controls.DataGridRow.HeaderStyle%2A?displayProperty=nameWithType> -Eigenschaft, die Vorrang vor der <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie auf nummerierte Zeilen im Zeilenheader anzeigen, indem Sie eine Bindung mit einem Wertkonverter anwenden der <xref:System.Windows.Controls.ContentControl.Content%2A> Eigenschaft von der <xref:System.Windows.Controls.Primitives.DataGridRowHeader>. Der Konverter wird als Ressource durch Zuordnen des Namespaces und erstellen eine Instanz der Klasse erstellt. Weitere Informationen finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 [!code-xaml[DataGrid_RowHeader#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_rowheader/csharp/datagrid_rowheader/window1.xaml#1)]  
  
 [!code-csharp[DataGrid_RowHeader#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_rowheader/csharp/datagrid_rowheader/window1.xaml.cs#2)]
 [!code-vb[DataGrid_RowHeader#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_rowheader/vb/datagrid_rowheader_vb/window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeaderStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeaderStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate RowHeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate RowHeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Vorlage für die Zeilenüberschriften.</summary>
        <value>Die Vorlage für die Zeilenüberschriften. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid.RowHeaderTemplate%2A> Eigenschaft definiert die <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> für die <xref:System.Windows.Controls.Primitives.DataGridRowHeader>. Die <xref:System.Windows.Controls.DataGrid.RowHeaderTemplate%2A> erbt nicht von den Datenkontext der <xref:System.Windows.Controls.DataGrid>. Binden Sie zum Festlegen der Zeilenheaderinhalt anzuzeigenden Werte auf Grundlage von Daten aus der Zeile an die <xref:System.Windows.Controls.ContentControl.Content%2A> Eigenschaft von der <xref:System.Windows.Controls.Primitives.DataGridRowHeader> mithilfe der <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A> Eigenschaft. Weitere Informationen finden Sie unter <xref:System.Windows.Controls.DataGrid.RowHeaderStyle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector RowHeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector RowHeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Selektor für die Vorlage für die Zeilenkopfzeilen.</summary>
        <value>Die Vorlagenauswahl für die Zeilenkopfzeilen. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeaderTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeaderTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidth">
      <MemberSignature Language="C#" Value="public double RowHeaderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RowHeaderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeaderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Breite der Spalte Header Zeile fest.</summary>
        <value>Die Breite der Spalte Header Zeile im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist <see cref="F:System.Double.NaN" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen eines Werts für die <xref:System.Windows.Controls.DataGrid.RowHeaderWidth%2A> -Eigenschaft, müssen sie gleich oder größer als 0,0 sein. Legen Sie diese Eigenschaft auf <xref:System.Double.NaN> ("Auto" in XAML) auf die Zeilenüberschrift automatisch seine Größe an ihren Inhalt angepasst zu machen.  
  
 <xref:System.Double?displayProperty=nameWithType>ist kein gültiger Wert für diese Eigenschaft. Die Beschränkungen auf der <xref:System.Double> Wert werden erzwungen, indem eine <xref:System.Windows.ValidateValueCallback> Mechanismus. Wenn Sie versuchen, einen Wert festlegen, der nicht gültig ist, wird eine Laufzeitausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeaderWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeaderWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public double RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die empfohlene Höhe für alle Zeilen fest.</summary>
        <value>Die Höhe der Zeilen im [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. Der registrierte Standardwert ist <see cref="F:System.Double.NaN" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen eines Werts für die <xref:System.Windows.Controls.DataGrid.RowHeight%2A> -Eigenschaft, müssen sie gleich oder größer als 0,0 sein. Legen Sie diese Eigenschaft auf <xref:System.Double.NaN> ("Auto" in XAML), stellen die Zeile passen Sie seine Größe an ihren Inhalt automatisch an.  
  
 <xref:System.Double?displayProperty=nameWithType>ist kein gültiger Wert für diese Eigenschaft. Die Beschränkungen auf der <xref:System.Double> Wert werden erzwungen, indem eine <xref:System.Windows.ValidateValueCallback> Mechanismus. Wenn Sie versuchen, einen Wert festlegen, der nicht gültig ist, wird eine Laufzeitausnahme ausgelöst.  
  
 Die <xref:System.Windows.Controls.DataGrid.RowHeight%2A> -Eigenschaft angewendet wird, auf die einzelnen <xref:System.Windows.Controls.DataGridRow> ist und keine seine <xref:System.Windows.FrameworkElement.Height%2A> Eigenschaftensatz. Besteht ein Konflikt zwischen der <xref:System.Windows.Controls.DataGrid.RowHeight%2A> Eigenschaft und die <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> Eigenschaft <xref:System.Windows.Controls.DataGrid.MinRowHeight%2A> hat Vorrang vor.  
  
 Festlegen von <xref:System.Windows.Controls.DataGrid.RowHeight%2A> weist das Layoutsystem die Größe des Speicherplatzes, die von jeder Zeile angefordert. Der Rückgabewert dieser Eigenschaft ist immer der Wert, den er auf festgelegt wurde. Verwenden Sie zum Abrufen der tatsächliche Menge des belegten Speicherplatzes die <xref:System.Windows.FrameworkElement.ActualHeight%2A> Eigenschaft von der <xref:System.Windows.Controls.DataGridRow>. Weitere Informationen zur speicherplatzzuordnung finden Sie unter [Layout](~/docs/framework/wpf/advanced/layout.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowHeight" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style RowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Stil auf alle Zeilen angewendet.</summary>
        <value>Das Format für alle Zeilen in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwenden einer <xref:System.Windows.Style> so ändern Sie die visuelle Darstellung aller Zeilen in der <xref:System.Windows.Controls.DataGrid>. Zum Definieren einer <xref:System.Windows.Style> Geben Sie für eine Zeile einer <xref:System.Windows.Style.TargetType%2A> von <xref:System.Windows.Controls.DataGridRow>.  
  
 Ein <xref:System.Windows.Style> kann angewendet werden, um alle Zeilen in der <xref:System.Windows.Controls.DataGrid> oder auf eine einzelne Zeile. Anwenden einer <xref:System.Windows.Style> auf eine einzelne Zeile festgelegt der <xref:System.Windows.FrameworkElement.Style%2A> -Eigenschaft direkt unter der <xref:System.Windows.Controls.DataGridRow>, der hat Vorrang vor der <xref:System.Windows.Controls.DataGrid.RowStyle%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Wenn diese Eigenschaft einen Wert ungleich Null aufweist, überschreiben Sie den Wert von der <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Controls.Control.Background%2A> Farbe aller Zeilen und verwendet einen Trigger so ändern Sie die <xref:System.Windows.Controls.Control.Background%2A> und <xref:System.Windows.Controls.Control.Foreground%2A> Farben, wenn der Mauszeiger über der Zeile befindet.  
  
 [!code-xaml[DataGrid_RowStyle#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_rowstyle/CS/mainwindow.xaml#1)]   
  
 Die folgende Abbildung zeigt die Ausgabe an.  
  
 ![Benutzerdefiniertes DataGrid-Zeilenformat](~/add/media/wpf-datagridrowstyle.png "benutzerdefiniertes DataGrid-Zeilenformat")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowStyle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector RowStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector RowStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Stilauswahl für die Zeilen.</summary>
        <value>Die Stilauswahl für die Zeilen. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft einen Wert ungleich Null aufweist, überschreiben Sie den Wert von der <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowStyleSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowValidationErrorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ControlTemplate RowValidationErrorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ControlTemplate RowValidationErrorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Vorlage, die verwendet wird, um Fehler in Zeile Überprüfung anzugeben visuell anzuzeigen.</summary>
        <value>Die Vorlage, die verwendet wird, um Fehler in Zeile Überprüfung anzugeben visuell anzuzeigen. Der registrierte Standardwert ist <see langword="null" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid> -Steuerelement ermöglicht Ihnen die Durchführung der Validierung auf die Zelle und die Zeile. Überprüfen Sie mit Überprüfung auf Zellenebene einzelne Eigenschaften eines gebundenen Objekts aus, wenn ein Benutzer einen Wert aktualisiert. Mit Überprüfung auf Zeilenebene wird der gesamte Dataset Objekte überprüfen, wenn ein Benutzer Änderungen an einer Zeile ein Commit ausgeführt wird. Sie können angepasstes visuelles Feedback für Validierungsfehler auf Zeilenebene bereitstellen, durch Angeben einer <xref:System.Windows.Controls.ControlTemplate> , definiert die Darstellung des Fehlerindikators. Festlegen der <xref:System.Windows.Controls.DataGrid.RowValidationErrorTemplate%2A> Eigenschaft `null` des Fehlerindikators Standard verwenden.  
  
   
  
## Examples  
 Im folgende Beispiel ersetzt die standardmäßige Zeile Überprüfung Feedback mit einem Indikator besser zu sehen. Wenn ein Benutzer einen ungültigen Wert eingibt, wird ein roter Kreis mit einem weißen Ausrufezeichen in der Zeile mit einer Überschrift angezeigt. Die entsprechende Fehlermeldung wird in einer QuickInfo angezeigt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [Vorgehensweise: Implementieren der Validierung mit dem DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-implement-validation-with-the-datagrid-control.md) Thema.  
  
 [!code-xaml[DataGrid_Validation#RowValidationFeedbackXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_validation/cs/mainwindow.xaml#rowvalidationfeedbackxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowValidationErrorTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowValidationErrorTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowValidationErrorTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.RowValidationErrorTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.ValidationRule&gt; RowValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.Windows.Controls.ValidationRule&gt; RowValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.RowValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Regeln, die zum Überprüfen der Daten in jeder Zeile verwendet werden.</summary>
        <value>Die Regeln, die zum Überprüfen der Daten in jeder Zeile verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid> -Steuerelement ermöglicht Ihnen die Durchführung der Validierung auf die Zelle und die Zeile. Überprüfen Sie mit Überprüfung auf Zellenebene einzelne Eigenschaften eines gebundenen Objekts aus, wenn ein Benutzer einen Wert aktualisiert. Mit Überprüfung auf Zeilenebene wird der gesamte Dataset Objekte überprüfen, wenn ein Benutzer Änderungen an einer Zeile ein Commit ausgeführt wird. Um eine benutzerdefinierte Validierungsregel zu erstellen, erstellen Sie eine Klasse, die von abgeleitet ist die <xref:System.Windows.Controls.ValidationRule> Klasse und Implementieren der <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode. Fügen Sie die benutzerdefinierte Validierungsregel aus, um die <xref:System.Windows.Controls.DataGrid.RowValidationRules%2A> Auflistung.  
  
 Wenn die <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> Eigenschaft wird verwendet, die <xref:System.Windows.Controls.DataGrid.RowValidationRules%2A> Eigenschaft wird ignoriert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine <xref:System.Windows.Controls.ValidationRule> , die überprüft, ob die `StartDate` Eigenschaftswert für eine `Course` -Objekt liegt vor seiner `EndDate` Eigenschaftswert. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die [Vorgehensweise: Implementieren der Validierung mit dem DataGrid-Steuerelement](~/docs/framework/wpf/controls/how-to-implement-validation-with-the-datagrid-control.md) Thema.  
  
 [!code-csharp[DataGrid_Validation#CourseValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_validation/cs/mainwindow.xaml.cs#coursevalidationrule)]
 [!code-vb[DataGrid_Validation#CourseValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_validation/vb/mainwindow.xaml.vb#coursevalidationrule)]  
  
 Im folgenden Beispiel wird die <xref:System.Windows.Controls.DataGrid.RowValidationRules%2A> Eigenschaft in XAML. Die <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> -Eigenschaftensatz auf <xref:System.Windows.Controls.ValidationStep.UpdatedValue> , damit die Überprüfung wird nur verwendet werden, nachdem das gebundene Datenobjekt aktualisiert wird. Wenn ein Benutzer ein Enddatum, die vor dem Startdatum liegt angibt, wird ein rotes Ausrufezeichen (!) in die Zeilenüberschrift angezeigt.  
  
 [!code-xaml[DataGrid_Validation#RowValidationRulesXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_validation/cs/mainwindow.xaml#rowvalidationrulesxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das Datenelement um sichtbar zu machen.</param>
        <summary>Scrollt den <see cref="T:System.Windows.Controls.DataGrid" /> vertikal, um die Zeile für das angegebene Datenelement anzuzeigen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="item" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (object item, System.Windows.Controls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(object item, class System.Windows.Controls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="column" Type="System.Windows.Controls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="item">Das Datenelement um sichtbar zu machen.</param>
        <param name="column">Die Spalte um sichtbar zu machen.</param>
        <summary>Scrollt den <see cref="T:System.Windows.Controls.DataGrid" /> vertikal und horizontal auf eine Zelle für das angegebene Datenelement und die Spalte anzuzeigen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `column` ist `null`, nur ein vertikaler Bildlauf durchgeführt wird. Wenn `item` ist `null`, nur ein horizontaler Bildlauf durchgeführt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAllCells">
      <MemberSignature Language="C#" Value="public void SelectAllCells ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAllCells() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.SelectAllCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wählt alle Zellen in der <see cref="T:System.Windows.Controls.DataGrid" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Tastenkombination für die Auswahl aller Zellen wird STRG + A.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAllCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAllCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAllCommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.SelectAllCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Befehl, der die Absicht an, wählen Sie alle Zellen in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Die <see cref="P:System.Windows.Input.ApplicationCommands.SelectAll" /> -Befehl, der die Absicht an, wählen Sie alle Zellen in der <see cref="T:System.Windows.Controls.DataGrid" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedCells">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Controls.DataGridCellInfo&gt; SelectedCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Controls.DataGridCellInfo&gt; SelectedCells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.SelectedCells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Controls.DataGridCellInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste von Zellen, die derzeit ausgewählt sind.</summary>
        <value>Die Liste der Zellen, die derzeit ausgewählt sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt drei Auswahlmodi für <xref:System.Windows.Controls.DataGrid>. Der Auswahlmodus festgelegt ist, mit der <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> Eigenschaft. Je nach den <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A>, <xref:System.Windows.Controls.DataGrid.SelectedCells%2A> oder <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> enthält eine Auflistung von ausgewählten Elementen, wie in der folgenden Tabelle definiert.  
  
|<xref:System.Windows.Controls.DataGridSelectionUnit>-Wert|<xref:System.Windows.Controls.DataGrid.SelectedCells%2A>-Wert|<xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A>-Wert|  
|------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.DataGridSelectionUnit.Cell>|Auflistung der ausgewählten Zellen|Empty|  
|<xref:System.Windows.Controls.DataGridSelectionUnit.FullRow>|Auflistung von Zellen in den ausgewählten Zeilen|Auflistung der ausgewählten Zeilen|  
|<xref:System.Windows.Controls.DataGridSelectionUnit.CellOrRowHeader>|Auflistung der ausgewählten Zellen, einschließlich aller Zellen in einer ausgewählten Zeile.|Auflistung von ausgewählten Zeilen oder leer, wenn keine vollständige Zeilen ausgewählt werden|  
  
 Wenn eine Zelle ausgewählt ist, die <xref:System.Windows.Controls.DataGridCell.Selected?displayProperty=nameWithType> Ereignis wird ausgelöst, die <xref:System.Windows.Controls.DataGridCell.IsSelected%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, und die Zelle hinzugefügt wird die <xref:System.Windows.Controls.DataGrid.SelectedCells%2A> Auflistung.  
  
 Wenn eine Zeile ausgewählt ist, die <xref:System.Windows.Controls.DataGridRow.Selected?displayProperty=nameWithType> Ereignis wird ausgelöst, die <xref:System.Windows.Controls.DataGridRow.IsSelected%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, und die Zeile hinzugefügt wird die <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> Auflistung.  
  
 Beim Ändern der Auswahl der <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> und <xref:System.Windows.Controls.DataGrid.SelectedCellsChanged> Ereignisse werden ausgelöst, wenn die neue oder alten Auswahl eine Zeile enthält. Die <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> Ereignis wird nicht ausgelöst, wenn die neue oder alten Auswahl nur Zellen enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedCellsChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.SelectedCellsChangedEventHandler SelectedCellsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.SelectedCellsChangedEventHandler SelectedCellsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedCellsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die <see cref="P:System.Windows.Controls.DataGrid.SelectedCells" /> Auflistung geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können behandeln die <xref:System.Windows.Controls.DataGrid.SelectedCellsChanged> Ereignis benachrichtigt werden, wenn die Auflistung der ausgewählten Zellen geändert wird. Wenn die Auswahl vollständige Zeilen umfasst die <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged?displayProperty=nameWithType> Ereignis wird auch ausgelöst.  
  
 Können Sie abrufen, die <xref:System.Windows.Controls.SelectedCellsChangedEventArgs.AddedCells%2A> und <xref:System.Windows.Controls.SelectedCellsChangedEventArgs.RemovedCells%2A> aus der <xref:System.Windows.Controls.SelectedCellsChangedEventArgs> im Ereignishandler.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie behandelt die <xref:System.Windows.Controls.DataGrid.SelectedCellsChanged> Ereignis, und deaktivieren Sie die Werte in die neu ausgewählten Zellen.  
  
 [!code-xaml[DataGrid_CellSelection#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_cellselection/cs/datagrid_cellselection/window1.xaml#1)]  
  
 [!code-csharp[DataGrid_CellSelection#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datagrid_cellselection/cs/datagrid_cellselection/window1.xaml.cs#3)]
 [!code-vb[DataGrid_CellSelection#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datagrid_cellselection/vb/datagrid_cellselection_vb/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, wie Zeilen und Zellen in ausgewählt werden der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Einer der Enumerationswerte, der angibt, wie Zeilen und Zellen ausgewählt werden in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid.SelectionMode%2A> und <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> Eigenschaften definieren zusammen die Verhalten der Funktionsauswahl für den <xref:System.Windows.Controls.DataGrid>.  
  
 Wenn im Auswahlmodus <xref:System.Windows.Controls.DataGridSelectionMode.Extended>, der Benutzer kann mehrere Elemente, in dem der Typ wird, durch definiert, Auswählen der <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> Eigenschaft. Wenn im Auswahlmodus <xref:System.Windows.Controls.DataGridSelectionMode.Single>, die Benutzer kann nur einzelne Elemente auswählen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionUnit">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataGridSelectionUnit SelectionUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DataGridSelectionUnit SelectionUnit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.SelectionUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridSelectionUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob in Zeilen und/oder Zellen ausgewählt werden kann die <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Einer der Enumerationswerte, der angibt, ob Zeilen, Zellen oder beidem in ausgewählt werden, können die <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.DataGridSelectionUnit.FullRow" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.DataGrid.SelectionMode%2A> und <xref:System.Windows.Controls.DataGrid.SelectionUnit%2A> Eigenschaften definieren zusammen die Verhalten der Funktionsauswahl für den <xref:System.Windows.Controls.DataGrid>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionUnitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionUnitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionUnitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.SelectionUnitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDetailsVisibilityForItem">
      <MemberSignature Language="C#" Value="public void SetDetailsVisibilityForItem (object item, System.Windows.Visibility detailsVisibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDetailsVisibilityForItem(object item, valuetype System.Windows.Visibility detailsVisibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem(System.Object,System.Windows.Visibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="detailsVisibility" Type="System.Windows.Visibility" />
      </Parameters>
      <Docs>
        <param name="item">Das Objekt in der Zeile für die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> festgelegt wird.</param>
        <param name="detailsVisibility">Die <see cref="T:System.Windows.Visibility" /> festzulegende für die Zeile, die das Element enthält.</param>
        <summary>Legt den Wert für die <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> -Eigenschaft für die <see cref="T:System.Windows.Controls.DataGridRow" /> , die das angegebene Objekt enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem%2A> Methode bei einer <xref:System.Windows.Controls.DataGridRow> derzeit nicht vorhanden für eine `item`, z. B. während eine Zeile automatisch generiert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.DataGridSortingEventHandler Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.DataGridSortingEventHandler Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataGridSortingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Spalte sortiert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadingRow">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowEventArgs&gt; UnloadingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowEventArgs&gt; UnloadingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.UnloadingRow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein <see cref="T:System.Windows.Controls.DataGridRow" /> Objekt ist für die Wiederverwendung verfügbar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zur Verbesserung der Leistung der <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true` standardmäßig. Wenn die <xref:System.Windows.Controls.DataGrid.EnableRowVirtualization%2A> -Eigenschaftensatz auf `true`, die <xref:System.Windows.Controls.DataGrid> instanziieren keine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement in die gebundene Datenquelle. Stattdessen die <xref:System.Windows.Controls.DataGrid> erstellt <xref:System.Windows.Controls.DataGridRow> Objekte nur, wenn sie benötigt werden, und so viel wie möglich wiederverwendet. Z. B. die <xref:System.Windows.Controls.DataGrid> erstellt eine <xref:System.Windows.Controls.DataGridRow> Objekt für jedes Datenelement, das befindet sich derzeit in der Ansicht und die Zeile wiederverwendet wird, wenn es nicht aus der Sicht einen Bildlauf durchführt.  
  
 Dieses Ereignis ermöglicht es Ihnen, nehmen alle erforderlichen Änderungen an einer Zeile, bevor er wiederverwendet werden. Dieses Ereignis in der Regel verwenden, um Änderungen rückgängig zu machen, die in vorgenommen wurden eine <xref:System.Windows.Controls.DataGrid.LoadingRow> -Ereignishandler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadingRowDetails">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt; UnloadingRowDetails;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DataGridRowDetailsEventArgs&gt; UnloadingRowDetails" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DataGridRowDetailsEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zeile Details-Element für die Wiederverwendung verfügbar wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt einmal für jede Zeile, auf die eine neue Zeile Detailvorlage angewendet wird, oder für die Vorlage für eine Zeile Details entfernt wird. Eine neue Detailvorlage für angewendet oder entfernt, die in einem der folgenden Fälle:  
  
-   Die Zeile <xref:System.Windows.Controls.DataGridRow.DetailsTemplate%2A> Eigenschaftswert ändert.  
  
-   Die Zeile <xref:System.Windows.Controls.DataGridRow.DetailsTemplate%2A> Eigenschaftswert ist `null` und <xref:System.Windows.Controls.DataGrid.RowDetailsTemplate%2A> Eigenschaftswert ändert.  
  
 Dieses Ereignis können Sie alle notwendigen Änderungen an das Zeilenelement Details vornehmen, bevor er wiederverwendet wird. Dieses Ereignis wird normalerweise verwendet werden, um Änderungen rückgängig zu machen, die in vorgenommen wurden eine <xref:System.Windows.Controls.DataGrid.LoadingRowDetails> -Ereignishandler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAllCells">
      <MemberSignature Language="C#" Value="public void UnselectAllCells ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAllCells() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataGrid.UnselectAllCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Auswahl alle Zellen in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalGridLinesBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush VerticalGridLinesBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush VerticalGridLinesBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Pinsel, der zum Zeichnen von vertikalen Rasterlinien verwendet wird.</summary>
        <value>Der Pinsel, der verwendet wird, um das vertikale Raster zu zeichnen, Zeilen in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist schwarz <see cref="T:System.Windows.Media.SolidColorBrush" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vertikale Gitternetzlinien Trennen der Spalten in der <xref:System.Windows.Controls.DataGrid>. Diese Eigenschaft hat keine Auswirkung, wenn die <xref:System.Windows.Controls.DataGrid.GridLinesVisibility%2A> -Eigenschaftensatz auf <xref:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal> oder <xref:System.Windows.Controls.DataGridGridLinesVisibility.None>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalGridLinesBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalGridLinesBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalGridLinesBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Wert, der vertikale Schiebeleisten angibt werden angezeigt, in der <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
        <value>Einer der Enumerationswerte, der angibt, die Sichtbarkeit der vertikalen Bildlaufleisten in der <see cref="T:System.Windows.Controls.DataGrid" />. Der registrierte Standardwert ist <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />. Weitere Informationen dazu, was den Wert beeinflussen können, finden Sie unter <see cref="T:System.Windows.DependencyProperty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
