<Type Name="WrapPanel" FullName="System.Windows.Controls.WrapPanel">
  <TypeSignature Language="C#" Value="public class WrapPanel : System.Windows.Controls.Panel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WrapPanel extends System.Windows.Controls.Panel" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.WrapPanel" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ordnet untergeordnete Elemente nacheinander von links nach rechts und umbricht den Inhalt in die nächste Zeile am Rand des enthaltenden Felds. Die nachfolgende Sortierung erfolgt von oben nach unten oder von rechts nach links, abhängig vom Wert der <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> Eigenschaft.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Controls.WrapPanel> enthält eine Auflistung von <xref:System.Windows.UIElement> Objekte, die in der <xref:System.Windows.Controls.Panel.Children%2A> Eigenschaft. Alle untergeordneten Elemente des eine <xref:System.Windows.Controls.WrapPanel> empfangen die Layoutpartitionsgröße von <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> multipliziert <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Windows.Controls.WrapPanel> im Code und [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-cpp[WrapPanel_Intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[WrapPanel_Intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[WrapPanel_Intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[WrapPanel_Intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WrapPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.WrapPanel" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">Die <see cref="T:System.Windows.Size" /> , dass dieses Element verwenden soll, um die untergeordneten Elemente anzuordnen.</param>
        <summary>Ordnet den Inhalt einer <see cref="T:System.Windows.Controls.WrapPanel" /> Element.</summary>
        <returns>Die <see cref="T:System.Windows.Size" /> , die die angeordnete Größe dieses darstellt <see cref="T:System.Windows.Controls.WrapPanel" /> Element und seine untergeordneten Elemente.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public double ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der die Höhe aller Elemente angibt, die in enthalten sind ein <see cref="T:System.Windows.Controls.WrapPanel" />.</summary>
        <value>Die <see cref="T:System.Double" /> , die stellt die einheitlichen Höhe aller Elemente innerhalb der <see cref="T:System.Windows.Controls.WrapPanel" />. Der Standardwert ist <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft nicht festgelegt ist (oder wenn sie, um festgelegt ist `Auto` in XAML oder zu `Double.NaN` im Code), die Größe der Layoutpartition auf die gewünschte Größe des untergeordneten Elements entspricht.  
  
 Ein untergeordnetes Element von einem <xref:System.Windows.Controls.WrapPanel> möglicherweise die Height-Eigenschaft explizit festgelegt. <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A>Gibt die Größe der Layoutpartition, die von reservierten der <xref:System.Windows.Controls.WrapPanel> für das untergeordnete Element. Folglich <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A> hat Vorrang vor einer Höhe des Elements.  
  
<a name="xamlAttributeUsage_ItemHeight"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object ItemHeight="double"/>  
- or -  
<object ItemHeight="qualifiedDouble"/>  
- or -  
<object ItemHeight="Auto"/>  
```  
  
<a name="xamlValues_ItemHeight"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *double*  
 <xref:System.Double>  
  
 Die Zeichenfolgendarstellung einer <xref:System.Double> Wert größer als oder gleich `0.0034` jedoch gleich oder kleiner als `160000`. Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichenfolgen müssen nicht explizit Dezimaltrennzeichen enthalten.  
  
 *qualifiedDouble*  
 Ein *doppelte* Wert wie oben beschrieben (ausgenommen `Auto`) gefolgt von einem der folgenden Einheitenbezeichner: `px`, `in`, `cm`, `pt`.  
  
 `px`(Standard)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll. 1 In == 96px  
  
 `cm`ist Zentimeter an. 1cm==(96/2.54) px  
  
 `pt`ist die Punkte. 1pt==(96/72) px  
  
 Auto  
 Führt dazu, dass die Zeilenhöhe automatisch anhand der aktuellen Schriftartmerkmale bestimmt wird.  Entspricht einem Eigenschaftswert des <xref:System.Double.NaN>.  
  
<a name="dependencyPropertyInfo_ItemHeight"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.WrapPanel.ItemHeightProperty>|  
|Metadaten-Eigenschaften festgelegt auf.`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A> Eigenschaft im [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.ItemHeight%2A> Eigenschaft mithilfe von Code.  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.ItemHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemWidth">
      <MemberSignature Language="C#" Value="public double ItemWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ItemWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.ItemWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der die Breite aller Elemente angibt, die in enthalten sind ein <see cref="T:System.Windows.Controls.WrapPanel" />.</summary>
        <value>Ein <see cref="T:System.Double" /> , die die einheitliche Breite aller Elemente, die in enthaltenen darstellt der <see cref="T:System.Windows.Controls.WrapPanel" />. Der Standardwert ist <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft nicht festgelegt ist (oder wenn sie, um festgelegt ist `Auto` in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] oder `Double.NaN` im Code), die Größe der Layoutpartition ist gleich der <xref:System.Windows.UIElement.DesiredSize%2A> des untergeordneten Elements.  
  
 Ein untergeordnetes Element von einem <xref:System.Windows.Controls.WrapPanel> möglicherweise die Width-Eigenschaft explizit festgelegt. <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A>Gibt die Größe der Layoutpartition, die von reservierten der <xref:System.Windows.Controls.WrapPanel> für das untergeordnete Element. Folglich <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> hat Vorrang vor einer Breite des Elements.  
  
<a name="xamlAttributeUsage_ItemWidth"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object ItemWidth="double"/>  
- or -  
<object ItemWidth="qualifiedDouble"/>  
- or -  
<object ItemWidth="Auto"/>  
```  
  
<a name="xamlValues_ItemWidth"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *double*  
 <xref:System.Double>  
  
 Die Zeichenfolgendarstellung einer <xref:System.Double> Wert größer als oder gleich `0.0034` jedoch gleich oder kleiner als `160000`. Ein nicht qualifizierter Wert wird in geräteunabhängigen Pixeln gemessen. Zeichenfolgen müssen nicht explizit Dezimaltrennzeichen enthalten.  
  
 *qualifiedDouble*  
 Ein *doppelte* Wert wie oben beschrieben (ausgenommen `Auto`) gefolgt von einem der folgenden Einheitenbezeichner: `px`, `in`, `cm`, `pt`.  
  
 `px`(Standard)[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in`ist Zoll. 1 In == 96px  
  
 `cm`ist Zentimeter an. 1cm==(96/2.54) px  
  
 `pt`ist die Punkte. 1pt==(96/72) px  
  
 Auto  
 Führt dazu, dass die Zeilenhöhe automatisch anhand der aktuellen Schriftartmerkmale bestimmt wird.  Entspricht einem Eigenschaftswert des <xref:System.Double.NaN>.  
  
<a name="dependencyPropertyInfo_ItemWidth"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.WrapPanel.ItemWidthProperty>|  
|Metadaten-Eigenschaften festgelegt auf.`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> Eigenschaft im [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.ItemWidth%2A> Eigenschaft mithilfe von Code.  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.ItemWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">Eine Obergrenze <see cref="T:System.Windows.Size" /> nicht überschritten werden darf.</param>
        <summary>Misst die untergeordneten Elemente von einem <see cref="T:System.Windows.Controls.WrapPanel" /> in Vorwegnahme ihrer Anordnung während der <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> übergeben.</summary>
        <returns>Die <see cref="T:System.Windows.Size" /> , die die gewünschte Größe des Elements darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WrapPanel.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der die Dimension angibt, in der untergeordneten Inhalt angeordnet sind.</summary>
        <value>Ein <see cref="T:System.Windows.Controls.Orientation" /> -Wert, der die physische Ausrichtung von Inhalten innerhalb der <see cref="T:System.Windows.Controls.WrapPanel" /> Horizontal oder vertikal. Der Standardwert ist <see cref="F:System.Windows.Controls.Orientation.Horizontal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Controls.WrapPanel.Orientation%2A> -Eigenschaftensatz auf `Horizontal`, des untergeordneten Inhalts bildet horizontale Zeilen zuerst und wenn nötig vertikale Stapeln von Zeilen bildet. Wenn die <xref:System.Windows.Controls.WrapPanel.Orientation%2A> -Eigenschaftensatz auf `Vertical`, untergeordneter Inhalt in einer vertikalen Spalte zuerst angeordnet wird und wenn nicht genügend Speicherplatz vorhanden ist, Umbruch und zusätzliche Spalten in horizontaler Richtung hinzugefügt.  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.WrapPanel.OrientationProperty>|  
|Metadaten-Eigenschaften festgelegt auf.`true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.Orientation%2A> Eigenschaft im [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 [!code-xaml[WrapPanel_Intro2#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro2/CS/default.xaml#1)]  
  
 Im folgende Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Controls.WrapPanel.Orientation%2A> Eigenschaft mithilfe von Code.  
  
 [!code-cpp[wrappanel_intro#1](~/samples/snippets/cpp/VS_Snippets_Wpf/WrapPanel_Intro/CPP/WrapPanel_Code.cpp#1)]
 [!code-csharp[wrappanel_intro#1](~/samples/snippets/csharp/VS_Snippets_Wpf/WrapPanel_Intro/CSharp/WrapPanel_Code.cs#1)]
 [!code-vb[wrappanel_intro#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WrapPanel_Intro/VisualBasic/WrapPanel_vb.vb#1)]
 [!code-xaml[wrappanel_intro#1](~/samples/snippets/xaml/VS_Snippets_Wpf/WrapPanel_Intro/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.WrapPanel.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
