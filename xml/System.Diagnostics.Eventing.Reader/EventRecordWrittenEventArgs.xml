<Type Name="EventRecordWrittenEventArgs" FullName="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
  <TypeSignature Language="C#" Value="public sealed class EventRecordWrittenEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRecordWrittenEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wenn die <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> Ereignis wird ausgelöst, eine Instanz dieses Objekts wird übergeben, um die Delegatmethode, die das Ereignis behandelt. Dieses Objekt enthält das Ereignis, das in das Anwendungsereignisprotokoll oder die Ausnahme, die aufgetreten sind, wenn das Ereignisabonnement konnte nicht veröffentlicht wurde.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Z. B. Code mit dieser Klasse finden Sie unter [wie: Abonnieren von Ereignissen im Ereignisprotokoll](http://msdn.microsoft.com/en-us/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EventException">
      <MemberSignature Language="C#" Value="public Exception EventException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception EventException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausnahme, die das Ereignisabonnement Fehler aufgetreten ist. Die Ausnahme enthält eine Beschreibung, warum das Abonnement konnte nicht an.</summary>
        <value>Gibt ein <see cref="T:System.Exception" /> Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventRecord">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord EventRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventRecord EventRecord" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ereignisdatensatz, der in das Ereignisprotokoll veröffentlicht wird. Dieses Ereignis entspricht den Kriterien der Abfrage in das Ereignisabonnement angegeben.</summary>
        <value>Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekt zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
