<Type Name="DbCommandTree" FullName="System.Data.Common.CommandTrees.DbCommandTree">
  <TypeSignature Language="C#" Value="public abstract class DbCommandTree" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandTree extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbCommandTree" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Eine unveränderliche Klasse, die die grundlegende Funktionalität für die Abfrage, Insert, Update, Delete und Funktion aufruftypen Befehl Struktur implementiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Data.Common.CommandTrees.DbCommandTree> ist eine abstrakte Klasse, die zur Darstellung von Abfragen, Data Manipulation Language (DML)-Operationen und Aufrufen von Funktionen bzw. Prozeduren verwendet wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Metadata.Edm.TypeUsage&gt;&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Metadata.Edm.TypeUsage&gt;&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Metadata.Edm.TypeUsage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen und den entsprechenden Typ jedes Parameters ab, auf den innerhalb dieser <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" /> verwiesen werden kann.</summary>
        <value>Der Name und der entsprechende Typ jedes Parameters, auf den innerhalb dieser <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" /> verwiesen werden kann.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
