<Type Name="DbLambda" FullName="System.Data.Common.CommandTrees.DbLambda">
  <TypeSignature Language="C#" Value="public sealed class DbLambda" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbLambda extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbLambda" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Lambdafunktion, die aufgerufen werden kann, um in Form einer <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hier wird kein Inhalt aktualisiert; fügen Sie hier kein Material hinzu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Body" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLambda.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text des Lambda-Ausdrucks ab.</summary>
        <value>Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> , die den Text des Lambda-Funktion darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</param>
        <param name="variables">Eine <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.    Diese Variablen sind gültig für die Verwendung im **body**-Ausdruck.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Variablen** **Text**</exception>
        <exception cref="T:System.ArgumentException">**Variablen**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</param>
        <param name="variables">Eine <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.    Diese Variablen sind gültig für die Verwendung im **body**-Ausdruck.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Variablen** **Text**</exception>
        <exception cref="T:System.ArgumentException">**Variablen**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit der ein einzelnes Argument des angegebenen Typs, durch die angegebene Funktion definiert wird.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit dem angegebenen Text und die einzelnen formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Func`4&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Func`5&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Func`6&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** lambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Func`7&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Func`8&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Func`9&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Func`10&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Func`11&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Func`12&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, System.Data.Metadata.Edm.TypeUsage argument12Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Data.Metadata.Edm.TypeUsage argument12Type, class System.Func`13&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument12Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="argument12Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zwölften Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **argument12Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, System.Data.Metadata.Edm.TypeUsage argument12Type, System.Data.Metadata.Edm.TypeUsage argument13Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Data.Metadata.Edm.TypeUsage argument12Type, class System.Data.Metadata.Edm.TypeUsage argument13Type, class System.Func`14&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument12Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument13Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="argument12Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zwölften Arguments der Lambda-Funktion</param>
        <param name="argument13Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dreizehnten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **argument12Type** **argument13Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, System.Data.Metadata.Edm.TypeUsage argument12Type, System.Data.Metadata.Edm.TypeUsage argument13Type, System.Data.Metadata.Edm.TypeUsage argument14Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Data.Metadata.Edm.TypeUsage argument12Type, class System.Data.Metadata.Edm.TypeUsage argument13Type, class System.Data.Metadata.Edm.TypeUsage argument14Type, class System.Func`15&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument12Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument13Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument14Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="argument12Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zwölften Arguments der Lambda-Funktion</param>
        <param name="argument13Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dreizehnten Arguments der Lambda-Funktion</param>
        <param name="argument14Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierzehnten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **argument12Type** **argument13Type** **argument14Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, System.Data.Metadata.Edm.TypeUsage argument12Type, System.Data.Metadata.Edm.TypeUsage argument13Type, System.Data.Metadata.Edm.TypeUsage argument14Type, System.Data.Metadata.Edm.TypeUsage argument15Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Data.Metadata.Edm.TypeUsage argument12Type, class System.Data.Metadata.Edm.TypeUsage argument13Type, class System.Data.Metadata.Edm.TypeUsage argument14Type, class System.Data.Metadata.Edm.TypeUsage argument15Type, class System.Func`16&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument12Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument13Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument14Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument15Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="argument12Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zwölften Arguments der Lambda-Funktion</param>
        <param name="argument13Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dreizehnten Arguments der Lambda-Funktion</param>
        <param name="argument14Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierzehnten Arguments der Lambda-Funktion</param>
        <param name="argument15Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünfzehnten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **argument12Type** **argument13Type** **argument14Type** **argument15Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Create (System.Data.Metadata.Edm.TypeUsage argument1Type, System.Data.Metadata.Edm.TypeUsage argument2Type, System.Data.Metadata.Edm.TypeUsage argument3Type, System.Data.Metadata.Edm.TypeUsage argument4Type, System.Data.Metadata.Edm.TypeUsage argument5Type, System.Data.Metadata.Edm.TypeUsage argument6Type, System.Data.Metadata.Edm.TypeUsage argument7Type, System.Data.Metadata.Edm.TypeUsage argument8Type, System.Data.Metadata.Edm.TypeUsage argument9Type, System.Data.Metadata.Edm.TypeUsage argument10Type, System.Data.Metadata.Edm.TypeUsage argument11Type, System.Data.Metadata.Edm.TypeUsage argument12Type, System.Data.Metadata.Edm.TypeUsage argument13Type, System.Data.Metadata.Edm.TypeUsage argument14Type, System.Data.Metadata.Edm.TypeUsage argument15Type, System.Data.Metadata.Edm.TypeUsage argument16Type, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Create(class System.Data.Metadata.Edm.TypeUsage argument1Type, class System.Data.Metadata.Edm.TypeUsage argument2Type, class System.Data.Metadata.Edm.TypeUsage argument3Type, class System.Data.Metadata.Edm.TypeUsage argument4Type, class System.Data.Metadata.Edm.TypeUsage argument5Type, class System.Data.Metadata.Edm.TypeUsage argument6Type, class System.Data.Metadata.Edm.TypeUsage argument7Type, class System.Data.Metadata.Edm.TypeUsage argument8Type, class System.Data.Metadata.Edm.TypeUsage argument9Type, class System.Data.Metadata.Edm.TypeUsage argument10Type, class System.Data.Metadata.Edm.TypeUsage argument11Type, class System.Data.Metadata.Edm.TypeUsage argument12Type, class System.Data.Metadata.Edm.TypeUsage argument13Type, class System.Data.Metadata.Edm.TypeUsage argument14Type, class System.Data.Metadata.Edm.TypeUsage argument15Type, class System.Data.Metadata.Edm.TypeUsage argument16Type, class System.Func`17&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; lambdaFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument1Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument2Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument3Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument4Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument5Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument6Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument7Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument8Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument9Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument10Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument11Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument12Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument13Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument14Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument15Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="argument16Type" Type="System.Data.Metadata.Edm.TypeUsage" />
        <Parameter Name="lambdaFunction" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="argument1Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des ersten Arguments der Lambda-Funktion</param>
        <param name="argument2Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zweiten Arguments der Lambda-Funktion</param>
        <param name="argument3Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dritten Arguments der Lambda-Funktion</param>
        <param name="argument4Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierten Arguments der Lambda-Funktion</param>
        <param name="argument5Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünften Arguments der Lambda-Funktion</param>
        <param name="argument6Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechsten Arguments der Lambda-Funktion</param>
        <param name="argument7Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des siebten Arguments der Lambda-Funktion</param>
        <param name="argument8Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des achten Arguments der Lambda-Funktion</param>
        <param name="argument9Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des neunten Arguments der Lambda-Funktion</param>
        <param name="argument10Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zehnten Arguments der Lambda-Funktion</param>
        <param name="argument11Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des elften Arguments der Lambda-Funktion</param>
        <param name="argument12Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des zwölften Arguments der Lambda-Funktion</param>
        <param name="argument13Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des dreizehnten Arguments der Lambda-Funktion</param>
        <param name="argument14Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des vierzehnten Arguments der Lambda-Funktion</param>
        <param name="argument15Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des fünfzehnten Arguments der Lambda-Funktion</param>
        <param name="argument16Type">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> , definiert den EDM-Typ des sechzehnten Arguments der Lambda-Funktion</param>
        <param name="lambdaFunction">Eine Funktion, die die Logik der Lambda-Funktion als definiert ein<see cref="T:System.Data.Common.CommandTrees.DbExpression" /></param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit Argumenten der angegebenen Typen, wie er durch die angegebene Funktion.</summary>
        <returns>Eine neue DbLambda, die eine Inline-Lambda-Funktion mit den angegebenen Body- und formalen Parameter beschreibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**argument1Type** **argument2Type** **argument3Type** **argument4Type** **argument5Type** ** argument6Type** **argument7Type** **argument8Type** **argument9Type** **argument10Type** **argument11Type** **argument12Type** **argument13Type** **argument14Type** **argument15Type** **argument16Type** **LambdaFunction**</exception>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLambda.Variables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameter des Lambda-Ausdrucks ab.</summary>
        <value>Die Liste der Parameter der Lambda-Funktion als DbVariableReferenceExpression-Objekte dargestellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
