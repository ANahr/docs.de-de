<Type Name="AccessKeyManager" FullName="System.Windows.Input.AccessKeyManager">
  <TypeSignature Language="C#" Value="public sealed class AccessKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AccessKeyManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyManager" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet die Registrierung aller Zugriffsschlüssel und die Behandlung von Tastaturbefehlen zwischen Windows Forms, Win32- und Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Input.AccessKeyManager> -Objekt wird erstellt, bei Bedarf eines pro <xref:System.Windows.Threading.Dispatcher>.  
  
 Die <xref:System.Windows.Input.AccessKeyManager> angefügt ist, als ein Ereignishandler für <xref:System.Windows.Input.InputManager.PostProcessInput> und macht Methoden für <xref:System.Windows.Input.AccessKeyManager.Register%2A> und <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> Zugriffsschlüssel.  
  
 Wenn die registrierte Zugriffstaste gedrückt wird, die <xref:System.Windows.Input.AccessKeyManager> Aufrufe der <xref:System.Windows.UIElement.OnAccessKey%2A> -Methode für den Target-Element.  
  
 Ein Element kann eine beliebige Anzahl von Zugriffstasten zugeordnet werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessKeyPressedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent AccessKeyPressedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> angefügtes Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyRegistered">
      <MemberSignature Language="C#" Value="public static bool IsKeyRegistered (object scope, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyRegistered(object scope, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Die Präsentationsquelle zum Abfragen von <c>Schlüssel</c>.</param>
        <param name="key">Die abzufragende Taste.</param>
        <summary>Gibt an, ob die angegebene Taste als Tastenkombination im angegebenen Bereich registriert ist.</summary>
        <returns>
          <see langword="true" />Wenn die Taste registriert ist; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public static bool ProcessKey (object scope, string key, bool isMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ProcessKey(object scope, string key, bool isMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope">Der Bereich für die Tastenkombination.</param>
        <param name="key">Die Tastenkombination.</param>
        <param name="isMultiple">Gibt an, ob <c>Schlüssel</c> mehrere Übereinstimmungen hat.</param>
        <summary>Verarbeitet die angegebenen Tastenkombinationen als wäre eine <see cref="E:System.Windows.UIElement.KeyDown" /> Ereignis für den Schlüssel wurde übergeben, um die <see cref="T:System.Windows.Input.AccessKeyManager" />.</summary>
        <returns>
          <see langword="true" />Wenn es befinden sich mehrere übereinstimmende Tasten; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">Die Tastenkombination.</param>
        <param name="element">Zuzuordnende Element <c>Schlüssel</c> mit.</param>
        <summary>Ordnet die angegebenen Tastenkombinationen dem angegebenen Element zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Tastenkombinationen gedrückt wird, die <xref:System.Windows.UIElement.OnAccessKey%2A> Methode `element` aufgerufen wird.  
  
 Ein Element kann eine beliebige Anzahl von Zugriffstasten zugeordnet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt das angegebene <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> -Ereignishandler aus dem angegebenen Objekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key">Die Tastenkombination.</param>
        <param name="element">Das Element, aus dem Aufheben der Zuordnung <c>Schlüssel</c>.</param>
        <summary>Hebt die Zuordnung der angegebenen Tastenkombinationen für das angegebene Element auf.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
