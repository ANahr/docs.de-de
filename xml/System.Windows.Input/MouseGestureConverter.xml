<Type Name="MouseGestureConverter" FullName="System.Windows.Input.MouseGestureConverter">
  <TypeSignature Language="C#" Value="public class MouseGestureConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGestureConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGestureConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konvertiert eine <see cref="T:System.Windows.Input.MouseGesture" /> -Objekts in und aus anderen Typen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.MouseGestureConverter> Klasse konvertiert nur eine Instanz von <xref:System.Windows.Input.MouseGesture> in und aus einem <xref:System.String>.  
  
 Die <xref:System.Windows.Input.MouseGestureConverter> konvertiert in und aus einem <xref:System.String> verwenden das "+"-Zeichen als Trennzeichen zwischen der Zusatztasten und die Mausaktion.  Z. B. die Zeichenfolge `Control+RightClick` in konvertiert eine <xref:System.Windows.Input.MouseGesture> mit einem <xref:System.Windows.Input.MouseGesture.Modifiers%2A> -Eigenschaft gleich <xref:System.Windows.Input.ModifierKeys.Control> und <xref:System.Windows.Input.MouseGesture.MouseAction%2A> -Eigenschaft gleich <xref:System.Windows.Input.MouseAction.RightClick>.  
  
<a name="xamlTextUsage_MouseGestureConverter"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGestureConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.MouseGestureConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="sourceType">Der Typ für die Konvertierung ausgewertet wird.</param>
        <summary>Bestimmt, ob ein Objekt des angegebenen Typs kann, mit einer Instanz von konvertiert werden <see cref="T:System.Windows.Input.MouseGesture" />, mit dem angegebenen Kontext.</summary>
        <returns>
          <see langword="true" /> wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="destinationType">Der Typ für die Konvertierung ausgewertet wird.</param>
        <summary>Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.MouseGesture" /> konvertiert werden kann, in den angegebenen Typ, mit dem angegebenen Kontext.</summary>
        <returns>
          <see langword="true" /> wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="culture">Kulturabhängige Informationen.</param>
        <param name="source">Das zu konvertierende Objekt.</param>
        <summary>Versucht, konvertiert das angegebene Objekt in eine <see cref="T:System.Windows.Input.MouseGesture" />, mit dem angegebenen Kontext.</summary>
        <returns>Das konvertierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.MouseGestureConverter> konvertiert in und aus einem <xref:System.String> mit dem Schlüssel "+" als Trennzeichen zwischen der Zusatztasten und die Mausaktion.  Z. B. die Zeichenfolge `Control+RightClick` in konvertiert eine <xref:System.Windows.Input.MouseGesture> mit einem <xref:System.Windows.Input.MouseGesture.Modifiers%2A> -Eigenschaft gleich <xref:System.Windows.Input.ModifierKeys.Control> und <xref:System.Windows.Input.MouseGesture.MouseAction%2A> -Eigenschaft gleich <xref:System.Windows.Input.MouseAction.RightClick>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="source" />konvertiert kann nicht werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="culture">Ein Formatierungskontext, der Informationen über die Umgebung bereitstellt, der dieser Konverter aufgerufen wird.</param>
        <param name="value">Das zu konvertierende Objekt.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Versucht, konvertieren Sie eine <see cref="T:System.Windows.Input.MouseGesture" /> unter Verwendung des angegebenen Kontexts, in den angegebenen Typ.</summary>
        <returns>Das konvertierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `destinationType`muss <xref:System.String>.  
  
 Die <xref:System.Windows.Input.MouseGestureConverter> konvertiert in und aus einem <xref:System.String> mit dem Schlüssel "+" als Trennzeichen zwischen der Zusatztasten und die Mausaktion.  Z. B. eine <xref:System.Windows.Input.MouseGesture> mit einem <xref:System.Windows.Input.MouseGesture.Modifiers%2A> -Eigenschaft gleich <xref:System.Windows.Input.ModifierKeys.Control> und <xref:System.Windows.Input.MouseGesture.MouseAction%2A> -Eigenschaft gleich <xref:System.Windows.Input.MouseAction.RightClick> konvertiert in die Zeichenfolge `Control+RightClick`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> kann nicht konvertiert werden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
