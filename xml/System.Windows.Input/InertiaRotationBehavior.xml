<Type Name="InertiaRotationBehavior" FullName="System.Windows.Input.InertiaRotationBehavior">
  <TypeSignature Language="C#" Value="public class InertiaRotationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InertiaRotationBehavior extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InertiaRotationBehavior" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Steuert die Verlangsamung einer Manipulation der Drehung während der Trägheit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.InertiaRotationBehavior> Klasse gibt das Verhalten einer Manipulation Drehung Trägheit wird.  Verwenden der <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior%2A> Eigenschaft in der <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignis, um die folgenden Aktionen ausführen:  
  
-   Angeben die ursprüngliche Geschwindigkeit der Trägheit Beginn durch Festlegen der <xref:System.Windows.Input.InertiaRotationBehavior.InitialVelocity%2A> Eigenschaft.  
  
-   Geben Sie die gewünschte Drehung der Manipulation, wenn Trägheit, durch Festlegen endet der <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> Eigenschaft.  
  
-   Geben Sie die gewünschte Verlangsamung der Trägheit durch Festlegen der <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A> Eigenschaft.  
  
 Legen Sie entweder die <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> oder <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>, aber nicht beides. Wenn Sie eine dieser Eigenschaften festlegen, wird die andere Eigenschaft geändert, um <xref:System.Double.NaN?displayProperty=nameWithType> , wenn er einen Wert aufweist.  
  
 Weitere Informationen zu Manipulationen, finden Sie unter der [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die <xref:System.Windows.UIElement.ManipulationInertiaStarting> Ereignishandler und legt die gewünschte Verlangsamung für Übersetzung, Erweiterung und Drehung, die während der Trägheit verwendet wird. In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaRotationBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InertiaRotationBehavior.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.InertiaRotationBehavior" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDeceleration">
      <MemberSignature Language="C#" Value="public double DesiredDeceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DesiredDeceleration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, oder legt Sie die Rate, mit die der Drehung verlangsamt wird in Grad pro Millisekunde im Quadrat fest.</summary>
        <value>Die Rate verlangsamt die Drehung in Grad pro Millisekunde im Quadrat. Die Standardeinstellung ist <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A> Eigenschaft, um die gewünschte Verlangsamung der Trägheit anzugeben. Legen Sie entweder die <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> oder <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>, aber nicht beides. Wenn Sie eine dieser Eigenschaften festlegen, wird die andere Eigenschaft geändert, um <xref:System.Double.NaN?displayProperty=nameWithType> , wenn er einen Wert aufweist.  
  
 Weitere Informationen zu Manipulationen, finden Sie unter der [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft ist auf unendlich festgelegt.  
  
 - oder -   
  
 Die Eigenschaft ist auf <see cref="F:System.Double.NaN" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="DesiredRotation">
      <MemberSignature Language="C#" Value="public double DesiredRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DesiredRotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaRotationBehavior.DesiredRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Drehung in Grad, am Ende der Trägheit Bewegung.</summary>
        <value>Die Drehung in Grad, am Ende der Trägheit Bewegung. Die Standardeinstellung ist <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> Eigenschaft, um die gewünschte Drehung der Manipulation anzugeben, wenn Trägheit endet. Legen Sie entweder die <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> oder <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>, aber nicht beides. Wenn Sie eine dieser Eigenschaften festlegen, wird die andere Eigenschaft geändert, um <xref:System.Double.NaN?displayProperty=nameWithType> , wenn er einen Wert aufweist.  
  
 Weitere Informationen zu Manipulationen, finden Sie unter der [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocity">
      <MemberSignature Language="C#" Value="public double InitialVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 InitialVelocity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InertiaRotationBehavior.InitialVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ermittelt oder definiert die anfänglichen Rate der Drehung zu Beginn der Trägheit-Phase.</summary>
        <value>Die erste Rate der Drehung zu Beginn der Trägheit-Phase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu Manipulationen, finden Sie unter der [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  Ein Beispiel für eine Anwendung, die auf Manipulationen reagiert, finden Sie unter [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
