<Type Name="MemberCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
  <TypeSignature Language="C#" Value="public abstract class MemberCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Basisklasse für die Serialisierung einer Reflektionsprimitive im Objektdiagramm enthalten sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> Klasse ist ein "Meta" Serialisierungsprogramm; d. h. ein Serialisierungsprogramm, das serialisiert einer Reflektionsprimitive im Objektdiagramm enthalten sind, sondern ist Teil des Objektdiagramms nicht serialisieren. Z. B. eine <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> zugeordnet würde eine <xref:System.ComponentModel.PropertyDescriptor> in der Reihenfolge, damit sie eine Eigenschaft zu serialisieren. <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>-Objekte Enable-Konstrukte, wie Eigenschaften und Ereignisse, logisch, anstatt ihre physikalische Unterstützung im Code haben.  
  
 Im Gegensatz zu <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> Klassen <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> Objekte müssen in der Lage, zu deserialisieren.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.ComponentModel.MemberDescriptor descriptor, System.CodeDom.CodeStatementCollection statements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.ComponentModel.MemberDescriptor descriptor, class System.CodeDom.CodeStatementCollection statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
      </Parameters>
      <Docs>
        <param name="manager">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
        <param name="value">Das Objekt, an dem das Element gebunden ist.</param>
        <param name="descriptor">Der Deskriptor der der zu serialisierende Member.</param>
        <param name="statements">Die <see cref="T:System.CodeDom.CodeStatementCollection" /> in die <c>Deskriptor</c> serialisiert wird.</param>
        <summary>Serialisiert die angegebene Memberdeskriptor auf den angegebenen Wert für eine anweisungssammlung an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt tatsächlich die Serialisierung. Wenn das Element serialisiert wird werden die erforderlichen Anweisungen auf die Auflistung von Anweisungen hinzugefügt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerialize">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.ComponentModel.MemberDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.ComponentModel.MemberDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">Der Serialisierungs-Manager, der für die Serialisierung verwendet werden soll.</param>
        <param name="value">Das Objekt, an dem das Element gebunden ist.</param>
        <param name="descriptor">Der Deskriptor der der zu serialisierende Member.</param>
        <summary>Bestimmt, ob der angegebene Member serialisiert werden soll.</summary>
        <returns>
          <see langword="true" />, wenn das Element beschriebenen <paramref name="descriptor" /> sollten serialisiert werden, andernfalls, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt `true` , wenn der angegebene Memberdeskriptor serialisiert werden sollen, oder `false` Wenn keine Notwendigkeit besteht, die Member zu serialisieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
