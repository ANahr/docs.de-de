<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Basisklasse für die Implementierung einer CodeDOM-basierten Designerladeprogramm bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>eine abstrakte Klasse, die ein vollständiges Designerladeprogramm enthält das Code Document Object Model (CodeDOM) basiert. Sie geben den CodeDOM-Parser und -Generator und einem Typauflösungsdienst.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">für Vollzugriff auf Systemressourcen verfügbar sind. "Demand" Werte: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Zugeordneten Zustand:</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> Designerladeprogramm verwenden.</summary>
        <value>Die <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> Designerladeprogramm verwenden</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Designerladeprogramm nicht analysiert oder Generieren von Code aus den zurückgegebenen <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, es unterstützt jedoch die Verwendung des Anbieters zum Abrufen einer <xref:System.CodeDom.Compiler.ICodeGenerator> , dass sie zum Überprüfen der Bezeichner in der Erstellung Dienst verwenden kann. Überprüfen Sie das Designerladeprogramm wird auch die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> um festzustellen, ob sie implementiert die <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> Schnittstelle. Weitere Informationen zu analysieren oder Generieren von Code, finden Sie unter der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> und <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> Methoden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die von der <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> Methode entfernt die Dienste, die hinzugefügt, indem die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> Methode.  
  
 Rufen Sie <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> auf, wenn Sie <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> nicht mehr benötigen. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>-Methode bewirkt, dass <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert Dienste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle beschreibt die ersetzbaren Dienste, von denen die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> fügt dem Dienstcontainer.  
  
|Begriff|Definition|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|Stellt Semantik zum Erstellen von Namen von Objekten bereit. Der Dienst verwendet die CodeDOM-Anbieters <xref:System.CodeDom.Compiler.ICodeGenerator> Benutzeroberfläche zum Erstellen von Namen, die gültige Bezeichner für die Sprache sind. Darüber hinaus unterstützt die Erstellung Namensdienst leere Namen. Leere Namen sollten als temporäre lokale Variablen während der Serialisierung interpretiert werden.|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|Ermöglicht es anderen Objekten um eine Gruppe von Komponenten in ein binäres Objekt zu serialisieren. Dieser Dienst wird am häufigsten von Funktionen, z. B. kopieren und einfügen oder rückgängig und wiederholen. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> Klasse bietet einen Designer Serialisierung-Dienst, der zum Erstellen von CodeDOM-Strukturen für Objekte basiert.|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|Dieser Dienst ersetzt <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> als Mittel zur Serialisierung von Komponenten in ein binäres Objekt.|  
  
 Ausführliche ersetzbare und nicht ersetzbare Dienste finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> wurde nicht initialisiert, oder das Designerladeprogramm suchmodulquelle wurde keinen Typauflösungsdienst, die für die CodeDom-Serialisierung erforderlich ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert, der angibt, ob ein erneutes Laden erforderlich ist.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> entscheidet erneut erforderlich ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> Methode überprüft das Vorhandensein der <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> -Schnittstelle für die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>. Der Anbieter die CodeDOM-Baum Analysepunkt und übergeben Sie die resultierende Analysestruktur an die <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> Methode. Wenn diese Methode zurückgibt `false`, nicht der Designer erneut geladen werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache hat einen Codeparser für diese Datei bereitgestellt; Dieser Dateityp kann einen Designer nicht unterstützt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, aber es ist nicht der ersten Klasse in der Datei oder Designer konnte für diese Datei nicht angezeigt werden, da keine der darin enthaltenen Klassen entworfen werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt, dass das Laden wird in Kürze dem Designerladeprogramm.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt dem Designerladeprogramm, entladen begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente so benennen Sie um.</param>
        <param name="oldName">Der ursprüngliche Name der Komponente.</param>
        <param name="newName">Der neue Name der Komponente.</param>
        <summary>Löst das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <see langword="true" />um anzugeben, dass das Laden erfolgreich abgeschlossen. andernfalls <see langword="false" />.</param>
        <param name="errors">Ein <see cref="T:System.Collections.ICollection" /> von Objekten (normalerweise Ausnahmen), die als Fehler gemeldet wurden.</param>
        <summary>Benachrichtigt dem Designerladeprogramm, dass der Ladevorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> -Methode finden Sie unter <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analysiert den Text oder einen anderen persistenten Speicher und gibt eine <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
        <returns>Ein <see cref="T:System.CodeDom.CodeCompileUnit" /> sich aus einem Analysevorgang ergibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> Methode wird aufgerufen, wenn die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> Quellcode analysieren muss. Abgeleitete Klassen müssen die Quellcodespeicherort und das Format angegeben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Die <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> aus dem das Serialisierungsprogramm angefordert.</param>
        <summary>Fordert die Serialisierung der die Stammkomponente des Designers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> Methode erhält das Stamm- <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> für die Stammkomponente des Designers und ruft das Serialisierungsprogramm zur Serialisierung der Komponente. Wenn das Ergebnis dieses Vorgangs ist ein <xref:System.CodeDom.CodeTypeDeclaration>, klicken Sie dann <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> integriert die <xref:System.CodeDom.CodeTypeDeclaration> mit der vorhandenen CodeDOM Struktur. Das Ergebnis ist die ursprüngliche CodeDOM-Baum mit übereinstimmenden Elemente und-Anweisungen ersetzt. Schließlich <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> Ruft die abstrakte <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> Methode, um diese CodeDOM-Struktur zu speichern.  
  
 Wenn die Serialisierung der Stamm-Designer-Komponente nicht zu führt eine <xref:System.CodeDom.CodeTypeDeclaration>, klicken Sie dann <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> führt keine weiteren Schritte.  
  
> [!IMPORTANT]
>  Es liegt die Verantwortung des Aufrufers, stellen Sie sicher, dass ein CodeDOM aus einer vertrauenswürdigen Quelle stammt. Akzeptiert ein CodeDOM-Objekt von einer nicht vertrauenswürdigen Partei kann dieser Partei zum Ausführen von bösartigen Codes ermöglichen. Ein CodeDOM in eine Datei zu löschen, wird das Framework Code dargestellte CodeDOM-Objekt und der serialisierte Inhalt des Objekts wie angegeben ausgeführt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache hat einen Codeparser für diese Datei bereitgestellt; Dieser Dateityp kann einen Designer nicht unterstützt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, aber es ist nicht der ersten Klasse in der Datei oder Designer konnte für diese Datei nicht angezeigt werden, da keine der darin enthaltenen Klassen entworfen werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Die <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> aus dem das Serialisierungsprogramm angefordert.</param>
        <summary>Analysiert Code aus einem CodeDOM-Anbieter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> -Methode erhält ein <xref:System.CodeDom.Compiler.ICodeParser> von CodeDOM-Anbieters und der Code analysiert. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A>Sucht nach der ersten Klasse in der Datei, erhält Sie einen Stamm <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> für den Datentyp und ruft dann das Serialisierungsprogramm, um den Datentyp zu deserialisieren. <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A>wird davon ausgegangen, dass alle erforderlichen Komponenten in dieser Vorgang erstellt die <xref:System.ComponentModel.IContainer> von der <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> Eigenschaft. Schließlich <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> Aufrufe der <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> Methode mit dem vollqualifizierten Namen des Typs, die sie an dem CodeDOM-Serialisierungsprogramm übergeben.  
  
> [!IMPORTANT]
>  Es liegt die Verantwortung des Aufrufers, stellen Sie sicher, dass ein CodeDOM aus einer vertrauenswürdigen Quelle stammt. Akzeptiert ein CodeDOM-Objekt von einer nicht vertrauenswürdigen Partei kann dieser Partei zum Ausführen von bösartigen Codes ermöglichen. Beim Laden einer CodeDOM in der Entwurfsoberfläche wird das Framework Code dargestellte CodeDOM-Objekt und der serialisierte Inhalt des Objekts wie angegeben ausgeführt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die Sprache hat einen Codeparser für diese Datei bereitgestellt; Dieser Dateityp kann einen Designer nicht unterstützt.</exception>
        <exception cref="T:System.InvalidOperationException">Die Klasse kann entworfen werden, aber es ist nicht der ersten Klasse in der Datei oder Designer konnte für diese Datei nicht angezeigt werden, da keine der darin enthaltenen Klassen entworfen werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData">Ein Objekt, bestehend aus serialisierten Daten.</param>
        <summary>Deserialisiert das Datenobjekt für den angegebenen Serialisierungsinformationen und gibt eine Auflistung von Objekten, die von diesen Daten dargestellt.</summary>
        <returns>Eine Auflistung von Objekten durch dargestellt <paramref name="serializationData" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serializationData" /> ist keine <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects">Eine Auflistung von zu serialisierenden Objekten.</param>
        <summary>Serialisiert die angegebene Auflistung von Objekten und speichert sie in einem Serialisierungsdatenobjekt.</summary>
        <returns>Ein Objekt, das den serialisierten Status der angegebenen Auflistung von Objekten enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> wurde nicht gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, in dem das neue Objekt hinzugefügt wird.</param>
        <param name="dataType">Der Datentyp des Objekts, das den Namen empfängt.</param>
        <summary>Erstellt einen neuen Namen, der für alle Komponenten im angegebenen Container eindeutig ist.</summary>
        <returns>Ein eindeutiger Name für den Datentyp.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
        <summary>Ruft einen Wert, der angibt, ob der angegebene Name gültig ist.</summary>
        <returns>
          <see langword="true" />, wenn der Name gültig ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
        <summary>Ruft einen Wert, der angibt, ob der angegebene Name gültig ist.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />ist kein gültiger Bezeichner, oder es ist bereits eine Komponente mit dem gleichen Namen vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, der Typauflösungsdienst mit Designerladeprogramm verwendet werden soll.</summary>
        <value>Ein <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> , dass die CodeDOM-Serialisierungsprogramme beim Auflösen von Typen verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> fügt automatisch dieser <xref:System.ComponentModel.Design.ITypeResolutionService> dem Dienstcontainer bei der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> Methode wird aufgerufen. Während der Typauflösungsdienst in vielen Szenarien optional ist, es ist erforderlich, damit der Codeinterpretation da Quellcode Typ enthält Namen, aber keine Assemblyverweise.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit">Die <see cref="T:System.CodeDom.CodeCompileUnit" /> beibehalten werden.</param>
        <summary>Schreibt Kompilierungseinheit Änderungen in den persistenten Speicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> -Methode speichert einen <xref:System.CodeDom.CodeCompileUnit> in den persistenten Speicher. Die ableitende Klasse ist verantwortlich für das Aufrufen der <xref:System.CodeDom.Compiler.ICodeGenerator> auf den entsprechenden TextWriter, um den Code zu speichern. Die <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> wird sichergestellt, dass die CodeDOM-Objekte, die übergeben werden <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> sind die gleichen Instanzen von Objekten, die aus abgerufen wurden <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, außer in Fällen, bei denen der Serialisierungsprozess aufwies, um den Code zu ändern. Dies ermöglicht eine optimierte Designerladeprogramm zum Speichern von zusätzlicher Daten in der <xref:System.CodeDom.CodeObject.UserData%2A> Eigenschaft von Codeelementen. Diese Daten werden während der <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> für alle Elemente, die nicht durch den Serialisierungsprozess ersetzt wurden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
