<Type Name="MemberRelationshipService" FullName="System.ComponentModel.Design.Serialization.MemberRelationshipService">
  <TypeSignature Language="C#" Value="public abstract class MemberRelationshipService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberRelationshipService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Basisklasse zum Verknüpfen eines Elements in einen anderen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Designer serialisieren selbst in Code über ein Modul, das die live-Eigenschaftswerte von Objekten durchsucht und diese Werte als Code generiert. Deshalb wird z. B. der Text einer Schaltfläche im folgenden Format generiert.  
  
```csharp  
this.okButton.Text = "OK";  
```  
  
 Ein Nachteil dieses Schemas ist, dass es schwierig, eine Eigenschaft von einem anderen Speicherort abzurufen. Angenommen, es ist sehr schwierig zu Code im folgenden Format ausgeben, da lediglich den Code-Generator auf verlassen kann, ist der Wert in der Eigenschaft.  
  
```csharp  
this.titleLabel.Text = this.Text;  
```  
  
   
  
## Examples  
 Die <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService> vereinfacht den Abruf eines Eigenschaftswerts von einem anderen Speicherort. Ein Designer kann diesen Dienst um, dass ein Member zugewiesen wird, der Wert eines anderen diktieren zugreifen. Der Code-Generator sucht solcher Beziehungen aus, beim Generieren von Code, und wenn eine Beziehung zwischen zwei Elementen den Code-Generator gefunden wird, gibt Code für die Beziehung statt für den Eigenschaftswert suchen. Verwenden Sie die vorherige Zuweisung von Text als Beispiel, das folgende Codebeispiel zeigt entwerfen Zeitcode, die zum Herstellen eine Beziehung verwendet wird.  
  
```csharp  
object titleLabel, form;  
PropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)["Text"];  
PropertyDescriptor formText = TypeDescriptor.GetProperties(form)["Text"];  
MemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  
ms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Die <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" /> Klasse ist <see langword="abstract" />. Implementieren eine konkrete Version hängt von den Arten von Elementen, die unterstützt werden. Ein Ereignis in eine andere bezüglich erfordert z. B. möglicherweise eine andere Implementierung als bezüglich einer Eigenschaft zu einem anderen. Eine Implementierung des Diensts benötigt die folgenden Schritte aus:  
  
-   Implementieren <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" /> zurückzugebenden <see langword="true" /> für Beziehungen, die Sie unterstützen.  
  
-   Nachverfolgen von Änderungen an der Beziehung und weisen Wert datenquellenänderungen in die zielbeziehung.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberRelationshipService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">Der quellbeziehung.</param>
        <summary>Ruft eine Beziehung mit der angegebenen quellbeziehung ab.</summary>
        <returns>Eine Beziehung zu <paramref name="source" />, oder <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> , wenn keine Beziehung vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung speichert Beziehungen in einem Wörterbuch schwache Verweise verwenden, damit der Beziehungstabelle nicht Objekte aktiv beibehalten wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(valuetype System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">Der quellbeziehung. Dies ist die linke Seite einer Zuweisung Beziehung.</param>
        <summary>Legt eine Beziehung zwischen einem Quell- und Ziel-Objekt.</summary>
        <value>Die aktuelle Beziehung zugeordnet <paramref name="source" />, oder <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" /> , wenn keine Beziehung vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty> zugewiesen ist an der Quelle eine vorhandene Beziehung wird entfernt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="source" />ist leer, oder die Beziehung wird vom Dienst nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.Serialization.MemberRelationship Item(object, class System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.MemberRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOwner" Type="System.Object" />
        <Parameter Name="sourceMember" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="sourceOwner">Der Besitzer einer Quelle-Beziehung.</param>
        <param name="sourceMember">Ein Mitglied einer quellbeziehung.</param>
        <summary>Legt eine Beziehung zwischen einem Quell- und Ziel-Objekt.</summary>
        <value>Ein <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> Struktur, die die Beziehung zwischen einem Quell- und Ziel-Objekt kapseln oder <see langword="null" /> Wenn keine Beziehung vorhanden ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceOwner" /> oder <paramref name="sourceMember" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceOwner" />oder <paramref name="sourceMember" /> ist leer, oder die Beziehung wird vom Dienst nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetRelationship">
      <MemberSignature Language="C#" Value="protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">Der quellbeziehung.</param>
        <param name="relationship">Die Beziehung in der Datenquelle festgelegt.</param>
        <summary>Erstellt eine Beziehung zwischen der Quelle-Quellobjekt und -Beziehung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship%2A> Methode löscht eine vorhandene Beziehung, wenn die Beziehungsparameter ist <xref:System.ComponentModel.Design.Serialization.MemberRelationship.Empty>. Die standardmäßige Implementierung speichert Beziehungen in einem Wörterbuch schwache Verweise verwenden, damit der Beziehungstabelle nicht Objekte aktiv beibehalten wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung wird vom Dienst nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsRelationship">
      <MemberSignature Language="C#" Value="public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsRelationship(valuetype System.ComponentModel.Design.Serialization.MemberRelationship source, valuetype System.ComponentModel.Design.Serialization.MemberRelationship relationship) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
        <Parameter Name="relationship" Type="System.ComponentModel.Design.Serialization.MemberRelationship" />
      </Parameters>
      <Docs>
        <param name="source">Der quellbeziehung.</param>
        <param name="relationship">Die Beziehung in der Datenquelle festgelegt.</param>
        <summary>Ruft einen Wert, der angibt, ob die angegebene Beziehung unterstützt wird.</summary>
        <returns>
          <see langword="true" />Wenn eine Beziehung zwischen den beiden angegebenen Objekten unterstützt wird. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
