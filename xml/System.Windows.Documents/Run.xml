<Type Name="Run" FullName="System.Windows.Documents.Run">
  <TypeSignature Language="C#" Value="public class Run : System.Windows.Documents.Inline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Run extends System.Windows.Documents.Inline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Run" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Inline</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein Element für fortlaufenden Inhalt auf Inlineebene, das dazu vorgesehen ist, einen Durchlauf von formatierten oder unformatierten Text zu enthalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ab der [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft von der <xref:System.Windows.Documents.Run> Objekt ist eine Abhängigkeitseigenschaft, was bedeutet, dass Sie binden können die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft mit einer Datenquelle. Die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft unterstützt die unidirektionale Bindung im <xref:System.Windows.Controls.FlowDocumentReader> und andere Steuerelemente, die nur-Lese Text angezeigt. Weitere Informationen zu Datenbindungen finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
> [!NOTE]
>  Binden von Text an einer <xref:System.Windows.Documents.Run> enthaltenes Objekt <xref:System.Windows.Controls.RichTextBox> wird nicht unterstützt. Bearbeitungsvorgänge innerhalb der <xref:System.Windows.Controls.RichTextBox> kann dazu führen, dass die Bindung, deren Wert gelöscht werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Run.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Standardinstanz der der <see cref="T:System.Windows.Documents.Run" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Run.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Eine Zeichenfolge, die die anfänglichen Inhalte des angeben der <see cref="T:System.Windows.Documents.Run" /> Objekt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Documents.Run" /> -Klasse, wobei der einer angegebenen Zeichenfolge als die anfänglichen Inhalte des Texts ausführen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgende Beispiel wird die Verwendung dieses Konstruktors veranschaulicht.  
  
 [!code-csharp[RunSnippets#_Run_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/RunSnippets/CSharp/Window1.xaml.cs#_run_const1)]
 [!code-vb[RunSnippets#_Run_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RunSnippets/visualbasic/window1.xaml.vb#_run_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Run (string text, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="text">Eine Zeichenfolge, die die anfänglichen Inhalte des angeben der <see cref="T:System.Windows.Documents.Run" /> Objekt.</param>
        <param name="insertionPosition">Ein <see cref="T:System.Windows.Documents.TextPointer" /> eine Einfügeposition an der den Text, der ausgeführt wird, nachdem es erstellt wurde, eingefügt oder <see langword="null" /> für kein automatisches einfügen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Documents.Run" /> Klasse, wobei eine angegebene Zeichenfolge, die anfänglichen Inhalte des Texts ausführen und ein <see cref="T:System.Windows.Documents.TextPointer" /> eine Einfügeposition für die textausführung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgende Beispiel wird die Verwendung dieses Konstruktors veranschaulicht.  
  
 [!code-csharp[RunSnippets#_Run_Const2](~/samples/snippets/csharp/VS_Snippets_Wpf/RunSnippets/CSharp/Window1.xaml.cs#_run_const2)]
 [!code-vb[RunSnippets#_Run_Const2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RunSnippets/visualbasic/window1.xaml.vb#_run_const2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">Eine Serialisierung Service Manager-Objekt für dieses Objekt.</param>
        <summary>Gibt einen Wert, der angibt, und zwar unabhängig davon, ob der effektive Wert der <see cref="P:System.Windows.Documents.Run.Text" /> Eigenschaft serialisiert werden soll, während der Serialisierung ein <see cref="T:System.Windows.Documents.Run" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="P:System.Windows.Documents.Run.Text" /> Eigenschaft sollte serialisiert werden, andernfalls, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <paramref name="manager" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Run.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt diesen Text den unformatierten Text-Inhalt <see cref="T:System.Windows.Documents.Run" />.</summary>
        <value>Eine Zeichenfolge, die die unformatierten Text-Inhalt, der dieser Text gibt <see cref="T:System.Windows.Documents.Run" />. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ab der [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft von der <xref:System.Windows.Documents.Run> Objekt ist eine Abhängigkeitseigenschaft, was bedeutet, dass Sie binden können die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft mit einer Datenquelle. Die <xref:System.Windows.Documents.Run.Text%2A> Eigenschaft unterstützt die unidirektionale Bindung im <xref:System.Windows.Controls.FlowDocumentReader> und andere Steuerelemente, die nur-Lese Text angezeigt. Weitere Informationen zu Datenbindungen finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
> [!NOTE]
>  Binden von Text an einer <xref:System.Windows.Documents.Run> enthaltenes Objekt <xref:System.Windows.Controls.RichTextBox> wird nicht unterstützt. Bearbeitungsvorgänge innerhalb der <xref:System.Windows.Controls.RichTextBox> kann dazu führen, dass die Bindung, deren Wert gelöscht werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie festlegen der <xref:System.Windows.Documents.Run.Text%2A> Attribut eine <xref:System.Windows.Documents.Run> Element direkt und über binden.  
  
 [!code-xaml[BindableRunSnippet#BindableRun](~/samples/snippets/csharp/VS_Snippets_Wpf/bindablerunsnippet/CS/window1.xaml#bindablerun)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Run.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Documents.Run.Text" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
