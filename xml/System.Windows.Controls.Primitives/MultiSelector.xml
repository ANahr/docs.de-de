<Type Name="MultiSelector" FullName="System.Windows.Controls.Primitives.MultiSelector">
  <TypeSignature Language="C#" Value="public abstract class MultiSelector : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultiSelector extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MultiSelector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Klasse für Steuerelemente, mit denen mehrere Elemente ausgewählt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Ableiten einer Klasse von der <xref:System.Windows.Controls.Primitives.MultiSelector> Klasse, legen die <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> Eigenschaft `true` auf Mehrfachauswahl in das Steuerelement zu ermöglichen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultiSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Primitives.MultiSelector>ist eine abstrakte Klasse und kann nicht direkt instanziiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void BeginUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet eine neue Auswahl-Transaktion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> -Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `true`. Die <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> -Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `false`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> Methode in einer Klasse abgeleitet <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />ist <see langword="true" /> Wenn diese Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleItems">
      <MemberSignature Language="C#" Value="protected bool CanSelectMultipleItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultipleItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die mehrere im Elemente die <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> können gleichzeitig ausgewählt werden.</summary>
        <value>
          <see langword="true" />Wenn mehrere im Elemente die <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> kann zu einem Zeitpunkt ausgewählt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie die <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> Eigenschaft `true` in einer abgeleiteten Klasse zum Zulassen der Mehrfachauswahl für diese Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einer abgeleiteten Klasse festgelegt.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void EndUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Commit für die ausgewählten Elemente, die die <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `false` und aktualisiert die <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> Auflistung.  
  
 Die <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> -Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `true`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> Methode in einer Klasse abgeleitet <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />ist <see langword="false" /> Wenn diese Methode aufgerufen wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatingSelectedItems">
      <MemberSignature Language="C#" Value="protected bool IsUpdatingSelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdatingSelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> führt derzeit einen Bulk Update der <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> Auflistung.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> führt derzeit einen Bulk Update der <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> Auflistung ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> -Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `true`. Die <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> -Methode legt <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> auf `false`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> Eigenschaft in einer Klasse abgeleitet <xref:System.Windows.Controls.Primitives.MultiSelector>.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wählt alle Elemente in der <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode nur, wenn <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> ist `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> ist <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Elemente der <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> , die ausgewählt sind.</summary>
        <value>Die Elemente in der <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> , die ausgewählt sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> ist `false`, Sie können nicht mehr als ein Element zum Hinzufügen der <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> Auflistung. Versucht, die dazu werden eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Auswahl aller Elemente in der <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode unabhängig davon, ob <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> ist `true` oder `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
