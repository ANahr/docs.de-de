<Type Name="OdbcDataAdapter" FullName="System.Data.Odbc.OdbcDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Satz von Datenbefehlen und eine Verbindung mit einer Datenquelle, die zum Füllen der <see cref="T:System.Data.DataSet" /> und aktualisiert die Datenquelle. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Odbc.OdbcDataAdapter> dient als Brücke zwischen einer `DataSet` und einer Datenquelle für das Abrufen und Speichern von Daten. Die <xref:System.Data.Odbc.OdbcDataAdapter> bietet diese Brücke mit <xref:System.Data.Common.DbDataAdapter.Fill%2A> zum Laden von Daten aus der Datenquelle in die <xref:System.Data.DataSet>, und Verwenden von <xref:System.Data.Common.DbDataAdapter.Update%2A> zum Senden von Änderungen in der <xref:System.Data.DataSet> zurück an die Datenquelle.  
  
 Wenn die <xref:System.Data.Odbc.OdbcDataAdapter> füllt eine <xref:System.Data.DataSet>, erstellt er den erforderlichen Tabellen und Spalten für die zurückgegebenen Daten, sofern sie nicht bereits vorhanden sind. Allerdings Primärschlüsselinformationen ist nicht im enthalten implizit erstellten Schemas, wenn die <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> -Eigenschaftensatz auf <xref:System.Data.MissingSchemaAction.AddWithKey>. Möglicherweise müssen Sie auch die <xref:System.Data.Odbc.OdbcDataAdapter> erstellen das Schema der <xref:System.Data.DataSet>, einschließlich Primärschlüsselinformationen vor dem Füllen mit Daten mithilfe <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. Weitere Informationen finden Sie unter [Hinzufügen vorhandener Einschränkungen zu einem DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
> [!NOTE]
>  Beim Aufrufen der `Fill` Methode für eine Datenquelle, die nicht mit eine Primärschlüsselspalte besitzt die <xref:System.Data.Odbc.OdbcDataAdapter> versucht, die die unique-Einschränkung-Spalte auf den Primärschlüssel höher stufen. In den Prozess der <xref:System.Data.Odbc.OdbcDataAdapter> kennzeichnet die unique-Einschränkung als lässt keine Nullwerte zu. Dieses Verhalten funktioniert, es sei denn, es ein null-Wert in der Spalte für die unique-Einschränkung ist. Es ist ein null-Wert, der `Fill` Methode mit einer einschränkungsverletzung fehl. Um diese Situation zu vermeiden, können Sie null-Werte nicht in der Spalte für die unique-Einschränkung.  
  
> [!NOTE]
>  Aufgrund der Einschränkungen von systemeigenen ODBC-Treiber nur einen <xref:System.Data.DataTable> nie zurückgegeben wird, wenn Sie aufrufen <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. Dies gilt auch, wenn das Ausführen von SQL-Batchanweisungen aus dem mehrere <xref:System.Data.DataTable> Objekte erwartet werden.  
  
 Die <xref:System.Data.Odbc.OdbcDataAdapter> umfasst auch die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, und `TableMappings` Eigenschaften zum Laden und Aktualisieren von Daten zu ermöglichen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Data.Odbc.OdbcCommand>, <xref:System.Data.Odbc.OdbcDataAdapter>, und <xref:System.Data.Odbc.OdbcConnection> zum Auswählen von Datensätzen und zum Auffüllen einer `DataSet` mit den ausgewählten Zeilen.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Odbc.OdbcDataAdapter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen einer Instanz von <xref:System.Data.Odbc.OdbcDataAdapter>, die folgenden lesegeschützt und Read-only-Eigenschaften werden auf ihre Standardwerte festgelegt, wie in der Tabelle dargestellt.  
  
|Eigenschaften|Standardwert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert der alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">Ein <see cref="T:System.Data.Odbc.OdbcCommand" /> , eine SQL SELECT-Anweisung oder gespeicherte Prozedur ist und als festgelegt ist die <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> Klasse mit der angegebenen SQL-SELECT-Anweisung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Data.Odbc.OdbcDataAdapter> Standardkonstruktor legt die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> -Eigenschaft auf den Wert im angegebenen der `selectCommand` Parameter.  
  
 Beim Erstellen einer Instanz von <xref:System.Data.Odbc.OdbcDataAdapter>, die folgenden lesegeschützt und Read-only-Eigenschaften werden auf ihre Standardwerte festgelegt, wie in der Tabelle dargestellt.  
  
|Eigenschaften|Anfangswert|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Sie können den Wert der alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.Odbc.OdbcConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Eine Zeichenfolge, die eine SQL SELECT-Anweisung oder gespeicherte Prozedur von verwendet die <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
        <param name="selectConnection">Eine <see cref="T:System.Data.Odbc.OdbcConnection" /> , die die Verbindung darstellt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> Klasse mit einer SQL SELECT-Anweisung und eine <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Data.Odbc.OdbcDataAdapter> kann in einer Anwendung, die aufgerufen werden muss, nützlich sein, die `Fill` Methode für zwei oder mehr <xref:System.Data.Odbc.OdbcDataAdapter> Objekte.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Eine Zeichenfolge, die eine SQL SELECT-Anweisung oder gespeicherte Prozedur von verwendet die <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> Eigenschaft von der <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</param>
        <param name="selectConnectionString">Verbindungszeichenfolge.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> Klasse mit einer SQL SELECT-Anweisung und eine Verbindungszeichenfolge enthalten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung der der <xref:System.Data.Odbc.OdbcDataAdapter> Konstruktor verwendet den `selectConnectionString` zum Festlegen der <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Eigenschaft. Es wird jedoch nicht die Verbindung geöffnet. Sie müssen die Verbindung immer noch explizit öffnen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt einige ihrer Eigenschaften.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.OdbcDataAdapter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, oder legt sie fest, eine SQL-Anweisung oder gespeicherte Prozedur zum Löschen von Datensätzen in der Datenquelle verwendet.</summary>
        <value>Ein <see cref="T:System.Data.Odbc.OdbcCommand" /> während eines Updatevorgangs verwendet wird, zum Löschen von Datensätzen in der Datenquelle, die den gelöschten Zeilen entsprechen den <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> Eigenschaft zugewiesen ist, ein zuvor erstelltes <xref:System.Data.Odbc.OdbcCommand>, die <xref:System.Data.Odbc.OdbcCommand> nicht geklont. Stattdessen die <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.Odbc.OdbcCommand>.  
  
 Während eines Updatevorgangs Wenn <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> nicht festgelegt ist und Primärschlüssel Informationen ist vorhanden, in der <xref:System.Data.DataSet>, können Sie die <xref:System.Data.Odbc.OdbcCommandBuilder> Klasse zum automatischen Generieren von der <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>, und zusätzliche Befehle zum Abstimmen der <xref:System.Data.DataSet>mit der Datenquelle. Legen Sie hierzu die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Eigenschaft von der <xref:System.Data.Odbc.OdbcDataAdapter>. Die Generierungslogik auch Schlüsselspalteninformationen vorhanden sein müssen die <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> und <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> Eigenschaften. Es wird davon ausgegangen, dass Sie bereits erstellt haben eine <xref:System.Data.Odbc.OdbcConnection> Objekt.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.DeleteCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.DeleteCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine zum Einfügen neuer Datensätze in die Datenquelle verwendete SQL-Anweisung oder gespeicherte Prozedur ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Data.Odbc.OdbcCommand" />, der während eines Updatevorgangs verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im <see cref="T:System.Data.DataSet" /> entsprechen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> Eigenschaft zugewiesen ist auf eine zuvor erstellte <xref:System.Data.Odbc.OdbcCommand> -Objekt, das <xref:System.Data.Odbc.OdbcCommand> nicht geklont. Stattdessen <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.Odbc.OdbcCommand>.  
  
 Während eines Updatevorgangs Wenn <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> nicht festgelegt ist und Primärschlüssel Informationen ist vorhanden, in der <xref:System.Data.DataSet>, können Sie die <xref:System.Data.Odbc.OdbcCommandBuilder> Klasse zum automatischen Generieren von <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, und zusätzliche Befehle zum Abstimmen der <xref:System.Data.DataSet> mit der Datenquelle. Legen Sie hierzu die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Eigenschaft von der <xref:System.Data.Odbc.OdbcDataAdapter>. Die Generierungslogik auch Schlüsselspalteninformationen vorhanden sein müssen die <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
> [!NOTE]
>  Wenn die Ausführung dieses Befehls Zeilen zurückgegeben werden, können diese Zeilen hinzugefügt werden, auf die <xref:System.Data.DataSet> je nachdem, wie Sie festlegen der <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> Eigenschaft von der <xref:System.Data.Odbc.OdbcCommand> Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> und <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> Eigenschaften. Es wird davon ausgegangen, dass Sie bereits erstellt haben eine <xref:System.Data.Odbc.OdbcConnection> Objekt.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.InsertCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.InsertCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.InsertCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcDataAdapter.RowUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während eines Updatevorgangs auf, nachdem ein Befehl für die Datenquelle ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung von <xref:System.Data.Common.DbDataAdapter.Update%2A>, es gibt zwei Ereignisse, die pro Datenzeile aktualisiert auftreten. Die Reihenfolge der Ausführung lautet wie folgt:  
  
1.  Die Werte in der <xref:System.Data.DataRow> in die Parameterwerte verschoben werden.  
  
2.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.  
  
3.  Der Befehl ausgeführt wird.  
  
4.  Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, das erste zurückgegebene Ergebnis befindet sich der <xref:System.Data.DataRow>.  
  
5.  Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.  
  
6.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcDataAdapter.RowUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während der <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> , bevor ein Befehl für die Datenquelle ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung von <xref:System.Data.Common.DbDataAdapter.Update%2A>, es gibt zwei Ereignisse, die pro Datenzeile aktualisiert auftreten. Die Reihenfolge der Ausführung lautet wie folgt:  
  
1.  Die Werte in der <xref:System.Data.DataRow> in die Parameterwerte verschoben werden.  
  
2.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>-Ereignis wird ausgelöst.  
  
3.  Der Befehl ausgeführt wird.  
  
4.  Wenn der Befehl, um festgelegt ist `FirstReturnedRecord`, das erste zurückgegebene Ergebnis befindet sich der <xref:System.Data.DataRow>.  
  
5.  Wenn Output-Parameter vorhanden sind, werden sie platziert, der <xref:System.Data.DataRow>.  
  
6.  Das <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>-Ereignis wird ausgelöst.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A> wird aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine SQL-Anweisung oder gespeicherte Prozedur, die zum Auswählen von Datensätzen in der Datenquelle verwendet.</summary>
        <value>Ein <see cref="T:System.Data.Odbc.OdbcCommand" /> wird, während eines Vorgangs ausfüllen, zum Auswählen von Datensätzen aus der Datenquelle für die Platzierung in der <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.Odbc.OdbcCommand>, die <xref:System.Data.Odbc.OdbcCommand> nicht geklont. Stattdessen die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.Odbc.OdbcCommand> Objekt.  
  
 Wenn <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> keine Zeilen zurückgibt, werden keine Tabellen hinzugefügt, um die <xref:System.Data.DataSet>, und es werden keine Ausnahmen ausgelöst.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> und <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> Eigenschaften. Es wird davon ausgegangen, dass Sie bereits erstellt haben eine <xref:System.Data.Odbc.OdbcConnection> Objekt.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.SelectCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.SelectCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.SelectCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IDbCommand" /> während eines Updates zum Löschen von Datensätzen in der Datenquelle für gelöschte Zeilen im DataSet verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Odbc.OdbcDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Eine <see cref="T:System.Data.IDbCommand" /> , die während eines Updates zum Einfügen von Datensätzen aus einer Datenquelle für die Platzierung im DataSet verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Odbc.OdbcDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Eine <see cref="T:System.Data.IDbCommand" /> , die während eines Updates zum Auswählen von Datensätzen aus einer Datenquelle für die Platzierung im DataSet verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Odbc.OdbcDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Ein <see cref="T:System.Data.IDbCommand" /> während einer Updates aktualisiert Datensätze in der Datenquelle für geänderte Zeilen im DataSet verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Odbc.OdbcDataAdapter>-Instanz in eine <xref:System.Data.IDbDataAdapter>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Ein neues <see cref="T:System.Object" /> , eine Kopie dieser Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Odbc.OdbcDataAdapter>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine zum Aktualisieren von Datensätzen in der Datenquelle verwendete SQL-Anweisung oder gespeicherte Prozedur ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Data.Odbc.OdbcCommand" />, der bei einem Vorgang zum Aktualisieren von Datensätzen in der Datenquelle verwendet wird, die geänderten Zeilen im <see cref="T:System.Data.DataSet" /> entsprechen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> zugewiesen ist, ein zuvor erstelltes <xref:System.Data.Odbc.OdbcCommand>, die <xref:System.Data.Odbc.OdbcCommand> nicht geklont. Stattdessen die <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> behält einen Verweis auf das zuvor erstellte <xref:System.Data.Odbc.OdbcCommand> Objekt.  
  
 Während eines Updatevorgangs Wenn <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> nicht festgelegt ist und Primärschlüssel Informationen ist vorhanden, in der <xref:System.Data.DataSet>, können Sie die <xref:System.Data.Odbc.OdbcCommandBuilder> Klasse zum automatischen Generieren von <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, und zusätzliche Befehle zum Abstimmen der <xref:System.Data.DataSet> mit der Datenquelle. Legen Sie hierzu die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Eigenschaft von der <xref:System.Data.Odbc.OdbcDataAdapter>. Die Generierungslogik auch Schlüsselspalteninformationen vorhanden sein müssen die <xref:System.Data.DataSet>. Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
> [!NOTE]
>  Wenn die Ausführung dieses Befehls Zeilen zurückgegeben werden, können diese Zeilen mit zusammengeführt werden die <xref:System.Data.DataSet> je nachdem, wie Sie festlegen der <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> Eigenschaft von der <xref:System.Data.Odbc.OdbcCommand> Objekt.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Data.Odbc.OdbcDataAdapter> und legt die <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> und <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> Eigenschaften. Es wird davon ausgegangen, dass Sie bereits erstellt haben eine <xref:System.Data.Odbc.OdbcConnection> Objekt.  
  
 [!code-csharp[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.UpdateCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataAdapter.UpdateCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
