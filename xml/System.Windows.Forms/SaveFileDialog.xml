<Type Name="SaveFileDialog" FullName="System.Windows.Forms.SaveFileDialog">
  <TypeSignature Language="C#" Value="public sealed class SaveFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SaveFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SaveFileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.SaveFileDialogDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fordert den Benutzer um einen Speicherort zum Speichern einer Datei auszuwählen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse kann öffnen und eine vorhandene Datei überschreiben oder eine neue Datei erstellen.  
  
 Die meisten Funktionen für diese Klasse sich in befindet der <xref:System.Windows.Forms.FileDialog> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Erstellung einer <xref:System.Windows.Forms.SaveFileDialog>, Festlegen von Membern, das Aufrufen des Dialogfelds mit der <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> -Methode, und speichern die aktuelle Datei. Im Beispiel erfordert ein Formular mit einer Schaltfläche, die darauf platziert.  
  
 [!code-cpp[Classic SaveFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic SaveFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SaveFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic SaveFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic SaveFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic SaveFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SaveFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SaveFileDialog.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz dieser Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse gefahrlos in keiner Sicherheitszone zu instanziieren. zu den einzelnen Eigenschaften und Methoden werden über die erforderliche Berechtigung Forderungen platziert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrompt">
      <MemberSignature Language="C#" Value="public bool CreatePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreatePrompt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SaveFileDialog.CreatePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob das Dialogfeld fordert den Benutzer eine Berechtigung zum Erstellen einer Datei, wenn der Benutzer eine Datei angibt, die nicht vorhanden ist.</summary>
        <value>
          <see langword="true" />Wenn Sie das Dialogfeld den Benutzer fordert vor dem Erstellen einer Datei, wenn der Benutzer einen Dateinamen angibt, der nicht vorhanden ist; <see langword="false" /> , wenn das Dialogfeld automatisch neue Datei erstellt, ohne dass der Benutzer für die Berechtigung. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> Methoden mit Datenströmen. Außerdem zeigt es die Verwendung der <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A>, und <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A> Elemente.  
  
 Dies ist ein vollständiges Beispiel, das für die Ausführung beim Kopieren in das Projekt bereit.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">die Eigenschaft festgelegt. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SaveFileDialog.OpenFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet die Datei mit Lese-/Schreibberechtigung, die vom Benutzer ausgewählt wurden.</summary>
        <returns>Die Lese-/Schreibzugriff-Datei, die vom Benutzer ausgewählt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Aus Sicherheitsgründen wird diese Methode erstellt eine neue Datei mit dem ausgewählten Namen und mit Lese-/Schreibzugriff geöffnet. Dies kann unbeabsichtigten Datenverlust verursachen, bei der Auswahl einer vorhandenen Datei zu speichern. Verwenden, um Daten an eine vorhandene Datei zu speichern, Beibehaltung der vorhandene Daten, die <xref:System.IO.File> Klasse zum Öffnen der Datei mit dem Dateinamen, der zurückgegeben wird, der <xref:System.Windows.Forms.FileDialog.FileName%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Erstellung einer <xref:System.Windows.Forms.SaveFileDialog>, Festlegen von Membern, das Aufrufen des Dialogfelds mit der <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> -Methode, und öffnen die ausgewählte Datei. Im Beispiel erfordert ein Formular mit einer Schaltfläche, die darauf platziert.  
  
 [!code-cpp[Classic SaveFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic SaveFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SaveFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic SaveFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic SaveFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic SaveFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileDialogPermission">Um eine Datei zu speichern. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Save" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="OverwritePrompt">
      <MemberSignature Language="C#" Value="public bool OverwritePrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverwritePrompt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SaveFileDialog.OverwritePrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die <see langword="Save As" /> Dialogfeld zeigt eine Warnung aus, wenn der Benutzer einen Dateinamen angibt, der bereits vorhanden ist.</summary>
        <value>
          <see langword="true" />Wenn das Dialogfeld wird der Benutzer aufgefordert, bevor Sie eine vorhandene Datei überschrieben, wenn der Benutzer einen Dateinamen angibt, der bereits vorhanden ist; <see langword="false" /> , wenn das Dialogfeld automatisch die vorhandene Datei überschreibt, ohne dass der Benutzer für die Berechtigung. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.RichTextBox.LoadFile%2A?displayProperty=nameWithType> Methoden mit Datenströmen. Außerdem zeigt es die Verwendung der <xref:System.Windows.Forms.FileDialog.FileName%2A>, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A>, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A>, und <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A> Elemente.  
  
 Dies ist ein vollständiges Beispiel, das für die Ausführung beim Kopieren in das Projekt bereit.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">die Eigenschaft festgelegt. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SaveFileDialog.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle Optionen im Dialogfeld auf die Standardwerte zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
