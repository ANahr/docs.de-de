<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Stil und das Verhalten eines Steuerelements an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelemente verwenden diese Enumeration in den verschiedenen Eigenschaften und Methoden zum Angeben der Funktionen. Ein Steuerelement kann ein Format aktivieren, durch Aufrufen der <xref:System.Windows.Forms.Control.SetStyle%2A> -Methode und übergeben die entsprechende <xref:System.Windows.Forms.ControlStyles> Bit (oder Bits) und den booleschen Wert auf die Bit(s) festgelegt werden soll. Beispielsweise würde die folgende Codezeile für Visual Basic-Doppelpufferung aktivieren.  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 Wenn das AllPaintingInWmPaint Bit, um festgelegt ist `true`, die fenstermeldung WM_ERASEBKGND wird ignoriert, und die beiden <xref:System.Windows.Forms.Control.OnPaintBackground%2A> und <xref:System.Windows.Forms.Control.OnPaint%2A> Methoden werden aufgerufen, direkt aus dem Fensternachricht WM_PAINT. Dadurch wird im Allgemeinen Flackern reduziert, es sei denn, andere Steuerelemente an das Steuerelement die fenstermeldung WM_ERASEBKGND senden. Sie können die fenstermeldung WM_ERASEBKGRND, um einen pseudozufälligen transparent SupportsTransparentBackColor ähnelt Effekt zu erzielen senden; z. B. eine <xref:System.Windows.Forms.ToolBar> mit flach dargestellt wird.  
  
 Sie können die OptimizedDoubleBuffer und das AllPaintingInWmPaint Bits auf festlegen, zum vollständigen Aktivieren doppelte Pufferung `true`. Die bevorzugte Methode zum Aktivieren der doppelten Pufferung, die das gleiche Ergebnis ergibt, ist jedoch zum Festlegen der <xref:System.Windows.Forms.Control.DoubleBuffered%2A> -Eigenschaft für das Steuerelement `true`.  
  
 Wenn das SupportsTransparentBackColor Bit, um festgelegt ist `true`, und die <xref:System.Windows.Forms.Control.BackColor%2A> festgelegt ist, um eine Farbe, deren Alphaanteil kleiner als 255 und ist <xref:System.Windows.Forms.Control.OnPaintBackground%2A> wird Transparenz simulieren, indem Sie gefragt werden, am übergeordneten Steuerelement mit der der Hintergrund gezeichnet. Dies ist keine echte Transparenz.  
  
> [!NOTE]
>  Ist ein anderes Steuerelement zwischen dem Steuerelement und seinem übergeordneten Element, wird das aktuelle Steuerelement kein Steuerelement in der Mitte angezeigt.  
  
 Wenn das UserMouse Bit festgelegt ist, um `true`, die folgenden Methoden aufgerufen: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, und <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.  
  
 Wenn das Steuerelement geklickt wird, wenn das StandardClick Bit, um festgelegt ist `true` der <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> Methode wird aufgerufen, und es wird ausgelöst, die <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> Ereignis. Wenn das Steuerelement doppelgeklickt wird, und sowohl die StandardDoubleClick-Wert der StandardClick Bits festgelegt sind `true`, der auf übergeben wird, die <xref:System.Windows.Forms.Control.DoubleClick> Ereignis. Die <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> Methode wird aufgerufen, und es wird ausgelöst, die <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> Ereignis. Das Steuerelement kann jedoch aufrufen <xref:System.Windows.Forms.Control.OnClick%2A> oder <xref:System.Windows.Forms.Control.OnDoubleClick%2A> direkt unabhängig von der StandardClick und StandardDoubleClick-Wert Bitwerte. Weitere Informationen zum Steuerelement klicken Sie auf, und klicken Sie mit der Doppelklicken auf Verhalten, finden Sie unter der <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> und <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> Themen.  
  
 Wenn das UseTextForAccessibility Bit festgelegt ist und es ist ein Wert in des Steuerelements `Text` -Eigenschaft, wird der Wert dieses Steuerelements `Text` Eigenschaft bestimmt den Namen und die Tastenkombination des Steuerelements standardmäßigen Active Accessibility-Schlüssel. Andernfalls, den Text der vorangehenden <xref:System.Windows.Forms.Label> Steuerelement wird stattdessen verwendet. Dieser Stil ist standardmäßig festgelegt. Bestimmte integrierte Steuerelementtypen, z. B. <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.ComboBox>, setzen Sie dieses Format zurück, damit die `Text` Eigenschaft dieser Steuerelemente wird nicht vom Active Accessibility verwendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.Windows.Forms.ControlStyles> mit der <xref:System.Windows.Forms.Control.StyleChanged> Ereignis.  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Erben von einer standardmäßigen Windows Forms-Steuerelement, und Ändern der <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> oder <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> Bitwerte auf <see langword="true" /> kann unerwartetes Verhalten verursachen oder können wirken sich nicht auf, wenn das Steuerelement nicht unterstützt die <see cref="E:System.Windows.Forms.Control.Click" /> oder <see cref="E:System.Windows.Forms.Control.DoubleClick" /> Ereignisse.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, ignoriert das Steuerelement die Fensternachricht WM_ERASEBKGND, um Flimmern zu verringern. Dieses Format sollte nur angewendet werden, wenn das <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" />-Bit auf <see langword="true" /> festgelegt ist.</summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, behält das Steuerelement eine Kopie des Texts bei, anstatt ihn bei Bedarf jeweils vom <see cref="P:System.Windows.Forms.Control.Handle" /> abzurufen. Dieses Format hat den Standardwert <see langword="false" />. Dieses Verhalten verbessert die Leistung, macht es jedoch schwierig, den Text synchronisiert zu halten.</summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, ist das Steuerelement ein containerähnliches Steuerelement.</summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird das Zeichnen in einem Puffer ausgeführt, und nachdem der Vorgang abgeschlossen ist, wird das Ergebnis auf dem Bildschirm ausgegeben. Doppelte Pufferung verhindert durch das Neuzeichnen des Steuerelements verursachtes Flimmern. Wenn Sie <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> auf <see langword="true" /> festlegen, sollten Sie auch <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> und <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> auf <see langword="true" /> festlegen.</summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird die <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />-Methode für jede Nachricht an die <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> des Steuerelements gesendet. Dieses Format hat den Standardwert <see langword="false" />. <see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> funktioniert nicht unter teilweiser Vertrauenswürdigkeit.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, hat das Steuerelement eine feste Höhe, wenn es automatisch skaliert wird. Wenn z.B. ein Layoutvorgang versucht, das Steuerelement zur Anpassung an eine neue <see cref="T:System.Drawing.Font" /> neu zu skalieren, bleibt die <see cref="P:System.Windows.Forms.Control.Height" /> des Steuerelements unverändert.</summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, hat das Steuerelement eine feste Breite, wenn es automatisch skaliert wird. Wenn z.B. ein Layoutvorgang versucht, das Steuerelement zur Anpassung an eine neue <see cref="T:System.Drawing.Font" /> neu zu skalieren, bleibt die <see cref="P:System.Windows.Forms.Control.Width" /> des Steuerelements unverändert.</summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird das Steuerelement nicht transparent und der Hintergrund gar nicht gezeichnet.</summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird das Steuerelement zuerst in einen Puffer gezeichnet anstatt direkt auf den Bildschirm, weil so das Flimmern verringert werden kann. Wenn Sie diese Eigenschaft auf <see langword="true" /> festlegen, sollten Sie auch <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> auf <see langword="true" /> festlegen.</summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, wird das Steuerelement neu gezeichnet, wenn seine Größe geändert wird.</summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, kann das Steuerelement den Fokus erhalten.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, implementiert das Steuerelement das standardmäßige <see cref="E:System.Windows.Forms.Control.Click" />-Verhalten.</summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, implementiert das Steuerelement das standardmäßige <see cref="E:System.Windows.Forms.Control.DoubleClick" />-Verhalten. Dieses Format wird ignoriert, wenn das <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" />-Bit nicht auf <see langword="true" /> festgelegt ist.</summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, akzeptiert das Steuerelement eine <see cref="P:System.Windows.Forms.Control.BackColor" /> mit einer Alphakomponente, die kleiner als 255 ist, um Transparenz zu simulieren. Transparenz wird nur simuliert, wenn das <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" />-Bit auf <see langword="true" /> festgelegt und das übergeordnete Steuerelement von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, führt das Steuerelement seine eigene Mausverarbeitung durch, und Mausereignisse werden nicht vom Betriebssystem behandelt.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wenn <see langword="true" />, zeichnet sich das Steuerelement selbst, anstatt vom Betriebssystem gezeichnet zu werden. Wenn <see langword="false" />, wird das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis nicht ausgelöst. Dieses Format gilt nur für Klassen, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet sind.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass der Wert des Steuerelements <c>Text</c> -Eigenschaft, wenn festgelegt ist, bestimmt die STRG-Taste für Standard Active Accessibility, Namen und die Tastenkombination.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
