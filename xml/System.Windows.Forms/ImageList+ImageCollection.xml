<Type Name="ImageList+ImageCollection" FullName="System.Windows.Forms.ImageList+ImageCollection">
  <TypeSignature Language="C#" Value="public sealed class ImageList.ImageCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ImageList/ImageCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageList.ImageCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt die Auflistung von <see cref="T:System.Drawing.Image" /> Objekte in einer <see cref="T:System.Windows.Forms.ImageList" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dient zum Verwalten der Images in den <xref:System.Windows.Forms.ImageList> programmgesteuert und stellt Methoden zum Hinzufügen und Entfernen von Image-Objekte bereit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie auswählen, entfernen und Anzeigen von Bildern aus der <xref:System.Windows.Forms.ImageList.Images%2A> Eigenschaft von der <xref:System.Windows.Forms.ImageList> Klasse, die eine <xref:System.Windows.Forms.ImageList.ImageCollection> Typ.  
  
 [!code-cpp[Classic ImageList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ImageList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ImageList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ImageList Example/CS/source.cs#1)]
 [!code-vb[Classic ImageList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ImageList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Drawing.Icon value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Drawing.Icon value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Drawing.Icon" /> der Liste hinzu.</param>
        <summary>Fügt das angegebene Symbol aus, um die <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Icon> konvertiert eine <xref:System.Drawing.Bitmap> bevor es zur Liste hinzugefügt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen eines ein <xref:System.Windows.Forms.ImageList.%23ctor%2A>, Hinzufügen von Grafiken, die <xref:System.Windows.Forms.ImageList.Images%2A> Eigenschaft festlegen der <xref:System.Windows.Forms.ImageList.ImageSize%2A> -Eigenschaft und die Verwendung der <xref:System.Windows.Forms.ImageList.Draw%2A> Methode. Um dieses Beispiel auszuführen, platzieren Sie es in ein Formular, das eine Schaltfläche mit dem Namen enthält `Button1`. Im Beispiel wird vorausgesetzt, das Vorhandensein des FeatherTexture.bmp und fehlend Fishing.bmp zur c:\Windows\\. Ändern Sie das Beispiel entsprechend aus, wenn die Bitmaps nicht auf Ihrem System vorhanden sind oder an einem anderen Speicherort vorhanden.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist gleich <see langword="null" />.  
  
 - oder -   
  
 Wert ist ein <see cref="T:System.Drawing.Icon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Drawing.Image value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Drawing.Image value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Drawing.Bitmap" /> des Bilds, das der Liste hinzugefügt.</param>
        <summary>Fügt das angegebene Bild auf der <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Das Bild, der hinzugefügt wird <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das hinzugefügte Image ist eine <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Drawing.Image value, System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Drawing.Image value, valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Image,System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Drawing.Bitmap" /> des Bilds, das der Liste hinzugefügt.</param>
        <param name="transparentColor">Die <see cref="T:System.Drawing.Color" /> um dieses Image zu maskieren.</param>
        <summary>Fügt das angegebene Bild, das <see cref="T:System.Windows.Forms.ImageList" />, mit der angegebenen Farbe zum Generieren der Maske.</summary>
        <returns>Der Index des neu hinzugefügten Bild oder-1 zurück, wenn das Bild kann nicht hinzugefügt werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Das Bild, der hinzugefügt wird <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das hinzugefügte Image ist eine <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Drawing.Icon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, class System.Drawing.Icon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.String,System.Drawing.Icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="icon" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Symbols.</param>
        <param name="icon">Der der Auflistung hinzuzufügende <see cref="T:System.Drawing.Icon" />.</param>
        <summary>Fügt ein Symbol mit dem angegebenen Schlüssel am Ende der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>. Ein Image-Schlüssel ist kein Groß-/Kleinschreibung beachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="icon" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.String,System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Bilds.</param>
        <param name="image">Der der Auflistung hinzuzufügende <see cref="T:System.Drawing.Image" />.</param>
        <summary>Fügt ein Bild mit dem angegebenen Schlüssel am Ende der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>. Ein Image-Schlüssel ist kein Groß-/Kleinschreibung beachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Drawing.Image[] images);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Drawing.Image[] images) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.AddRange(System.Drawing.Image[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="images" Type="System.Drawing.Image[]" />
      </Parameters>
      <Docs>
        <param name="images">Das Array von <see cref="T:System.Drawing.Image" /> Objekten, die der Auflistung hinzugefügt.</param>
        <summary>Ein Array von Bildern und der Auflistung hinzugefügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Windows.Forms.ImageList.ImageCollection> , um der Auflistung mehrere Bilder hinzuzufügen. Um ein einzelnes Element hinzuzufügen, verwenden Sie eines der <xref:System.Windows.Forms.ImageList.ImageCollection.Add%2A> Methoden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="images" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStrip">
      <MemberSignature Language="C#" Value="public int AddStrip (System.Drawing.Image value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddStrip(class System.Drawing.Image value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.AddStrip(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Drawing.Bitmap" /> mit den Bildern hinzufügen.</param>
        <summary>Fügt ein Bild Bereichsstreifen für das angegebene Image, das <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <returns>Der Index des neu hinzugefügten Bild oder-1 zurück, wenn das Bild kann nicht hinzugefügt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anzahl der hinzuzufügenden Bilder werden von der Breite des angegebenen Bilds abgeleitet.  
  
 Ein Streifen ist ein einzelnes Bild, das behandelt wird, wie mehrere Abbilder Seite-an-Seite angeordnet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ImageList.ImageCollection.AddStrip%2A>. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Windows-Formular, enthält ein <xref:System.Windows.Forms.ImageList> mit dem Namen `imageList1` und eine Schaltfläche aus und rufen die `AddStripToCollection` Methode in diesem Beispiel, wenn Sie der Schaltfläche zu behandeln <xref:System.Windows.Forms.Control.Click> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Bild, der hinzugefügt wird <see langword="null" />.  
  
 - oder -   
  
 Das hinzugefügte Image ist eine <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das Bild kann nicht hinzugefügt werden.  
  
 - oder -   
  
 Die Breite des Image Bereichsstreifen hinzugefügte ist 0, oder die Breite stimmt nicht mit der vorhandenen Bildbreite.  
  
 - oder -   
  
 Die Bildhöhe Bereichsstreifen ist nicht vorhandenen Bildhöhe gleich.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Bilder und Masken aus der <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Contains(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> in der Liste gefunden.</param>
        <summary>Wird nicht unterstützt. Die <see cref="M:System.Collections.IList.Contains(System.Object)" /> Methode gibt an, ob ein angegebenes Objekt in der Liste enthalten ist.</summary>
        <returns>
          <see langword="true" />Wenn das Bild in der Liste gefunden wurde. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Windows.Forms.ImageList.ImageCollection.Contains%2A> -Methode löst eine <xref:System.NotSupportedException> Ausnahme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Diese Methode wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Bilds zu suchen.</param>
        <summary>Bestimmt, ob die Auflistung ein Bild mit dem angegebenen Schlüssel enthält.</summary>
        <returns>
          <see langword="true" />Geben ein Bild mit dem angegebenen Schlüssel in der Auflistung enthalten ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Bildes entspricht seinem Schlüssel. Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge, die <xref:System.Windows.Forms.ImageList.ImageCollection.ContainsKey%2A> -Methode zurückkehrt `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von Images, die derzeit in der Liste ab.</summary>
        <value>Die Anzahl der Bilder in der Liste. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zählen die Bilder erzwingt die <xref:System.Windows.Forms.ImageList.Handle%2A> erstellt werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public bool Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Forms.ImageList" /> verfügt über keine Bilder.</summary>
        <value>
          <see langword="true" />Wenn in der Liste keine Bilder sind; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft überprüfen, ohne das Erzwingen der Erstellung einer <xref:System.Windows.Forms.ImageList.Handle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" /> , das die Elementauflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.IndexOf(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> in der Liste gefunden.</param>
        <summary>Wird nicht unterstützt. Die <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> -Methode gibt den Index eines angegebenen Objekts in der Liste.</summary>
        <returns>Der Index des Bilds in der Liste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOf%2A> löst eine <xref:System.NotSupportedException> Ausnahme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Diese Methode wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Bildes, das den Index abzurufen.</param>
        <summary>Bestimmt den Index des ersten Vorkommens eines Bilds mit dem angegebenen Schlüssel in der Auflistung.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens eines Bildes mit dem angegebenen Schlüssel in der Auflistung, wenn gefunden; andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey%2A> wird aufgerufen, die letzte Index zuerst nach einer Übereinstimmung Schlüssel überprüft, und wenn keine Übereinstimmung vorhanden ist, beginnt die Suche am Anfang der Auflistung zurückgegeben.  
  
 Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>. Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge, die <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey%2A> Methode gibt-1 zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Liste schreibgeschützt ist.</summary>
        <value>Immer <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Drawing.Image this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Bilds zum Abrufen oder festlegen.</param>
        <summary>Ruft ab oder legt eine <see cref="T:System.Drawing.Image" /> am angegebenen Index in der Auflistung.</summary>
        <value>Das Bild in der Liste von angegebenen <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Bitmap ist eine Kopie des ursprünglichen Bilds und sollte verworfen werden, der mithilfe der <xref:System.Drawing.Image.Dispose%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Index ist kleiner als 0 oder größer als oder gleich <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="image" /> ist keine <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.ArgumentNullException">Das Bild zuzuweisenden ist <see langword="null" /> davon eine <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das Bild kann nicht zur Liste hinzugefügt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Drawing.Image this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Bilds aus der Auflistung abgerufen werden soll.</param>
        <summary>Ruft eine <see cref="T:System.Drawing.Image" /> mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <value>Das <see cref="T:System.Drawing.Image" /> mit dem angegebenen Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>. Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet.  
  
 Wenn ein Bild mit dem angegebenen Schlüssel nicht gefunden wird, wird der Wert der <xref:System.Windows.Forms.ImageList.ImageCollection.Item%2A> Eigenschaft ist `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Schlüsseln, die verknüpft sind mit den Bildern in der <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.StringCollection" /> mit den Namen der Bilder in der <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Den Namen eines Bilds auf seinen Schlüssel entspricht, und ein Image-Schlüssel ist nicht in der Groß-/Kleinschreibung beachtet.  
  
 Wenn keines der Bilder in der <xref:System.Windows.Forms.ImageList.ImageCollection> verfügen über Schlüssel, <xref:System.Windows.Forms.ImageList.ImageCollection.Keys%2A> gibt ein leeres <xref:System.Collections.Specialized.StringCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Remove(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> aus der Liste zu entfernen.</param>
        <summary>Wird nicht unterstützt. Die <see cref="M:System.Collections.IList.Remove(System.Object)" /> -Methode entfernt ein angegebenes Objekt aus der Liste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der <xref:System.Windows.Forms.ImageList.ImageCollection.Remove%2A> löst eine <xref:System.NotSupportedException> Ausnahme.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Diese Methode wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Bilds zu entfernen.</param>
        <summary>Entfernt ein Bild aus der Liste.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Das Bild kann nicht entfernt werden.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Indexwert war kleiner als 0.  
  
 - oder -   
  
 Der Indexwert ist größer als oder gleich der <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" /> von Bildern.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Bildes, das aus der Auflistung entfernt werden soll.</param>
        <summary>Entfernt das Bild mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyName">
      <MemberSignature Language="C#" Value="public void SetKeyName (int index, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetKeyName(int32 index, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.SetKeyName(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index eines Bilds in der Auflistung.</param>
        <param name="name">Der Name des Bilds als Image Schlüssel festgelegt werden.</param>
        <summary>Legt den Schlüssel für ein Bild in der Auflistung fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name eines Bildes entspricht seinem Schlüssel in der <xref:System.Windows.Forms.ImageList.ImageCollection>. Ein Image-Schlüssel ist kein Groß-/Kleinschreibung beachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Index ist kleiner als 0 oder größer als oder gleich <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das eindimensionale <see cref="T:System.Array" /> , die das Ziel der aus der Auflistung kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index in der <see cref="T:System.Array" /> an dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente in dieser Auflistung in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Zielarrays.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dest" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dest" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> ist größer als der verfügbare Platz vom <paramref name="index" /> bis zum Ende des Zielarrays.</exception>
        <exception cref="T:System.InvalidCastException">Der Typ des der <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> kann nicht automatisch in den Typ des Zielarrays umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Das Objekt, das zum Synchronisieren der <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Bild, um der Liste hinzuzufügen.</param>
        <summary>Fügt das angegebene Bild auf der <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <returns>Der Index des neu hinzugefügten Bild oder-1 zurück, wenn das Bild nicht hinzugefügt werden konnte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist keine <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">Das Bild, suchen Sie in der <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</param>
        <summary>Implementiert die <see cref="M:System.Collections.IList.Contains(System.Object)" />-Methode. Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In allen Fällen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">Das Bild in der Liste gefunden wird.</param>
        <summary>Implementiert die <see cref="M:System.Collections.IList.IndexOf(System.Object)" />-Methode. Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">In allen Fällen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem <c>Wert</c> eingefügt werden soll.</param>
        <param name="value">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
        <summary>Implementiert die <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />-Methode. Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Hinzufügen eines Elements auf der <xref:System.Windows.Forms.ImageList.ImageCollection>, verwenden Sie die <xref:System.Windows.Forms.ImageList.ImageCollection.Add%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">In allen Fällen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.ImageList.ImageCollection" /> eine feste Größe aufweist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Bilds zum Abrufen oder festlegen.</param>
        <summary>Ruft ab oder legt ein Bild in einer vorhandenen <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</summary>
        <value>Das Bild in der Liste, die vom Index angegebenen.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Index ist kleiner als 0 oder größer als oder gleich <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
        <exception cref="T:System.Exception">Der Versuch, ersetzen Sie das Bild ist fehlgeschlagen.</exception>
        <exception cref="T:System.ArgumentNullException">Das Bild zuzuweisenden ist <see langword="null" /> oder keine Bitmap.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">Das Objekt, das <see cref="T:System.Windows.Forms.ImageList.ImageCollection" /> hinzugefügt werden soll.</param>
        <summary>Implementiert das <see cref="M:System.Collections.IList.Remove(System.Object)" />. Löst in allen Fällen eine <see cref="T:System.NotSupportedException" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ImageList.ImageCollection> -Klasse direkt verwendet. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ImageList.ImageCollection>, verwenden Sie die <xref:System.Windows.Forms.ImageList.ImageCollection.RemoveAt%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">In allen Fällen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
