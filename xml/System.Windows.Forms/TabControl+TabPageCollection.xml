<Type Name="TabControl+TabPageCollection" FullName="System.Windows.Forms.TabControl+TabPageCollection">
  <TypeSignature Language="C#" Value="public class TabControl.TabPageCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit TabControl/TabPageCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TabControl.TabPageCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält eine Auflistung von <see cref="T:System.Windows.Forms.TabPage" />-Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Reihenfolge der Registerkarten in dieser Auflistung entspricht der Reihenfolge der Registerkarten im verknüpften <xref:System.Windows.Forms.TabControl> Steuerelement. Um die Reihenfolge der Registerkarten im Steuerelement zu ändern, müssen Sie ihre Positionen in der Auflistung ändern, indem Sie sie entfernen und diese an einem neuen Index einfügen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabPageCollection (System.Windows.Forms.TabControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TabControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.#ctor(System.Windows.Forms.TabControl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.TabControl" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.TabControl" /> , die dieser Auflistung gehört.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <see cref="T:System.Windows.Forms.TabControl" /> ist gleich <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <summary>Erstellt eine Registerkarte mit dem angegebenen Text und fügt es der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das neu erstellte <xref:System.Windows.Forms.TabPage> an das Ende der Auflistung hinzugefügt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzuzufügende <see cref="T:System.Windows.Forms.TabPage" />.</param>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.TabPage" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.TabControl> mit einem <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode, um eine einzelne Registerkarte zum Hinzufügen der `tabControl1` Registerkarten-Steuerelement. Beachten Sie, dass die <xref:System.Windows.Forms.TabControl.TabPages%2A> Eigenschaft dient zum Abrufen der `tabControl1` hinzuzufügende Auflistung steuert die `tabPage1` , die dieser Sammlung.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Add/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Add/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Add/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <paramref name="value" /> ist gleich <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <summary>Erstellt eine Registerkarte mit dem angegebenen Text und der Schlüssel und fügt es der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Das neu erstellte <xref:System.Windows.Forms.TabPage> an das Ende der Auflistung hinzugefügt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <param name="imageIndex">Der Index des Bilds auf der Registerkarte angezeigt werden sollen.</param>
        <summary>Erstellt eine Registerkarte mit dem angegebenen Schlüssel, Text und Image, und fügt es der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Die `imageIndex` Parameter verweist auf ein Bild in der <xref:System.Windows.Forms.TabControl.ImageList%2A> Eigenschaft von der <xref:System.Windows.Forms.TabControl>.  
  
 Das neu erstellte <xref:System.Windows.Forms.TabPage> an das Ende der Auflistung hinzugefügt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <param name="imageKey">Der Schlüssel des Bilds auf der Registerkarte angezeigt werden sollen.</param>
        <summary>Erstellt eine Registerkarte mit dem angegebenen Schlüssel, Text und Image, und fügt es der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Die `imageKey` Parameter verweist auf ein Bild in der <xref:System.Windows.Forms.TabControl.ImageList%2A> Eigenschaft von der <xref:System.Windows.Forms.TabControl>.  
  
 Das neu erstellte <xref:System.Windows.Forms.TabPage> an das Ende der Auflistung hinzugefügt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.TabPage[] pages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.TabPage[] pages) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.AddRange(System.Windows.Forms.TabPage[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pages" Type="System.Windows.Forms.TabPage[]" />
      </Parameters>
      <Docs>
        <param name="pages">Ein Array vom Typ <see cref="T:System.Windows.Forms.TabPage" /> , enthält die Registerkarten hinzufügen.</param>
        <summary>Fügt eine Gruppe von Registerkarten der Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode, um ein Array von Registerkarten zum Hinzufügen der `tabControl1` Registerkarten-Steuerelement. Beachten Sie, dass die <xref:System.Windows.Forms.TabControl.TabPages%2A> -Eigenschaft ruft die `tabControl1` steuerelementauflistung, um das Array von Registerkarten, die dieser Sammlung hinzuzufügen.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für diese Sammlung.  
  
 [!code-cpp[TabPageCollection.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.AddRange/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.AddRange/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.AddRange/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert der Seiten ist gleich <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Registerkarten aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird zunächst erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.Clear%2A> Methode, um alle Steuerelemente in der `tabControl1` Auflistung der Steuerelemente. Klicken Sie dann im Beispiel fügt `tabPage2` wieder in der Auflistung. Beachten Sie, dass die <xref:System.Windows.Forms.TabControl.TabPages%2A> Eigenschaft dient zum Abrufen der `tabControl1` controls-Auflistung zu entfernen (hinzufügen) Registerkarten aus dieser Auflistung.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Clear/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Clear/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Clear/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Contains(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page">Die <see cref="T:System.Windows.Forms.TabPage" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob eine angegebene Registerkarte in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene <see cref="T:System.Windows.Forms.TabPage" /> befindet sich in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird zunächst erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage> Objekte. Die ersten beiden Registerkarten werden nicht direkt hinzugefügt `tabControl1` durch die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode. Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Contains%2A> Methode bestimmt `tabPage3` ist Teil der `tabControl1` controls-Auflistung. Da `tabPage3` wurde nicht gefunden in dieser Auflistung hinzugefügte es durch die <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.Contains#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Contains/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Contains#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Contains/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Contains/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="page" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Registerkarte.</param>
        <summary>Bestimmt, ob die Auflistung eine Registerkarte mit dem angegebenen Schlüssel enthält.</summary>
        <returns>
          <see langword="true" />Um eine Registerkarte anzugeben wurde die Seite mit dem angegebenen Schlüssel in der Auflistung gefunden; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey%2A> gibt `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Registerkarten in der Auflistung ab.</summary>
        <value>Die Anzahl der Registerkarten in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage>. Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Count%2A> Eigenschaft ruft die Anzahl der <xref:System.Windows.Forms.TabPage> Objekte in der `tabControl1` controls-Auflistung.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.Count#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Count/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Count#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Count/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Count#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Count/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Enumeration aller Registerkarten in der Auflistung zurück.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt einen Enumerator, der eine Momentaufnahme der Auflistung enthält. Sie können die Auflistung ändern, indem Sie den Enumerator ändern; Allerdings können mehrere Enumeratoren gleichzeitig derselben Auflistung zugreifen. Änderung der Auflistung (entweder direkt oder über einen anderen Enumerator) kann daher dazu führen, dass <xref:System.Collections.IEnumerator.Current%2A> oder <xref:System.Collections.IEnumerator.MoveNext%2A> eine Ausnahme auslöst.  
  
 Zwei Enumeratoren, die aus der gleichen Auflistung zum gleichen Zeitpunkt erstellt, können verschiedene Momentaufnahmen enthalten.  
  
 Entfernen von Objekten aus dem Enumerator werden auch diese aus der Auflistung entfernt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page">Die <see cref="T:System.Windows.Forms.TabPage" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index der angegebenen Registerkarte in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Registerkartenseite; 1, wenn es nicht gefunden werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.TabControl> mit einem <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOf%2A> Methode zum Abrufen der `tabPage1` Indexwert. Eine QuickInfo wird verwendet, um diesen Wert anzuzeigen.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IndexOf/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="page" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite auf die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index des ersten Vorkommens der <see cref="T:System.Windows.Forms.TabPage" /> mit dem angegebenen Schlüssel.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens einer Registerkarte Seite mit dem angegebenen Schlüssel auf, wenn gefunden; andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> wird aufgerufen, die letzte Index zuerst nach einer Übereinstimmung Schlüssel überprüft, und wenn keine Übereinstimmung vorhanden ist, beginnt die Suche am Anfang der Auflistung zurückgegeben.  
  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>. Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> gibt-1 zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der Registerkartenseite eingefügt wird.</param>
        <param name="text">Die in der Registerkarte anzuzeigende Text.</param>
        <summary>Erstellt eine neue Registerkarte mit dem angegebenen Text und fügt es am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> Methode können Sie eine neue Registerkarte erstellen, und fügen Sie ihn an einem angegebenen Speicherort. Verwenden Sie zum Hinzufügen einer Registerkarte ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode. Wenn Sie ein Array von Elementen zur Auflistung hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.TabPage tabPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.TabPage tabPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tabPage" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der Registerkartenseite eingefügt wird.</param>
        <param name="tabPage">Die <see cref="T:System.Windows.Forms.TabPage" /> in der Auflistung eingefügt.</param>
        <summary>Fügt eine vorhandene Registerkarte am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> Methode können Sie eine Registerkarte an einer angegebenen Position einfügen. Verwenden Sie zum Hinzufügen einer Registerkarte ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode. Wenn Sie ein Array von Elementen zur Auflistung hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der Registerkartenseite eingefügt wird.</param>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <summary>Erstellt eine neue Registerkarte mit dem angegebenen Schlüssel und den Text ein, und fügt es am angegebenen Index in die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> Methode ermöglicht das Erstellen und eine Registerkarte an einer angegebenen Position einfügen. Verwenden Sie zum Hinzufügen einer Registerkarte ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode. Wenn Sie ein Array von Elementen zur Auflistung hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der Registerkartenseite eingefügt wird</param>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Der Text, auf der Registerkarte angezeigt.</param>
        <param name="imageIndex">Der nullbasierte Index des Bilds auf der Registerkarte angezeigt werden sollen.</param>
        <summary>Erstellt eine neue Registerkarte mit dem angegebenen Schlüssel, Text und Image, und fügt es am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> Methode ermöglicht das Erstellen und eine Registerkarte an einer angegebenen Position einfügen. Verwenden Sie zum Hinzufügen einer Registerkarte ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode. Wenn Sie ein Array von Elementen zur Auflistung hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode.  
  
 Die `imageIndex` Parameter verweist auf ein Bild in der <xref:System.Windows.Forms.TabControl.ImageList%2A> Eigenschaft von der <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der Registerkartenseite eingefügt wird.</param>
        <param name="key">Der Name der Registerkartenseite.</param>
        <param name="text">Die auf der Registerkarte anzuzeigende Text.</param>
        <param name="imageKey">Der Schlüssel des Bilds auf der Registerkarte angezeigt werden sollen.</param>
        <summary>Erstellt eine Registerkarte mit dem angegebenen Schlüssel, Text und Image, und fügt es am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Die <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> Methode ermöglicht das Erstellen und eine Registerkarte an einer angegebenen Position einfügen. Verwenden Sie zum Hinzufügen einer Registerkarte ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> Methode. Wenn Sie ein Array von Elementen zur Auflistung hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> Methode.  
  
 Die `imageKey` Parameter verweist auf ein Bild in der <xref:System.Windows.Forms.TabControl.ImageList%2A> Eigenschaft von der <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>Diese Eigenschaft gibt immer <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.TabControl> mit zwei <xref:System.Windows.Forms.TabPage>. In diesem Beispiel wird die `tabControl1` steuerelementauflistung und bestimmt, ob sie schreibgeschützt sind und mit der <xref:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index der Registerkartenseite zum Abrufen oder festlegen.</param>
        <summary>Ruft ab oder legt einen <see cref="T:System.Windows.Forms.TabPage" /> in der Auflistung.</summary>
        <value>Der <see cref="T:System.Windows.Forms.TabPage" /> am angegebenen Index.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />ist kleiner als 0 (null) oder größer als der höchste verfügbare Index.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite abgerufen werden soll.</param>
        <summary>Ruft eine Registerkarte mit dem angegebenen Schlüssel aus der Auflistung ab.</summary>
        <value>Das <see cref="T:System.Windows.Forms.TabPage" /> mit dem angegebenen Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.TabControl.TabPageCollection.Item%2A> gibt `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Windows.Forms.TabPage" />-Element.</param>
        <summary>Entfernt eine <see cref="T:System.Windows.Forms.TabPage" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird zunächst erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.Remove%2A> Methode, um eine einzelne Registerkarte speziell entfernen `tabPage2` aus der `tabControl1` controls-Auflistung. Beachten Sie, dass die <xref:System.Windows.Forms.TabControl.TabPages%2A> -Eigenschaft ruft die `tabControl1` controls-Auflistung zum Hinzufügen und Entfernen von Registerkarten aus dieser Auflistung.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces mit diesem Beispiel.  
  
 [!code-cpp[TabPageCollection.Remove#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Remove/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Remove#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Remove/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Remove/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index der zu entfernenden <see cref="T:System.Windows.Forms.TabPage" />-Instanz.</param>
        <summary>Entfernt die Registerkarte am angegebenen Index aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird zunächst erstellt eine <xref:System.Windows.Forms.TabControl> mit drei <xref:System.Windows.Forms.TabPage>. Dieses Beispiel verwendet die <xref:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt%2A> -Methode zum Entfernen `tabPage1`, den über seinen Index angegeben wird, aus der `tabControl1` controls-Auflistung. Beachten Sie, dass die <xref:System.Windows.Forms.TabControl.TabPages%2A> -Eigenschaft ruft die `tabControl1` controls-Auflistung zum Hinzufügen und Entfernen von Registerkarten aus dieser Auflistung.  
  
 Verwenden der <xref:System.Drawing> und <xref:System.Windows.Forms> Namespaces für dieses Beispiel.  
  
 [!code-cpp[TabPageCollection.RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.RemoveAt/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Registerkartenseite zu entfernen.</param>
        <summary>Entfernt die Registerkarte mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.TabPage> in der <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das eindimensionales Array, bei dem es sich um das Ziel der aus der Auflistung kopierten Elemente handelt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der Auflistung in das angegebene Array, beginnend am angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dest" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dest" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> ist größer als der verfügbare Platz vom Index bis zum Ende des <paramref name="dest" />.</exception>
        <exception cref="T:System.InvalidCastException">Die Elemente in der <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> kann nicht automatisch in den Typ umgewandelt werden <paramref name="dest" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> synchronisiert werden kann.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.TabPage" />.</param>
        <summary>Fügt eine <see cref="T:System.Windows.Forms.TabPage" /> Steuerelement in der Auflistung.</summary>
        <returns>Die Position, an der die <see cref="T:System.Windows.Forms.TabPage" /> eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page">Das Objekt, das in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Windows.Forms.TabPage" /> Steuerelement ist der <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene Objekt eine <see cref="T:System.Windows.Forms.TabPage" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page">Die <see cref="T:System.Windows.Forms.TabPage" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index des angegebenen <see cref="T:System.Windows.Forms.TabPage" /> Steuerelement in der Auflistung.</summary>
        <returns>Der nullbasierte Index, wenn die Seite ist eine <see cref="T:System.Windows.Forms.TabPage" /> in der Auflistung ist; andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object tabPage);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object tabPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tabPage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem die <see cref="T:System.Windows.Forms.TabPage" /> eingefügt werden soll.</param>
        <param name="tabPage">Die <see cref="T:System.Windows.Forms.TabPage" /> zum Einfügen in die <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</param>
        <summary>Fügt eine <see cref="T:System.Windows.Forms.TabPage" /> Steuerelement in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tabPage" /> ist keine <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />ist kleiner als 0 oder Index ist größer als oder gleich <see cref="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> eine feste Größe aufweist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
        <summary>Ruft ab oder legt einen <see cref="T:System.Windows.Forms.TabPage" /> in der Auflistung.</summary>
        <value>Der <see cref="T:System.Windows.Forms.TabPage" /> am angegebenen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert ist eine <see cref="T:System.Windows.Forms.TabPage" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Windows.Forms.TabPage" />-Element.</param>
        <summary>Entfernt eine <see cref="T:System.Windows.Forms.TabPage" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.TabControl.TabPageCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
