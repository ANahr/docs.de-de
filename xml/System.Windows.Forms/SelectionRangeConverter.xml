<Type Name="SelectionRangeConverter" FullName="System.Windows.Forms.SelectionRangeConverter">
  <TypeSignature Language="C#" Value="public class SelectionRangeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SelectionRangeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SelectionRangeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Typkonverter zum Konvertieren von <see cref="T:System.Windows.Forms.SelectionRange" /> Objekte in und aus verschiedenen anderen Datentypen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.SelectionRange> -Klasse stellt ein einzelnes Datum oder einen Datumsbereich dar. Diese Klasse wird häufig mit verknüpft die <xref:System.Windows.Forms.MonthCalendar> steuern, in dem sie die ausgewählten und hervorgehobenen Datumsangaben darstellt. Die <xref:System.Windows.Forms.SelectionRangeConverter> Klasse ist eine zusätzliche Klasse für <xref:System.Windows.Forms.SelectionRange> , die Sie zum Konvertieren in und aus anderen Typen ermöglicht, Zeichenfolgen, die am häufigsten.  
  
 Weitere Informationen zu den Einsatz von Typkonvertern, finden Sie unter der <xref:System.ComponentModel.TypeConverter> -Basisklasse [verallgemeinerte Typkonvertierung](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada), und [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Erstellen Sie nie eine <xref:System.Windows.Forms.SelectionRangeConverter>. Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>-Methode der <xref:System.ComponentModel.TypeDescriptor>-Klasse auf. Weitere Informationen finden Sie in den Beispielen in der <xref:System.ComponentModel.TypeConverter> Basisklasse.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectionRangeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.SelectionRangeConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SelectionRangeConverter.%23ctor%2A>der Standardkonstruktor wird vom Compiler bereitgestellt werden.  
  
 Erstellen Sie nie eine <xref:System.Windows.Forms.SelectionRangeConverter>. Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>-Methode der <xref:System.ComponentModel.TypeDescriptor>-Klasse auf. Weitere Informationen finden Sie in den Beispielen in der <xref:System.ComponentModel.TypeConverter> Basisklasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="sourceType">Die Quelle <see cref="T:System.Type" /> konvertiert werden.</param>
        <summary>Bestimmt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp in den systemeigenen Typ des Konverters konvertieren kann, durch Abfragen der angegebenen Typdeskriptorkontext.</summary>
        <returns>
          <see langword="true" />Wenn der Konverter die angegebene Konvertierung ausführen kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.SelectionRangeConverter> Klasse zum Konvertieren zwischen Typen spezialisiert ist <xref:System.String> und <xref:System.Windows.Forms.SelectionRange>. Daher die <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertFrom%2A> -Methode zurückkehrt `true` Wenn die `sourceType` Parameter ist vom Typ <xref:System.String>. Andernfalls es verzögert den Aufruf dieser Methode die grundlegende Implementierung <xref:System.ComponentModel.TypeConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.  
  
 Mithilfe des <paramref name="context" />-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Der Parameter ist möglicherweise <see langword="null" />, daher sollten Sie immer die Informationen überprüfen. Auch Eigenschaften des Kontextobjekts können zurückgeben <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="destinationType">Das Ziel <see cref="T:System.Type" /> in konvertiert.</param>
        <summary>Ruft einen Wert, der angibt, ob dieser Konverter ein Objekt mithilfe des angegebenen Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
        <returns>
          <see langword="true" />Wenn dieser Konverter die angegebene Konvertierung ausführen kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.SelectionRangeConverter.CanConvertTo%2A> -Methode zurückkehrt `true` Wenn die `destinationType` Parameter ist vom Typ <xref:System.String> oder <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>. Andernfalls es verzögert den Aufruf dieser Methode die grundlegende Implementierung <xref:System.ComponentModel.TypeConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.  
  
 Mithilfe des <paramref name="context" />-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Der Parameter ist möglicherweise <see langword="null" />, daher sollten Sie immer die Informationen überprüfen. Auch Eigenschaften des Kontextobjekts können zurückgeben <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Die Gebietsschemainformationen für die Konvertierung.</param>
        <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
        <summary>Konvertiert den angegebenen Wert in den Konverter systemeigenen Typ mithilfe des angegebenen Gebietsschemas.</summary>
        <returns>Ein <see cref="T:System.Object" /> , die das konvertierte darstellt <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.SelectionRangeConverter.ConvertFrom%2A> Methode ist für das Konvertieren von spezialisierten <xref:System.String> Werte, die einen Bereich von Datumsangaben darstellen ihrer <xref:System.Windows.Forms.SelectionRange> Darstellungen. Allen anderen Datentypen außer <xref:System.String> an die basisklassenimplementierung dieser Methode übergeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" />ist vom Typ <see cref="T:System.String" /> jedoch in zwei Zeichenfolgen darstellen von Datumsangaben konnte nicht analysiert werden.</exception>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" />ist vom Typ <see cref="T:System.String" /> das analysierte in zwei Zeichenfolgen, aber die Konvertierung aus einer oder beide Zertifikate in den <see cref="T:System.DateTime" /> Typ war nicht erfolgreich.</exception>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.  
  
 Mithilfe des <paramref name="context" />-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Der Parameter ist möglicherweise <see langword="null" />, daher sollten Sie immer die Informationen überprüfen. Auch Eigenschaften des Kontextobjekts können zurückgeben <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Die Gebietsschemainformationen für die Konvertierung.</param>
        <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
        <param name="destinationType">Das Ziel <see cref="T:System.Type" /> in konvertiert.</param>
        <summary>Konvertiert das angegebene <see cref="T:System.Windows.Forms.SelectionRangeConverter" /> Objekt in einen anderen Typ unter Verwendung der angegebenen Kultur.</summary>
        <returns>Ein <see cref="T:System.Object" /> , die das konvertierte darstellt <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.SelectionRangeConverter.ConvertTo%2A> Methode ist für das Konvertieren von spezialisierten <xref:System.Windows.Forms.SelectionRange> -Werte in ihren <xref:System.String> oder <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> Darstellungen. Andere Typen werden an die basisklassenimplementierung dieser Methode übergeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" />kann nicht konvertiert werden, um die <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um eigene Konvertierungsanforderungen anzugeben.  
  
 Mithilfe des <paramref name="context" />-Parameters können zusätzliche Informationen über die Umgebung extrahiert werden, aus der dieser Konverter aufgerufen wurde. Der Parameter ist möglicherweise <see langword="null" />, daher sollten Sie immer die Informationen überprüfen. Auch Eigenschaften des Kontextobjekts können zurückgeben <see langword="null" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="propertyValues">Eine <see cref="T:System.Collections.IDictionary" /> , die die neuen Eigenschaftswerte enthält.</param>
        <summary>Erstellt eine <see cref="T:System.Windows.Forms.SelectionRange" /> Objekt mithilfe des angegebenen Typdeskriptors und den Satz von Eigenschaftenwerten.</summary>
        <returns>Bei erfolgreicher Ausführung der neu erstellte <see cref="T:System.Windows.Forms.SelectionRange" />ist, andernfalls diese Methode löst eine Ausnahme aus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.SelectionRangeConverter.CreateInstance%2A> Methode Änderungen an ein vorhandenes unveränderliche Objekt vornehmen, indem Sie eine geänderte Version zu erstellen. Diese Methode erwartet die `propertyValues` Parameter, Elemente mit den Schlüsselwerten `Start` und `End`, jeweils mit dem entsprechenden <xref:System.DateTime> Wert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyValues" />ist <see langword="null" /> oder den zugehörigen <c>starten</c> und <c>End</c> Elemente konnten nicht konvertiert werden, in einem <see cref="T:System.Windows.Forms.SelectionRange" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Bestimmt, ob das Ändern eines Werts für eine Instanz einen Aufruf von erfordern <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> um einen neuen Wert zu erstellen.</summary>
        <returns>
          <see langword="true" />Wenn <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.CreateInstance" /> muss aufgerufen werden, um eine oder mehrere Eigenschaften eine Änderung vorzunehmen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt die standardmäßige Implementierung immer `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
        <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" /> , die als Filter verwendet wird.</param>
        <summary>Gibt den Satz von gefilterten Eigenschaften für die <see cref="T:System.Windows.Forms.SelectionRange" /> Typ</summary>
        <returns>Im Erfolgsfall den Satz von Eigenschaften, die für verfügbar gemacht werden sollen die <see cref="T:System.Windows.Forms.SelectionRange" /> geben; anderenfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung dieser Methode wird nicht verwendet. die `context` oder `value` Parameter, aber einfach leitet den Aufruf an die TypeDescriptor.<xref:System.ComponentModel.TypeDescriptor.GetProperties%28System.Type%2CSystem.Attribute%5B%5D%29?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SelectionRangeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Bestimmt, ob das aktuelle Objekt Eigenschaften unterstützt, die der angegebenen Typdeskriptorkontext verwenden.</summary>
        <returns>
          <see langword="true" />Wenn <see cref="Overload:System.Windows.Forms.SelectionRangeConverter.GetProperties" /> aufgerufen werden, um die Eigenschaften ermitteln einer <see cref="T:System.Windows.Forms.SelectionRange" /> Objekt; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt die standardmäßige Implementierung immer `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
