<Type Name="AxHost" FullName="System.Windows.Forms.AxHost">
  <TypeSignature Language="C#" Value="public abstract class AxHost : System.Windows.Forms.Control, System.ComponentModel.ICustomTypeDescriptor, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AxHost extends System.Windows.Forms.Control implements class System.ComponentModel.ICustomTypeDescriptor, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AxHost" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ICustomTypeDescriptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Enter")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.AxHostDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als Wrapper für ActiveX-Steuerelemente und macht sie als voll funktionsfähiges Windows Forms-Steuerelemente verfügbar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie in der Regel verwenden Sie nicht die <xref:System.Windows.Forms.AxHost> -Klasse direkt verwendet. Können Sie die [Aximp.exe (Windows Forms ActiveX Control Importer)](~/docs/framework/tools/aximp-exe-windows-forms-activex-control-importer.md) , ob der Wrapper erweitern <xref:System.Windows.Forms.AxHost>.  
  
 Der ActiveX Control Importer-Tool generiert eine Klasse, die abgeleitet ist die <xref:System.Windows.Forms.AxHost> Klasse, und kompiliert ihn in eine Bibliotheksdatei (DLL), die als Verweis auf die Anwendung hinzugefügt werden kann. Alternativ können Sie die `/source` wechseln Sie mit der ActiveX Control Importer und generiert eine C#-Datei für Ihre <xref:System.Windows.Forms.AxHost> abgeleitete Klasse. Sie können Änderungen am Code vornehmen und kompilieren es in eine Bibliotheksdatei.  
  
> [!NOTE]
>  Wenn der Name eines Members des ActiveX-Steuerelements mit einen in .NET Framework definierten Namen übereinstimmt, der ActiveX Control Importer wird den Membernamen Präfix "CTL" beim Erstellen der <xref:System.Windows.Forms.AxHost> abgeleitete Klasse. Angenommen, wenn das ActiveX-Steuerelement ein Element mit dem Namen "Layout" verfügt, wird Sie umbenannt "CtlLayout" in der <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, da die `Layout` Ereignis innerhalb von .NET Framework definiert ist.  
  
 Die meisten der allgemeinen Eigenschaften von der <xref:System.Windows.Forms.AxHost> Klasse sind nur gültig, und verwendet, wenn das zugrunde liegende ActiveX-Steuerelement diese Eigenschaften verfügbar macht. Einige Beispiele für die allgemeinen Eigenschaften sind <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, und <xref:System.Windows.Forms.Control.Text%2A>.  
  
> [!NOTE]
>  Bei Verwendung von Visual Studio als Ihre Windows Forms-entwurfsumgebung können Sie ein ActiveX-Steuerelement für Ihre Anwendung verfügbar machen, indem Sie die Toolbox das ActiveX-Steuerelement hinzufügen. Um dies zu erreichen, Maustaste die **Toolbox**Option **Toolbox anpassen**, navigieren Sie dann zu OCX-Datei des ActiveX. Weitere Informationen finden Sie unter "Hinzufügen von ActiveX-Steuerelementen zu Windows Forms" in der Visual Studio-Dokumentation.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird überschreibt den Konstruktor und die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> und <xref:System.Windows.Forms.AxHost.AttachInterfaces%2A> Methoden eine <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, die das maskierte bearbeiten ActiveX-Steuerelement von Microsoft umschließt. Dieser Code erfordert, dass Sie den generierten Quellcode erstellt haben, durch Ausführen von AxImp.exe auf MSMask32.ocx-Datei mit den `/source` Switch zum Generieren von der Wrapperklasse bearbeitet werden. Dieser Code wird nur in C#-Syntax gezeigt, da dies die einzige Sprache Ausgabe und AxImp.exe.  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AxHost (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid">Die CLSID des ActiveX-Steuerelement zu umschließen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.AxHost" /> -Klasse, die ActiveX-Steuerelement von der angegebenen CLSID umschließt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AxHost (string clsid, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clsid, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.#ctor(System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clsid">Die CLSID des ActiveX-Steuerelement zu umschließen.</param>
        <param name="flags">Eine <see cref="T:System.Int32" /> , die das Verhalten im Kontextmenü für das Steuerelement ändert.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.AxHost" /> Klasse, die das ActiveX-Steuerelement umschließt durch die angegebenen CLSID, und verwenden das Kontextmenü Verhalten gekennzeichnet durch das angegebene <paramref name="flags" /> Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die binäre Darstellung der `flags` Parameterwert das Bit den Wert 0 x 1 dargestellt, enthält das Kontextmenü für das Steuerelement wird keine **bearbeiten** option, wenn das ActiveX-Steuerelement explizit bereitgestellt.  
  
 Wenn die binäre Darstellung der `flags` Parameterwert enthält das Bit den Wert 0 x 2 dargestellt, enthält das Kontextmenü für das Steuerelement eine "Eigenschaften", wenn das ActiveX-Steuerelement eine Reihe von Eigenschaftenseiten; bietet, andernfalls das Kontextmenü enthält eine Eigenschaftenoption nur, wenn das ActiveX-Steuerelement explizit bereitgestellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected virtual void AttachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AttachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.AttachInterfaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse fügt Schnittstellen an das zugrunde liegende ActiveX-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird überschreibt den Konstruktor und die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> und <xref:System.Windows.Forms.AxHost.AttachInterfaces%2A> Methoden eine <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, die das maskierte bearbeiten ActiveX-Steuerelement von Microsoft umschließt. Dieser Code erfordert, dass Sie den generierten Quellcode erstellt haben, durch Ausführen von AxImp.exe auf MSMask32.ocx-Datei mit den `/source` Switch zum Generieren von der Wrapperklasse bearbeitet werden. Dieser Code wird nur in C#-Syntax gezeigt, da dies die einzige Sprache Ausgabe und AxImp.exe.  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Klassen, die erweitern <see cref="T:System.Windows.Forms.AxHost" /> sollten diese Methode überschreiben. In einer überschriebenen Version dieser Methode, die erweiternde Klasse aufrufen sollte <see cref="M:System.Windows.Forms.AxHost.GetOcx" /> an die eigene Schnittstelle abzurufen. In den meisten Fällen die <see cref="M:System.Windows.Forms.AxHost.GetOcx" /> Methode sollte nicht aufgerufen werden, bevor diese Methode aufgerufen wird.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieser Member hat für das genannte Steuerelement keine Bedeutung.</summary>
        <value>Eine Farbe, die die Hintergrundfarbe des Steuerelements darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.BackColorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.BackColorChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.BackColorChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Das im Steuerelement angezeigte Hintergrundbild.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.BackgroundImageChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.BackgroundImageChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.BackgroundImageChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ImageLayout" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.BackgroundImageLayoutChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Ereignis ist für diese Klasse nicht relevant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beginnt die Initialisierung des ActiveX-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwurfsumgebungen mit dieser Methode in der Regel können um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird. Die <xref:System.Windows.Forms.AxHost.EndInit%2A> -Methode beendet die Initialisierung. Mithilfe der <xref:System.Windows.Forms.AxHost.BeginInit%2A> und <xref:System.Windows.Forms.AxHost.EndInit%2A> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde. Die Initialisierung erfolgt zur Laufzeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.BindingContextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.BindingContextChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.BindingContextChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.ChangeUICues" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.ChangeUICues" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.ChangeUICues> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.Click" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.Click> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContainerControl ContainingControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContainerControl ContainingControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.ContainingControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContainerControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Steuerelement mit dem ActiveX-Steuerelement fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ContainerControl" /> , das das Steuerelement mit dem ActiveX-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.AxHost.ContainingControl%2A> Eigenschaftswert kann sich von der <xref:System.Windows.Forms.Control.Parent%2A> Eigenschaft. Die <xref:System.Windows.Forms.ContainerControl> logischer Container für das ActiveX-Steuerelement wird von dieser Eigenschaft dargestellt. Beispielsweise in einem ActiveX-Steuerelement gehostet wird eine <xref:System.Windows.Forms.GroupBox> -Steuerelement, und die <xref:System.Windows.Forms.GroupBox> befinden sich auf eine <xref:System.Windows.Forms.Form>, die <xref:System.Windows.Forms.AxHost.ContainingControl%2A> Eigenschaftswert des ActiveX-Steuerelements ist der <xref:System.Windows.Forms.Form>, und die <xref:System.Windows.Forms.Control.Parent%2A> Eigenschaftswert ist die <xref:System.Windows.Forms.GroupBox> Steuerelement.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">für alle Fenster, um diesen Eigenschaftswert abzurufen. Zugeordnete Enumeration:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Das Kontextmenü, das dem Steuerelement zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.ContextMenuChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.ContextMenuChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.ContextMenuChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.CreateHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für das Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstanceCore (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstanceCore(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.CreateInstanceCore(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">Die CLSID des ActiveX-Steuerelements.</param>
        <summary>Wird aufgerufen, durch das System beim Erstellen des ActiveX-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" /> ActiveX-Steuerelement darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected virtual void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.CreateSink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird aufgerufen, durch das Steuerelement für den Empfang von Ereignissen vorbereiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der Basisklasse ist leer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Die Vordergrundfarbe des Steuerelements.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.CursorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.CursorChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.CursorChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected override void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.DestroyHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht das mit dem Steuerelement verknüpfte Handle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected virtual void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.DetachSink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird vom Steuerelement aufgerufen, wenn das Überwachen von Ereignissen beendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der Basisklasse ist leer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die vom <see cref="T:System.Windows.Forms.Control" /> und den untergeordneten Steuerelementen verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.DoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.DoubleClick" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.DoubleClick> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (int verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DoVerb(int32 verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.DoVerb(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="verb">Einer der Aktionen für das Objekt in IOleObject:: EnumVerbs aufgelistet.</param>
        <summary>Fordert an, dass ein Objekt eine Aktion als Antwort auf ein Endbenutzer Aktion ausführen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode übergibt das angegebene Verb an, die [IOleObject](http://go.microsoft.com/fwlink/?LinkId=166076) Methode des gehosteten Steuerelements.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.DragDrop" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.DragDrop" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.DragDrop> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.DragEnter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.DragEnter" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.DragEnter> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.DragLeave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.DragLeave" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.DragLeave> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.DragOver" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.DragOver" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.DragOver> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bitmap">Ein <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="targetBounds">Ein <see cref="T:System.Drawing.Rectangle" />.</param>
        <summary>Diese Methode wird von diesem Steuerelement nicht unterstützt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditMode">
      <MemberSignature Language="C#" Value="public bool EditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.EditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen Wert, der angibt, ob das gehostete Steuerelement im Bearbeitungsmodus befindet.</summary>
        <value>
          <see langword="true" />Wenn das gehostete Steuerelement im Bearbeitungsmodus befindet; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Ein <see cref="T:System.Boolean" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.EnabledChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.EnabledChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.EnabledChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Initialisierung eines ActiveX-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entwurfsumgebungen mit dieser Methode in der Regel können um die Initialisierung einer Komponente fertig zu stellen, die in einem Formular oder von einer anderen Komponente verwendet wird. Die <xref:System.Windows.Forms.AxHost.EndInit%2A> -Methode beendet die Initialisierung. Mithilfe der <xref:System.Windows.Forms.AxHost.BeginInit%2A> und <xref:System.Windows.Forms.AxHost.EndInit%2A> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde. Die Initialisierung erfolgt zur Laufzeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Die Schriftart des Texts, der vom Steuerelement angezeigt wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.FontChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.FontChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.FontChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Die Vordergrundfarbe des Steuerelements.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.ForeColorChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.ForeColorChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.ForeColorChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorFromOleColor">
      <MemberSignature Language="C#" Value="protected static System.Drawing.Color GetColorFromOleColor (uint color);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig valuetype System.Drawing.Color GetColorFromOleColor(unsigned int32 color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetColorFromOleColor(System.UInt32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="color">Der OLE-Farbwert zu übersetzen.</param>
        <summary>Gibt eine <see cref="T:System.Drawing.Color" /> -Struktur, die den angegebenen OLE-Farbwert entspricht.</summary>
        <returns>Die <see cref="T:System.Drawing.Color" /> -Struktur, die übersetzten OLE-Farbwert darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFontFromIFont">
      <MemberSignature Language="C#" Value="protected static System.Drawing.Font GetFontFromIFont (object font);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Drawing.Font GetFontFromIFont(object font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetFontFromIFont(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="font">Die IFont zum Erstellen einer <see cref="T:System.Drawing.Font" /> aus.</param>
        <summary>Gibt eine <see cref="T:System.Drawing.Font" /> erstellt aus den angegebenen OLE [IFont](http://go.microsoft.com/fwlink/?LinkId=166075) Objekt.</summary>
        <returns>Die <see cref="T:System.Drawing.Font" /> erstellt aus dem angegebenen [IFont](http://go.microsoft.com/fwlink/?LinkId=166075), <see cref="P:System.Windows.Forms.Control.DefaultFont" /> , wenn die Schriftart nicht erstellt werden konnte oder <see langword="null" /> Wenn <paramref name="font" /> ist <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFontFromIFontDisp">
      <MemberSignature Language="C#" Value="protected static System.Drawing.Font GetFontFromIFontDisp (object font);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Drawing.Font GetFontFromIFontDisp(object font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetFontFromIFontDisp(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="font">Die IFontDisp zum Erstellen einer <see cref="T:System.Drawing.Font" /> aus.</param>
        <summary>Gibt eine <see cref="T:System.Drawing.Font" /> erstellt aus den angegebenen OLE [IFontDisp](http://go.microsoft.com/fwlink/?LinkId=166073) Objekt.</summary>
        <returns>Die <see cref="T:System.Drawing.Font" /> erstellt aus dem angegebenen [IFontDisp](http://go.microsoft.com/fwlink/?LinkId=166073), <see cref="P:System.Windows.Forms.Control.DefaultFont" /> , wenn die Schriftart nicht erstellt werden konnte oder <see langword="null" /> Wenn <paramref name="font" /> ist <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIFontDispFromFont">
      <MemberSignature Language="C#" Value="protected static object GetIFontDispFromFont (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetIFontDispFromFont(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetIFontDispFromFont(System.Drawing.Font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">Die Schriftart ein IFontDisp-Objekt zu erstellen.</param>
        <summary>Gibt eine OLE [IFontDisp](http://go.microsoft.com/fwlink/?LinkId=166073) erstellte aus dem angegebenen Objekt <see cref="T:System.Drawing.Font" /> Objekt.</summary>
        <returns>Die [IFontDisp](http://go.microsoft.com/fwlink/?LinkId=166073) erstellt aus der angegebenen Objekt oder <see langword="null" /> Wenn <paramref name="font" /> ist <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.Drawing.Font.Unit" /> -Eigenschaftswert ist <see cref="F:System.Drawing.GraphicsUnit.Point" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIFontFromFont">
      <MemberSignature Language="C#" Value="protected static object GetIFontFromFont (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetIFontFromFont(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetIFontFromFont(System.Drawing.Font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">Die Schriftart ein IFont-Objekt zu erstellen.</param>
        <summary>Gibt eine OLE [IFont](http://go.microsoft.com/fwlink/?LinkId=166075) erstellte aus dem angegebenen Objekt <see cref="T:System.Drawing.Font" /> Objekt.</summary>
        <returns>Die [IFont](http://go.microsoft.com/fwlink/?LinkId=166075) Objekt aus der angegebenen Schriftart erstellt oder <see langword="null" /> Wenn <paramref name="font" /> ist <see langword="null" /> oder [IFont](http://go.microsoft.com/fwlink/?LinkId=166075) konnte nicht erstellt werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.Drawing.Font.Unit" /> -Eigenschaftswert ist <see cref="F:System.Drawing.GraphicsUnit.Point" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPictureDispFromPicture">
      <MemberSignature Language="C#" Value="protected static object GetIPictureDispFromPicture (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetIPictureDispFromPicture(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetIPictureDispFromPicture(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die zu konvertierende <see cref="T:System.Drawing.Image" />.</param>
        <summary>Gibt ein <see langword="IPictureDisp" />-OLE-Objekt zurück, das dem angegebenen <see cref="T:System.Drawing.Image" /> entspricht.</summary>
        <returns>Ein <see cref="T:System.Object" />, das das <see langword="IPictureDisp" />-OLE-Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPictureFromCursor">
      <MemberSignature Language="C#" Value="protected static object GetIPictureFromCursor (System.Windows.Forms.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetIPictureFromCursor(class System.Windows.Forms.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetIPictureFromCursor(System.Windows.Forms.Cursor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor">Ein <see cref="T:System.Windows.Forms.Cursor" />, der einem Bild zur Darstellung des Windows-Mauszeigers entspricht.</param>
        <summary>Gibt ein <see langword="IPicture" />-OLE-Objekt zurück, das dem angegebenen <see cref="T:System.Windows.Forms.Cursor" /> entspricht.</summary>
        <returns>Ein <see cref="T:System.Object" />, das das <see langword="IPicture" />-OLE-Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPictureFromPicture">
      <MemberSignature Language="C#" Value="protected static object GetIPictureFromPicture (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetIPictureFromPicture(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetIPictureFromPicture(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die zu konvertierende <see cref="T:System.Drawing.Image" />.</param>
        <summary>Gibt ein <see langword="IPicture" />-OLE-Objekt zurück, das dem angegebenen <see cref="T:System.Drawing.Image" /> entspricht.</summary>
        <returns>Ein <see cref="T:System.Object" />, das das <see langword="IPicture" />-OLE-Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOADateFromTime">
      <MemberSignature Language="C#" Value="protected static double GetOADateFromTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig float64 GetOADateFromTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetOADateFromTime(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Die <see cref="T:System.DateTime" /> Struktur zu übersetzen.</param>
        <summary>Gibt ein Datum für OLE-Automatisierung, entspricht dem angegebenen <see cref="T:System.DateTime" /> Struktur.</summary>
        <returns>Eine Gleitkommazahl mit doppelter Genauigkeit, die OLE-Automatisierung Datum darstellt entsprechende angegeben <paramref name="time" /> Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Datum für OLE-Automatisierung wird als Gleitkommazahl implementiert, dessen Wert die Anzahl der Tage ab Mitternacht am 30. Dezember 1899 ist. Z. B., wird Mitternacht, 31. Dezember 1899 dargestellt durch 1,0; 6-Uhr, wird 1. Januar 1900 durch 2.25 dargestellt. Mitternacht wird 29. Dezember 1899 durch -1.0 dargestellt; und 6 Uhr morgens 29. Dezember 1899 wird durch-1.25 dargestellt.  
  
 Das grundlegende Datum für OLE-Automatisierung ist Mitternacht am 30. Dezember 1899. Das maximale Datum für OLE-Automatisierung entspricht <xref:System.DateTime.MaxValue>, den letzten Moment der 31. Dezember 9999.  
  
 Weitere Informationen über OLE-Automatisierung finden Sie unter der [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">Der Wert dieser Instanz kann nicht als Datum für die OLE-Automatisierung dargestellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOcx">
      <MemberSignature Language="C#" Value="public object GetOcx ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOcx() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetOcx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Verweis auf das zugrunde liegende ActiveX-Steuerelement ab.</summary>
        <returns>Ein Objekt, das ActiveX-Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird überschreibt den Konstruktor und die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> und <xref:System.Windows.Forms.AxHost.AttachInterfaces%2A> Methoden eine <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, die das maskierte bearbeiten ActiveX-Steuerelement von Microsoft umschließt. Dieser Code erfordert, dass Sie den generierten Quellcode erstellt haben, durch Ausführen von AxImp.exe auf MSMask32.ocx-Datei mit den `/source` Switch zum Generieren von der Wrapperklasse bearbeitet werden. Dieser Code wird nur in C#-Syntax gezeigt, da dies die einzige Sprache Ausgabe und AxImp.exe.  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleColorFromColor">
      <MemberSignature Language="C#" Value="protected static uint GetOleColorFromColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int32 GetOleColorFromColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetOleColorFromColor(System.Drawing.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">Die <see cref="T:System.Drawing.Color" /> Struktur zu übersetzen.</param>
        <summary>Gibt einen OLE-Color-Wert, entspricht dem angegebenen <see cref="T:System.Drawing.Color" /> Struktur.</summary>
        <returns>Der Wert der OLE-Farbe, die übersetzte darstellt <see cref="T:System.Drawing.Color" /> Struktur.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPictureFromIPicture">
      <MemberSignature Language="C#" Value="protected static System.Drawing.Image GetPictureFromIPicture (object picture);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Drawing.Image GetPictureFromIPicture(object picture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetPictureFromIPicture(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="picture" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="picture">Die zu konvertierende <see langword="IPicture" />.</param>
        <summary>Gibt eine <see cref="T:System.Drawing.Image" /> für die angegebene OLE <see langword="IPicture" /> Objekt.</summary>
        <returns>Ein <see cref="T:System.Drawing.Image" /> darstellt der <see langword="IPicture" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode konvertiert `IPictureDisp` Objekte zusätzlich zum `IPicture` Objekte. Dies funktioniert, da die `IPictureDisp` OLE-Schnittstelle ist eine Teilmenge der `IPicture` Schnittstelle. Konvertieren von `IPictureDisp` Objekte mit dieser Methode muss da die <xref:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp%2A> zu diesem Zeitpunkt nicht ordnungsgemäß funktioniert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPictureFromIPictureDisp">
      <MemberSignature Language="C#" Value="protected static System.Drawing.Image GetPictureFromIPictureDisp (object picture);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Drawing.Image GetPictureFromIPictureDisp(object picture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetPictureFromIPictureDisp(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="picture" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="picture">Die zu konvertierende <see langword="IPictureDisp" />.</param>
        <summary>Gibt eine <see cref="T:System.Drawing.Image" /> für die angegebene OLE <see langword="IPictureDisp" /> Objekt.</summary>
        <returns>Ein <see cref="T:System.Drawing.Image" /> darstellt der <see langword="IPictureDisp" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode funktioniert nicht ordnungsgemäß. Können Sie die <xref:System.Windows.Forms.AxHost.GetPictureFromIPicture%2A> -Methode zum Konvertieren einer `IPictureDisp` -Objekt in ein <xref:System.Drawing.Image>, allerdings da die `IPictureDisp` OLE-Schnittstelle ist eine Teilmenge der der `IPicture` Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">Die ursprünglichen Grenzen des ActiveX-Steuerelements.</param>
        <param name="factor">Ein Skalierungsfaktor.</param>
        <param name="specified">Ein <see cref="T:System.Windows.Forms.BoundsSpecified" />-Wert.</param>
        <summary>Wird aufgerufen, die vom System abgerufen werden die aktuellen Grenzen des ActiveX-Steuerelements.</summary>
        <returns>Der unveränderte <paramref name="bounds" /> Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ActiveX-Steuerelemente skaliert selbst, damit diese Methode keine speziellen Berechnungen ausführt, ignoriert der `factor` und `specified` Werte und gibt die `bounds` Wert unverändert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeFromOADate">
      <MemberSignature Language="C#" Value="protected static DateTime GetTimeFromOADate (double date);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig valuetype System.DateTime GetTimeFromOADate(float64 date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.GetTimeFromOADate(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="date">Das OLE automatisieren Datum zu übersetzen.</param>
        <summary>Gibt eine <see cref="T:System.DateTime" /> -Struktur, die dem angegebenen Datum für OLE-Automatisierung entspricht.</summary>
        <returns>Ein <see cref="T:System.DateTime" /> , stellt die dasselbe Datum und wie Uhrzeit <paramref name="date" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `date` Parameter ist eine Gleitkommazahl mit doppelter Genauigkeit, die ein Datum als die Anzahl der Tage vor oder nach dem Basisdatum, Mitternacht am 30. Dezember 1899 darstellt. Die Anmeldung und der ganzzahlige Teil des `date` codieren Sie das Datum als eine positive oder negative Tag Verschiebung aus am 30. Dezember 1899 und der Absolute-Wert, der den Bruchteil der `date` codiert die Tageszeit, als Bruchzahl eine Verschiebung Tages von Mitternacht. `date`ein Wert zwischen minus 657435,0 2958466,0 muss sein.  
  
 Beachten Sie, dass aufgrund der Art und Weise, die Datumsangaben codiert werden, es zwei Möglichkeiten gibt, um einer beliebigen Uhrzeit am 30. Dezember 1899 darzustellen. Beispielsweise bedeuten 0.5 und 0.5 Mittag am 30. Dezember 1899, da eine Verschiebung Tag von Plus oder minus 0 Tage vom Basisdatum ist immer noch mit dem Basisdatum und eine halben Tag Verschiebung zwischen Mitternacht und Mittag.  
  
 Weitere Informationen über OLE-Automatisierung finden Sie unter der [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Datum ist kein gültiger Datumswert für die OLE-Automatisierung.</exception>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.GiveFeedback" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.GiveFeedback" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.GiveFeedback> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAboutBox">
      <MemberSignature Language="C#" Value="public bool HasAboutBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAboutBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.HasAboutBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, ob das ActiveX-Steuerelement verfügt über eine **zu** (Dialogfeld).</summary>
        <value>
          <see langword="true" />Wenn das ActiveX-Steuerelement verfügt über eine **zu** (Dialogfeld), andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die **zu** im Dialogfeld in der Regel werden Version und urheberrechtliche Informationen für das ActiveX-Steuerelement angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird überschreibt den Konstruktor und die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> und <xref:System.Windows.Forms.AxHost.AttachInterfaces%2A> Methoden eine <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, die das maskierte bearbeiten ActiveX-Steuerelement von Microsoft umschließt. Dieser Code erfordert, dass Sie den generierten Quellcode erstellt haben, durch Ausführen von AxImp.exe auf MSMask32.ocx-Datei mit den `/source` Switch zum Generieren von der Wrapperklasse bearbeitet werden. Dieser Code wird nur in C#-Syntax gezeigt, da dies die einzige Sprache Ausgabe und AxImp.exe.  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPropertyPages">
      <MemberSignature Language="C#" Value="public bool HasPropertyPages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasPropertyPages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.HasPropertyPages" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob das ActiveX-Steuerelement eine Eigenschaftenseite verfügt.</summary>
        <returns>
          <see langword="true" />Wenn das ActiveX-Steuerelement auf eine Eigenschaftenseite hat. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eigenschaftenseiten können Benutzer eines ActiveX-Steuerelements anzeigen und Ändern der Eigenschaften von ActiveX-Steuerelements. Diese Eigenschaften erfolgt durch den Aufruf ein Dialogfeld der Eigenschaftenseiten für eine oder mehrere enthält, die eine benutzerdefinierte grafische Schnittstelle zum Anzeigen und bearbeiten die Eigenschaften des Steuerelements bereitstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.HelpRequested" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.HelpRequested" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.HelpRequested> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ImeMode" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.ImeModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.ImeModeChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.ImeModeChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEditMode">
      <MemberSignature Language="C#" Value="public void InvokeEditMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvokeEditMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.InvokeEditMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Versucht, den Bearbeitungsmodus des gehosteten Steuerelements zu aktivieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.IsInputChar(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Das zu überprüfende Zeichen.</param>
        <summary>Bestimmt, ob ein Zeichen ein eingegebenes Zeichen ist, das das ActiveX-Steuerelement erkennt.</summary>
        <returns>
          <see langword="true" />Wenn das Zeichen direkt an das ActiveX-Steuerelement gesendet und nicht vorverarbeitet; werden andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.AxHost.IsInputChar%2A> Methode wird aufgerufen, während die Fenster Nachricht vorverarbeiten, um zu bestimmen, ob bestimmte Eingabezeichen vorverarbeitet oder direkt an das ActiveX-Steuerelement gesendet werden soll. Die vorverarbeitung der ein Zeichen enthält, wird geprüft, ob das Zeichen eines mnemonischen Codes eines anderen Steuerelements ist.  
  
 Bei Implementierung in der <xref:System.Windows.Forms.AxHost> -Klasse, die <xref:System.Windows.Forms.AxHost.IsInputChar%2A> immer Methodenrückgabe `true`, sodass das angegebene Zeichen direkt an das ActiveX-Steuerelement gesendet wird.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">für alle Fenster für erbende Klassen zum Aufrufen dieser Methode. Zugeordnete Enumeration:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.KeyDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.KeyDown" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.KeyDown> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.KeyPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.KeyPress" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.KeyPress> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.KeyUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.KeyUp" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.KeyUp> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.Layout" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.Layout" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.Layout> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDirty">
      <MemberSignature Language="C#" Value="public void MakeDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.MakeDirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kündigt an die Komponente ändern Dienst mit der <see cref="T:System.Windows.Forms.AxHost" /> hat sich geändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event EventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Ereignis ist für diese Klasse nicht relevant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseDoubleClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Ereignis ist für diese Klasse nicht relevant.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseDown" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseDown> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseEnter" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseEnter" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseEnter> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseHover" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseHover" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseHover> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseLeave" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseLeave" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseLeave> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseMove" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseMove> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseUp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseUp> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.MouseWheel" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.MouseWheel" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.MouseWheel> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OcxState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AxHost.State OcxState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AxHost/State OcxState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.OcxState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AxHost+State</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den beibehaltenen Zustand des ActiveX-Steuerelements.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.AxHost.State" /> , die den beibehaltenen Zustand eines ActiveX-Steuerelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der die <xref:System.Windows.Forms.AxHost.OcxState%2A> Eigenschaft wird verwendet, nachdem das Steuerelement erstellt wurde, aber bevor er angezeigt wird. Der beibehaltene Zustand des zugrunde liegenden ActiveX-Steuerelements wird zurückgegeben, der <xref:System.Windows.Forms.AxHost.State>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das ActiveX-Steuerelement ist bereits geladen.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnBackColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.BackColorChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnFontChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.FontChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnForeColorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnHandleCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInPlaceActive">
      <MemberSignature Language="C#" Value="protected virtual void OnInPlaceActive ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInPlaceActive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnInPlaceActive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird aufgerufen, wenn das Steuerelement direktes aktiven Zustand übergeht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung der Basisklasse ist leer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.OnLostFocus(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.LostFocus" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.Paint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.Paint" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.Paint> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessMessage">
      <MemberSignature Language="C#" Value="public override bool PreProcessMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PreProcessMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.PreProcessMessage(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Meldung darstellt. Die möglichen Werte sind WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR und WM_SYSCHAR.</param>
        <summary>Führt eine Vorverarbeitung der Tastatur- oder Eingabemeldungen in der Nachrichtenschleife aus, bevor sie gesendet werden.</summary>
        <returns>
          <see langword="true" />, wenn die Meldung vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</param>
        <summary>Verarbeitet eine Tastatureingabe im Dialogfeld.</summary>
        <returns>
          <see langword="true" />, wenn die Taste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.ProcessMnemonic(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Das zu verarbeitende Zeichen.</param>
        <summary>Verarbeitet ein mnemonisches Zeichen.</summary>
        <returns>
          <see langword="true" />, wenn das Zeichen als mnemonisches Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropsValid">
      <MemberSignature Language="C#" Value="protected bool PropsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool PropsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.PropsValid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert, der angibt, ob das gehostete Steuerelement in einem Zustand befindet, in dem seine Eigenschaften zugegriffen werden können.</summary>
        <returns>
          <see langword="true" />Wenn die Eigenschaften des gehosteten Steuerelements zugegriffen werden können. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.QueryAccessibilityHelp" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.QueryAccessibilityHelp> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.QueryContinueDrag" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.QueryContinueDrag" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.QueryContinueDrag> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseDown">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseDown (short button, short shift, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseDown(int16 button, int16 shift, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> -Ereignis unter Verwendung der angegebenen 32-Bit-Ganzzahlen mit Vorzeichen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseDown">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseDown (short button, short shift, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseDown(int16 button, int16 shift, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Int16,System.Int16,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> -Ereignis unter Verwendung der angegebenen Gleitkommazahlen mit einfacher Genauigkeit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseDown">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseDown (object o1, object o2, object o3, object o4);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseDown(object o1, object o2, object o3, object o4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseDown(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="o3" Type="System.Object" />
        <Parameter Name="o4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="o2">Nicht verwendet.</param>
        <param name="o3">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="o4">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseDown" /> -Ereignis unter Verwendung der angegebenen Objekte.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseMove">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseMove (short button, short shift, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseMove(int16 button, int16 shift, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> -Ereignis unter Verwendung der angegebenen 32-Bit-Ganzzahlen mit Vorzeichen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseMove">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseMove (short button, short shift, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseMove(int16 button, int16 shift, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Int16,System.Int16,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> -Ereignis unter Verwendung der angegebenen Gleitkommazahlen mit einfacher Genauigkeit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseMove">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseMove (object o1, object o2, object o3, object o4);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseMove(object o1, object o2, object o3, object o4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseMove(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="o3" Type="System.Object" />
        <Parameter Name="o4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="o2">Nicht verwendet.</param>
        <param name="o3">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="o4">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseMove" /> -Ereignis unter Verwendung der angegebenen Objekte.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseUp">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseUp (short button, short shift, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseUp(int16 button, int16 shift, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> -Ereignis unter Verwendung der angegebenen 32-Bit-Ganzzahlen mit Vorzeichen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseUp">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseUp (short button, short shift, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseUp(int16 button, int16 shift, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Int16,System.Int16,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int16" />
        <Parameter Name="shift" Type="System.Int16" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="button">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="shift">Nicht verwendet.</param>
        <param name="x">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="y">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> -Ereignis unter Verwendung der angegebenen Gleitkommazahlen mit einfacher Genauigkeit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnMouseUp">
      <MemberSignature Language="C#" Value="protected void RaiseOnMouseUp (object o1, object o2, object o3, object o4);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseOnMouseUp(object o1, object o2, object o3, object o4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.RaiseOnMouseUp(System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="o3" Type="System.Object" />
        <Parameter Name="o4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">Eines der <see cref="T:System.Windows.Forms.MouseButtons" /> Werte, die angeben, welche Maustaste gedrückt wurde.</param>
        <param name="o2">Nicht verwendet.</param>
        <param name="o3">Die X-Koordinate der Maus klicken, in Pixel.</param>
        <param name="o4">Die y-Koordinate der Maus klicken, in Pixel.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.AxHost.MouseUp" /> -Ereignis unter Verwendung der angegebenen Objekte.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Ein <see cref="T:System.Boolean" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.RightToLeftChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.RightToLeftChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.RightToLeftChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAboutBoxDelegate">
      <MemberSignature Language="C#" Value="protected void SetAboutBoxDelegate (System.Windows.Forms.AxHost.AboutBoxDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAboutBoxDelegate(class System.Windows.Forms.AxHost/AboutBoxDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Windows.Forms.AxHost+AboutBoxDelegate" />
      </Parameters>
      <Docs>
        <param name="d">Die <see cref="T:System.Windows.Forms.AxHost.AboutBoxDelegate" /> aufrufen.</param>
        <summary>Ruft die <see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /> Methode, um die Informationen über das Dialogfeld des ActiveX-Steuerelement anzuzeigen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> -Methode können auch abgeleitete Klassen behandeln die <xref:System.Windows.Forms.AxHost.ShowAboutBox%2A> Methode ohne Anfügen eines Delegaten. Dies ist das bevorzugte Verfahren für die Behandlung der <xref:System.Windows.Forms.AxHost.ShowAboutBox%2A> Methode in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird überschreibt den Konstruktor und die <xref:System.Windows.Forms.AxHost.SetAboutBoxDelegate%2A> und <xref:System.Windows.Forms.AxHost.AttachInterfaces%2A> Methoden eine <xref:System.Windows.Forms.AxHost> abgeleitete Klasse, die das maskierte bearbeiten ActiveX-Steuerelement von Microsoft umschließt. Dieser Code erfordert, dass Sie den generierten Quellcode erstellt haben, durch Ausführen von AxImp.exe auf MSMask32.ocx-Datei mit den `/source` Switch zum Generieren von der Wrapperklasse bearbeitet werden. Dieser Code wird nur in C#-Syntax gezeigt, da dies die einzige Sprache Ausgabe und AxImp.exe.  
  
 [!code-csharp[AxHost_Wrap_MaskEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AxHost_Wrap_MaskEdit/CS/axmsmask.cs#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.AxHost.SetAboutBoxDelegate(System.Windows.Forms.AxHost.AboutBoxDelegate)" /> erhalten Sie die Methode, damit registrierte Delegaten das <see cref="M:System.Windows.Forms.AxHost.ShowAboutBox" /> Methode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</param>
        <param name="y">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</param>
        <param name="width">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</param>
        <param name="height">Der neue <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaftswert des Steuerelements.</param>
        <param name="specified">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</param>
        <summary>Legt die angegebenen Begrenzungen dieses Steuerelements fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.SetVisibleCore(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="true" />, um das Steuerelement sichtbar zu machen, andernfalls <see langword="false" />.</param>
        <summary>Legt das Steuerelement auf den angegebenen sichtbaren Zustand fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAboutBox">
      <MemberSignature Language="C#" Value="public void ShowAboutBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowAboutBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.ShowAboutBox" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeigt das ActiveX-Steuerelement **zu** (Dialogfeld).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.AxHost.HasAboutBox%2A> ist `false`, keine **zu** Dialogfeld wird angezeigt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPropertyPages">
      <MemberSignature Language="C#" Value="public void ShowPropertyPages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertyPages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.ShowPropertyPages" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeigt die Eigenschaftenseiten, die das ActiveX-Steuerelement zugeordnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.AxHost.HasPropertyPages%2A> ist `false`, keine Eigenschaftenseiten angezeigt werden.  
  
 Eigenschaftenseiten können Benutzer eines ActiveX-Steuerelements anzeigen und Ändern der Eigenschaften von ActiveX-Steuerelements. Diese Eigenschaften erfolgt durch den Aufruf ein Dialogfeld der Eigenschaftenseiten für eine oder mehrere enthält, die eine benutzerdefinierte grafische Schnittstelle zum Anzeigen und bearbeiten die Eigenschaften des Steuerelements bereitstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPropertyPages">
      <MemberSignature Language="C#" Value="public void ShowPropertyPages (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertyPages(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.ShowPropertyPages(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Das übergeordnete Element <see cref="T:System.Windows.Forms.Control" /> des ActiveX-Steuerelements.</param>
        <summary>Zeigt die Eigenschaftenseiten, die das ActiveX-Steuerelement, die dem angegebenen übergeordneten Steuerelement zugewiesene zugeordnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.AxHost.HasPropertyPages%2A> ist `false`, keine Eigenschaftenseiten angezeigt werden.  
  
 Eigenschaftenseiten können Benutzer eines ActiveX-Steuerelements anzeigen und Ändern der Eigenschaften von ActiveX-Steuerelements. Diese Eigenschaften erfolgt durch den Aufruf ein Dialogfeld der Eigenschaftenseiten für eine oder mehrere enthält, die eine benutzerdefinierte grafische Schnittstelle zum Anzeigen und bearbeiten die Eigenschaften des Steuerelements bereitstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Site des Steuerelements ab oder legt diese fest.</summary>
        <value>Die dem Steuerelement zugeordnete <see cref="T:System.ComponentModel.ISite" />, falls vorhanden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.StyleChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.StyleChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.StyleChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <MemberSignature Language="C#" Value="System.ComponentModel.AttributeCollection ICustomTypeDescriptor.GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung vom Typ <see cref="T:System.Attribute" /> für das aktuelle Objekt.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für das aktuelle Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Klassennamen des aktuellen Objekts zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den vollständigen Typnamen anstelle des Werts, der die <xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetClassName%2A> -Methode zurückkehrt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Namen des aktuellen Objekts zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den Standardnamen anstelle des Werts, der die <xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetComponentName%2A> -Methode zurückkehrt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <MemberSignature Language="C#" Value="System.ComponentModel.TypeConverter ICustomTypeDescriptor.GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Typkonverter für das aktuelle Objekt zurück.</summary>
        <returns>Gibt immer <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden des standardtypkonverters anstelle des Werts, der die <xref:System.Windows.Forms.AxHost.System%23ComponentModel%23ICustomTypeDescriptor%23GetConverter%2A> -Methode zurückkehrt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptor ICustomTypeDescriptor.GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Standardereignis für das aktuelle Objekt zurück.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" /> , das das Standardereignis für das aktuelle Objekt darstellt oder <see langword="null" /> , wenn das Objekt keine Ereignisse aufweist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptor ICustomTypeDescriptor.GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Standardeigenschaft für das aktuelle Objekt zurück.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> , die die Standardeigenschaft für das aktuelle Objekt darstellt oder <see langword="null" /> , wenn das Objekt keine Eigenschaften besitzt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEditor">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">Ein <see cref="T:System.Type" /> , die den Editor für das aktuelle Objekt darstellt.</param>
        <summary>Gibt einen Editor des angegebenen Typs für das aktuelle Objekt zurück.</summary>
        <returns>Ein Objekt des angegebenen Typs, das den Editor für das aktuelle Objekt darstellt oder <see langword="null" /> , wenn der Editor nicht gefunden werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ereignisse für das aktuelle Objekt zurück.</summary>
        <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> , die die Ereignisse für das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" /> , die als Filter verwendet wird.</param>
        <summary>Gibt die Ereignisse für das aktuelle Objekt, das das angegebene Attributarray als Filter verwenden.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.EventDescriptorCollection" /> , die die Ereignisse für darstellt der <see cref="T:System.Windows.Forms.AxHost" /> , die mit den angegebenen Satz von Attributen übereinstimmen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Eigenschaften für das aktuelle Objekt zurück.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , die die Ereignisse für das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" /> , die als Filter verwendet wird.</param>
        <summary>Gibt die Eigenschaften für das aktuelle Objekt, das das angegebene Attributarray als Filter verwenden.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> , die die Ereignisse für den aktuellen darstellt <see cref="T:System.Windows.Forms.AxHost" /> , die mit den angegebenen Satz von Attributen übereinstimmen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd">Nicht verwendet.</param>
        <summary>Gibt das Objekt, das den angegebenen Wert besitzt.</summary>
        <returns>Das aktuelle Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AxHost.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Der diesem Steuerelement zugeordnete Text.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.AxHost.TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="E:System.Windows.Forms.AxHost.TextChanged" /> Ereignis wird nicht unterstützt, indem Sie die <see cref="T:System.Windows.Forms.AxHost" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie versuchen, hinzufügen oder entfernen einen Handler für das <xref:System.Windows.Forms.AxHost.TextChanged> Ereignis, eine <xref:System.NotSupportedException> ausgelöst wird. Die Ereignisse abgeleitet der <xref:System.Windows.Forms.Control> Klasse werden nicht unterstützt, indem Sie die <xref:System.Windows.Forms.AxHost> Klasse. Vom ActiveX-verfügbar gemachten Ereignisse zu steuern, wann die <xref:System.Windows.Forms.AxHost> Wrapper wird erstellt, werden die Ereignisse, die verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AxHost.WndProc(System.Windows.Forms.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</param>
        <summary>Verarbeitet Windows-Meldungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
