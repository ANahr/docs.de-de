<Type Name="Control+ControlCollection" FullName="System.Windows.Forms.Control+ControlCollection">
  <TypeSignature Language="C#" Value="public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Windows.Forms.Layout.ArrangedElementCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control.ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Layout.ArrangedElementCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von<see cref="T:System.Windows.Forms.Control" />-Objekten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>, <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, und <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> Methoden ermöglichen es Ihnen, hinzufügen und entfernen einzelne Steuerelemente aus der Auflistung. Sie können auch die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methoden zum Hinzufügen oder entfernen alle Steuerelemente aus der Auflistung.  
  
 Sie können feststellen, ob eine <xref:System.Windows.Forms.Control> ist ein Member der Auflistung durch Übergabe des Steuerelements in der <xref:System.Windows.Forms.Control.ControlCollection.Contains%2A> Methode. Den Indexwert des Speicherorts des abzurufenden eine <xref:System.Windows.Forms.Control> in der Auflistung, übergeben Sie das Steuerelement in der <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> Methode. Die Auflistung in ein Array kopiert werden kann, durch Aufrufen der <xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel Beispiel entfernt eine <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> ist ein Member der Auflistung. Im Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, und mindestens eine <xref:System.Windows.Forms.RadioButton> control für eine <xref:System.Windows.Forms.Form>. Die <xref:System.Windows.Forms.RadioButton> Steuerelemente hinzugefügt werden die <xref:System.Windows.Forms.Panel> -Steuerelement, und die <xref:System.Windows.Forms.Panel> ein Steuerelement hinzugefügt wurde, um die <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche klicken, wird das Optionsfeld mit dem Namen `radioButton2` wird daraus der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Windows.Forms.Control" /> , die das Steuerelement, das Besitzer der steuerelementauflistung darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control.ControlCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.Control" /> steuerelementauflistung hinzu.</param>
        <summary>Die Control-Auflistung hinzugefügt das angegebene Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> Methode ermöglicht Ihnen das Hinzufügen <xref:System.Windows.Forms.Control> Objekte bis zum Ende der steuerelementauflistung.  
  
 Sie können auch neue hinzufügen <xref:System.Windows.Forms.Control> -Objekte der Auflistung mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> Methode.  
  
 So entfernen Sie eine <xref:System.Windows.Forms.Control> , die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methoden.  
  
> [!NOTE]
>  Ein <xref:System.Windows.Forms.Control> kann nur zugewiesen werden, um eine <xref:System.Windows.Forms.Control.ControlCollection> zu einem Zeitpunkt. Wenn die <xref:System.Windows.Forms.Control> ist bereits ein untergeordnetes Element eines anderen Steuerelements entfernt aus, die steuern, bevor er auf ein anderes Steuerelement hinzugefügt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel fügt ein <xref:System.Windows.Forms.Control> auf die <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>. Das Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel> Steuerelement und ein <xref:System.Windows.Forms.Button> control für eine <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche geklickt wird, eine <xref:System.Windows.Forms.TextBox> Steuerelement wird dem Bereich hinzugefügt <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#2)]
 [!code-csharp[ControlCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#2)]
 [!code-vb[ControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das angegebene Steuerelement ist ein Steuerelement der obersten Ebene oder eine zirkuläre kontrollverweis würde, wenn dieses Steuerelement für die Auflistung der Steuerelemente hinzugefügt wurden.</exception>
        <exception cref="T:System.ArgumentException">Das zugewiesene Objekt die <paramref name="value" /> -Parameter ist ein <see cref="T:System.Windows.Forms.Control" />.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> Methode, um sicherzustellen, dass das Steuerelement der Auflistung hinzugefügt wird.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.Control[] controls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.Control[] controls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="System.Windows.Forms.Control[]" />
      </Parameters>
      <Docs>
        <param name="controls">Ein Array von <see cref="T:System.Windows.Forms.Control" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt ein Array von Steuerelementobjekte zur Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control> enthaltenen Objekte der `controls` Array an das Ende der Auflistung angefügt werden.  
  
 Können Sie die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> Methode, um schnell hinzufügen wie eine Gruppe von <xref:System.Windows.Forms.Control> -Objekte der Auflistung anstelle von manuell hinzufügen und <xref:System.Windows.Forms.Control> mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> Methode.  
  
 So entfernen Sie eine <xref:System.Windows.Forms.Control> , die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>, oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methoden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird addiert zwei <xref:System.Windows.Forms.Control> -Objekte und die <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>. Das Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel> Steuerelement und ein <xref:System.Windows.Forms.Button> control für eine <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche geklickt wird, zwei <xref:System.Windows.Forms.RadioButton> Steuerelemente werden hinzugefügt, wenn der Bereich <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#3)]
 [!code-csharp[ControlCollection#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#3)]
 [!code-vb[ControlCollection#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> Methode, um sicherzustellen, dass die Auflistung der Steuerelemente hinzugefügt werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Steuerelemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methode, um die gesamte Auflistung von Steuerelementen aus einem übergeordneten Steuerelement zu entfernen.  
  
 Um ein einzelnes Steuerelement aus der Auflistung zu entfernen, verwenden Sie die <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> Methoden.  
  
> [!IMPORTANT]
>  Aufrufen der <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methode Steuerpunkten nicht aus dem Arbeitsspeicher entfernt. Sie müssen explizit aufrufen, die <xref:System.Windows.Forms.Control.Dispose%2A> Methode zur Vermeidung von Arbeitsspeicher zu Speicherverlusten.  
  
 Hinzufügen neuer <xref:System.Windows.Forms.Control> -Objekte der Auflistung mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> Methoden.  
  
   
  
## Examples  
 Das folgende Codebeispiel entfernt alle dem <xref:System.Windows.Forms.Control> Objekte in der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>. Im Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, und mindestens ein anderes Steuerelement in einer <xref:System.Windows.Forms.Form>. Die anderen Steuerelemente hinzugefügt werden die <xref:System.Windows.Forms.Panel> -Steuerelement, und die <xref:System.Windows.Forms.Panel> hinzugefügt, die <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche geklickt wird, werden alle im Bereich enthaltenen Steuerelemente aus entfernt die <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#1)]
 [!code-csharp[ControlCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#1)]
 [!code-vb[ControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> Methode, um sicherzustellen, dass alle Steuerelemente aus der Auflistung entfernt werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das angegebene Steuerelement ein Element der Auflistung ist.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Forms.Control" /> ist ein Member der Auflistung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht Ihnen zu bestimmen, ob eine <xref:System.Windows.Forms.Control> ist ein Member der Auflistung vor dem Versuch, die Operationen für die <xref:System.Windows.Forms.Control>. Sie können diese Methode verwenden, um zu bestätigen, dass eine <xref:System.Windows.Forms.Control> hinzugefügt wurde, oder ist immer noch ein Element der Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel Beispiel entfernt eine <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> ist ein Member der Auflistung. Im Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, und mindestens eine <xref:System.Windows.Forms.RadioButton> control für eine <xref:System.Windows.Forms.Form>. Die <xref:System.Windows.Forms.RadioButton> Steuerelemente hinzugefügt werden die <xref:System.Windows.Forms.Panel> -Steuerelement, und die <xref:System.Windows.Forms.Panel> ein Steuerelement hinzugefügt wurde, um die <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche klicken, wird das Optionsfeld mit dem Namen `removeButton` wird daraus der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Schlüssel.</param>
        <summary>Ermittelt, ob die <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Forms.Control.ControlCollection" /> enthält ein Element mit dem angegebenen Schlüssel ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft eine <xref:System.Windows.Forms.Control> entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">Der im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Schlüssel.</param>
        <param name="searchAllChildren">
          <see langword="true" />alle untergeordneten Steuerelemente gesucht werden soll. andernfalls <see langword="false" />.</param>
        <summary>Suchvorgänge für Steuerelemente, indem ihre <see cref="P:System.Windows.Forms.Control.Name" /> Eigenschaft und erstellt ein Array aller Steuerelemente, die mit übereinstimmen.</summary>
        <returns>Ein Array vom Typ <see cref="T:System.Windows.Forms.Control" /> mit den entsprechenden steuert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="key" /> Parameter ist <see langword="null" /> oder eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="child">Die <see cref="T:System.Windows.Forms.Control" /> in die Auflistung der Steuerelemente für gesucht werden soll.</param>
        <summary>Ruft den Index des angegebenen untergeordneten Steuerelements in die Auflistung der Steuerelemente ab.</summary>
        <returns>Ein nullbasierter Indexwert, der den Speicherort des angegebenen untergeordneten Steuerelements in der steuerelementauflistung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Steuerelement mit einem Indexwert 0 (null) ist am Anfang der Z-Reihenfolge und höhere Zahlen werden unten näher.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="child" /> <see cref="T:System.Windows.Forms.Control" /> befindet sich nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="throwException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">Die <see cref="T:System.Windows.Forms.Control" /> in die Auflistung der Steuerelemente für gesucht werden soll.</param>
        <param name="throwException">
          <see langword="true" />Um eine Ausnahme auszulösen, wenn die <see cref="T:System.Windows.Forms.Control" /> angegebenen, in der <c>untergeordneten</c> Parameter ist kein Steuerelement in der <see cref="T:System.Windows.Forms.Control.ControlCollection" />ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft den Index des angegebenen untergeordneten Steuerelements in die Auflistung der Steuerelemente ab, und löst optional eine Ausnahme aus, wenn das angegebene Steuerelement nicht in die Auflistung der Steuerelemente vorhanden ist.</summary>
        <returns>Ein nullbasierter Indexwert, der die Position des angegebenen untergeordneten Steuerelements innerhalb der steuerelementauflistung darstellt; andernfalls-1, wenn das angegebene <see cref="T:System.Windows.Forms.Control" /> befindet sich nicht der <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Steuerelement mit einem Indexwert 0 (null) ist am Anfang der Z-Reihenfolge und höhere Zahlen werden unten näher. Ein Rückgabewert von – 1 wird nur zurückgegeben, wenn die `throwException` Parameter ist `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="child" /> <see cref="T:System.Windows.Forms.Control" /> befindet sich nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" />, und die <paramref name="throwException" /> Parameterwert ist <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Verweis auf ein Enumeratorobjekt ab, das zum Durchlaufen einer <see cref="T:System.Windows.Forms.Control.ControlCollection" /> verwendet wird.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerator" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Ruft den Index des angegebenen Steuerelements in die Auflistung der Steuerelemente ab.</summary>
        <returns>Ein nullbasierter Indexwert, der die Position des angegebenen <see cref="T:System.Windows.Forms.Control" /> in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Steuerelement nicht in der Auflistung gefunden wird die <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> Methode Rückgabewert-1 ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden-Steuerelements.</param>
        <summary>Ruft den Index des ersten Vorkommens des angegebenen Elements in der Auflistung ab.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens des Steuerelements mit dem angegebenen Namen in der Auflistung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> wird aufgerufen, die letzte Index zuerst nach einer Übereinstimmung Schlüssel überprüft, und wenn keine Übereinstimmung vorhanden ist, beginnt die Suche am Anfang der Auflistung zurückgegeben.  
  
 Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge oder ein Element mit dem angegebenen Schlüssel nicht gefunden wird, <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> gibt-1 zurück.  
  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft eine <xref:System.Windows.Forms.Control> entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Steuerelements aus der steuerelementauflistung abgerufen werden soll.</param>
        <summary>Gibt an, die <see cref="T:System.Windows.Forms.Control" /> an der angegebenen indizierten Position in der Auflistung.</summary>
        <value>Die <see cref="T:System.Windows.Forms.Control" /> an der angegebenen Indexposition in die Auflistung der Steuerelemente befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen einer <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection>, verweisen auf das Objekt mit einem bestimmten Indexwert. Der Indexwert des der <xref:System.Windows.Forms.Control.ControlCollection> ist ein nullbasierter Index.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="index" /> Wert ist kleiner als 0 (null) oder größer als oder gleich der Anzahl der Steuerelemente in der Auflistung ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Steuerelements aus der steuerelementauflistung abgerufen werden soll.</param>
        <summary>Gibt eine <see cref="T:System.Windows.Forms.Control" /> mit dem angegebenen Schlüssel in der Auflistung.</summary>
        <value>Die <see cref="T:System.Windows.Forms.Control" /> mit dem angegebenen Schlüssel in der <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft eine <xref:System.Windows.Forms.Control> entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement, das im Besitz dieser <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
        <value>Die <see cref="T:System.Windows.Forms.Control" /> , besitzt dies <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Windows.Forms.Control" />, der aus der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> entfernt werden soll.</param>
        <summary>Entfernt das angegebene Steuerelement aus der steuerelementauflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.Control> entfernt aus der steuerelementauflistung werden alle nachfolgenden Steuerelemente verschoben, um eine Position in der Auflistung.  
  
 Sie können auch entfernen einer <xref:System.Windows.Forms.Control> mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> -Methode, oder entfernen Sie alle Steuerelemente mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methode.  
  
 Hinzufügen neuer <xref:System.Windows.Forms.Control> -Objekte der Auflistung mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> Methoden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel Beispiel entfernt eine <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> ist ein Member der Auflistung. Im Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, und eine oder mehrere <xref:System.Windows.Forms.RadioButton> Steuerelemente eine <xref:System.Windows.Forms.Form>. Die <xref:System.Windows.Forms.RadioButton> Steuerelemente hinzugefügt werden die <xref:System.Windows.Forms.Panel> -Steuerelement, und die <xref:System.Windows.Forms.Panel> Steuerelement hinzugefügt wird die <xref:System.Windows.Forms.Form>. Wenn die Schaltfläche klicken, wird das Optionsfeld mit dem Namen `radioButton2` wird daraus der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> Methode, um sicherzustellen, dass das Steuerelement aus der Auflistung entfernt wird.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Indexwert des zu entfernenden <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Entfernt ein Steuerelement aus der steuerelementauflistung an der angegebenen indizierten Position an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.Control> entfernt aus der steuerelementauflistung werden alle nachfolgenden Steuerelemente verschoben, um eine Position in der Auflistung.  
  
 Sie können auch entfernen einer <xref:System.Windows.Forms.Control> , die Sie zuvor hinzugefügt haben, mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Methoden.  
  
 Hinzufügen neuer <xref:System.Windows.Forms.Control> -Objekte der Auflistung mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> oder <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> Methoden.  
  
   
  
## Examples  
 Das folgende Codebeispiel entfernt das erste <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> ist die Anzahl der Auflistung größer als 0 (null). Im Beispiel erfordert, dass Sie erstellt haben eine <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.Button>, und mindestens ein anderes Steuerelement in einer <xref:System.Windows.Forms.Form>. Die anderen Steuerelemente hinzugefügt werden die <xref:System.Windows.Forms.Panel> -Steuerelement, und die <xref:System.Windows.Forms.Panel> ein Steuerelement hinzugefügt wurde, um die <xref:System.Windows.Forms.Form>. Auf die Schaltfläche geklickt wird, wird das erste Steuerelement im Bereich enthaltenen daraus die <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 [!code-cpp[ControlCollection#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#5)]
 [!code-csharp[ControlCollection#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#5)]
 [!code-vb[ControlCollection#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des untergeordneten Steuerelements zu entfernen.</param>
        <summary>Entfernt das untergeordnete Steuerelement mit dem angegebenen Schlüssel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> Eigenschaft eine <xref:System.Windows.Forms.Control> entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIndex">
      <MemberSignature Language="C#" Value="public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">Die <c>untergeordneten</c> <see cref="T:System.Windows.Forms.Control" /> gesucht.</param>
        <param name="newIndex">Der neue Indexwert des Steuerelements.</param>
        <summary>Legt den Index des angegebenen untergeordneten Steuerelements in der Auflistung den angegebenen Indexwert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A> aufgerufen wird, die <xref:System.Windows.Forms.Control> verweist auf die `child` Parameter wird in der angegebenen Position verschoben `newIndex` und die andere <xref:System.Windows.Forms.Control> Verweise in der <xref:System.Windows.Forms.Control.ControlCollection> werden neu angeordnet, um die Verschiebung aufzunehmen. Das Steuerelement mit einem Indexwert 0 (null) ist am Anfang der Z-Reihenfolge und höhere Zahlen werden unten näher.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="child" /> Steuerelement befindet sich nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
