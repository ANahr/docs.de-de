<Type Name="ListView+CheckedListViewItemCollection" FullName="System.Windows.Forms.ListView+CheckedListViewItemCollection">
  <TypeSignature Language="C#" Value="public class ListView.CheckedListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/CheckedListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung ausgewählter Elemente in einem Listenansicht-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> speichert die aktivierten Elemente in einem <xref:System.Windows.Forms.ListView> Steuerelement. Elemente können nur aktiviert werden, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft von der <xref:System.Windows.Forms.ListView> Steuerelement festgelegt ist, um `true`. Die Elemente gespeichert, der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> enthaltenen Elemente der <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Die <xref:System.Windows.Forms.ListView.ListViewItemCollection> Klasse speichert alle Elemente angezeigt, der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Die folgende Tabelle zeigt ein Beispiel, wie das <xref:System.Windows.Forms.ListView.ListViewItemCollection> speichert die Elemente der <xref:System.Windows.Forms.ListView> sowie deren Auswahlzustand in einem Beispiel <xref:System.Windows.Forms.ListView> Steuerelement.  
  
|Index|Element|Aktivierungszustand in der Listenansicht|  
|-----------|----------|-----------------------------------|  
|0|Item1|deaktiviert|  
|1|Item2|Aktiviert|  
|2|Item3|deaktiviert|  
|3|Item4|Aktiviert|  
|4|Item5|Aktiviert|  
  
 Auf der Grundlage der <xref:System.Windows.Forms.ListView.ListViewItemCollection> wird in der vorherigen Tabelle, in der folgenden Tabelle veranschaulicht, wie die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> angezeigt würde.  
  
|Index|Aktivierte Elemente in ListViewItemCollection|  
|-----------|--------------------------------------------|  
|0|Item2|  
|1|Item4|  
|2|Item5|  
  
 Sie können die Eigenschaften und Methoden dieser Klasse verwenden, zum Ausführen einer Vielzahl von Aufgaben mit der Auflistung. Die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains%2A> Methode können Sie bestimmen, ob ein Element aus der <xref:System.Windows.Forms.ListView.ListViewItemCollection> Klasse ist ein Mitglied der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>. Wenn Sie wissen, dass das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf%2A> Methode, um zu bestimmen, die Position des Elements in der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckedListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListView" /> -Steuerelement, das die Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz dieser Klasse kann nicht erstellt werden, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">Ein <see cref="T:System.Windows.Forms.ListViewItem" /> , das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Bestimmt, ob das angegebene Element in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene Element in der Auflistung befindet; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains%2A> Methode können Sie bestimmen, ob ein Element aus der <xref:System.Windows.Forms.ListView.ListViewItemCollection> eine Version der aktivierten Elemente gespeichert, der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>. Wenn Sie wissen, dass ein Element in der Auflistung aktiviert ist, können Sie die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf%2A?displayProperty=nameWithType> Methode, um zu bestimmen, die Position des Elements in der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Elements.</param>
        <summary>Bestimmt, ob eine Spalte mit dem angegebenen Schlüssel in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />Wenn ein Element mit dem angegebenen Schlüssel in der Auflistung enthalten ist; andernfalls<see langword="false." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListViewItem.Name%2A> Eigenschaft von einem <xref:System.Windows.Forms.ListViewItem> entspricht dem Schlüssel für ein Element in der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Besitzer <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Ein <see cref="T:System.Array" /> , das das Array, kopieren Sie den Inhalt der Auflistung darstellt.</param>
        <param name="index">Die Position im Zielarray, um die Elemente aus der Auflistung zu kopieren.</param>
        <summary>Kopiert die gesamte Auflistung in ein vorhandenes Array an einer angegebenen Position innerhalb des Arrays.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, die aktivierten Elemente aus mehreren Sammlungen in ein einzelnes Array kombinieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie bestimmen die Anzahl der aktivierten Elemente in der <xref:System.Windows.Forms.ListView> Steuerelement. Anschließend können Sie diesen Wert, wenn die Werte der Auflistung durchlaufen, und Sie müssen eine Anzahl von Iterationen der Schleife bereitstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator, der zum Durchlaufen der Auflistung der aktivierten Elemente verwendet werden kann.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" /> , das die Auflistung der aktivierten Elemente darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item">Ein <see cref="T:System.Windows.Forms.ListViewItem" /> , das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Gibt den Index in der Auflistung des angegebenen Elements zurück.</summary>
        <returns>Der nullbasierte Index des Elements in der Auflistung ist; andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald Sie wissen, dass ein Element in der Auflistung befindet (mithilfe der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains%2A> Methode), können Sie die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf%2A> Methode, um zu ermitteln, wo ein bestimmtes Element im die <xref:System.Windows.Forms.ListView.ListViewItemCollection> für die <xref:System.Windows.Forms.ListView> befindet sich innerhalb der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOfKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Elements, das den Index abzurufen.</param>
        <summary>Bestimmt den Index für ein Element mit dem angegebenen Schlüssel.</summary>
        <returns>Der nullbasierte Index für die <see cref="T:System.Windows.Forms.ListViewItem" /> mit dem angegebenen Namen, sofern gefunden, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListViewItem.Name%2A> Eigenschaft eine <xref:System.Windows.Forms.ListViewItem> entspricht dem Schlüssel für ein Element in einem <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Der Schlüsselvergleich ist nicht in der Groß-/Kleinschreibung beachtet. Wenn die `key` Parameter ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOfKey%2A> gibt-1 zurück.  
  
 Wenn <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOfKey%2A> wird aufgerufen, die letzte Index zuerst nach einer Übereinstimmung Schlüssel überprüft, und wenn keine Übereinstimmung vorhanden ist, beginnt die Suche am Anfang der Auflistung zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Besitzer <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist immer `true` für diese Sammlung. Die Elemente in der Auflistung können nur geändert werden, indem die <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Elements in der Auflistung, das abgerufen werden soll.</param>
        <summary>Ruft das Element am angegebenen Index in der Auflistung ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" /> am angegebenen Index in der Auflistung befindet, die das Element darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indexer können Sie ein bestimmtes Produkt aus Abrufen der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>. In dieser Auflistung gespeicherte Element ist ein Element in der <xref:System.Windows.Forms.ListView.ListViewItemCollection> von der <xref:System.Windows.Forms.ListView> , darstellt ein aktiviertes Elements in der <xref:System.Windows.Forms.ListView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="index" /> Parameter ist kleiner als 0 oder größer als oder gleich dem Wert von der <see cref="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.Count" /> Eigenschaft <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Elements in der Auflistung abgerufen werden soll.</param>
        <summary>Ruft ein Element mit dem angegebenen Schlüssel in der Auflistung ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" /> , das Element mit dem angegebenen Index in der Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection.Item%2A>Gibt `null` Wenn die `key` Parameter ist `null` oder leer sein.  
  
 Die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Eigenschaft entspricht dem Schlüssel für ein Element in der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Besitzer <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt, das zum Synchronisieren des Zugriffs auf die Auflistung von Steuerelementen verwendet werden kann.</summary>
        <value>Das Objekt, mit dem die Auflistung synchronisiert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Element, das der Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt der Auflistung ein Element hinzu.</summary>
        <returns>Der nullbasierte Index, in dem Wert in der Auflistung befindet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> -Klasse direkt verwendet. Zum Hinzufügen eines Elements auf der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Checked%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> -Klasse direkt verwendet. So löschen Sie die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>, legen die <xref:System.Windows.Forms.ListViewItem.Checked%2A?displayProperty=nameWithType> Eigenschaft, um `false` für jede <xref:System.Windows.Forms.ListViewItem> in der <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Ein <see cref="T:System.Windows.Forms.ListViewItem" /> , suchen Sie in der <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />.</param>
        <summary>Überprüft, ob das Element aktiviert ist.</summary>
        <returns>
          <see langword="true" />, wenn sich das Element in der <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> befindet, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Ein <see cref="T:System.Windows.Forms.ListViewItem" /> , das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Gibt den Index in der Auflistung des angegebenen Elements zurück.</summary>
        <returns>Der nullbasierte Index des Elements, wenn es in der Auflistung ist; andernfalls -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der Index, an dem Wert eingefügt werden soll.</param>
        <param name="value">Das dem <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> hinzuzufügende Objekt.</param>
        <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> -Klasse direkt verwendet. Zum Hinzufügen eines Elements auf der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Checked%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft ab oder legt ein Objekt aus der Auflistung.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Diese Eigenschaft kann nicht festgelegt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das aus entfernt die <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />.</param>
        <summary>Entfernt das erste Vorkommen eines Elements aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> -Klasse direkt verwendet. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Checked%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedListViewItemCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt ein Element am angegebenen Index aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> -Klasse direkt verwendet. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Checked%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
