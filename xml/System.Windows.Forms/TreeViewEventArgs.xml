<Type Name="TreeViewEventArgs" FullName="System.Windows.Forms.TreeViewEventArgs">
  <TypeSignature Language="C#" Value="public class TreeViewEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeViewEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeViewEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für die <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />, <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />, <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />, oder <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> Ereignisse von einem <see cref="T:System.Windows.Forms.TreeView" /> Steuerelement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [Ereignisse](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht eine angepasste <xref:System.Windows.Forms.TreeView>. Durch Vererbung der <xref:System.Windows.Forms.TreeView> Klasse, die diese benutzerdefinierte Version weist die volle Funktionalität einer normalen <xref:System.Windows.Forms.TreeView>. Ändern von verschiedenen Eigenschaftswerten im Konstruktor bietet ein einzigartiges aussehen. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> Eigenschaft auf "false" festgelegt ist, überschreibt das benutzerdefinierte Steuerelement auch die <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Methode, sodass Knoten erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation, die Dies erleichtert eine einheitliche Oberfläche zu ermöglichen, ohne dass Sie die Eigenschaften des Steuerelements in jedes einzelne Projekt angegeben werden müssen verwendet werden.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeViewEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeViewEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Die <see cref="T:System.Windows.Forms.TreeNode" /> , die auf das Ereignis reagiert wird.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> Klasse für den angegebenen Strukturknoten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeViewEventArgs (System.Windows.Forms.TreeNode node, System.Windows.Forms.TreeViewAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, valuetype System.Windows.Forms.TreeViewAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeViewEventArgs.#ctor(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeViewAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="action" Type="System.Windows.Forms.TreeViewAction" />
      </Parameters>
      <Docs>
        <param name="node">Die <see cref="T:System.Windows.Forms.TreeNode" /> , die auf das Ereignis reagiert wird.</param>
        <param name="action">Der Typ des <see cref="T:System.Windows.Forms.TreeViewAction" /> , die das Ereignis ausgelöst hat.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> Klasse für den angegebenen Strukturknoten und mit dem angegebenen Typ der Aktion, die das Ereignis ausgelöst hat.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeViewAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeViewEventArgs.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Aktion ab, der das Ereignis ausgelöst hat.</summary>
        <value>Der Typ des <see cref="T:System.Windows.Forms.TreeViewAction" /> , die das Ereignis ausgelöst hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht eine angepasste <xref:System.Windows.Forms.TreeView>. Durch Vererbung der <xref:System.Windows.Forms.TreeView> Klasse, die diese benutzerdefinierte Version weist die volle Funktionalität einer normalen <xref:System.Windows.Forms.TreeView>. Ändern von verschiedenen Eigenschaftswerten im Konstruktor bietet ein einzigartiges aussehen. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> Eigenschaft auf "false" festgelegt ist, überschreibt das benutzerdefinierte Steuerelement auch die <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Methode, sodass Knoten erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation, die Dies erleichtert eine einheitliche Oberfläche zu ermöglichen, ohne dass Sie die Eigenschaften des Steuerelements in jedes einzelne Projekt angegeben werden müssen verwendet werden.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeViewEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Strukturknoten ab, der aktiviert, erweitert, reduziert oder ausgewählt wurde.</summary>
        <value>Die <see cref="T:System.Windows.Forms.TreeNode" /> , hat wurde aktiviert, erweitert, reduziert oder ausgewählt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht eine angepasste <xref:System.Windows.Forms.TreeView>. Durch Vererbung der <xref:System.Windows.Forms.TreeView> Klasse, die diese benutzerdefinierte Version weist die volle Funktionalität einer normalen <xref:System.Windows.Forms.TreeView>. Ein einzigartiges aussehen wird durch das Ändern von verschiedenen Eigenschaftswerten im Konstruktor bereitgestellt. Da <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> festgelegt ist auf "false", überschreibt das benutzerdefinierte Steuerelement auch <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> so, dass der Knoten erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation, die Dies erleichtert eine einheitliche Oberfläche zu ermöglichen, ohne dass Sie die Eigenschaften des Steuerelements in jedes einzelne Projekt angegeben werden müssen verwendet werden.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
