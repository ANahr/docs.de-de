<Type Name="DataGrid+HitTestInfo" FullName="System.Windows.Forms.DataGrid+HitTestInfo">
  <TypeSignature Language="C#" Value="public sealed class DataGrid.HitTestInfo" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit DataGrid/HitTestInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGrid.HitTestInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält Informationen zu einem Teil von <see cref="T:System.Windows.Forms.DataGrid" /> an einer angegebenen Koordinate. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGrid.HitTestInfo> Klasse, die in Verbindung mit der <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode der <xref:System.Windows.Forms.DataGrid> steuern, wird verwendet, um zu bestimmen, welcher Teil einer <xref:System.Windows.Forms.DataGrid> Steuerelement der Benutzer geklickt hat. Die <xref:System.Windows.Forms.DataGrid.HitTestInfo> -Klasse enthält die Zeile, die Spalte und die Teil des Datenblatts, auf den geklickt wurde. Finden Sie unter der <xref:System.Windows.Forms.DataGrid.HitTestType> zurückgegebenes Enumeration der <xref:System.Windows.Forms.DataGrid.HitTestInfo.Type%2A> -Eigenschaft für eine vollständige Liste der Raster teilen.  
  
 Zurückgeben einer <xref:System.Windows.Forms.DataGrid.HitTestInfo>, Aufrufen der <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode aus der <xref:System.Windows.Forms.Control.MouseDown> -Ereignis <xref:System.Windows.Forms.DataGrid> Steuerelement. Übergeben der `x` und `y` Eigenschaften der <xref:System.Windows.Forms.MouseEventArgs> auf die <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode in einer <xref:System.Windows.Forms.Control.MouseDown> Ereignis zurückzugebenden der <xref:System.Windows.Forms.DataGrid.HitTestInfo> Objekt. Anschließend werden die Zeilen-, Spalten- und Teil des Rasters ausgegeben.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HitTestInfo.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalte, die der Benutzer geklickt hat.</summary>
        <value>Die Nummer der Spalte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Koordinate nicht über eine Zelle ist, gibt die Eigenschaft-1 zurück.  
  
   
  
## Examples  
 Das folgende Beispiel gibt die Anzahl der geklickt wurde Zeile und Spalte durch Aufrufen der <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode innerhalb der <xref:System.Windows.Forms.Control.MouseDown> -Ereignis für ein <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Steuerelement. Dies gibt eine <xref:System.Windows.Forms.DataGrid.HitTestInfo> Objekt.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.Column Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Column Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.Column Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Column Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.Column Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Column Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTestInfo.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das zweite Objekt für den Vergleich typisiert als <see cref="T:System.Object" />.</param>
        <summary>Gibt an, ob zwei Objekte identisch sind.</summary>
        <returns>
          <see langword="true" />, wenn die Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel testet, ob der Benutzer einen Bereich des Rasters klickt, die nicht gültig ist.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTestInfo.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Hashcode für die <see cref="T:System.Windows.Forms.DataGrid.HitTestInfo" /> Instanz.</summary>
        <returns>Der Hashcode für diese Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Object.GetHashCode%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel gibt den Hashcode für die <xref:System.Windows.Forms.DataGrid.HitTestInfo>.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.GetHashCode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.GetHashCode Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.GetHashCode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nowhere">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Forms.DataGrid.HitTestInfo Nowhere;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Forms.DataGrid/HitTestInfo Nowhere" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DataGrid.HitTestInfo.Nowhere" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass eine Koordinate Teil entspricht der <see cref="T:System.Windows.Forms.DataGrid" /> -Steuerelement, das nicht funktioniert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Andere Teile der der <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>, wie z. B. die <xref:System.Windows.Forms.DataGrid.HitTestType.Caption>, können nützliche Informationen zurückgeben. Wenn der Teil des Rasters keine Funktion (z. B. der graue Bereich hinter einer gefüllten Datenblatttabelle), weist die <xref:System.Windows.Forms.DataGrid.HitTestInfo.Nowhere> werden zurückgegeben.  
  
   
  
## Examples  
 Das folgende Beispiel testet, ob der Benutzer einen Bereich des Rasters klickt, die nicht gültig ist.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.Nowhere Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Nowhere Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HitTestInfo.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Nummer der Zeile, die der Benutzer geklickt hat.</summary>
        <value>Die Anzahl der Zeile, auf die geklickt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Koordinate nicht über eine Zelle ist, gibt die Eigenschaft-1 zurück. Wenn die Koordinate ist ein <xref:System.Windows.Forms.DataGrid.HitTestType.RowHeader>, die Eigenschaft gibt die Zeilennummer des Headers, aber die <xref:System.Windows.Forms.DataGrid.HitTestInfo.Column%2A> Eigenschaft gibt-1 zurück.  
  
   
  
## Examples  
 Im folgende Beispiel wird die Zahl der geklickt wurde Zeile und Spalte durch Aufrufen der <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode innerhalb der <xref:System.Windows.Forms.Control.MouseDown> -Ereignis für ein <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Steuerelement. Dies gibt eine <xref:System.Windows.Forms.DataGrid.HitTestInfo> Objekt.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.Row Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Row Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.Row Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Row Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.Row Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Row Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGrid.HitTestInfo.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Typ, Zeilennummer und Spaltennummer.</summary>
        <returns>Der Typ, Zeilennummer und Spaltennummer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Typ, Zeilennummer und Spaltennummer klickt der Benutzer die <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGrid.HitTestType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGrid/HitTestType Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGrid.HitTestInfo.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGrid+HitTestType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Teil der <see cref="T:System.Windows.Forms.DataGrid" /> steuern, als die Zeile oder Spalte, die geklickt wurde.</summary>
        <value>Eines der <see cref="T:System.Windows.Forms.DataGrid.HitTestType" /> Enumerationen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Teil des Datenblatts, geklickt wurde durch Aufrufen der <xref:System.Windows.Forms.DataGrid.HitTest%2A> Methode innerhalb der <xref:System.Windows.Forms.Control.MouseDown> -Ereignis für ein <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> Steuerelement. Dies gibt eine <xref:System.Windows.Forms.DataGrid.HitTestInfo> Objekt.  
  
 [!code-cpp[Classic DataGrid.HitTestInfo.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataGrid.HitTestInfo.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Type Example/CS/source.cs#1)]
 [!code-vb[Classic DataGrid.HitTestInfo.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataGrid.HitTestInfo.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
