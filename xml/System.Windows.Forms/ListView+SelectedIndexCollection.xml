<Type Name="ListView+SelectedIndexCollection" FullName="System.Windows.Forms.ListView+SelectedIndexCollection">
  <TypeSignature Language="C#" Value="public class ListView.SelectedIndexCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/SelectedIndexCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung mit den Indizes für die aktivierten Elemente in einem <see cref="T:System.Windows.Forms.ListView" /> Steuerelement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView.SelectedIndexCollection> speichert die Indizes für die ausgewählten Elemente in einem <xref:System.Windows.Forms.ListView> Steuerelement. Die Indizes gespeichert, der <xref:System.Windows.Forms.ListView.SelectedIndexCollection> sind Indexpositionen in der <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Die <xref:System.Windows.Forms.ListView.ListViewItemCollection> speichert alle Elemente angezeigt, der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Die folgende Tabelle zeigt ein Beispiel, wie das <xref:System.Windows.Forms.ListView.ListViewItemCollection> speichert die Elemente der <xref:System.Windows.Forms.ListView> und zeigt den Status ihrer Auswahl in einem Beispiel <xref:System.Windows.Forms.ListView>.  
  
|Index|Element|Selection-Zustand in der Listenansicht|  
|-----------|----------|-------------------------------------|  
|0|Item1|Nicht markiert|  
|1|Item2|Ausgewählt|  
|2|Item3|Nicht markiert|  
|3|Item4|Ausgewählt|  
|4|Item5|Ausgewählt|  
  
 Auf der Grundlage der <xref:System.Windows.Forms.ListView.ListViewItemCollection> wird in der vorherigen Tabelle, in der folgenden Tabelle veranschaulicht, wie die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> angezeigt würde.  
  
|Index|Index des ausgewählten Elements in der ListViewItemCollection|  
|-----------|----------------------------------------------------------|  
|0|1|  
|1|3|  
|2|4|  
  
 Sie können die Eigenschaften und Methoden dieser Klasse verwenden, zum Ausführen einer Vielzahl von Aufgaben mit der Auflistung. Die <xref:System.Windows.Forms.ListView.SelectedIndexCollection.Contains%2A> Methode können Sie bestimmen, ob eine Indexposition in der <xref:System.Windows.Forms.ListView.ListViewItemCollection> ist einer der in der gespeicherten Indizes die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>. Wenn Sie wissen, dass das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf%2A> Methode, um zu bestimmen, die Position des Indexes in der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Elemente und die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> Klasse. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und ein <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler. Dieses Beispiel benötigen Sie, dass der Ereignishandler korrekt zugeordnet ist die <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectedIndexCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Windows.Forms.ListView" /> Steuerelement, das die Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz dieser Klasse kann nicht erstellt werden, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.Add(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der Index des Elements in der <see cref="P:System.Windows.Forms.ListView.Items" /> Auflistung hinzuzufügende der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</param>
        <summary>Fügt das Element am angegebenen Index in die <see cref="P:System.Windows.Forms.ListView.Items" /> Array in der Auflistung.</summary>
        <returns>Die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt 0 zurück, wenn das Handle nicht für die besitzende erstellt wurde <xref:System.Windows.Forms.ListView>. (Können Sie bestimmen, ob die <xref:System.Windows.Forms.ListView> verfügt über eine zugeordnete Handle mithilfe der <xref:System.Windows.Forms.Control.IsHandleCreated%2A?displayProperty=nameWithType> Eigenschaft.) Diese Methode gibt-1 zurück, wenn das Handle für einen virtuellen nicht erstellt wurde <xref:System.Windows.Forms.ListView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Index ist kleiner als 0 oder größer als oder gleich der Anzahl der Elemente in der Besitzer <see cref="T:System.Windows.Forms.ListView" />.  
  
 - oder -   
  
 Der Besitzer <see cref="T:System.Windows.Forms.ListView" /> befindet sich im virtuellen Modus und der angegebene Index ist kleiner als 0 oder größer als oder gleich dem Wert des <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Elemente in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die ausgewählten Elemente zu löschen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.Contains(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der Index in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob der angegebene Index in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />Wenn dem angegebenen Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> für die <see cref="T:System.Windows.Forms.ListView" /> ist ein Element in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedIndexCollection.Contains%2A> Methode können Sie bestimmen, ob eine Indexposition in der <xref:System.Windows.Forms.ListView.ListViewItemCollection> ist einer der ausgewählten Indizes gespeichert, der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>. Wenn Sie wissen, dass ein Element in der Auflistung ausgewählten Index ist, können Sie die <xref:System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf%2A> Methode, um zu bestimmen, die Position des Indexes in der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Ein <see cref="T:System.Array" /> , das das Array, kopieren Sie den Inhalt der Auflistung darstellt.</param>
        <param name="index">Die Position im Zielarray, um die Elemente aus der Auflistung zu kopieren.</param>
        <summary>Kopiert die gesamte Auflistung in ein vorhandenes Array an einer angegebenen Position innerhalb des Arrays.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, der ausgewählten Indizes über mehrere Sammlungen in ein einzelnes Array kombiniert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie bestimmen die Anzahl der aktivierten Elemente in der <xref:System.Windows.Forms.ListView>. Sie können dann diesen Wert verwenden, wenn Sie die Werte der Auflistung durchlaufen werden, und bieten eine Reihe von Iterationen die Schleife ausführen müssen. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> Eigenschaft von der <xref:System.Windows.Forms.ListView> festgelegt ist, um `false`, diese Eigenschaft gibt einen Wert von 0 oder 1, je nachdem, ob ein Element ausgewählt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator, der zum Durchlaufen der Auflistung ausgewählten Index verwendet werden kann.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerator" /> , die den ausgewählten Index-Auflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der nullbasierte Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index in der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> des angegebenen Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> von der <see cref="T:System.Windows.Forms.ListView" /> Steuerelement.</summary>
        <returns>Der nullbasierte Index in der Auflistung, auf dem angegebenen Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> befindet sich in der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />, oder -1, wenn der Index nicht in der Auflistung befindet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald Sie wissen, dass ein Element in der Auflistung ausgewählten Index ist (mithilfe der <xref:System.Windows.Forms.ListView.SelectedIndexCollection.Contains%2A> Methode), können Sie die <xref:System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf%2A> Methode, um zu bestimmen, die Position des Indexes in der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist immer `true` für diese Sammlung. Die Elemente in der Auflistung können geändert werden nur von der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Elements in der Auflistung, das abgerufen werden soll.</param>
        <summary>Ruft den Indexwert am angegebenen Index in der Auflistung ab.</summary>
        <value>Der Indexwert aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , der am angegebenen Speicherort gespeichert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indexer können Sie zum Abrufen eines bestimmten ausgewählten Indexes aus der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>. Der Index in der Auflistung gespeicherten ist ein Index in die <xref:System.Windows.Forms.ListView.ListViewItemCollection> von der <xref:System.Windows.Forms.ListView> , die ein ausgewähltes Element in darstellt der <xref:System.Windows.Forms.ListView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />ist kleiner als 0 oder größer als oder gleich dem Wert, der die <see cref="P:System.Windows.Forms.ListView.SelectedIndexCollection.Count" /> Eigenschaft von der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.Remove(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der Index des Elements in der <see cref="P:System.Windows.Forms.ListView.Items" /> Auflistung entfernt werden soll aus der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</param>
        <summary>Entfernt das Element am angegebenen Index in die <see cref="P:System.Windows.Forms.ListView.Items" /> Auflistung aus der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView> befindet sich im virtuellen Modus und das Handle für den Besitzer <xref:System.Windows.Forms.ListView> wurde nicht erstellt (können Sie überprüfen, mit der <xref:System.Windows.Forms.Control.IsHandleCreated%2A?displayProperty=nameWithType> Eigenschaft) wird beim Aufrufen der <xref:System.Windows.Forms.ListView.SelectedIndexCollection.Remove%2A> Methode hat keine Auswirkung auf die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Index ist kleiner als 0 oder größer als oder gleich der Anzahl der Elemente in der Besitzer <see cref="T:System.Windows.Forms.ListView" />.  
  
 - oder -   
  
 Der Besitzer <see cref="T:System.Windows.Forms.ListView" /> befindet sich im virtuellen Modus und der angegebene Index ist kleiner als 0 oder größer als oder gleich dem Wert des <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#ICollection#SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt, das zum Synchronisieren des Zugriffs auf die Auflistung von Steuerelementen verwendet werden kann.</summary>
        <value>Das Objekt, mit dem die Auflistung synchronisiert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das hinzugefügt werden, die <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</param>
        <summary>Fügt der Auflistung ein Element hinzu.</summary>
        <returns>Die Position des hinzugefügten Elements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> -Klasse direkt verwendet. Den Index des hinzuzufügenden eine <xref:System.Windows.Forms.ListViewItem> auf die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>, verwenden die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> -Klasse direkt verwendet. So löschen Sie die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>, legen die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft, um `false` für jede <xref:System.Windows.Forms.ListViewItem> in der <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der Index in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das angegebene Element in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />Wenn dem angegebenen Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> für die <see cref="T:System.Windows.Forms.ListView" /> ist ein Element in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der nullbasierte Index aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index in der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />. Die <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> enthält die Indizes der aktivierten Elemente in der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> von der <see cref="T:System.Windows.Forms.ListView" /> Steuerelement.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem <c>Wert</c> eingefügt werden soll...</param>
        <param name="value">Das in <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> einzufügende Objekt.</param>
        <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> -Klasse direkt verwendet. Den Index des hinzuzufügenden eine <xref:System.Windows.Forms.ListViewItem> auf die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>, verwenden die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> eine feste Größe aufweist.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft ab oder legt ein Objekt in der Auflistung.</summary>
        <value>Der Indexwert aus der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , der am angegebenen Speicherort gespeichert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das aus der <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> zu entfernende Objekt.</param>
        <summary>Entfernt das erste Vorkommen eines angegebenen Elements aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> -Klasse direkt verwendet. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.SelectedIndexCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt ein Element am angegebenen Index aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> -Klasse direkt verwendet. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
