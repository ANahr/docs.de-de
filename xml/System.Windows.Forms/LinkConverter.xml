<Type Name="LinkConverter" FullName="System.Windows.Forms.LinkConverter">
  <TypeSignature Language="C#" Value="public class LinkConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Typkonverter für <see cref="T:System.Windows.Forms.LinkLabel.Link" /> Objekte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.LinkConverter> Klasse, um Links von einem Typ in einen anderen Typ zu konvertieren, und den Zugriff auf Standardwerte und untergeordnete Eigenschaften. Zugriff auf diese Klasse über <xref:System.ComponentModel.TypeDescriptor>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.LinkConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Kontextinformationen über die zu konvertierende Objekt.</param>
        <param name="sourceType">Der Typ des Objekts, das konvertiert werden.</param>
        <summary>Ruft einen Wert, der bestimmt, wenn diese <see cref="T:System.Windows.Forms.LinkConverter" /> ein Objekt mit dem angegebenen Kontext und Quelle Typ in den systemeigenen Typ konvertieren kann die <see cref="T:System.Windows.Forms.LinkConverter" />.</summary>
        <returns>
          <see langword="true" />Wenn diese <see cref="T:System.Windows.Forms.LinkConverter" /> können konvertiert das angegebene Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Kontextinformationen über die zu konvertierende Objekt.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Ruft einen Wert, der bestimmt, wenn diese <see cref="T:System.Windows.Forms.LinkConverter" /> ein Objekt mit dem angegebenen Kontext in den angegebenen Typ konvertieren kann.</summary>
        <returns>
          <see langword="true" />Wenn diese <see cref="T:System.Windows.Forms.LinkConverter" /> können konvertiert das angegebene Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Kontextinformationen über die zu konvertierende Objekt.</param>
        <param name="culture">Kulturelle Attribute des Objekts, das konvertiert werden. Wenn dieser Parameter ist <see langword="null" />die <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> Eigenschaftswert verwendet wird.</param>
        <param name="value">Das Objekt konvertiert werden.</param>
        <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ eines der <see cref="T:System.Windows.Forms.LinkConverter" />.</summary>
        <returns>Das konvertierte Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der Text des zu konvertierenden Objekts konnte nicht analysiert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Kontextinformationen über die zu konvertierende Objekt.</param>
        <param name="culture">Kulturelle Attribute des Objekts, das konvertiert werden. Wenn dieser Parameter ist <see langword="null" />die <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> Eigenschaftswert verwendet wird.</param>
        <param name="value">Das Objekt konvertiert werden.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
        <returns>Das konvertierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die am häufigsten verwendete Konvertierung wird von einem <xref:System.String> in eine andere <xref:System.String>. Die Standardimplementierung ruft <xref:System.Object.ToString%2A> für das Objekt, wenn das Objekt gültig ist und die `destinationType` ist <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das Objekt kann nicht in den Zieltyp konvertiert werden.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
