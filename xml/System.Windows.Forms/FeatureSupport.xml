<Type Name="FeatureSupport" FullName="System.Windows.Forms.FeatureSupport">
  <TypeSignature Language="C#" Value="public abstract class FeatureSupport : System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FeatureSupport extends System.Object implements class System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IFeatureSupport</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Bietet <see langword="static" /> Methoden zum Abrufen von Informationen aus dem aktuellen System.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der `static` Methoden dieser Klasse, wenn die Klassen, die Sie für Abfragen Informationen Funktion implementieren die <xref:System.Windows.Forms.IFeatureSupport> Schnittstelle. Andernfalls Vererben <xref:System.Windows.Forms.FeatureSupport> und eine eigene Implementierung bereitzustellen. Eine Implementierung dieser Klasse finden Sie <xref:System.Windows.Forms.OSFeature>.  
  
 Rufen Sie zum Abrufen der Versionsnummer einer Funktion <xref:System.Windows.Forms.FeatureSupport.GetVersionPresent%2A>. Rufen Sie <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> zu bestimmen, ob eine bestimmte Funktion oder eine Version einer Funktion installiert ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code geht davon aus `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden sich, Sie müssen auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FeatureSupport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.FeatureSupport" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public abstract Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Die Funktion, deren Version angefordert wird.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse ruft die Version der angegebenen Funktion, die auf dem System verfügbar ist.</summary>
        <returns>Ein <see cref="T:System.Version" /> stellt die Versionsnummer der angegebenen Funktion auf dem System; verfügbar oder <see langword="null" /> ist das Feature nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versionsnummern bestehen aus drei Teilen: Hauptversion, kleinere und erstellen. In der Regel wird eine Versionsnummer als "wichtige number.minor wird Number" angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code erfordert, dass `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie diese Methode überschreiben. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.  
  
 Finden Sie unter <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> für eine Implementierung dieser Methode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public static Version GetVersionPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version GetVersionPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, die Abfrage Informationen zu der angegebenen Funktion. Diese Klasse implementieren muss die <see cref="T:System.Windows.Forms.IFeatureSupport" /> -Schnittstelle oder erben von einer Klasse, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name der Funktion, der gesucht werden soll.</param>
        <summary>Ruft die Version der angegebenen Funktion, die auf dem System verfügbar ist.</summary>
        <returns>Ein <see cref="T:System.Version" /> mit der Versionsnummer der angegebenen Funktion auf dem System; verfügbar oder <see langword="null" /> ist das Feature nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versionsnummern bestehen aus drei Teilen: Hauptversion, kleinere und erstellen. In der Regel wird eine Versionsnummer als "wichtige number.minor wird Number" angezeigt.  
  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Die Funktion, der gesucht werden soll.</param>
        <summary>Bestimmt, ob eine Version der angegebenen Funktion im System installiert ist.</summary>
        <returns>
          <see langword="true" />Wenn die Funktion vorhanden ist. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code erfordert, dass `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="feature">Die Funktion, der gesucht werden soll.</param>
        <param name="minimumVersion">Ein <see cref="T:System.Version" /> , die die minimale Versionsnummer der zu suchende-Funktion darstellt.</param>
        <summary>Bestimmt, ob die angegebene oder eine neuere Version der angegebenen Funktion im System installiert ist.</summary>
        <returns>
          <see langword="true" />Wenn die Funktion vorhanden ist, und die Versionsnummer größer als oder gleich der Anzahl der angegebenen Mindestversion ist; <see langword="false" /> Wenn das Feature nicht installiert ist oder dessen Versionsnummer die angegebene minimale Anzahl unterschreitet.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, die Abfrage Informationen zu der angegebenen Funktion. Diese Klasse implementieren muss die <see cref="T:System.Windows.Forms.IFeatureSupport" /> -Schnittstelle oder erben von einer Klasse, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name der Funktion, der gesucht werden soll.</param>
        <summary>Bestimmt, ob eine Version der angegebenen Funktion im System installiert ist. Diese Methode ist <see langword="static" />.</summary>
        <returns>
          <see langword="true" />Wenn die angegebene Funktion vorhanden ist. <see langword="false" /> , wenn die angegebene Funktion nicht vorhanden ist oder wenn das Produkt, enthält das Feature nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, die Abfrage Informationen zu der angegebenen Funktion. Diese Klasse implementieren muss die <see cref="T:System.Windows.Forms.IFeatureSupport" /> -Schnittstelle oder erben von einer Klasse, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name der Funktion, der gesucht werden soll.</param>
        <param name="minimumVersion">Ein <see cref="T:System.Version" /> , die die minimale Versionsnummer der Funktion darstellt.</param>
        <summary>Bestimmt, ob die angegebene oder eine neuere Version der angegebenen Funktion im System installiert ist. Diese Methode ist <see langword="static" />.</summary>
        <returns>
          <see langword="true" />Wenn die Funktion vorhanden ist, und die Versionsnummer größer als oder gleich der Anzahl der angegebenen Mindestversion ist; <see langword="false" /> Wenn das Feature nicht installiert ist oder dessen Versionsnummer die angegebene minimale Anzahl unterschreitet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
