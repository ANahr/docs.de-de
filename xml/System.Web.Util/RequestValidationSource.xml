<Type Name="RequestValidationSource" FullName="System.Web.Util.RequestValidationSource">
  <TypeSignature Language="C#" Value="public enum RequestValidationSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestValidationSource extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.RequestValidationSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt an, welche Art von HTTP-Anforderungsdaten überprüft.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen benutzerdefinierte Validierung Anforderungstyp erstellen, durch die Implementierung der <xref:System.Web.Util.RequestValidator> Typ. Wenn ASP.NET ruft die <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode zur Überprüfung einer Anforderung, die ASP.NET übergibt eine `requestValidationSource` Parameter an die Quelle der Daten, die validiert wird. Die <xref:System.Web.Util.RequestValidationSource> Enumeration dient zum Angeben der Quelle oder der Art von Anforderungsdaten verwendet werden, das überprüft wird. Die Enumeration gibt den Typ des HTTP-Eingabe, die übergeben wird die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode. Sie können die Enumeration verwenden, als eine Möglichkeit, ein ausweichen auf der Basis Anforderung Überprüfung Implementierung für HTTP-Eingaben, wenn Sie nicht über die benutzerdefinierte Logik überprüfen möchten.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie eine benutzerdefinierte Anforderung Validator-Klasse erstellen, die nur eine bestimmte Zeichenfolge für Abfragezeichenfolgen-Werte zulässt.  
  
```vb  
Imports System  
Imports System.Web  
Imports System.Web.Util  
  
Public Class CustomRequestValidation  
    Inherits RequestValidator  
  
Public Sub New()  
End Sub  
  
Protected Overloads Overrides Function IsValidRequestString( _  
        ByVal context As HttpContext, _  
        ByVal value As String, _  
        ByVal requestValidationSource__1 As RequestValidationSource, _  
        ByVal collectionKey As String, _  
        ByRef validationFailureIndex As Integer) As Boolean  
    validationFailureIndex = -1  
    ' Set a default value for the out parameter.  
    ' This application does not use RawUrl directly, so you can   
    ' ignore the check for RequestValidationSource.RawUrl.  
    If requestValidationSource = RequestValidationSource.RawUrl Then  
        Return True  
    End If  
  
    ' Allow the query-string key "data" to have an XML-like value.  
    If (requestValidationSource = _  
            (RequestValidationSource.QueryString) AndAlso _  
            (collectionKey = "data") Then  
        ' The querystring value "<example>1234</example>" is allowed.  
        If value = "<example>1234</example>" Then  
            validationFailureIndex = -1  
            Return True  
        Else  
            ' Leave any further checks to ASP.NET.  
            Return MyBase.IsValidRequestString(context, value, _  
                requestValidationSource__1, collectionKey, _  
                validationFailureIndex)  
        End If  
    Else  
        ' All other HTTP input checks fall back to   
        ' the base ASP.NET implementation.  
        Return MyBase.IsValidRequestString(context, value, _  
            requestValidationSource__1, collectionKey, _  
            validationFailureIndex)  
    End If  
End Function  
End Class  
```  
  
```csharp  
using System;  
using System.Web;  
using System.Web.Util;  
  
public class CustomRequestValidation : RequestValidator  
{  
    public CustomRequestValidation() {}  
  
    protected override bool IsValidRequestString(  
        HttpContext context, string value,   
        RequestValidationSource requestValidationSource, string collectionKey,   
        out int validationFailureIndex)  
    {  
        //Set a default value for the out parameter.  
        validationFailureIndex = -1;  
  
        // This application does not use RawUrl directly,   
        // so you can ignore the check for RequestValidationSource.RawUrl.  
        if (requestValidationSource == RequestValidationSource.RawUrl)  
            return true;  
  
        // Allow the query-string key "data" to have an XML-like value.  
        if (  
            (requestValidationSource == RequestValidationSource.QueryString) &&  
            (collectionKey == "data")  
           )  
        {  
            // The querystring value "<example>1234</example>" is allowed.  
            if (value == "<example>1234</example>")  
            {  
                validationFailureIndex = -1;  
                return true;  
            }  
            else  
           // Leave any further checks to ASP.NET.  
                return base.IsValidRequestString(context, value,   
                requestValidationSource, collectionKey, out   
                validationFailureIndex);  
        }  
        // All other HTTP input checks fall back to   
        // the base ASP.NET implementation.  
        else  
        {  
            return base.IsValidRequestString(context, value,   
                requestValidationSource, collectionKey,   
                out validationFailureIndex);  
        }  
    }  
}  
```  
  
 Das folgende Beispiel zeigt, wie so konfigurieren Sie ASP.NET so, dass das benutzerdefinierte Validierungssteuerelement verwenden.  
  
```  
<httpRuntime requestValidationType="CustomRequestValidation" />  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="Cookies" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Cookies = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Cookies" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Anforderungscookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Namen des Cookies in der Auflistung festgelegt ist.  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert in der Auflistung festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="Files" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Files = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Files" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die hochgeladene Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Namen der hochgeladenen Datei in der Auflistung festgelegt ist.  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert der hochgeladenen Datei in der Auflistung festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="Form" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Form = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Form" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Formularwerte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Namen des Formparameters in der Auflistung festgelegt ist.  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des Formparameters in der Auflistung festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="Headers" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Headers = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Headers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Anforderungsheader.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Namen eines HTTP-Headers in der Auflistung festgelegt ist.  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des HTTP-Headers in der Auflistung festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="Path" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Path = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Path" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der virtuelle Pfad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode festgelegt ist, um `null` (`Path` ist keine Auflistung von Werten).  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des Felds Pfad festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="PathInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource PathInfo = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.PathInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine HTTP <see cref="P:System.Web.HttpRequest.PathInfo" /> Zeichenfolge, die Erweiterung, um einen URL-Pfad ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode festgelegt ist, um `null` (`PathInfo` ist keine Auflistung von Werten).  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des Felds PathInfo festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="QueryString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource QueryString = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.QueryString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Abfragezeichenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Namen des Abfragezeichenfolgen-Parameters in der Auflistung festgelegt ist.  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des Abfragezeichenfolgen-Parameters in der Auflistung festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="RawUrl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource RawUrl = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.RawUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Basis-URL. (Der Teil einer URL nach der Domäne.)</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `collectionKey` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode festgelegt ist, um `null`. (`RawUrl` ist keine Auflistung von Werten.)  
  
 Die `value` Parameter von der <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Methode auf den Wert des Felds RawUrl festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
