<Type Name="WebInvokeAttribute" FullName="System.ServiceModel.Web.WebInvokeAttribute">
  <TypeSignature Language="C#" Value="public sealed class WebInvokeAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebInvokeAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebInvokeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Attribut, der angibt, die ein Dienstvorgang ist logisch ein Aufrufvorgang und die kann aufgerufen werden, indem Sie das WCF REST-Programmiermodell.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ServiceModel.Web.WebInvokeAttribute> -Attribut angewendet wird, auf einen Dienstvorgang zusätzlich zu den <xref:System.ServiceModel.OperationContractAttribute> und ordnet Sie den Vorgang mit einer `UriTemplate` sowie einem zugrunde liegenden Transport-Verb, das einen Aufruf (z. B. HTTP POST, PUT oder DELETE) darstellt. Die <xref:System.ServiceModel.Web.WebInvokeAttribute> -Attribut ist ein *passiven* Vorgangsverhalten (die <xref:System.ServiceModel.Description.IOperationBehavior> Methoden werden keine Aktionen ausgeführt), das der vorgangsbeschreibung Metadaten hinzugefügt. Die Anwendung des <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attributs auf einen Dienstvorgang hat nur dann Auswirkungen, wenn ein Verhalten, das in der Vorgangsbeschreibung nach diesen Metadaten sucht (beispielsweise <xref:System.ServiceModel.Description.WebHttpBehavior>), der Verhaltensauflistung des Diensts hinzugefügt wird. Das <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut bestimmt die HTTP-Methode, auf die ein Dienstvorgang antwortet. Standardmäßig antworten alle Methoden, für die das <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut übernommen wurde, auf POST-Anforderungen. Mit der <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A>-Eigenschaft können Sie eine andere HTTP-Methode angeben. Wenn Sie möchten, dass ein Dienstvorgang auf GET-Anforderungen antwortet, verwenden Sie stattdessen das <xref:System.ServiceModel.Web.WebGetAttribute>-Attribut.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung des <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attributs veranschaulicht.  
  
> [!NOTE]
>  Da die <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A>-Eigenschaft im folgenden Code nicht angegeben wurde, werden alle Dienstvorgänge der HTTP POST-Methode zugeordnet.  
  
 [!code-csharp[WebAttribute#5](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#5)]
 [!code-vb[WebAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebInvokeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebInvokeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Web.WebGetAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyStyle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageBodyStyle BodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle BodyStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Textstil der Nachrichten ab, die an den Dienstvorgang bzw. von dem Dienstvorgang gesendet werden, und legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" />-Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dieser Wert auf <xref:System.ServiceModel.Web.WebMessageBodyStyle.Bare> festgelegt ist, wird das Ergebnis des Dienstvorgangs direkt in den Text der Antwortnachricht geschrieben.  
  
> [!NOTE]
>  Vorgänge, die ein <xref:System.ServiceModel.Channels.Message>-Element akzeptieren und NULL zurückgeben, werden von den Formatierungsprogrammen gesondert behandelt. Die Formatierungsprogramme geben den Wrappernamen nicht in der Antwort aus, auch wenn <xref:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle%2A> auf <xref:System.ServiceModel.Web.WebMessageBodyStyle.Wrapped> festgelegt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Festlegen der <xref:System.ServiceModel.Web.WebInvokeAttribute.BodyStyle%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[WebAttribute#6](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#6)]
 [!code-vb[WebAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBodyStyleSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsBodyStyleSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyStyleSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsBodyStyleSetExplicitly" />-Eigenschaft ab.</summary>
        <value>Ein Wert, der angibt, ob die <see cref="P:System.ServiceModel.Web.WebGetAttribute.BodyStyle" />-Eigenschaft explizit festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für die Verwendung durch die [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Infrastruktur konzipiert und darf nicht über Benutzercode festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestFormatSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsRequestFormatSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestFormatSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsRequestFormatSetExplicitly" />-Eigenschaft ab.</summary>
        <value>Ein Wert, der angibt, ob die <see cref="P:System.ServiceModel.Web.WebGetAttribute.RequestFormat" />-Eigenschaft festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für die Verwendung durch die [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Infrastruktur konzipiert und darf nicht über Benutzercode festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResponseFormatSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsResponseFormatSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResponseFormatSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.IsResponseFormatSetExplicitly" />-Eigenschaft ab.</summary>
        <value>Ein Wert, der angibt, ob die <see cref="P:System.ServiceModel.Web.WebGetAttribute.ResponseFormat" />-Eigenschaft festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für die Verwendung durch die [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Infrastruktur konzipiert und darf nicht über Benutzercode festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Protokollmethode ab, auf die der Dienstvorgang antwortet (z. B. HTTP), und legt sie fest.</summary>
        <value>Die dem Vorgang zugeordnete Protokollmethode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A> ist POST.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Festlegen der <xref:System.ServiceModel.Web.WebInvokeAttribute.Method%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[WebAttribute#7](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#7)]
 [!code-vb[WebAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageFormat RequestFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat RequestFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat" />-Eigenschaft ab und legt diese fest.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.Web.WebMessageFormat" />-Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft wird das Format der an einen Dienstvorgang gesendeten Anforderungen festgelegt. Die möglichen Werte sind `Xml` und `Json`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Festlegen der <xref:System.ServiceModel.Web.WebInvokeAttribute.RequestFormat%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[WebAttribute#8](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#8)]
 [!code-vb[WebAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageFormat ResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat ResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat" />-Eigenschaft ab und legt diese fest.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.Web.WebMessageFormat" />-Enumerationswerte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft wird das Format der von einem Dienstvorgang gesendeten Antworten festgelegt. Die möglichen Werte sind `Xml` und `Json`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Festlegen der <xref:System.ServiceModel.Web.WebInvokeAttribute.ResponseFormat%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[WebAttribute#8](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#8)]
 [!code-vb[WebAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription operation, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription operation, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>Implementiert die <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt keine Aktion aus, da es sich bei dem <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut um ein passives Vorgangsverhalten handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operation, System.ServiceModel.Dispatcher.ClientOperation client);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operation, class System.ServiceModel.Dispatcher.ClientOperation client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="client">To be added.</param>
        <summary>Implementiert die <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt keine Aktion aus, da es sich bei dem <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut um ein passives Vorgangsverhalten handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operation, System.ServiceModel.Dispatcher.DispatchOperation service);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operation, class System.ServiceModel.Dispatcher.DispatchOperation service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="service">To be added.</param>
        <summary>Implementiert die <see cref="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt keine Aktion aus, da es sich bei dem <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut um ein passives Vorgangsverhalten handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription operation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebInvokeAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>Implementiert die <see cref="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode führt keine Aktion aus, da es sich bei dem <xref:System.ServiceModel.Web.WebInvokeAttribute>-Attribut um ein passives Vorgangsverhalten handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UriTemplate">
      <MemberSignature Language="C#" Value="public string UriTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UriTemplate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die URI-Vorlage (URI = Uniform Resource Identifier) für den Dienstvorgang.</summary>
        <value>Die URI-Vorlage für den Dienstvorgang.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe von URI-Vorlagen wird festgelegt, welche Anforderungen an welche Dienstvorgänge geleitet werden. URI-Vorlagen ermöglichen es Ihnen, einen URI oder einen Satz von URIs einem Dienstvorgang zuzuordnen. [!INCLUDE[crabout](~/includes/crabout-md.md)]URI-Vorlagen finden Sie unter [UriTemplate und UriTemplateTable](~/docs/framework/wcf/feature-details/uritemplate-and-uritemplatetable.md)  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Festlegen der <xref:System.ServiceModel.Web.WebInvokeAttribute.UriTemplate%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[WebAttribute#9](~/samples/snippets/csharp/VS_Snippets_CFX/webattribute/cs/program.cs#9)]
 [!code-vb[WebAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/webattribute/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
