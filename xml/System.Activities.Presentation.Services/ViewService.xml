<Type Name="ViewService" FullName="System.Activities.Presentation.Services.ViewService">
  <TypeSignature Language="C#" Value="public abstract class ViewService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ViewService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.Activities.Presentation.Services.ViewService" />-Klasse ordnet zugrunde liegenden Modellelementen grafische Elemente zu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Activities.Presentation.Services.ModelService>-Klasse und die <xref:System.Activities.Presentation.Services.ViewService>-Klasse sind erforderlich, damit der Designer funktioniert. Für die <xref:System.Activities.Presentation.View.DesignerView>-Klasse, die für das Verarbeiten von Benutzereingaben und deren Weiterleitung an Befehle zuständig ist, müssen beide Dienste die Benutzereingaben wieder dem Modell zuordnen.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt einen neuen <see cref="T:System.Activities.Presentation.Services.ViewService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem GetModel (System.Windows.DependencyObject view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem GetModel(class System.Windows.DependencyObject view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetModel(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="view">Das Ansichtsobjekt, für das Sie das Modell finden möchten.</param>
        <summary>Gibt das Modell für die Sicht zurück oder <see langword="null" /> befindet sich kein Modell, das die Sicht entspricht.</summary>
        <returns>Gibt das entsprechende Modell als eine <see cref="T:System.Activities.Design.Model.ModelItem" />, oder <see langword="null" /> Wenn kein Modell für die angegebene Ansichtsobjekt vorhanden ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="view" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject GetView (System.Activities.Presentation.Model.ModelItem model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject GetView(class System.Activities.Presentation.Model.ModelItem model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ViewService.GetView(System.Activities.Presentation.Model.ModelItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="model">Das Modell, für das das Ansichtsobjekt zurückgegeben werden soll.</param>
        <summary>Gibt die Sicht, die entsprechend des angegebenen Modells zurück oder <see langword="null" /> , wenn keine Ansicht für das Modell vorhanden ist.</summary>
        <returns>Gibt die Sicht für dieses Modell als eine <see cref="T:System.Windows.DependencyObject" />, oder <see langword="null" /> , wenn keine Ansicht vorhanden ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="model" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="model" /> stellt kein gültiges Modell für diesen Dienst dar.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
