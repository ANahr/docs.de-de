<Type Name="DomainController" FullName="System.DirectoryServices.ActiveDirectory.DomainController">
  <TypeSignature Language="C#" Value="public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DomainController extends System.DirectoryServices.ActiveDirectory.DirectoryServer" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.DomainController" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.DirectoryServer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> Klasse repräsentiert einen Domänencontroller in einer Active Directory-Domäne.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckReplicationConsistency">
      <MemberSignature Language="C#" Value="public override void CheckReplicationConsistency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CheckReplicationConsistency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verwendet die Konsistenzprüfung (KCC) überprüfen Sie die Replikationstopologie für diesen Domänencontroller.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public DateTime CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das aktuelle Datum und die Uhrzeit aus diesen Domänencontroller ab.</summary>
        <value>Ein <see cref="T:System.DateTime" /> Objekt, das das aktuelle Datum und die Uhrzeit von diesem Domänencontroller enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Bestimmt, ob die verwalteten Ressourcen freigegeben werden sollen. <see langword="true" />Wenn die verwalteten Ressourcen freigegeben werden. andernfalls <see langword="false" />.</param>
        <summary>Bewirkt, dass das Objekt, das alle verwaltete und/oder nicht verwaltete Ressourcen freizugeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `disposing` Parameter wirkt sich nur auf die Freigabe der verwalteten Ressourcen. Die nicht verwalteten Ressourcen werden von dieser Methode immer freigegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain Domain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domäne, der diesen Domänencontroller Mitglied ist.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, die diesen Domänencontroller Mitglied ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableGlobalCatalog">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stuft diese Domänencontroller zu einem globalen Katalogserver.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> Objekt, das den globalen Katalogserver darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog%2A?displayProperty=nameWithType> Methode wird verwendet, um den Domänencontroller auf einem globalen Katalogserver herabstufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die <see cref="M:System.Object.Finalize" />-Methode außer Kraft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält. Das Ziel dieses <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> Objekt ist der Name der Domäne, die für Domänencontroller gesucht werden soll.</param>
        <summary>Sucht nach allen Domänencontrollern im angegebenen Kontext.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> Objekt, das die im Suchvorgang gefundenen Domänencontroller enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> ist nicht gültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält.</param>
        <param name="siteName">Der Name des Standorts, der für Domänencontroller zu suchen.</param>
        <summary>Sucht nach allen Domänencontrollern in den angegebenen Kontext und den Standort aus.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> -Objekt, das den Domänencontroller enthält, die von der Suche gefunden wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> oder <paramref name="siteName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält.</param>
        <summary>Sucht nach einem einzelnen Domänencontroller im angegebenen Kontext.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die von der Suche gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es wurde kein Domänencontroller gefunden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält.</param>
        <param name="flag">Eine Kombination aus einem oder mehreren der <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Elemente, die den Typ des zu suchenden Domänencontrollers definiert.</param>
        <summary>Sucht nach einem einzelnen Domänencontroller in den angegebenen Kontext, sodass für zusätzliche Suchoptionen aus.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die von der Suche gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es wurde kein Domänencontroller gefunden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> oder <paramref name="flag" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält.</param>
        <param name="siteName">Der Name der Site, die für einen Domänencontroller zu suchen.</param>
        <summary>Sucht nach einem einzelnen Domänencontroller in den angegebenen Kontext und den Standort aus.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die von der Suche gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es wurde kein Domänencontroller gefunden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> oder <paramref name="siteName" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> oder <paramref name="siteName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController FindOne(class System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen für die Suche enthält.</param>
        <param name="siteName">Der Name der Site, die für einen Domänencontroller zu suchen.</param>
        <param name="flag">Eine Kombination aus einem oder mehreren der <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Elemente, die den Typ des zu suchenden Domänencontrollers definiert.</param>
        <summary>Sucht einen einzelnen Domänencontroller in den angegebenen Kontext und den Standort, bei dem Weitere Suchoptionen aus.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die von der Suche gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es wurde kein Domänencontroller gefunden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" />, <paramref name="siteName" />, oder <paramref name="flag" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> oder <paramref name="siteName" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Forest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Forest Forest" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtstruktur, der diesen Domänencontroller Mitglied ist.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> -Objekt, das die Gesamtstruktur darstellt, die diesen Domänencontroller Mitglied ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllReplicationNeighbors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Replikationsnachbarn für diesen Domänencontroller ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> Objekt, das die Replikationsnachbarn für diesen Domänencontroller enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectorySearcher">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.DirectorySearcher GetDirectorySearcher() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySearcher</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine <see cref="T:System.DirectoryServices.DirectorySearcher" /> Objekt für den Domänencontroller.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.DirectorySearcher" /> Objekt für den Domänencontroller.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDomainController">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.DomainController GetDomainController(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen zum Abrufen des Objekts enthält. Das Ziel dieses Kontexts muss ein Domänencontroller sein.</param>
        <summary>Ruft eine <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> Objekt für den angegebenen Kontext.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die gefunden wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Verbindung mit dem Ziel, die im angegebenen <paramref name="context" /> konnte nicht hergestellt werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> ist nicht gültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationConnectionFailures">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Liste von der Replikation Verbindungsfehlern, die von diesem Domänencontroller aufgezeichnet.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> Objekt, das die Verbindung Replikationsfehler enthält, die von diesem Domänencontroller aufgezeichnet wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationCursors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Der distinguished Name der Partition, für das die Informationen zum Replikationscursor abgerufen werden sollen.</param>
        <summary>Ruft die Informationen zum Replikationscursor für die angegebene Partition ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> , das die Informationen zum Replikationscursor enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationMetadata">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata(string objectPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectPath">Der Pfad des Objekts, für das die Replikationsmetadaten abgerufen werden sollen.</param>
        <summary>Ruft die Replikationsmetadaten für ein bestimmtes Active Directory-Domänendienste-Objekt ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" /> -Objekt, das die Replikationsmetadaten für das angegebene Objekt enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="objectPath" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="objectPath" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationNeighbors">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Der distinguished Name der Partition, für das die Replikationsnachbarn abgerufen werden sollen.</param>
        <summary>Ruft die Replikationsnachbarn für die angegebene Partition ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> Objekt, das die Replikationsnachbarn für dieses Objekt enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationOperationInformation">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab den aktuellen und ausstehenden Replikationsvorgänge für diesen Domänencontroller.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> -Objekt, das die aktuellen und ausstehenden Replikationsvorgänge.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HighestCommittedUsn">
      <MemberSignature Language="C#" Value="public long HighestCommittedUsn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HighestCommittedUsn" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die höchste Aktualisierungssequenznummer, die an diesen Domänencontroller ein Commit ausgeführt wurde.</summary>
        <value>Die höchste Aktualisierungssequenznummer (USN), die an diesen Domänencontroller ein Commit ausgeführt wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="InboundConnections">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die eingehende Replikationsverbindungen für diesen Domänencontroller ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> -Objekt, das die eingehenden replikationsverbindungen für diesen Domänencontroller enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IPAddress">
      <MemberSignature Language="C#" Value="public override string IPAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IPAddress" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die IP-Adresse dieses Domänencontrollers ab.</summary>
        <value>Die Internetprotokolladresse (IP) dieses Domänencontrollers in Form einer Zeichenfolge.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalCatalog">
      <MemberSignature Language="C#" Value="public virtual bool IsGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob dieser Domänencontroller ein globaler Katalogserver ist.</summary>
        <returns>
          <see langword="true" />Dieser Domänencontroller ist ein globaler Katalogserver oder <see langword="false" /> andernfalls.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public string OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OSVersion" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des Betriebssystems dieses Domänencontrollers ab.</summary>
        <value>Die Version des Betriebssystems, die auf diesem Domänencontroller verwendet wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutboundConnections">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ausgehenden Replikationsverbindungen für diesen Domänencontroller ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> -Objekt, das die ausgehenden replikationsverbindungen für diesen Domänencontroller enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rollen, die dieser Domänencontroller dient.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> Elemente, die die Rollen angeben, die dieser Domänencontroller dient.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SeizeRoleOwnership">
      <MemberSignature Language="C#" Value="public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeizeRoleOwnership(valuetype System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Parameters>
      <Docs>
        <param name="role">Eines der <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> Member, der angibt, welche Rolle der Domänencontroller den Besitz übernehmen soll.</param>
        <summary>Bewirkt, dass dieser Domänencontroller in der angegebenen Rolle Besitz zu nehmen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist ein destruktiver Vorgang, da er bewirkt, die Rolle dass an, die ohne die Zusammenarbeit mit dem Server ausgeführt werden, die derzeit die Funktion enthält. Die <xref:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership%2A?displayProperty=nameWithType> Methode sollte stattdessen verwendet werden, wann immer möglich.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="role" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public override string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Standorts, zu dem dieser Domänencontroller gehört.</summary>
        <value>Der Name des Standorts, zu dem dieser Domänencontroller gehört.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Der Standortname wurde nicht gefunden.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncFromAllServersCallback">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.SyncUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Synchronisierungsdelegaten für diesen Domänencontroller.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> Delegat, der für die Synchronisierung von Benachrichtigungen verwendet wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncReplicaFromAllServers">
      <MemberSignature Language="C#" Value="public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyncReplicaFromAllServers(string partition, valuetype System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" />
      </Parameters>
      <Docs>
        <param name="partition">Der distinguished Name der Partition für den Domänencontroller zu synchronisieren.</param>
        <param name="options">Eine Kombination aus einem oder mehreren der <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" /> Elemente.</param>
        <summary>Bewirkt, dass dieser Domänencontroller die angegebene Partition mit allen anderen Domänencontrollern zu synchronisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird die Replikation nur mit anderen Domänencontrollern am selben Standort ausgeführt. Wenn die `options` Parameter enthält die <xref:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite> Wert, und klicken Sie dann die Replikation mit allen Domänencontrollern in der Gesamtstruktur ausgeführt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">Bei der Synchronisierung ist ein Fehler aufgetreten.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SyncReplicaFromServer">
      <MemberSignature Language="C#" Value="public override void SyncReplicaFromServer (string partition, string sourceServer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyncReplicaFromServer(string partition, string sourceServer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="sourceServer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Der distinguished Name der Partition mit dem Domänencontroller synchronisiert.</param>
        <param name="sourceServer">Der Name des Servers, mit dem die Partition zu synchronisieren.</param>
        <summary>Bewirkt, dass dieser Domänencontroller die angegebene Partition mit dem angegebenen Domänencontroller zu synchronisieren.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> oder <paramref name="sourceServer" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> oder <paramref name="sourceServer" /> ist ungültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TransferRoleOwnership">
      <MemberSignature Language="C#" Value="public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRoleOwnership(valuetype System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
      </Parameters>
      <Docs>
        <param name="role">Eines der <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" /> Member, der angibt, welche Rolle dieser Domänencontroller übertragen werden sollen.</param>
        <summary>Bewirkt, dass der Besitzer der angegebenen Rolle auf diesen Domänencontroller übertragen werden sollen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="role" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerSyncReplicaFromNeighbors">
      <MemberSignature Language="C#" Value="public override void TriggerSyncReplicaFromNeighbors (string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TriggerSyncReplicaFromNeighbors(string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partition">Der distinguished Name der Partition zu synchronisieren.</param>
        <summary>Beginnt eine Synchronisierung der angegebenen Partition.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partition" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partition" /> ist nicht gültig.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
