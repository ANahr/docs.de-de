<Type Name="ActiveDirectorySchema" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchema : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchema extends System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> -Klasse stellt die Schemapartition für eine bestimmte Domäne dar.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die verwalteten Ressourcen, mit denen, die <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> Objekt und optional Versionen nicht verwalteten Ressourcen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `disposing` Parameter wirkt sich nur auf die Freigabe von verwalteten Ressourcen. Nicht verwaltete Ressourcen werden von dieser Methode immer freigegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle Active Directory-Domänendienste-Klassen im Schema ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Objekte für die Klassen, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses (System.DirectoryServices.ActiveDirectory.SchemaClassType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses(valuetype System.DirectoryServices.ActiveDirectory.SchemaClassType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.DirectoryServices.ActiveDirectory.SchemaClassType" />
      </Parameters>
      <Docs>
        <param name="type">Eines der <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" /> Elemente, die den Typ der abzurufenden Klassen identifiziert.</param>
        <summary>Ruft alle Active Directory-Domänendienste-Klassen im Schema, die vom angegebenen Typ ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Objekte für die Klassen, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllDefunctClasses">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle außer Kraft gesetzt wurde Active Directory-Domänendienste-Klassen im Schema ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Objekte für die Klassen, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllDefunctProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle außer Kraft gesetzt wurde Active Directory-Domänendienste-Eigenschaften im Schema ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> Objekte für die Eigenschaften, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle Active Directory-Domänendienste-Eigenschaften im Schema ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> Objekte für die Eigenschaften, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllProperties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties (System.DirectoryServices.ActiveDirectory.PropertyTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties(valuetype System.DirectoryServices.ActiveDirectory.PropertyTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.DirectoryServices.ActiveDirectory.PropertyTypes" />
      </Parameters>
      <Docs>
        <param name="type">Eines der <see cref="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" /> Elemente, welche den abzurufenden Eigenschaften angibt.</param>
        <summary>Ruft alle der Active Directory-Domänendienste-Eigenschaften im Schema des angegebenen Typs ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> -Objekt, das eine Auflistung von enthält <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> Objekte für die Eigenschaften, die abgerufen wurden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindClass">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass (string ldapDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass(string ldapDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ldapDisplayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ldapDisplayName">Die LDAP-Anzeigenamen der-Klasse gefunden.</param>
        <summary>Ruft die Klasse mit dem angegebenen Namen ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Objekt, das die Klasse mit dem angegebenen Namen darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Klasse mit dem angegebenen Namen wurde nicht gefunden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ldapDisplayName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ldapDisplayName" /> hat die Länge 0 (null).</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDefunctClass">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass (string commonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass(string commonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commonName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commonName">Der allgemeine Name der Klasse außer Kraft gesetzt wurde gefunden.</param>
        <summary>Ruft die außer Kraft gesetzte Klasse mit dem angegebenen common Namen ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> Objekt, das die Klasse mit dem angegebenen common Namen darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Klasse mit dem angegebenen Namen wurde nicht gefunden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commonName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="commonName" /> hat die Länge 0 (null).</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDefunctProperty">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty (string commonName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty(string commonName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commonName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commonName">Der allgemeine Name des zu suchenden Eigenschaft außer Kraft gesetzt wurde.</param>
        <summary>Ruft die außer Kraft gesetzte Eigenschaft mit dem angegebenen common Namen ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> Objekt, das die Eigenschaft darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Eigenschaft mit dem angegebenen Namen kann nicht gefunden werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commonName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="commonName" /> hat die Länge 0 (null).</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProperty">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty (string ldapDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty(string ldapDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ldapDisplayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ldapDisplayName">Der LDAP-Anzeigename der zu suchenden Eigenschaft.</param>
        <summary>Ruft die Eigenschaft mit dem angegebenen Namen ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> Objekt, das die Eigenschaft mit dem angegebenen Namen darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Eigenschaft mit dem angegebenen Namen kann nicht gefunden werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyName" /> hat die Länge 0 (null).</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentSchema">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das Schemaobjekt für die Gesamtstruktur, der der derzeit angemeldete Benutzer Mitglied ist.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> -Objekt, das das Schema für die Domäne darstellt, die der lokale Computer Mitglied ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Verbindung mit der lokalen Domäne kann nicht hergestellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryEntry">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.DirectoryEntry GetDirectoryEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine <see cref="T:System.DirectoryServices.DirectoryEntry" /> Objekt, das die Verzeichnispartition darstellt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.DirectoryEntry" /> Objekt, das die Verzeichnispartition darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen zum Abrufen des Objekts enthält. Das Ziel des Kontexts muss eine Gesamtstruktur, die Directory-Server oder die festgelegte Konfiguration.</param>
        <summary>Ruft das Schemaobjekt für den angegebenen Kontext ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> -Objekt, das das Schema für den angegebenen Kontext darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Verbindung mit dem Ziel, die im angegebenen <paramref name="context" /> kann nicht vorgenommen werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert den Schemacache auf dem Clientcomputer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DirectoryServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Besitzer der Betriebsmasterrolle Schema ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> -Objekt, das den Server darstellt, die den Schemamaster ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
