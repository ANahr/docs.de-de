<Type Name="Domain" FullName="System.DirectoryServices.ActiveDirectory.Domain">
  <TypeSignature Language="C#" Value="public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Domain extends System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Domain" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />-Klasse stellt eine Active Directory-Domäne dar.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domänen ab, die untergeordnete Elemente dieser Domäne sind.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />-Objekt, das die untergeordneten Domänen enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der die Vertrauensstellung erstellt wird.</param>
        <param name="direction">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Member, der die Richtung der Vertrauensstellung relativ zu dieser Domäne bestimmt.</param>
        <param name="trustPassword">Das Kennwort für die Vertrauensstellung.</param>
        <summary>Erstellt die lokale Seite einer Vertrauensstellung mit der angegebenen Domäne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt eine Seite einer Vertrauensstellung. Die Vertrauensstellung ist nicht eingerichtet werden, bis beide Seiten der Vertrauensstellung erstellt wurden.  
  
 Die `trustPassword` Parameter ordnet der erstellten Vertrauensstellung ein Kennwort. Bei die anderen Seite der Vertrauensstellung erstellt wird, wird das gleiche Kennwort wird bereitgestellt, und klicken Sie dann die zwei lokalen Vertrauensstellungen miteinander gebunden sind.  
  
 Verwenden Sie zum programmgesteuerten Erstellen von beiden Seiten einer Vertrauensstellung in einem einzelnen Methodenaufruf der <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Die Vertrauensstellung ist bereits vorhanden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> oder <paramref name="trustPassword" /> ist leer.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> oder <paramref name="trustPassword" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />-Objekt, das die Domäne darstellt, mit der die Vertrauensstellung hergestellt wird.</param>
        <param name="direction">Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Member, der die Richtung der Vertrauensstellung relativ zu dieser Domäne bestimmt.</param>
        <summary>Erstellt beide Seiten einer Vertrauensstellung mit der angegebenen Domäne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt beide Seiten einer Vertrauensstellung mit einem einzelnen Methodenaufruf. Die <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> Methode wird verwendet, um nur eine Seite einer Vertrauensstellung zu erstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">Die Vertrauensstellung ist bereits vorhanden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der die Vertrauensstellung besteht.</param>
        <summary>Löscht die lokale Seite einer Vertrauensstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Seite einer Vertrauensstellung gelöscht wird, ist die Vertrauensstellung nicht mehr vorhanden.  
  
 Um beide Seiten einer Vertrauensstellung mit einem Methodenaufruf zu löschen, verwenden Sie die <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es ist keine Vertrauensstellung mit dem <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />-Objekt vorhanden, das durch den <paramref name="targetDomainName" />-Parameter angegeben ist.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />-Objekt, das die Domäne darstellt, mit der die Vertrauensstellung besteht.</param>
        <summary>Löscht beide Seiten einer Vertrauensstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um nur eine Seite einer Vertrauensstellung zu löschen, verwenden Sie die <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der angegebenen <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="DomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Domänencontroller in dieser Domäne ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />-Objekt, das die Domänencontroller in dieser Domäne enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="DomainMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.DomainMode DomainMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Modus ab, in dem diese Domäne ausgeführt wird.</summary>
        <value>Einer der <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />-Werte, der den Modus angibt, in dem diese Domäne ausgeführt wird.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="DomainModeLevel">
      <MemberSignature Language="C#" Value="public int DomainModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DomainModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Modusebene ab, auf der diese Domäne ausgeführt wird.</summary>
        <value>Die Modusebene der Domäne.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Findet alle erkennbaren Domänencontroller in dieser Domäne.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> , die die von dieser Methode gefundenen Domänencontrollerobjekte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können erkennbaren Domänencontroller durch Abfragen von DNS-SRV-Einträge suchen. Nur Domänencontroller, die die generische, Standort-spezifische, Domain Controller SRV-Eintrag registriert werden von dieser Methode zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Der Name des Standorts für die Suche nach den Domänencontrollern.</param>
        <summary>Sucht alle erkennbaren Domänencontroller in dieser Domäne, die sich auch am angegebenen Standort befinden.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> , die die von dieser Methode gefundenen Domänencontrollerobjekte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können erkennbaren Domänencontroller durch Abfragen von DNS-SRV-Einträge suchen.  Wenn Sie einen SRV-Datensatz für die angegebene Site nicht von ein Domänencontroller registriert wird, wird es nicht von dieser Methode zurückgegeben werden, selbst wenn der Domänencontroller physisch in diesem Standort befindet.  
  
 Alle Domänencontroller, die registrieren einen SRV-Datensatz für den angegebenen Standort, werden von dieser Methode zurückgegeben werden, auch wenn sie nicht physisch in diesem Standort sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sucht nach allen Domänencontrollern in dieser Domäne.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> , die die von dieser Methode gefundenen Domänencontrollerobjekte enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Der Name des Standorts für die Suche nach den Domänencontrollern.</param>
        <summary>Sucht alle Domänencontroller in dieser Domäne, die sich auch am angegebenen Standort befinden.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> , die die von dieser Methode gefundenen Domänencontrollerobjekte enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Findet Domänencontroller in dieser Domäne.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> , die, die von dieser Methode gefundenen Domänencontroller darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode findet Domänencontroller in der Domäne an. Es gibt keine Garantie, die von einem anderen Aufruf dieser Methode derselbe Domänencontroller gefunden wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Ein Domänencontroller kann nicht gefunden werden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag">Eine Kombination aus einem oder mehreren der <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Elemente, die den Typ des zu suchenden Domänencontrollers definiert.</param>
        <summary>Sucht nach einem Domänencontroller in dieser Domäne, der die angegebenen Kriterien erfüllt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> , die, die von dieser Methode gefundenen Domänencontroller darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Ein Domänencontroller kann nicht gefunden werden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentException">Die <paramref name="flag" /> Parameter enthält einen ungültigen Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Der Name des Standorts für die Suche nach dem Domänencontroller.</param>
        <summary>Sucht nach einem Domänencontroller in dieser Domäne und am angegebenen Standort.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das von dieser Methode gefundenen Domänencontroller darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Ein Domänencontroller kann nicht gefunden werden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="siteName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">Der Name des Standorts für die Suche nach dem Domänencontroller.</param>
        <param name="flag">Eine Kombination aus einem oder mehreren der <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> Elemente, die den Typ des zu suchenden Domänencontrollers definiert.</param>
        <summary>Sucht nach einem Domänencontroller in dieser Domäne und am angegebenen Standort, der die angegebenen Kriterien erfüllt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das von dieser Methode gefundenen Domänencontroller darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Ein Domänencontroller kann nicht gefunden werden.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.ArgumentException">Diese Ausnahme tritt aus folgenden Gründen auf.  
  
-   <paramref name="siteName" /> ist eine leere Zeichenfolge.  
  
-   <paramref name="flag" /> enthält einen ungültigen Wert.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="siteName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Forest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Forest Forest" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtstruktur ab, der diese Domäne angehört.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> -Objekt, das die Gesamtstruktur darstellt, der diese Domäne angehört.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft alle Vertrauensstellungen für diese Domäne ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> -Objekt, das alle Vertrauensstellungen für diese Domäne enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetComputerDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, die mit der lokale Computer verbunden ist.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, die mit der lokale Computer verbunden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert von der <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> Methode ist ein <xref:System.DirectoryServices.ActiveDirectory.Domain> Objekt, das die Domäne, der der Computer mit der Anwendung angehört, darstellt.  Dieser Rückgabewert ist unabhängig von der Domänenanmeldeinformationen, unter denen die Anwendung ausgeführt wird. Diese Methode wird der Ausführung unter der Domäne des Computers unabhängig von der Domänenanmeldeinformationen vertrauenswürdiges Konto abgerufen werden.  Zum Abrufen der <xref:System.DirectoryServices.ActiveDirectory.Domain> -Objekt, das die Domäne für den Benutzer darstellt, faktisch-Anmeldeinformationen für den Sicherheitskontext an, unter dem die Anwendung ausgeführt wird, verwenden Sie die <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> Methode stattdessen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es konnte keine Verbindung mit der Domäne hergestellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> -Objekt für die Anmeldeinformationen des aktuellen Benutzers für den Sicherheitskontext an, unter dem die Anwendung ausgeführt wird.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> -Objekt, das die Domäne für den angegebenen Benutzer darstellt, faktisch-Anmeldeinformationen für den Sicherheitskontext an, unter dem die Anwendung ausgeführt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A>Methode richtet sich nach der Anmeldeinformationen, unter dem die Anwendung ausgeführt wird.  Zum Abrufen der <xref:System.DirectoryServices.ActiveDirectory.Domain> Objekt die Domäne darstellt, zu der der Computer, die mit der Anwendung hinzugefügt werden, unabhängig von der Anwendung zugeordneten Anmeldeinformationen, verwenden Sie die <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> Methode stattdessen.  
  
## <a name="see-also"></a>Siehe auch  
 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es konnte keine Verbindung mit dem aktuellen Kontext hergestellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryEntry">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.DirectoryEntry GetDirectoryEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine <see cref="T:System.DirectoryServices.DirectoryEntry" /> Objekt, das den Standardnamenskontext der Domäne darstellt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.DirectoryEntry" /> Objekt, das die Domäne darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetDomain(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> -Objekt, das das Ziel und die Anmeldeinformationen zum Abrufen des Objekts enthält. Der Kontexttyp muss eine Domäne oder ein Verzeichnisserver sein.</param>
        <summary>Ruft die <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt für den angegebenen Kontext.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne für den angegebenen Kontext darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Eine Verbindung mit dem Ziel, die im angegebenen <paramref name="context" /> konnte nicht hergestellt werden.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="context" /> ist nicht gültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, für die die Vertrauensstellung vorhanden ist.</param>
        <summary>Bestimmt den Authentifizierungstyp einer eingehenden Vertrauensstellung.</summary>
        <returns>
          <see langword="true" />Wenn die Authentifizierung der Vertrauensstellung selektiv ist; <see langword="false" /> , wenn die Authentifizierung die gesamte Domäne bezieht.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es ist keine Vertrauensstellung mit dem <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />-Objekt vorhanden, das durch den <paramref name="targetForestName" />-Parameter angegeben ist.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Beim Aufruf von LsaQueryTrustedDomainInfoByName ist ein Fehler aufgetreten. Weitere Informationen finden Sie im Thema [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) in der MSDN Library unter [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, für die die Vertrauensstellung vorhanden ist.</param>
        <summary>Bestimmt den Status der SID-Filterung einer Vertrauensstellung.</summary>
        <returns>
          <see langword="true" />Wenn die SID-Filterung aktiviert ist; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es ist keine Vertrauensstellung mit dem <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />-Objekt vorhanden, das durch den <paramref name="targetForestName" />-Parameter angegeben ist.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der die Vertrauensstellung vorhanden ist.</param>
        <summary>Ruft die Vertrauensstellung zwischen dieser Domäne und der angegebenen Domäne ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> Objekt, das die Vertrauensstellung zwischen dieser Domäne und der angegebenen Domäne darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es ist keine Vertrauensstellung mit dem <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />-Objekt vorhanden, das durch den <paramref name="targetForestName" />-Parameter angegeben ist.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfrastructureRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Besitzer der Infrastrukturrolle für diese Domäne ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, der Rolle "Eigentümer Infrastruktur" enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain Parent" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die übergeordnete Domäne dieser Domäne ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> -Objekt, das die übergeordnete Domäne dieser Domäne darstellt. <see langword="null" />Wenn diese Domäne keine übergeordnete Domäne besitzt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="PdcRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> Objekt, das dem primären Domänencontroller (PDC) für diese Domäne enthält.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, der die PDC-Emulatorrolle für diese Domäne enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionality(valuetype System.DirectoryServices.ActiveDirectory.DomainMode domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Parameters>
      <Docs>
        <param name="domainMode">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> -Enumerationswert ab, der die neue Betriebsebene für die Domäne angibt.</param>
        <summary>Löst den Betriebsmodus für die Domäne aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.DirectoryServices.ActiveDirectory.DomainMode> Wert ausgelöst, aber nicht verringert werden kann. Dies bedeutet, dass durch das Auslösen der Funktionsebene der Domäne nicht rückgängig gemacht kann und die Entscheidung zu diesem Zweck sorgfältig vorgenommen werden muss.  
  
 Weitere Informationen zu den Domänenbetriebsmodi finden Sie unter [Domänen-und Gesamtstrukturfunktionalität](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).  
  
 Die folgende Tabelle definiert die gültigen Werte für `domainMode` basierend auf dem aktuellen Betriebsmodus der Domäne.  
  
|Der aktuelle Modus|Modus kann mit potenziert werden soll|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|Keine|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">Basierend auf dem aktuellen Betriebsmodus der Domäne, der angegebene Wert für <paramref name="domainMode" /> ist ungültig.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="domainMode" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />-Enumerationswert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionalityLevel (int domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionalityLevel(int32 domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="domainMode">Ein Wert, der die neue Stufe angibt.</param>
        <summary>Hebt die Funktionalitätsstufe für die Domäne an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, mit der die Vertrauensstellung vorhanden ist.</param>
        <summary>Repariert eine Vertrauensstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird die Vertrauensstellung repariert, durch den sicheren Kanal für die Vertrauensstellung zurücksetzen. Wenn der Vorgang fehlschlägt, den sicheren Kanal zurücksetzen, wird auch das Vertrauensstellungskennwort zurückgesetzt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> angegebenen <paramref name="targetDomain" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Ziel- oder Quellserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="RidRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Inhaber der RID-Masterrolle für diese Domäne ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> -Objekt, das den Domänencontroller darstellt, die die relative ID (RID)-Masterrolle für diese Domäne enthält.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, für die die eingehende Vertrauensstellung vorhanden ist.</param>
        <param name="enable">
          <see langword="true" />Wenn die selektive Authentifizierung aktiviert ist; andernfalls <see langword="false" />.</param>
        <summary>Aktiviert oder deaktiviert die selektive Authentifizierung für eine eingehende Vertrauensstellung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit dem Domänencontroller, der angegebenen <paramref name="targetDomainName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der die Vertrauensstellung vorhanden ist.</param>
        <param name="enable">
          <see langword="true" />Wenn die SID-Filterung aktiviert werden muss; andernfalls <see langword="false" />.</param>
        <summary>Legt den SID-Filterstatus für die angegebene Domäne fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der Domäne, die angegebenen <paramref name="targetDomainName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das aktuelle Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der eine Vertrauensstellung vorhanden ist.</param>
        <param name="newTrustPassword">Das neue Kennwort für die Vertrauensstellung.</param>
        <summary>Aktualisiert das Kennwort für die lokale Seite einer Vertrauensstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Vertrauensstellung erneut herzustellen, müssen beide Seiten der Vertrauensstellung mit dem gleichen Kennwort aktualisiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der Domäne, die angegebenen <paramref name="targetDomainName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" />oder <paramref name="newTrustPassword" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> oder <paramref name="newTrustPassword" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der eine Vertrauensstellung vorhanden ist.</param>
        <param name="newTrustDirection">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wert für die neue Richtung der Vertrauensstellung.</param>
        <param name="newTrustPassword">Das neue Kennwort für die Vertrauensstellung.</param>
        <summary>Aktualisiert das Kennwort und die Vertrauensrichtung für die lokale Seite einer Vertrauensstellung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der Domäne, die von angegeben wird die <paramref name="targetDomainName" /> Parameter.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" />oder <paramref name="newTrustPassword" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> oder <paramref name="newTrustPassword" /> sind <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="newTrustDirection" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, mit der die Vertrauensstellung vorhanden ist.</param>
        <param name="newTrustDirection">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wert, der die neue Richtung der Vertrauensstellung angibt.</param>
        <summary>Aktualisiert die Richtung der Vertrauensstellung für eine vorhandene Vertrauensstellung. Die Richtungen der Vertrauensstellung werden auf beiden Seiten der Vertrauensstellung aktualisiert.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der Domäne, die von angegeben wird die <paramref name="targetDomain" /> Parameter.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="newTrustDirection" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName">Der DNS-Name der Domäne, mit der die Vertrauensstellung vorhanden ist.</param>
        <summary>Überprüft, ob eine zuvor eingerichtete ausgehenden Vertrauensstellung mit der angegebenen Domäne gültig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um sicherzustellen, dass eine Vertrauensstellung vollständig eingerichtet wurde. Die Vertrauensstellung ist nicht eingerichtet werden, bis beide Seiten der Vertrauensstellung erstellt wurden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es ist keine ausgehende Vertrauensstellung mit der Domäne, die von angegeben wird <paramref name="targetDomainName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetDomainName" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomainName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> Objekt, das die Domäne darstellt, mit der die Vertrauensstellung vorhanden ist.</param>
        <param name="direction">Ein <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> Wert, der die Richtung der Vertrauensstellung relativ zu dieser Domäne angibt.</param>
        <summary>Überprüft, ob eine zuvor eingerichtete Vertrauensstellung mit der angegebenen Domäne gültig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft, dass eine Vertrauensstellung vollständig eingerichtet wurde. Die Vertrauensstellung ist nicht eingerichtet werden, bis beide Seiten der Vertrauensstellung erstellt wurden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Es besteht keine Vertrauensstellung mit der Domäne, die von angegeben wird der <paramref name="targetDomain" /> Parameter oder die Zieldomäne verfügt nicht über die durch angegebene vertrauensstellungsrichtung der <paramref name="direction" /> Parameter.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Bei einem Aufruf des zugrunde liegenden Verzeichnisdiensts ist ein Fehler aufgetreten.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Der Zielserver ist entweder ausgelastet oder nicht verfügbar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetDomain" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="direction" /> ist kein gültiger <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />-Wert.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Objekt wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Das angegebene Konto verfügt nicht über die erforderliche Berechtigung zum Ausführen dieses Vorgangs.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
