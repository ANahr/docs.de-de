<Type Name="CaseInsensitiveHashCodeProvider" FullName="System.Collections.CaseInsensitiveHashCodeProvider">
  <TypeSignature Language="C#" Value="public class CaseInsensitiveHashCodeProvider : System.Collections.IHashCodeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveHashCodeProvider extends System.Object implements class System.Collections.IHashCodeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IHashCodeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Please use StringComparer instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt einen Hashcode für ein Objekt, das mithilfe eines Hashalgorithmus, das die Groß-/Kleinschreibung Zeichenfolgen ignoriert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.CaseInsensitiveHashCodeProvider>implementiert die <xref:System.Collections.IHashCodeProvider> Schnittstelle, die Unterstützung von Groß-/Kleinschreibung Zeichenfolgenvergleichen, ebenso wie <xref:System.Collections.CaseInsensitiveComparer> implementiert die <xref:System.Collections.IComparer> Schnittstelle, die Unterstützung von Zeichenfolgenvergleichen Groß-/Kleinschreibung.  
  
 Die Objekte, die als Schlüssel durch eine <xref:System.Collections.Hashtable> sind erforderlich, um das Überschreiben der <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> Methode (oder die <xref:System.Collections.IHashCodeProvider> Schnittstelle) und die <xref:System.Object.Equals%2A?displayProperty=nameWithType> Methode (oder die <xref:System.Collections.IComparer> Schnittstelle). Die Implementierung von Methoden oder Schnittstellen muss Groß-/Kleinschreibung die gleiche Weise behandeln. andernfalls die <xref:System.Collections.Hashtable> möglicherweise nicht ordnungsgemäß verhält. Z. B. beim Erstellen einer <xref:System.Collections.Hashtable>, müssen Sie diese Klasse mit verwenden die <xref:System.Collections.CaseInsensitiveComparer> Klasse oder eine Groß-/Kleinschreibung <xref:System.Collections.IComparer> Implementierung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Hashtabelle Groß-/Kleinschreibung beachtet und Groß-/Kleinschreibung Hashtabellen erstellt und der Unterschied zwischen deren Verhalten veranschaulicht wird, selbst wenn beide auf dieselben Elemente enthalten.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveHashCodeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> -Klasse unter Verwendung der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Collections.CaseInsensitiveHashCodeProvider> Instanz wird mit diesem Konstruktor erstellt die <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> des aktuellen Threads gespeichert ist. Vergleichsprozeduren verwenden die gespeicherte Kultur bestimmen die Regeln der Groß-und Kleinschreibung. aus diesem Grund möglicherweise Vergleiche von Hashcodes je nach Kultur unterschiedliche Ergebnisse. Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <xref:System.Globalization> Namespace und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Hashtabelle Groß-/Kleinschreibung beachtet und Groß-/Kleinschreibung Hashtabellen erstellt und der Unterschied zwischen deren Verhalten veranschaulicht wird, selbst wenn beide auf dieselben Elemente enthalten.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveHashCodeProvider (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" /> , verwenden Sie für die neue <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />-Klasse mit dem angegebenen <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von Vergleichsprozeduren verwendet den angegebenen <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> bestimmen die Regeln der Groß-und Kleinschreibung. Vergleiche von Hashcodes möglicherweise je nach Kultur unterschiedliche Ergebnisse. Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <xref:System.Globalization> Namespace und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Hashtabelle Groß-/Kleinschreibung beachtet und Groß-/Kleinschreibung Hashtabellen erstellt und der Unterschied zwischen deren Verhalten veranschaulicht wird, selbst wenn beide auf dieselben Elemente enthalten.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveHashCodeProvider Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveHashCodeProvider Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveHashCodeProvider.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> zugeordneten der <see cref="P:System.Threading.Thread.CurrentCulture" /> den aktuellen Thread und ist immer verfügbar.</summary>
        <value>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> zugeordneten der <see cref="P:System.Threading.Thread.CurrentCulture" /> des aktuellen Threads.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Collections.CaseInsensitiveHashCodeProvider> Instanz wird mit dem parameterlosen Konstruktor erstellt die <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> des aktuellen Threads gespeichert ist. Vergleichsprozeduren verwenden die gespeicherte Kultur bestimmen die Regeln der Groß-und Kleinschreibung. aus diesem Grund möglicherweise Vergleiche von Hashcodes je nach Kultur unterschiedliche Ergebnisse. Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <xref:System.Globalization> Namespace und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveHashCodeProvider DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveHashCodeProvider DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> zugeordneten <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> und immer verfügbar ist.</summary>
        <value>Eine Instanz von <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> zugeordneten <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vergleichsprozeduren verwenden die <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> bestimmen die Regeln der Groß-und Kleinschreibung. Vergleiche von Hashcodes möglicherweise je nach Kultur unterschiedliche Ergebnisse. Weitere Informationen zu kulturabhängige Vergleiche, finden Sie unter der <xref:System.Globalization> Namespace und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Hashtabelle Groß-/Kleinschreibung beachtet und Groß-/Kleinschreibung Hashtabellen erstellt und der Unterschied zwischen deren Verhalten veranschaulicht wird, selbst wenn beide auf dieselben Elemente enthalten.  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das <see cref="T:System.Object" />, für das ein Hashcode zurückgegeben werden soll.</param>
        <summary>Gibt einen Hashcode für das angegebene Objekt, das mithilfe eines Hashalgorithmus, das die Groß-/Kleinschreibung Zeichenfolgen ignoriert.</summary>
        <returns>Ein Hashcode für das angegebene Objekt, das mithilfe eines Hashalgorithmus, das die Groß-/Kleinschreibung Zeichenfolgen ignoriert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert dieser Methode muss zwei Gründen nicht beibehalten werden. Der Hash-Funktion von einer Klasse möglicherweise zuerst geändert werden, zur besseren Verteilung, wodurch alle Werte aus der alten Hashfunktion nutzlos rendern. Zweitens kann die standardmäßige Implementierung dieser Klasse nicht garantiert, dass es sich bei der gleiche Wert von anderen Instanzen zurückgegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
