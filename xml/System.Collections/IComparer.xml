<Type Name="IComparer" FullName="System.Collections.IComparer">
  <TypeSignature Language="C#" Value="public interface IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht eine Methode verfügbar, die zwei Objekte vergleicht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird verwendet, in Verbindung mit der <xref:System.Array.Sort%2A?displayProperty=nameWithType> und <xref:System.Array.BinarySearch%2A?displayProperty=nameWithType> Methoden. Er bietet eine Möglichkeit zum Anpassen der Sortierreihenfolge einer Auflistung. Finden Sie unter der <xref:System.Collections.IComparer.Compare%2A> Methode für die Hinweise auf Parametern und Rückgabewerten.  
  
 Die standardmäßige Implementierung dieser Schnittstelle ist die <xref:System.Collections.Comparer> Klasse. Die generische Version dieser Schnittstelle finden Sie unter <xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Collections.IComparer> Schnittstelle zum Sortieren ein <xref:System.Collections.ArrayList> Objekt. In diesem Beispiel wird die <xref:System.Collections.IComparer> Schnittstelle wird implementiert, mit der <xref:System.Collections.CaseInsensitiveComparer> Klasse, um die Richtung umkehren des Inhalts der <xref:System.Collections.ArrayList>.  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">Das erste zu vergleichende Objekt.</param>
        <param name="y">Das zweite zu vergleichende Objekt.</param>
        <summary>Vergleicht zwei Objekte und gibt einen Wert zurück, der angibt, ob ein Wert niedriger, gleich oder größer als der andere Wert ist.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="x" /> und <paramref name="y" /> angibt, wie in der folgenden Tabelle veranschaulicht.  
  
 <list type="table"><listheader><term>Wert  
  
 </term><description>Bedeutung  
  
 </description></listheader><item><term>Kleiner als 0 (null)  
  
 </term><description><paramref name="x" /> ist kleiner als <paramref name="y" />.  
  
 </description></item><item><term>0 (null)  
  
 </term><description><paramref name="x" /> ist gleich <paramref name="y" />.  
  
 </description></item><item><term>Größer als 0 (null)  
  
 </term><description><paramref name="x" /> ist größer als <paramref name="y" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Implementierung ist die Verwendung der <xref:System.IComparable.CompareTo%2A> Methode von einer der Parameter.  
  
 Vergleichen von `null` mit einem beliebigen Typ ist zulässig und löst keine Ausnahme aus, bei Verwendung <xref:System.IComparable>. Beim Sortieren `null` gilt als kleiner als ein anderes Objekt sein.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Collections.IComparer> Schnittstelle zum Sortieren ein <xref:System.Collections.ArrayList> Objekt. In diesem Beispiel wird die <xref:System.Collections.IComparer> Schnittstelle wird implementiert, mit der <xref:System.Collections.CaseInsensitiveComparer> Klasse, um die Richtung umkehren des Inhalts der <xref:System.Collections.ArrayList>.  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Weder <paramref name="x" /> noch <paramref name="y" /> implementiert die <see cref="T:System.IComparable" /> Schnittstelle.  
  
 - oder -   
  
 <paramref name="x" />und <paramref name="y" /> verschiedener Typen sind und weder eine Vergleiche mit den anderen behandeln können.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
