<Type Name="XmlBuilder" FullName="System.Web.UI.WebControls.XmlBuilder">
  <TypeSignature Language="C#" Value="public class XmlBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interagiert mit dem Parser die <see cref="T:System.Web.UI.WebControls.Xml" /> Steuerelement.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.XmlBuilder" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public override void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.AppendLiteralString(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Der literal zu dem Steuerelement hinzuzufügende Inhalt.</param>
        <summary>Das Steuerelement hinzugefügt literalen Inhalt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.XmlBuilder.AppendLiteralString%2A> Methode der <xref:System.Web.UI.WebControls.XmlBuilder> -Klasse überschreibt die <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> Methode der <xref:System.Web.UI.ControlBuilder> Klasse, damit die Methode der Basisklasse hat keine Auswirkung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">Der Tagname des untergeordneten Steuerelements.</param>
        <param name="attribs">Ein Array von Attributen im untergeordneten Steuerelement.</param>
        <summary>Ruft die <see cref="T:System.Type" /> für die <see cref="T:System.Web.UI.WebControls.Xml" /> Steuerelement angegebene untergeordnete Steuerelement.</summary>
        <returns>Die <see cref="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" /> Methode wird überschrieben, um stets <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.XmlBuilder.GetChildControlType%2A> Methode der <xref:System.Web.UI.WebControls.XmlBuilder> -Klasse überschreibt die <xref:System.Web.UI.ControlBuilder.GetChildControlType%2A> Methode der <xref:System.Web.UI.ControlBuilder> Klasse. Diese Implementierung der <xref:System.Web.UI.WebControls.XmlBuilder.GetChildControlType%2A> immer Methodenrückgabe `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public override bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.NeedsTagInnerText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die <see cref="T:System.Web.UI.WebControls.Xml" /> Steuerelement den inneren Text abrufen muss.</summary>
        <returns>Die <see cref="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" /> Methode wird überschrieben, um stets <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.XmlBuilder.NeedsTagInnerText%2A> Methode der <xref:System.Web.UI.WebControls.XmlBuilder> -Klasse überschreibt die <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Methode der <xref:System.Web.UI.ControlBuilder> Klasse, um stets `true`.  
  
 Der innere Text ist der Text zwischen den Start- und Endtag des Steuerelements.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public override void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.SetTagInnerText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Wert als der innere Text einzufügen.</param>
        <summary>Legt die <see cref="T:System.Web.UI.WebControls.Xml" /> inneren Text des Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode lädt die <xref:System.String> übergeben ein XML-Dokument, um zu bestimmen, ob sie wohlgeformt ist. Wenn dies der Fall, ruft der Code die <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> Methode der <xref:System.Web.UI.ControlBuilder> Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Die <see cref="T:System.String" /> übergebene Objekt ist kein wohlgeformtes XML.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
