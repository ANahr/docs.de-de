<Type Name="DetailsView" FullName="System.Web.UI.WebControls.DetailsView">
  <TypeSignature Language="C#" Value="public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:DetailsView runat="server" Width="125px" Height="50px"&gt;&lt;/{0}:DetailsView&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt die Werte eines einzelnen Datensatzes aus einer Datenquelle in einer Tabelle an, wobei jede Datenzeile ein Feld des Datensatzes darstellt. Das <see cref="T:System.Web.UI.WebControls.DetailsView" />-Steuerelement ermöglicht es Ihnen, Datensätze zu bearbeiten, zu löschen und einzufügen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Zeilenfeldern](#row_fields)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Sicherheit](#security)  
  
-   [Datenvorgänge](#data_operations)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Barrierefreiheit](#Accessibility)  
  
-   [Deklarationssyntax](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement dient zum Anzeigen eines einzelnen Datensatzes aus einer Datenquelle in einer Tabelle, in dem jedes Feld des Datensatzes in einer Zeile der Tabelle angezeigt. Kann verwendet werden, in Kombination mit einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement für Master / Detail-Szenarien. Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement unterstützt die folgenden Funktionen:  
  
-   Binden an Steuerelementen für Datenquellen, wie z. B. <xref:System.Web.UI.WebControls.SqlDataSource>.  
  
-   Integrierte Einfügefunktionen.  
  
-   Integrierte aktualisieren und Löschen von Funktionen.  
  
-   Integrierte Pagingfunktionen.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.DetailsView> -Objektmodell für dynamisch festlegen von Eigenschaften, Ereignisse zu behandeln und so weiter.  
  
-   Anpassbare Darstellung durch Designs und Stile.  
  
<a name="row_fields"></a>   
## <a name="row-fields"></a>Zeilenfeldern  
 Jede Datenzeile in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wird erstellt, indem ein Feldsteuerelement deklarieren. Andere Zeilenfeldtypen bestimmen das Verhalten der Zeilen im Steuerelement. Leiten Sie Feldsteuerelemente von <xref:System.Web.UI.WebControls.DataControlField>. Die folgende Tabelle enthält die andere Zeilenfeldtypen, die verwendet werden können.  
  
|Spalte-Feldtyp|Beschreibung|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|Zeigt den Wert eines Felds in einer Datenquelle als Text an.|  
|<xref:System.Web.UI.WebControls.ButtonField>|Zeigt eine Schaltfläche "Befehl" in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dadurch können Sie eine Zeile mit einem benutzerdefinierten Schaltflächen-Steuerelements, wie z. B. eine Schaltfläche hinzufügen oder Entfernen angezeigt.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|Zeigt ein Kontrollkästchen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Diese Zeilenfeldtyp wird häufig verwendet, um Felder mit einem booleschen Wert anzuzeigen.|  
|<xref:System.Web.UI.WebControls.CommandField>|Integrierte Befehl zeigt Schaltflächen zum Ausführen von "Bearbeiten", einfügen oder Löschen von Vorgängen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|Zeigt den Wert eines Felds in einer Datenquelle als Hyperlink an. Diese Zeilenfeldtyp können Sie ein zweites Feld an die URL des Links zu binden.|  
|<xref:System.Web.UI.WebControls.ImageField>|Zeigt ein Bild in die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.TemplateField>|Zeigt den benutzerdefinierten Inhalt für eine Zeile in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement einer angegebenen Vorlage entsprechend. Diese Zeilenfeldtyp können Sie ein benutzerdefiniertes Zeilenfeld zu erstellen.|  
  
 Wird standardmäßig die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> -Eigenschaftensatz auf `true`, die gebundenen Feld Zeilenobjekts für jedes Feld eine bindbare Typs in der Datenquelle automatisch generiert. Gültige bindbare Typen sind <xref:System.String>, <xref:System.DateTime>, <xref:System.Decimal>, <xref:System.Guid>, und den Satz von primitiven Typen. Jedes Feld wird in einer Zeile als Text, in der Reihenfolge angezeigt in der jedes Feld in der Datenquelle angezeigt wird.  
  
 Generiert automatisch die Zeilen bietet eine schnelle und einfache Möglichkeit, um jedes Feld im Datensatz anzuzeigen. Allerdings vornehmen nutzen die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement die erweiterten Funktionen müssen Sie explizit die Zeilenfelder einschließt deklarieren die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Deklarieren der Zeilenfelder, legen Sie zuerst die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> Eigenschaft `false`. Als Nächstes fügen Sie öffnende und schließende `<Fields>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Listen Sie schließlich die Zeilenfelder, die zwischen den öffnenden und schließenden enthalten sein sollen `<Fields>` Tags. Die angegebenen Zeilenfelder hinzugefügt werden die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung in der Reihenfolge aufgeführt. Die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Sammlung ermöglicht Ihnen die programmgesteuerte Verwaltung von der Zeilenfelder in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
> [!NOTE]
>  Automatisch generierte Felder nicht hinzugefügt werden die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung.  
  
> [!NOTE]
>  Explizit deklarierten Zeilenfelder können in Kombination mit automatisch generierten Zeilenfeldern angezeigt werden. Wenn beide verwendet werden, werden zuerst explizit deklarierten Zeilenfelder gerendert gefolgt von den automatisch generierten Zeilen-Feldern.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement an ein Datenquellen-Steuerelement gebunden werden kann (z. B. die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement oder <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement) oder mit einer Data Source-Sammlung, die implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> -Schnittstelle ein, z. B. <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, oder anderen Auflistungstypen. Verwenden Sie eine der folgenden Methoden zum Binden der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den entsprechenden Datenquellentyp:  
  
-   Legen Sie die Bindung an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.DetailsView> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuerelements. Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch an das angegebene Datenquellen-Steuerelement gebunden. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
-   An eine Datenquelle binden, implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Netzwerkschnittstelle, die programmgesteuert festgelegt die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.DetailsView> die Steuerung an die Datenquelle, und rufen Sie anschließend die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode.  
  
 Weitere Informationen über die Datenbindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="security"></a>   
## <a name="security"></a>Sicherheit  
 Dieses Steuerelement kann verwendet werden, Benutzereingaben angezeigt werden, die möglicherweise böswillige Clientskripts umfassen. Überprüfen Sie alle Informationen, die für ausführbare Skripts, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in der Anwendung. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung zum Blockieren von Skript und HTML in Benutzereingaben. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07). Server-Validierungssteuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Datenvorgänge  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement bietet integrierte Funktionen, mit denen der Benutzer zu aktualisieren, löschen, einfügen und Durchblättern von Elementen im Steuerelement. Wenn die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement an ein Datenquellen-Steuerelement gebunden ist die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen kann, und geben Sie automatische Aktualisierung, löschen, einfügen und Pagingfunktionen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bieten Unterstützung für Update, Delete, Insert und Auslagerungsvorgänge mit anderen Typen von Datenquellen; Sie müssen jedoch die Implementierung für diese Vorgänge in einem entsprechenden Ereignishandler bereitstellen. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> und <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement auch automatisch hinzugefügt. eine <xref:System.Web.UI.WebControls.CommandField> Zeilenfeld mit einer Schaltfläche Bearbeiten, löschen oder neu durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A>, oder <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> Eigenschaften `true`bzw.. Im Gegensatz zu der Schaltfläche "löschen" (die den ausgewählten Datensatz sofort gelöscht), wenn die Schaltfläche Bearbeiten oder neu geklickt wird, die <xref:System.Web.UI.WebControls.DetailsView> genauso Steuerelement bearbeiten oder Einfügemodus. In den Bearbeitungsmodus wechseln wird die Schaltfläche "Bearbeiten" durch ein aktualisieren und eine Schaltfläche "Abbrechen" ersetzt. Eingabesteuerelemente, die für den Datentyp des Felds geeignet sind (z. B. eine <xref:System.Web.UI.WebControls.TextBox> oder ein <xref:System.Web.UI.WebControls.CheckBox> Control) werden angezeigt, mit der Wert eines Felds für den Benutzer zu ändern. Der Datensatz in der Datenquelle, auf die Schaltfläche "Aktualisieren" aktualisiert werden, während, Änderungen auf die Schaltfläche "Abbrechen abbricht". Ebenso im Einfügemodus, die Schaltfläche "Neu" wird mit einer INSERT- und eine Schaltfläche "Abbrechen" ersetzt, und leere Eingabesteuerelemente für den Benutzer zur Eingabe der Werte für den neuen Eintrag angezeigt werden.  
  
> [!NOTE]
>  Sie können auch manuell definieren, Update, Delete und Insert Befehlsschaltflächen in einer <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, oder <xref:System.Web.UI.WebControls.TemplateField> Zeilenfeld. Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement erkanntes Schaltflächen mit der <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaftensatz auf "Bearbeiten", "Update", "Delete", "Neu", "Einfügen" oder "Abbrechen" geben an, jedoch weiterhin müssen die Funktionen selbst. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> und <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement stellt eine Auslagerung-Funktion, die der Benutzer navigieren zu anderen Datensätzen in der Datenquelle ermöglicht. Wenn aktiviert, werden die Steuerelemente für die Seitennavigation in einer Pagerzeile angezeigt. Legen Sie zum Aktivieren von Paging der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`. Die Pagerzeile kann angepasst werden, mithilfe der <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> und <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> Eigenschaften.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Sie können die Darstellung Anpassen der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, indem Sie die Stileigenschaften für die verschiedenen Teile des Steuerelements festlegen. Die folgende Tabelle enthält die Stileigenschaften, die Sie festlegen können.  
  
|Style-Eigenschaft|Beschreibung|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>|Die Stileigenschaften für die abwechselnde Zeilen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Wenn diese Eigenschaft festgelegt ist, werden die Datenzeilen in der Bänder, die abwechselnd angezeigt der <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> Einstellungen und die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> Einstellungen.|  
|<xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>|Die Stileigenschaften für die Zeile, die die integrierte Schaltflächen enthält.|  
|<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>|Die Stileigenschaften für die Daten Zeilen, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus befindet.|  
|<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>|Die Stileigenschaften für die leere Datenzeile, die in angezeigt werden die <xref:System.Web.UI.WebControls.DetailsView> steuern, wenn die Datenquelle keine Datensätze enthält.|  
|<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>|Die Stileigenschaften für die Fußzeile.|  
|<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>|Die Stileigenschaften für die Kopfzeile.|  
|<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>|Die Stileigenschaften für die Daten Zeilen, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus.|  
|<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>|Die Stileigenschaften für die Pagerzeile.|  
|<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>|Die Stileigenschaften für die Zeilen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Wenn die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> -Eigenschaft ebenfalls festgelegt wird, werden die Datenzeilen abwechselnd angezeigt der <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> Einstellungen und die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> Einstellungen.|  
|<xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>|Die Stileigenschaften für die Headerspalte.|  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bietet mehrere Ereignisse, die Sie programmieren können. Dadurch können Sie eine benutzerdefinierte Routine ausgeführt wird, sobald ein Ereignis auftritt. Die folgende Tabelle enthält die Ereignisse, die von unterstützt die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement erbt außerdem diese Ereignisse von seinen Basisklassen: <xref:System.Web.UI.Control.DataBinding>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>, <xref:System.Web.UI.Control.Disposed>, <xref:System.Web.UI.Control.Init>, <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Control.PreRender>, und <xref:System.Web.UI.Control.Render%2A>.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>|Tritt auf, wenn eine Schaltfläche, in geklickt wird der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>|Tritt auf, nachdem alle <xref:System.Web.UI.WebControls.DetailsViewRow> Objekte werden erstellt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dieses Ereignis wird häufig verwendet, um die Werte eines Datensatzes zu ändern, bevor er angezeigt wird.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|Tritt auf, wenn eine Schaltfläche "löschen", aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|Tritt auf, wenn eine Schaltfläche "löschen", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um den Löschvorgang abzubrechen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|Tritt auf, wenn eine Insert-Schaltfläche, aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Einfügevorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|Tritt auf, wenn eine Insert-Schaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um den Insert-Vorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|Tritt auf, wenn eine Schaltfläche "Aktualisieren", aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement aktualisiert die Zeile. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Updatevorgangs überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|Tritt auf, wenn eine Schaltfläche "Aktualisieren", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um den Updatevorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|Tritt ein, nachdem die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement ändert Modi (bearbeiten, einfügen oder nur-Lese-Modus). Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Modus geändert.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|Tritt ein, bevor die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement ändert Modi (bearbeiten, einfügen oder nur-Lese-Modus). Dieses Ereignis wird häufig verwendet, um eine Änderung des Modus "Abbrechen".|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|Tritt auf, wenn eine der Pagerschaltflächen, und zwar nachdem geklickt wird der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|Tritt auf, wenn eine der Pagerschaltflächen, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
<a name="Accessibility"></a>   
## <a name="accessibility"></a>Barrierefreiheit  
 Weitere Informationen dazu, wie das Steuerelement so konfigurieren, dass er Markup generiert, das den Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:DetailsView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateInsertButton="True|False"  
    AutoGenerateRows="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnablePagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <CommandRowStyle />  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FieldHeaderStyle />  
        <Fields>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Fields>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertRowStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle        />  
</asp:DetailsView>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zur Verwendung von einem <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement in Kombination mit einem <xref:System.Web.UI.WebControls.GridView> Steuerelement für ein einfaches Master / Detail-Szenario. Es zeigt die Details in ausgewählten Elements an der <xref:System.Web.UI.WebControls.GridView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSimple/CS/detailsviewsimplecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSimple/VB/detailsviewsimplevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement hinzufügen, löschen und Bearbeiten der Datensätze.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie deklarativ hinzufügen von Zeilenfeldern auf der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewRowField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowField/CS/detailsviewrowfieldscs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowField/VB/detailsviewrowfieldsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.DetailsView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.DetailsView> Klasse. Dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.DetailsView> zu einer Seite zu steuern, erstellen Sie ein neues <xref:System.Web.UI.WebControls.DetailsView> Objekt, dessen Eigenschaften festlegen und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung eines Containers zu steuern, wie z. B. <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe des Konstruktors dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zu einer Seite.  
  
 [!code-aspx-csharp[DetailsViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCtor/CS/detailsviewctorcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCtor/VB/detailsviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob das Pagingfeature aktiviert ist.</summary>
        <value>
          <see langword="true" />So aktivieren das Paging-Funktion; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verfügt über integrierte Pagingfunktionen, die einen Benutzer das Navigieren zu einem anderen Datensatz in der Datenquelle zu ermöglichen.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement kann-Benutzeroberfläche (UI) und Paging von Datenquellen ausführen. Die UI-Paging-Funktion kann mit jedem Datenquellenobjekt, das unterstützt verwendet werden die <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle. Für jeden Vorgang Auslagerung der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement fragt die Datenquelle für die gesamte Datensammlung und zur Auswahl der Zeile angezeigt, die verbleibenden Daten im Wesentlichen verwerfen.  
  
 Wenn eine Datenquelle implementiert <xref:System.Web.UI.DataSourceView> und <xref:System.Web.UI.DataSourceView.CanPage%2A> -Eigenschaft gibt `true`, die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement Paging von Datenquellen anstelle von UI-Paging verwendet. In diesem Fall die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement fragt nur die Zeile für jede Pagingvorgang erforderlich sind. Paging von Datenquellen ist daher effizienter als die Paginierung der Benutzeroberfläche. Nur die <xref:System.Web.UI.WebControls.ObjectDataSourceView> Objekt unterstützt Paging von Datenquellen ohne Änderung.  
  
 Um die Paging-Funktion aktivieren zu können, legen die <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`. Sie können die Gesamtanzahl der Elemente in der zugrunde liegenden Datenquelle bestimmen, indem Sie mit der <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> Eigenschaft. Um den Index des angezeigten Elements zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> Eigenschaft.  
  
 Wenn Paging aktiviert ist, eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Pagerzeile enthält die Steuerelemente für die Seitennavigation und kann am oben, unten, oder die oberen und unteren Rand des Steuerelements angezeigt werden. Die Pagerzeile verfügt über zwei integrierte Pager Anzeigemodi: nummerierte Seiten und vorherigen und nächsten Seitenlinks (Standard). Modus der nummerierten Seiten werden Links für die einzelnen Seiten, sodass des Benutzers navigieren zu einer bestimmten Seite angezeigt. Die nächsten und vorhergehenden Links-Modus zeigt Steuerelemente, mit denen den Benutzer zum nächsten oder vorherigen Seite navigieren.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wird automatisch die Pagerzeile ausgeblendet, wenn die Datenquelle weniger als zwei Datensätze enthält.  
  
 Sie können die Einstellungen der Pagerzeile (z. B. die Pager-Anzeigemodus, die Anzahl der Seitenlinks, wodurch die Pager-Steuerelement-Bezeichnung angezeigt) steuern, indem Sie mit der <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> Eigenschaft. Verwenden Sie zum Steuern der Darstellung der Pagerzeile (einschließlich Hintergrundfarbe, Schriftfarbe und Position) die <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement auch ermöglicht es Ihnen, eine benutzerdefinierte Vorlage für die Pagerzeile definieren. Weitere Informationen zum Erstellen einer benutzerdefinierten Pagerzeilenvorlage finden Sie unter <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bietet verschiedene Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion auszuführen, wenn Paging auftritt. In der folgenden Tabelle sind die verfügbaren Ereignisse an.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|Tritt auf, wenn eine der Pagerschaltflächen, und zwar nachdem geklickt wird der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|Tritt auf, wenn eine der Pagerschaltflächen, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft zur Aktivierung der Pagingfunktionen von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAllowPaging/CS/detailsviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAllowPaging/VB/detailsviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der abwechselnden Datenzeilen in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die den Stil der abwechselnden Datenzeilen in darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung der abwechselnden Datenzeilen in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Wenn diese Eigenschaft festgelegt ist, die Datenzeilen abfragedarstellung abwechselnd die <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> Einstellungen und die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> Einstellungen. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `AlternatingRowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `AlternatingRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> -Eigenschaft an die Schriftart und den Stil Einstellungen für die abwechselnde Zeilen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob das integrierte Steuerelement zum Löschen des aktuellen Datensatzes auf angezeigt wird ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>
          <see langword="true" />um das integrierte Steuerelement zum Löschen des aktuellen Datensatzes anzuzeigen; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Web.UI.WebControls.DetailsView> gebunden ist, ein Objekt, das von erbt <xref:System.Web.UI.DataSourceView> und <xref:System.Web.UI.DataSourceView.CanDelete%2A> -Eigenschaft gibt `true`, die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen kann, und geben Sie automatische um die Funktionen zu löschen.  
  
> [!NOTE]
>  Für eine <xref:System.Web.UI.WebControls.SqlDataSourceView> Objekt zum Löschen von Daten, die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=nameWithType> Eigenschaft des zugrunde liegenden <xref:System.Web.UI.WebControls.SqlDataSource> Objekt muss mit einer Delete-Abfrage-Anweisung festgelegt werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> -Eigenschaftensatz auf `true`, eine <xref:System.Web.UI.WebControls.CommandField> Zeilenfeld mit einer Schaltfläche "löschen" wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Klicken auf die Schaltfläche "löschen" dauerhaft entfernt, die diesem Datensatz aus der Datenquelle.  
  
> [!NOTE]
>  Sie müssen auch festlegen, die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> -Eigenschaft für das automatische Löschen-Feature funktioniert.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bietet verschiedene Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion auszuführen, wenn ein Datensatz gelöscht wird. In der folgenden Tabelle sind die verfügbaren Ereignisse an.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|Tritt auf, wenn die Schaltfläche "löschen", aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|Tritt auf, wenn die Schaltfläche "löschen", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um den Löschvorgang abzubrechen.|  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> Eigenschaft, um das integrierte Steuerelement zum Löschen des aktuellen Datensatzes anzuzeigen.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die integrierten Steuerelemente zum Bearbeiten des aktuellen Datensatzes, in angezeigt werden einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>
          <see langword="true" />um den integrierten Steuerelementen zum Bearbeiten des aktuellen Datensatzes anzuzeigen; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Datenquellensteuerelement, das die Aktualisierung unterstützt gebunden ist, um eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen kann, und geben Sie Funktionen zum automatischen Aktualisieren.  
  
> [!NOTE]
>  Für ein Datenquellen-Steuerelement zum Aktualisieren von Daten, die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=nameWithType> Eigenschaft muss mit einer Update-Abfrage-Anweisung festgelegt werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> -Eigenschaftensatz auf `true`, eine <xref:System.Web.UI.WebControls.CommandField> Zeilenfeld mit einer Schaltfläche "Bearbeiten" wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Klicken auf die Schaltfläche "Bearbeiten" abgelegt wird, <xref:System.Web.UI.WebControls.DetailsView> Steuerelement im Bearbeitungsmodus befindet. Wenn in den Bearbeitungsmodus wechseln, zeigt jedes gebundenes Feld in das Steuerelement, das nicht schreibgeschützt ist das entsprechende Eingabesteuerelement, wie z. B. eine <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, für den Datentyp des Felds. Dies ermöglicht es dem Benutzer den Wert des Felds zu ändern.  
  
 Wenn angeklickt, wird die Schaltfläche "Bearbeiten" auch mit einer Schaltfläche "Aktualisieren" und eine Schaltfläche "Abbrechen" ersetzt. Der Datensatz in der Datenquelle mit den wertänderungen aktualisiert und das Steuerelement auf den vom angegebenen Modus zurück auf die Schaltfläche "Aktualisieren" die <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> Eigenschaft. Klicken auf die Schaltfläche "Abbrechen" wertänderungen abbricht und die Steuerung an den Standardmodus zurückgegeben.  
  
> [!NOTE]
>  Versetzen einer <xref:System.Web.UI.WebControls.DetailsView> programmgesteuert in den Bearbeitungsmodus zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> Methode.  
  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> Eigenschaft ist ebenfalls festgelegt `true`, die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch wird sichergestellt, dass das Feld oder Felder, die im angegebenen die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft sind schreibgeschützt.  
  
> [!NOTE]
>  Wenn Sie eine eigene aktualisieren Funktionalität zu implementieren, müssen Sie festlegen der <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> -Eigenschaft für die Funktion zum automatischen Aktualisieren funktioniert.  
  
 Sie können die Darstellung der Daten steuern Zeilen, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus mit der <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> Eigenschaft. Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bietet verschiedene Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion durchführen, wenn ein Datensatz aktualisiert wird. In der folgenden Tabelle sind die verfügbaren Ereignisse an.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|Tritt auf, wenn die Schaltfläche "Aktualisieren", aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Updatevorgangs überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|Tritt auf, wenn die Schaltfläche "Aktualisieren", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um den Updatevorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|Tritt ein, nachdem die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Modus geändert.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|Tritt ein, bevor die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Modus geändert. Dieses Ereignis wird häufig verwendet, um die Änderung abzubrechen.|  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> Eigenschaft, um den integrierten Steuerelementen zum Bearbeiten des aktuellen Datensatzes anzuzeigen.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/CS/detailsviewautogenerateeditbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/VB/detailsviewautogenerateeditbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateInsertButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateInsertButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateInsertButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die integrierten Steuerelemente zum Einfügen eines neuen Datensatzes, in angezeigt werden einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>
          <see langword="true" />um die integrierten Steuerelemente zum Einfügen eines neuen Datensatzes anzuzeigen; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Datenquellen-Steuerelement, das Einfügevorgänge unterstützt gebunden ist, um eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen kann, und geben Sie Funktionen zum automatischen Einfügen.  
  
> [!NOTE]
>  Für ein Datenquellen-Steuerelement zum Einfügen von Daten, die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=nameWithType> Eigenschaft muss mit einer Insert-Abfrage-Anweisung festgelegt werden.  
  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> -Eigenschaftensatz auf `true`, eine <xref:System.Web.UI.WebControls.CommandField> Zeilenfeld mit einer Schaltfläche "Neu" wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Klicken auf die Schaltfläche "Neu" abgelegt wird, <xref:System.Web.UI.WebControls.DetailsView> Steuerelement im Einfügemodus. Im Einfügemodus, zeigt jedes gebundenes Feld in das Steuerelement, das nicht schreibgeschützt ist das entsprechende Eingabesteuerelement, z. B. eine <xref:System.Web.UI.WebControls.TextBox> -Steuerelement, für den Datentyp des Felds. Dies ermöglicht es dem Benutzer zur Eingabe der Wert des Felds für den neuen Datensatz.  
  
 Wenn angeklickt, wird die Schaltfläche "Neu" auch durch eine Schaltfläche zum Einfügen und eine Schaltfläche "Abbrechen" ersetzt. Einfügen des neuen Datensatzes in der Datenquelle und das Steuerelement auf den vom angegebenen Modus zurück auf die Schaltfläche zum Einfügen der <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> Eigenschaft. Klicken auf die Schaltfläche "Abbrechen" den Insert-Vorgang abbricht und die Steuerung an den Standardmodus zurückgegeben.  
  
> [!NOTE]
>  Um eine Zeile im Einfügemodus programmgesteuert zu versetzen, verwenden die <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> Methode.  
  
 Sie können steuern, die Darstellung eines Datensatzes, der im Einfügemodus mithilfe der <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> Eigenschaft. Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement bietet mehrere Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion auszuführen, wenn ein neuer Datensatz eingefügt wird. In der folgenden Tabelle sind die verfügbaren Ereignisse an.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|Tritt auf, wenn die Insert-Schaltfläche, aber nachdem geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Einfügevorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|Tritt auf, wenn die Insert-Schaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um den Insert-Vorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|Tritt ein, nachdem die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Modus geändert.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|Tritt ein, bevor die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement den Modus geändert. Dieses Ereignis wird häufig verwendet, um die Änderung abzubrechen.|  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> -Eigenschaft angezeigt, die integrierten Steuerelemente zum Einfügen eines neuen Datensatzes in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/CS/detailsviewautogenerateinsertbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/VB/detailsviewautogenerateinsertbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateRows">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob Zeilenfelder für jedes Feld in der Datenquelle automatisch generiert und, in angezeigt einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>
          <see langword="true" />automatisch generierte gebundene Zeilenfelder für jedes Feld in der Datenquelle angezeigt; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Datenzeile in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement durch ein Zeilenfeld dargestellt wird. Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> -Eigenschaftensatz auf `true`, wird ein automatisch generiertes gebundenen Zeilenfeld für jedes Feld in der Datenquelle erstellt. Jedes Feld wird in einer Zeile als Text, in der Reihenfolge angezeigt in der jedes Feld in der Datenquelle angezeigt wird.  
  
> [!NOTE]
>  Automatisch generierte gebundene Zeilenfelder nicht hinzugefügt werden die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung.  
  
 Generiert automatisch die Zeilen bietet eine schnelle und einfache Möglichkeit, um jedes Feld im Datensatz anzuzeigen. Allerdings vornehmen nutzen die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement die erweiterten Funktionen müssen Sie explizit die Zeilenfelder einschließt deklarieren die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>.  
  
> [!NOTE]
>  Explizit deklarierten Zeilenfelder können in Kombination mit automatisch generierten Zeilenfeldern verwendet werden. Wenn beide verwendet werden, werden zuerst explizit deklarierten Zeilenfelder gerendert gefolgt von den automatisch generierten Zeilen-Feldern.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> Eigenschaft gebundene Zeilenfelder für jedes Feld in der Datenquelle automatisch erstellt.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/CS/detailsviewautogeneraterowscs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/VB/detailsviewautogeneraterowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die URL zu einem Bild zur Anzeige im Hintergrund eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Die URL zu einem Bild im Hintergrund des anzuzeigenden der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> Eigenschaft zum Angeben der URL zu einem Bild im Hintergrund des anzuzeigenden ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
> [!NOTE]
>  Wenn das angegebene Bild kleiner als die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das Bild wird gekachelt, um im Hintergrund zu füllen. Wenn das Bild größer als das Steuerelement ist, wird das Bild zugeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> Eigenschaft zum Anzeigen eines benutzerdefinierten Abbilds im Hintergrund eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Sie müssen Ihr eigenes Image für dieses Beispiel funktioniert angeben.  
  
 [!code-aspx-csharp[DetailsViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewBackImageUrl/CS/detailsviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DetailsViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewBackImageUrl/VB/detailsviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> -Objekt, das die unteren Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> , die die unteren Pagerzeile in stellt das <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Pagerzeile enthält Steuerelemente, die ermöglicht dem Benutzer das Navigieren zu anderen Datensätzen und oben, unten oder sowohl oben als und unteren Rand des Steuerelements angezeigt werden können. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.DetailsViewRow> -Objekt, das die unteren Pagerzeile in stellt der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelements erstellt die unteren Pagerzeile in die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die unten angezeigte Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Jede Änderung an der <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> Eigenschaft die unteren Pagerzeile der Zugriff auf die <xref:System.Web.UI.WebControls.DetailsView> während steuern die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis. Zwei <xref:System.Web.UI.WebControls.Label> Steuerelemente in der benutzerdefinierten Pagerzeile werden dann mit die aktuelle Seitenzahl und Gesamtseitenzahl aktualisiert.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Text in einem HTML-Beschriftungselement gerendert werden soll eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement. Diese Eigenschaft wird bereitgestellt, um das Steuerelement für Benutzer der Geräte mit hilfstechnologie leichter zugänglich machen.</summary>
        <value>Eine Zeichenfolge, die den Text darstellt, die in einem HTML-Beschriftungselement Rendern einer <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> Eigenschaft, um den Text in einem HTML-Beschriftungselement Rendern angeben einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Der Text, den Sie angeben, enthält Geräte mit hilfstechnologie mit einer Beschreibung der Tabelle, die verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Zusätzliche Accessibility-Unterstützung für die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wird bereitgestellt, indem die <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> Eigenschaft zum Angeben der Ausrichtung des HTML-Beschriftung-Elements in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> im Ansichtszustand gespeichert wird.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> Eigenschaft, um den Text anzugeben, für die gerenderte HTML Caption-Element in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die horizontale oder vertikale Position des HTML-Caption-Element in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement. Diese Eigenschaft wird bereitgestellt, um das Steuerelement für Benutzer der Geräte mit hilfstechnologie leichter zugänglich machen.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Werte. Die Standardeinstellung ist <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> -Eigenschaft an die horizontale oder vertikale Position des HTML-Caption-Element in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Diese Eigenschaft wird bereitgestellt, um das Steuerelement für Benutzer der Geräte mit hilfstechnologie leichter zugänglich machen.  
  
 Diese Eigenschaft wird festgelegt, mit einer von der <xref:System.Web.UI.WebControls.TableCaptionAlign> Enumerationswerte. In der folgenden Tabelle sind die möglichen Werte aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Das Caption-Element wird am unteren Rand der Tabelle ausgerichtet.|  
|`TableCaptionAlign.Left`|Das Caption-Element wird mit der linken Seite der Tabelle ausgerichtet.|  
|`TableCaptionAlign.NotSet`|Ausrichtung der Caption-Element ist nicht festgelegt.|  
|`TableCaptionAlign.Right`|Das Caption-Element wird rechts neben der Tabelle ausgerichtet.|  
|`TableCaptionAlign.Top`|Das Caption-Element wird am oberen Rand der Tabelle ausgerichtet.|  
  
 Zusätzliche Accessibility-Unterstützung für die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wird bereitgestellt, indem die <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> Eigenschaft, um den Text in einem HTML-Beschriftungselement Rendern angeben einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> Eigenschaft, um anzugeben, dass die HTML-Beschriftungselement ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement gerendert werden soll, auf der linken Seite des Steuerelements.  
  
 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist nicht der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> Enumerationswerte.</exception>
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Abstand zwischen dem Inhalt einer Zelle und dem Zellenrahmen.</summary>
        <value>Die Menge der Abstand zwischen den Inhalt einer Zelle und dem Zellenrahmen in Pixel. Der Standardwert ist-1 und bedeutet, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> Eigenschaft, um den Abstand zwischen dem Inhalt einer Zelle und dem Zellenrahmen steuern. Der angegebene Leerraum wird allen vier Seiten der Zelle hinzugefügt.  
  
 Alle Zellen in der gleichen Spalte von einem <xref:System.Web.UI.WebControls.DetailsView> Kontrolle haben die gleiche Breite. Der Leerraum wird auf die breiteste Zelle angewendet, und alle anderen Zellen in der Spalte auf diese Zellenbreite angepasst werden. Auf ähnliche Weise verfügen alle Zellen in der gleichen Zeile die gleiche Höhe. Der Leerraum wird angewendet, um die höchste Zelle in der Zeile, und alle anderen Zellen in der Zeile werden an diese Zellenhöhe angepasst. Größe der einzelnen Zelle können nicht angegeben werden.  
  
 Verwenden Sie zum Anpassen des Abstands zwischen den Zellen der <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> Eigenschaft, um die Größe des Abstands zwischen dem Inhalt einer Zelle und dem Zellenrahmen anzugeben.  
  
 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Abstand zwischen den Zellen.</summary>
        <value>Der Abstand zwischen den Zellen in Pixel. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> Eigenschaft, um den Abstand zwischen angrenzenden Zellen im steuern die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dieser Abstand wird vertikal und horizontal angewendet. Der Zellenabstand ist für das gesamte Steuerelement einheitlich. Einzelne Zellenabstand zwischen den Zeilen oder Spalten kann nicht angegeben werden.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft auf einen Wert größer 0 festgelegt, und Sie dann legen die <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> Eigenschaft auf einen Wert, der die Zellenrahmen anzeigt, wird eine Lücke zwischen den Rahmenlinien angrenzender Zellen angezeigt. In diesem Fall die <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> Eigenschaft steuert die Größe des Abstands.  
  
 Verwenden Sie zum Anpassen des Abstands zwischen dem Inhalt einer Zelle und dem Zellenrahmen der <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> Eigenschaft, um die Größe des Abstands zwischen angrenzenden Zellen anzugeben.  
  
 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.DetailsViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.DetailsViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Einer der <see cref="T:System.Web.UI.WebControls.DetailsViewMode" />-Werte.</param>
        <summary>Wechselt die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement in den angegebenen Modus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> Methode, um programmgesteuert wechseln die <xref:System.Web.UI.WebControls.DetailsView> zwischen bearbeiten, einfügen und nur-Lese-Modus. Diese Methode wird außerdem aktualisiert die <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> Eigenschaft mit dem angegebenen Zugriffsmodus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`DetailsViewMode.Insert`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`DetailsView.ReadOnly`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> -Methode zur Rückgabe der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in den schreibgeschützten Modus, wenn der Benutzer mit einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CommandRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung einer Zeile Befehl in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die das Format einer Befehlszeile in darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung einer Zeile Befehl in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Eine Befehlszeile enthält die Befehlsschaltflächen zum Ausführen von Vorgängen, z. B. bearbeiten, löschen und einfügen. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `CommandRowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `CommandRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> -Eigenschaft an die Schriftart und den Stil Einstellungen für die Befehlszeile in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewCommandRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandRowStyle/CS/detailsviewcommandrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandRowStyle/VB/detailsviewcommandrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties">Ein <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" /> , enthält die Eigenschaften für die <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />.</param>
        <summary>Erstellt ein <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> Objekt zur Darstellung einer automatisch generierten Zeilen-Felds mit den Eigenschaften des angegebenen Felds.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> , enthält die Feldeigenschaften, die gemäß der <paramref name="fieldProperties" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Erstellen einer automatisch generierten Zeilen-Felds mithilfe der Eigenschaften des angegebenen Felds.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene automatisch generierten Zeilen-Feld zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRows">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateAutoGeneratedRows(object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataItem">Das Datenelement für die automatisch generierten Zeilenfelder erstellt.</param>
        <summary>Erstellt einen Satz automatisch generierter Zeilenfelder für das angegebene Datenelement.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" /> , die automatisch generierten Zeilenfelder für das angegebene Datenelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> -Eigenschaftensatz auf `true`, die <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows%2A> Methode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch erstellt, einen Satz von generierten Zeilenfeldern für das aktuelle Datenelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement keine Eigenschaften oder Attribute aus dem Generieren von Feldern.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um Ihren eigenen Satz von automatisch generierten Zeilenfeldern zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Ein <see cref="T:System.Collections.IEnumerable" /> , die für die Datenquelle darstellt, die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</param>
        <param name="dataBinding">
          <see langword="true" />um anzugeben, dass diese Methode während der Datenbindung aufgerufen wird. andernfalls <see langword="false" />.</param>
        <summary>Erstellt die Steuerelementhierarchie, die zum Rendern verwendet die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>Die Anzahl der Elemente in der Datenquelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateChildControls%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Steuerelementhierarchie für das Steuerelement zu erstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="dataSource" />Gibt Null zurück, <see cref="T:System.Web.UI.DataSourceView" />.  
  
 \- oder –  
  
 <paramref name="dataSource" />ist ein <see cref="T:System.Collections.ICollection" /> und Gesamtzeilenanzahl nicht zurückgeben kann.  
  
 \- oder –  
  
 <paramref name="dataBinding" />ist <see langword="false" /> und <paramref name="dataSource" /> implementiert nicht die <see cref="T:System.Collections.ICollection" /> Schnittstelle.  
  
 \- oder –  
  
 <paramref name="dataSource" />implementiert nicht die <see cref="T:System.Collections.ICollection" /> Schnittstelle und <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> festgelegt ist, um <see langword="true" />.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene Steuerelementhierarchie zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Formatvorlagenobjekt des Standard-Tabelle für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.Style" /> , enthält das Standardformat für die Tabelle für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateControlStyle%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, dessen Standardwert Tabelle Style-Objekt zu erstellen. Zusätzlich zu den Standardstil der ein <xref:System.Web.UI.WebControls.TableStyle> -Objekt, diese Methode legt die Eigenschaften auch in der folgenden Tabelle fest.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>|`GridLines.Both`|  
|<xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode zurückgeben einer <see cref="T:System.Web.UI.WebControls.TableStyle" /> Objekt mit benutzerdefinierten Einstellungen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die <see cref="T:System.Web.UI.DataSourceSelectArguments" /> -Objekt, das dem Select-Befehl übergeben werden.</summary>
        <returns>Die <see cref="T:System.Web.UI.DataSourceSelectArguments" /> , ruft übergeben Select-Befehls</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> zu erstellende Steuerelement die <xref:System.Web.UI.DataSourceSelectArguments> -Objekt, das dem Select-Befehl übergeben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateFieldSet(object dataItem, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataItem">Das Datenelement für die Zeilenfelder erstellt.</param>
        <param name="useDataSource">
          <see langword="true" />Das Datenelement verwendet, um die automatisch generierten Zeilenfelder zu erstellen; andernfalls <see langword="false" />.</param>
        <summary>Erstellt den vollständigen Satz von automatisch generierten und benutzerdefinierten Zeilenfelder verwendet, um die Hierarchie zu generieren.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" /> , die automatisch generierte und die eine benutzerdefinierte Zeilenfelder für das angegebene Datenelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateFieldSet%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, um den vollständigen Satz von Zeilenfeldern für das Steuerelement zu erstellen. Wenn die <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> -Eigenschaftensatz auf `true`, automatisch generiertes Zeilenfeldern werden angefügt, auf die eine benutzerdefinierte Zeilenfelder in der <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung. Um die automatisch generierten Zeilen-Felder, die basierend auf das Datenelement zu erstellen, übergeben Sie `true` für die `useDataSource` Parameter; andernfalls werden die automatisch generierten Zeilenfelder anhand der Eigenschaften der vorhandenen Zeilenfelder im Steuerelement erstellt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um Ihren eigenen Satz von Zeilenfeldern zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DetailsViewRow CreateRow(int32 rowIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der nullbasierte Index des Datenelements angezeigt.</param>
        <param name="rowType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowType" />-Werte.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <summary>Erstellt eine <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> -Objekt unter Verwendung der angegebenen Elementindex, Zeilentyp und Zeilenstatus.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> mit dem angegebenen Elementindex, Zeilentyp und Zeilenstatus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> zu erstellende Steuerelement ein <xref:System.Web.UI.WebControls.DetailsViewRow> Objekt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode zurückgeben einer <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> Objekt mit benutzerdefinierten Einstellungen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt von der enthaltenden Tabelle für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.Table" /> zur Darstellung der enthaltenden Tabelle für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.CreateTable%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Erstellen einer Tabelle, die als Container für das Steuerelement fungiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Dateneingabe Modus von der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.DetailsViewMode" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> -Eigenschaft können Sie bestimmen, ob die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus, einfügen oder nur-Lese-Modus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`DetailsViewMode.Insert`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`DetailsViewMode.ReadOnly`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
 Dieser Wert wird normalerweise automatisch vom festgelegt, die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, wenn die Befehlsschaltfläche neu, Update-, INSERT-, DELETE- oder "Abbrechen" geklickt wird. Sie können den Modus auch programmgesteuert ändern, indem Sie mit der <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> Methode.  
  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement Modus ändert, werden die Ereignisse in der folgenden Tabelle werden ausgelöst. Dadurch können Sie einen benutzerdefinierten Ereignishandler zu erstellen, der eine Routine ausführt, wenn das Ereignis auftritt.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|Tritt auf, wenn eine Befehlsschaltfläche, die den Modus des ändert die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, aber nach der modusänderung.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|Tritt auf, wenn eine Befehlsschaltfläche, die den Modus des ändert die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, aber bevor Sie den Modus geändert hat.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> -Eigenschaft können Sie bestimmen, ob die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus, einfügen oder nur-Lese-Modus. Wenn der Benutzer versucht, navigieren Sie zu einem anderen Datensatz While der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus befindet, wird der Pagingvorgang abgebrochen.  
  
 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> -Methode der Basisklasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente sollten überschreiben <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A> anstelle von <xref:System.Web.UI.WebControls.DetailsView.DataBind%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenelement gebunden wird, um die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Object" /> , stellt das Datenelement gebunden der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> -Eigenschaft auf das Datenelement gebunden, um die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Das Datenelement wird häufig verwendet, um die Feldwerte des aktuellen Datensatzes direkten Zugriff auf. Der Typ des der <xref:System.Object> zurückgegeben, die von dieser Eigenschaft variiert je nach Datenquelle. Z. B., wenn ein <xref:System.Web.UI.WebControls.SqlDataSource> gebunden ist die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, ein <xref:System.Data.DataRowView> Objekt wird zurückgegeben.  
  
> [!NOTE]
>  Diese Eigenschaft steht nur nach dem Datenbindung aufgetreten ist. Bevor Daten Bindung auftritt, gibt diese Eigenschaft `null`. Diese Eigenschaft ist auch nicht anwendbar, wenn die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement im Einfügemodus und gibt `null`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> Eigenschaft, um den Wert eines Felds im Datenelement zu bestimmen.  
  
 [!code-aspx-csharp[DetailsViewDataItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataItem/CS/DetailsViewDataItem.aspx#1)]
 [!code-aspx-vb[DetailsViewDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataItem/VB/DetailsViewDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der zugrunde liegenden Datenquelle ab.</summary>
        <value>Die Anzahl der Elemente in der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Pagingfeature aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`), verwenden die <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> -Eigenschaft zum Bestimmen der Gesamtanzahl von Datensätzen in der zugrunde liegenden Datenquelle.  
  
> [!NOTE]
>  Da die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement zeigt nur ein Datensatz zu einem Zeitpunkt, entspricht dieser Wert auch die Gesamtzahl der Seiten, die benötigt werden, um jeden Datensatz in der Datenquelle anzuzeigen.  
  
 Um den Index des aktuellen Datensatzes aus der zugrunde liegenden Datenquelle zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> -Eigenschaft können Sie die Anzahl der Elemente in der Datenquelle zu bestimmen. Dieser Wert dient zum Anzeigen der Anzahl der Seiten in einem <xref:System.Web.UI.WebControls.Label> in einer benutzerdefinierten Pagerzeile enthaltenes Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des Elements angezeigt wird, einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement aus der zugrunde liegenden Datenquelle.</summary>
        <value>Der nullbasierte Index des Datenelements angezeigt wird, einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement aus der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Pagingfeature aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`), verwenden die <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> -Eigenschaft können Sie den Index des aktuell angezeigten Datensatzes zu bestimmen. Diese Eigenschaft können auch um den angezeigten Datensatz programmgesteuert zu ändern.  
  
> [!NOTE]
>  Wenn Paging-Funktion aktiviert ist, können Sie diese Eigenschaft auch verwenden, um zu bestimmen, die Seitenzahl des Datensatzes angezeigt; Bedenken Sie jedoch, dass diese Eigenschaft nullbasiert ist.  
  
 Verwenden Sie zum Bestimmen der Gesamtzahl der Elemente in der Datenquelle die <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> -Eigenschaft können Sie den Index des aktuellen Elements in der Datenquelle zu bestimmen. Dieser Wert wird verwendet, um die aktuelle Seitenzahl in anzuzeigen eine <xref:System.Web.UI.WebControls.Label> in einer benutzerdefinierten Pagerzeile enthaltenes Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.DataKey" /> Objekt, das den primären Schlüssel für den angezeigten Datensatz darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataKey" /> , die den primären Schlüssel für den angezeigten Datensatz darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> -Objekt, das oder Primärschlüsselfelder für den aktuellen Datensatz darstellt. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> Eigenschaft, um diese <xref:System.Web.UI.WebControls.DataKey> Objekt. Diese Eigenschaft wird häufig verwendet, um die Schlüssel und die entsprechenden Werte für die Felder, die im angegebenen erhalten die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft.  
  
> [!NOTE]
>  Abzukürzen, können Sie auch die <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> -Eigenschaft können Sie den Wert des ersten Schlüsselfelds bestimmen die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> Eigenschaft zur Ermittlung des Schlüsselfelds und den entsprechenden Wert für den aktuellen Datensatz.  
  
 [!code-aspx-csharp[DetailsViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataKey/CS/detailsviewdatakeycs.aspx#1)]
 [!code-aspx-vb[DetailsViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataKey/VB/detailsviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Array, das die Namen der Schlüsselfelder für die Datenquelle enthält.</summary>
        <value>Ein Array, das die Namen der Schlüsselfelder der Datenquelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft, um eine durch Trennzeichen getrennte Liste von Feldnamen anzugeben, die den Primärschlüssel der Datenquelle darstellen. Bei der <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> -Objekt, das oder Primärschlüsselfelder für den aktuellen Datensatz darstellt und speichert ihn in, die <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> Eigenschaft ist ebenfalls festgelegt `true`, die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement automatisch wird sichergestellt, dass das Feld oder Felder, die im angegebenen die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft sind schreibgeschützt.  
  
> [!NOTE]
>  Müssen die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> -Eigenschaft für die automatische Aktualisierung, löschen und Einfügen von Funktionen von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement funktioniert.  
  
 Wenn die <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> eines Zeilenfelds ist-Eigenschaftensatz auf `false`, nicht in der Zeile angezeigt wird der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement und die Daten für die Zeile nimmt einen Roundtrip an dem Client. Falls Sie die Daten für eine Zeile möchten, die für ein Roundtrip nicht sichtbar ist, fügen Sie den Feldnamen in der <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft, um das Schlüsselfeld für die Datenquelle gebunden die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Abrufen, oder legt ihn fest-Dateneingabe Standardmodus der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.DetailsViewMode" />-Werte. Die Standardeinstellung ist <see langword="DetailsViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> Eigenschaft, um anzugeben, ob die <xref:System.Web.UI.WebControls.DetailsView> steuerelementrückgabe bearbeiten, einfügen oder nur-Lese-Modus, nachdem ein bearbeiten oder Insert-Vorgang ausgeführt wird. Wird standardmäßig die <xref:System.Web.UI.WebControls.DetailsView> steuerelementrückgabe zu nur-Lese-Modus; Sie können jedoch beibehalten der <xref:System.Web.UI.WebControls.DetailsView> in Bearbeitung zu steuern oder durch Festlegen dieser Eigenschaft auf den entsprechenden Wert im Einfügemodus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`DetailsViewMode.Insert`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`DetailsViewMode.ReadOnly`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> Eigenschaft angeben, dass die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement im Bearbeitungsmodus bleiben soll, nachdem ein Datensatz aktualisiert wurde.  
  
 [!code-aspx-csharp[DetailsViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDefaultMode/CS/detailsviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDefaultMode/VB/detailsviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist nicht der <see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> Enumerationswerte.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den aktuellen Datensatz aus der Datenquelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Löschvorgang nicht ausgeführt, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus. Die <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> Ereignis wird ausgelöst, unmittelbar bevor das Element gelöscht wird. Legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true` um den Löschvorgang abzubrechen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, die Darstellung der Daten festlegen Datenzeilen ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement befindet sich im Bearbeitungsmodus befindet.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , stellt das Format der Daten wann Zeilen eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement befindet sich im Bearbeitungsmodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> Eigenschaft, um die Darstellung der Daten steuern Datenzeilen ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus befindet. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EditRowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EditRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die Daten anzugeben Datenzeilen ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus befindet.  
  
 [!code-aspx-csharp[DetailsViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEditRowStyle/CS/detailsvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEditRowStyle/VB/detailsvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Objekt, mit dem Sie die Darstellung der leeren Datenzeile angezeigt, wenn die Datenquelle gebunden, Festlegen einer <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement enthält keine Einträge.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , mit der Sie die Darstellung der leeren Datenzeile festlegen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung von leeren Datenzeile in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die leere Datenzeile wird angezeigt, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EmptyDataRowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EmptyDataRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die leere Datenzeile anzugeben.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für die leere Datenzeile, wenn gerendert eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" /> , die benutzerdefinierte Inhalte für die leere Datenzeile enthält. Der Standardwert ist <see langword="null" />, was bedeutet, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.DetailsView> steuern, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, mit der <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für die null-Zeile anzugeben, platzieren Sie zuerst `<EmptyDataTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EmptyDataTemplate>` Tags. Um den Stil der leeren Datenzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> Eigenschaft. Alternativ können die integrierte Benutzeroberfläche für die leere Datenzeile durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> Eigenschaft zum Erstellen einer benutzerdefinierten leeren Datenzeile.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/CS/detailsviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/VB/detailsviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, der in der leeren Datenzeile anzuzeigende Text gerendert wird, wenn, eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.</summary>
        <value>Der Text in der leeren Datenzeile angezeigt. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.DetailsView> steuern, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> Eigenschaft an, der in der leeren Datenzeile anzuzeigende Text. Um den Stil der leeren Datenzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> Eigenschaft. Alternativ können Sie eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> im Ansichtszustand gespeichert wird.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> Eigenschaft an, der in der leeren Datenzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob Datenmodell Überprüfung aktiviert ist.</summary>
        <value>
          <see langword="true" />Wenn die Validierung im Datenmodell aktiviert ist; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnablePagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die clientseitige Rückruffunktionen für Auslagerungsvorgänge in verwendet werden die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>
          <see langword="true" />die clientseitige Rückruffunktionen für Auslagerungsvorgänge verwendet; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> Eigenschaft, um anzugeben, ob Auslagerungsvorgänge mit clientseitigen Rückruffunktionen ausgeführt werden. Wenn aktiviert, erfolgt die Auslagerung mithilfe der Rückruffunktion wird verhindert, dass die Notwendigkeit, die Seite an den Server zu senden.  
  
> [!NOTE]
>  Die clientseitige Auslagerung-Funktion ist nur in Microsoft Internet Explorer 5.5 und höher und Netscape 6.0 oder höher unterstützt.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> im Ansichtszustand gespeichert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> -Eigenschaft können Sie die Verwendung von clientseitigen Rückruffunktionen für Auslagerungsvorgänge zu aktivieren.  
  
 [!code-aspx-csharp[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/CS/detailsviewenablepagingcallbackscs.aspx#1)]
 [!code-aspx-vb[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/VB/detailsviewenablepagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.EnsureDataBound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> Methode nach dem Überprüfen, dass die Daten auflisten Steuerelement eine Datenbindung erforderlich ist und dass eine gültige Datenquellen-Steuerelements angegeben ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datenbindung nicht ausgeführt, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um zusätzliche Verarbeitung, bevor das Steuerelement datengebunden ist implementieren.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> zum Speichern der Feldwerte.</param>
        <param name="includeReadOnlyFields">
          <see langword="true" />schreibgeschützte Felder eingeschlossen werden sollen; andernfalls <see langword="false" />.</param>
        <param name="includeKeys">
          <see langword="true" />um die Primärschlüsselfelds oder Felder enthalten. andernfalls <see langword="false" />.</param>
        <summary>Ruft die Werte der einzelnen Felder angezeigten ab und speichert sie in der angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ExtractRowValues%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Abrufen der Werte jedes Felds. Die Werte können sie für Data Source-Vorgänge verwendet werden. Sie können angeben, ob die extrahierten Werte mit schreibgeschützte Felder als auch Schlüsselfeldern umfassen die `includeReadOnlyFields` und `includePrimaryKey` Parameter bzw..  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um Ihre eigene Routine zum Abrufen der Feldwerte zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FieldHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der Headerspalte in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die das Format der Kopfzeilenspalte in der darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Feld-Header-Spalte in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dies ist die Spalte, die Feldnamen der Datenwerte enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `FieldHeaderStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `FieldHeaderStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die Kopfzeile Feld anzugeben.  
  
 [!code-aspx-csharp[DetailsViewFieldHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/CS/FieldHeaderStyleCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFieldHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/VB/FieldHeaderStyleVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Fields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.DataControlField" /> Objekte, die explizit deklarierten Zeilenfelder im darstellen, einer <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> , enthält alle explizit deklarierten Zeilenfelder in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie explizit die Zeilenfelder für deklarieren eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, diese Zeilenfelder werden in gespeicherten der <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> -Eigenschaft (Auflistung). Die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung kann auch Sie die Auflistung der explizit deklarierte Zeilen programmgesteuert zu verwalten.  
  
> [!NOTE]
>  Explizit deklarierten Zeilenfelder können in Kombination mit automatisch generierten Zeilenfeldern verwendet werden. Wenn beide verwendet werden, werden zuerst explizit deklarierten Zeilenfelder gerendert gefolgt von den automatisch generierten Zeilen-Feldern. Automatisch generierte Felder nicht hinzugefügt werden die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung.  
  
 Andere Zeilenfeldtypen bestimmen das Verhalten der Zeilen im Steuerelement. Die folgende Tabelle zeigt die verschiedenen Zeile Feldtypen, die verwendet werden können die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung.  
  
|Zeilenfeldtyp|Beschreibung|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|Zeigt den Wert eines Felds in einer Datenquelle als Text an.|  
|<xref:System.Web.UI.WebControls.ButtonField>|Zeigt eine Schaltfläche "Befehl" in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dadurch können Sie eine Zeile mit einem benutzerdefinierten Schaltflächen-Steuerelements, wie z. B. eine Schaltfläche hinzufügen oder Entfernen angezeigt.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|Zeigt ein Kontrollkästchen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Diese Zeilenfeldtyp wird häufig verwendet, um Felder mit einem booleschen Wert anzuzeigen.|  
|<xref:System.Web.UI.WebControls.CommandField>|Integrierte Befehl zeigt Schaltflächen zum Ausführen von "Bearbeiten", einfügen oder Löschen von Vorgängen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|Zeigt den Wert eines Felds in einer Datenquelle als Hyperlink an. Diese Zeilenfeldtyp können Sie ein zweites Feld an die URL des Links zu binden.|  
|<xref:System.Web.UI.WebControls.ImageField>|Zeigt ein Bild in die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.TemplateField>|Zeigt den benutzerdefinierten Inhalt für eine Zeile in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement einer angegebenen Vorlage entsprechend. Diese Zeilenfeldtyp können Sie ein benutzerdefiniertes Zeilenfeld zu erstellen.|  
  
 Die Zeilenfelder für explizit deklarieren einer <xref:System.Web.UI.WebControls.DetailsView> steuern, der erste Satz der <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> Eigenschaft, um `false`. Als Nächstes fügen Sie öffnende und schließende `<Fields>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Listen Sie schließlich die Zeilenfelder, die zwischen den öffnenden und schließenden enthalten sein sollen `<Fields>` Tags. Die Zeilenfelder werden angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement in der Reihenfolge, die in der Zeilenfelder angezeigt werden die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung.  
  
 Obwohl Sie Zeilenfelder programmgesteuert hinzufügen können die <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung, es ist einfacher, die Zeilenfelder deklarativ in Liste der <xref:System.Web.UI.WebControls.DetailsView> steuern und verwenden Sie dann die <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Eigenschaft jedes Felds Zeile anzeigen oder Ausblenden der Zeilenfeld.  
  
 Wenn die <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> eines Zeilenfelds ist-Eigenschaftensatz auf `false`, nicht in der Zeile angezeigt wird der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement und die Daten für die Zeile nimmt einen Roundtrip an dem Client. Falls Sie die Daten für eine Zeile möchten, die für ein Roundtrip nicht sichtbar ist, fügen Sie den Feldnamen in der <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie deklarativ hinzufügen von Zeilenfeldern auf der <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> Auflistung von einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFields/CS/DetailsViewFieldsCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFields/VB/DetailsViewFieldsVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> Objekt, das in der Fußzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> , die in der Fußzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.DetailsViewRow> Objekt, das die Fußzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement erstellt, in der Fußzeile der <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die Fußzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Jede Änderung an der <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden alle Änderungen überschrieben.  
  
 Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> Eigenschaft der Fußzeile der Zugriff auf die <xref:System.Web.UI.WebControls.DetailsView> steuern, während die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis. Ein <xref:System.Web.UI.WebControls.Label> Steuerelement innerhalb der benutzerdefinierten Fußzeile klicken Sie dann mit die aktuelle Seitenzahl aktualisiert.  
  
 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der in der Fußzeile ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die den Stil der in der Fußzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> -Eigenschaft zur Steuerung der Darstellung der in der Fußzeile ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `FooterStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `FooterStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die Fußzeile anzugeben.  
  
 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ihn fest benutzerdefinierten Inhalt für die Fußzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" /> , die benutzerdefinierte Inhalte für die Fußzeile enthält. Der Standardwert ist <see langword="null" />, was bedeutet, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> festgelegt wird. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die Fußzeile definieren, mit der <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Fußzeile `<FooterTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<FooterTemplate>` Tags. Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> Eigenschaft. Alternativ können Sie einfach anzeigen Text in der Fußzeile durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> und <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> zu eine benutzerdefinierten Fußzeile zu erstellenden Eigenschaft.  
  
 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Text in der Fußzeile der anzuzeigenden ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Der Text in der Fußzeile angezeigt. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> Eigenschaft an, der in der Fußzeile anzuzeigende Text. Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Fußzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> und <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> im Ansichtszustand gespeichert wird.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> Eigenschaft an, der in der Fußzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Ergebnis eines Rückrufs-Ereignisses, die ein Steuerelement ausgerichtet ist.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement implementiert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle und verwendet die <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> zum Abrufen von Daten und die <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Steuerelement, das den Rückruf initiiert hat.</param>
        <param name="argument">Der Rückrufcode.</param>
        <summary>Gibt die Rückrufzeichenfolge, die mit dem angegebenen Argument erstellt.</summary>
        <returns>Die vollständige Rückrufzeichenfolge an den Client gesendet werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Rasterlinien für eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.GridLines" />-Werte. Die Standardeinstellung ist <see langword="GridLines.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> Eigenschaft an, die Art der Gitternetzlinie für eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die folgende Tabelle enthält die verfügbaren Formate.  
  
|Stil|Beschreibung|  
|-----------|-----------------|  
|`GridLines.None`|Es werden keine Gitternetzlinien angezeigt.|  
|`GridLines.Horizontal`|Zeigt nur die horizontalen Gitternetzlinien.|  
|`GridLines.Vertical`|Zeigt nur die vertikalen Gitternetzlinien.|  
|`GridLines.Both`|Zeigt die horizontalen und vertikalen Rasterlinien.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> Eigenschaft blenden alle Gitternetzlinien in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewGridLines/CS/detailsviewgridlinescs.aspx#1)]
 [!code-aspx-vb[DetailsViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewGridLines/VB/detailsviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> Objekt, das in die Kopfzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> , die in die Kopfzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.DetailsViewRow> Objekt, das die Kopfzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement erstellt, in die Kopfzeile der <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn die Kopfzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert bearbeitet werden muss. Jede Änderung an der <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> Eigenschaft die Kopfzeile der Zugriff auf die <xref:System.Web.UI.WebControls.DetailsView> steuern, während die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis. Ein <xref:System.Web.UI.WebControls.Label> Steuerelement in die benutzerdefinierte Kopfzeile wird dann mit die aktuelle Seitenzahl aktualisiert.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der Kopfzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die das Format der in der Kopfzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Kopfzeile in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `HeaderStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `HeaderStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die Kopfzeile anzugeben.  
  
 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ihn fest benutzerdefinierten Inhalt für die Kopfzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" /> , die benutzerdefinierte Inhalte für die Kopfzeile enthält. Der Standardwert ist <see langword="null" />, was bedeutet, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> festgelegt wird. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die Kopfzeile definieren, mit der <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Kopfzeile `<HeaderTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<HeaderTemplate>` Tags. Um den Stil der Kopfzeilen zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> Eigenschaft. Alternativ können Sie einfach anzeigen Text in der Kopfzeile durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> und <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> Eigenschaft, um eine benutzerdefinierte Kopfzeile erstellen.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Text in der Kopfzeile der anzuzeigenden ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Der Text in der Kopfzeile angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.DetailsView> steuern, wann die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> Eigenschaft an, der in der Kopfzeile anzuzeigende Text. Um den Stil der Kopfzeilen zu steuern, verwenden die <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Kopfzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> und <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert des <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> im Ansichtszustand gespeichert wird.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> Eigenschaft an, der in der Kopfzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die horizontale Ausrichtung von einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement auf der Seite.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />-Werte. Die Standardeinstellung ist <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> -Eigenschaft an die horizontale Ausrichtung des ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement auf der Seite. Die folgende Tabelle enthält die verschiedenen horizontalen Ausrichtung Stile.  
  
|HorizontalAlign-Wert|Beschreibung|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Die horizontale Ausrichtung der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wurde nicht festgelegt.|  
|`HorizontalAlign.Left`|Die <xref:System.Web.UI.WebControls.DetailsView> ist links auf der Seite ausgerichtet.|  
|`HorizontalAlign.Center`|Die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wird auf der Seite zentriert.|  
|`HorizontalAlign.Right`|Die <xref:System.Web.UI.WebControls.DetailsView> ist rechts auf der Seite ausgerichtet.|  
|`HorizontalAlign.Justify`|Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement ist an der linken und rechten Rand der Seite ausgerichtet.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> Eigenschaft angeben, dass ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement auf der Seite zentriert werden soll.  
  
 [!code-aspx-csharp[DetailsViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHorizontalAlign/CS/detailsviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[DetailsViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHorizontalAlign/VB/detailsviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> , die die Pagerzeile enthält.</param>
        <param name="pagedDataSource">Ein <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> enthält die Daten für die aktuelle Seite.</param>
        <summary>Erstellt die Pagerzeile für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.InitializePager%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, um die Pagerzeile zu erstellen. Erstellt eine <xref:System.Web.UI.WebControls.TableCell> Objekt, das mit den Eigenschaften der Navigationssteuerelemente enthält die <xref:System.Web.UI.WebControls.PagedDataSource> Objekt in der `pagedDataSource` Parameter. Die Zelle wird dann hinzugefügt, auf die Zeile, die gemäß der `row` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene Pagerzeile zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.DataControlField field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="field" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="row">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />.</param>
        <param name="field">Die <see cref="T:System.Web.UI.WebControls.DataControlField" /> , die der Zeile entspricht.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.InitializeRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Initialisieren des angegebenen <xref:System.Web.UI.WebControls.DetailsViewRow> Objekt. Die Zeile wird initialisiert, für die <xref:System.Web.UI.WebControls.DataControlField> Objekt in der `field` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene benutzerdefinierte Zeile zu erstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />um die Validierung ausführen, wenn die Methode aufgerufen wird; andernfalls <see langword="false" />.</param>
        <summary>Fügt den aktuellen Datensatz in der Datenquelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus, verwenden Sie die <xref:System.Web.UI.WebControls.DetailsView.InsertItem%2A> Methode, um den aktuellen Datensatz in der Datenquelle programmgesteuert einfügen. Diese Methode wird häufig verwendet, wenn den aktuelle Datensatz von außerhalb des eingefügt werden muss die <xref:System.Web.UI.WebControls.DetailsView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement muss im Einfügemodus sein, wenn diese Methode aufgerufen, andernfalls wird ein <xref:System.Web.HttpException> Ausnahme wird ausgelöst.  
  
 Um anzugeben, ob die seitenüberprüfung vor der Insert-Vorgang ausgeführt wird, verwenden die `causesValidation` Parameter. Aufrufen dieser Methode löst auch der <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> und <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> Ereignisse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement ist nicht im Einfügemodus.  
  
 \- oder –  
  
 Die <see cref="T:System.Web.UI.DataSourceView" /> zugeordneten der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der Datenzeilen in eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> steuern, wann die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement befindet sich im Einfügemodus.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die den Stil der Datenzeilen in darstellt eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> steuern, wann die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement befindet sich im Einfügemodus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datenzeilen der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden mit diesem Format angezeigt, wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> Eigenschaft, um die Darstellung der Datenzeilen im Einfügemodus steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `InsertRowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `InsertRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> -Eigenschaft an die Schriftart und den Stil Einstellungen für die Datenzeilen der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Einfügemodus.  
  
 [!code-aspx-csharp[DetailsViewInsertRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewInsertRowStyle/CS/detailsviewinsertrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewInsertRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewInsertRowStyle/VB/detailsviewinsertrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" /> , den, die zu überprüfende Datentyp darstellt.</param>
        <summary>Bestimmt, ob der angegebene Datentyp kann, auf ein Feld in gebunden werden der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>
          <see langword="true" />Wenn auf ein Feld in der angegebenen Datentyp gebunden werden kann die <see cref="T:System.Web.UI.WebControls.DetailsView" /> steuern; anderenfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.IsBindableType%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, um zu bestimmen, ob der angegebene Datentyp an ein Feld in das Steuerelement gebunden werden kann. Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement unterstützt die folgenden Datentypen:  
  
 Alle primitiven Datentypen, z. B. <xref:System.Boolean>, <xref:System.Byte>, und<xref:System.Int32>  
  
 <xref:System.DateTime>  
  
 <xref:System.Decimal>  
  
 <xref:System.Guid>  
  
 <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Klasse, überschreiben Sie diese Methode, um hinzufügen oder Einschränken der Datentypen, die in verwendet werden können ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> Objekt wird an den Ereignishandler, dadurch können Sie zur Ermittlung des Befehlsname und neben der Schaltfläche geklickt Befehlsargument übergeben. Um den Index des aktuellen Datensatzes zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> -Ereignis auf eine Schaltfläche in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Klickt der Benutzer auf die Schaltfläche "Kontakt hinzufügen", wird das Element hinzugefügt, um eine <xref:System.Web.UI.WebControls.ListBox> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Datensatz, in erstellt wird einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis wird jedes Mal ein Datensatz, in erstellt wird einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dies kann auftreten, wenn das Steuerelement gerendert wird oder wenn der Benutzer mit einem anderen Datensatz wechselt. Sie können dieses Ereignis verwenden, einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. das Hinzufügen von benutzerdefinierten Inhalten zu einer Zeile bei jedem dieses Ereignisses auftreten.  
  
 Sie erreichen die Header, Footer und Pager Zeilen in der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>, oder <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> Eigenschaften bzw.. Verwenden Sie den Zugriff auf eine der Datenzeilen, die <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> Auflistung.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis, um eine benutzerdefinierte Pagerzeile mit aktuellen Pagingstatistiken zu aktualisieren.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche "löschen" in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, jedoch erst nach dem Löschvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> Ereignis wird ausgelöst, wenn eine Schaltfläche "löschen" in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, jedoch erst nach dem Löschvorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse der Delete-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs> Objekt an den Ereignishandler, wodurch Sie zum Bestimmen der Anzahl der betroffenen Zeilen und alle Ausnahmen, die möglicherweise aufgetreten sind, übergeben wird. Sie können auch angeben, ob die Ausnahme im Ereignis Handler behandelt, indem wurde die <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> Ereignis zum Aktualisieren einer <xref:System.Web.UI.WebControls.GridView> nach Steuern eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement führt einen Löschvorgang an. Auf diese Weise sind die <xref:System.Web.UI.WebControls.GridView> Steuerelement synchronisiert werden, mit der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche "löschen" in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, jedoch vor dem Löschvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> Ereignis wird ausgelöst, wenn eine Schaltfläche "löschen" in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, jedoch vor dem Löschvorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. den Delete-Vorgang abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie den Index des gelöschten Datensatzes ermitteln und um anzugeben, dass der Delete-Vorgang abgebrochen werden soll. Um den Löschvorgang abzubrechen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch Bearbeiten der <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> Auflistungen, falls erforderlich, bevor die Werte an die Datenquelle übergeben werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> Ereignis, um den Löschvorgang abzubrechen, wenn der Benutzer versucht, löschen Sie das letzte Element aus der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemDeleting/CS/detailsviewitemdeletingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemDeleting/VB/detailsviewitemdeletingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche zum Einfügen in eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, jedoch erst nach dem Einfügevorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> Ereignis wird ausgelöst, wenn eine Schaltfläche zum Einfügen in die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, jedoch erst nach dem Einfügevorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse der Insert-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs> Objekt an den Ereignishandler, wodurch Sie zum Bestimmen der Anzahl der betroffenen Zeilen und alle Ausnahmen, die möglicherweise aufgetreten sind, übergeben wird. Sie können auch angeben, ob die Ausnahme im Ereignis Handler behandelt, indem wurde die <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft. Um das Steuerelement nach einem Einfügevorgang im Einfügemodus zu belassen, legen die <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> Ereignis Aktualisieren einer <xref:System.Web.UI.WebControls.GridView> nach Steuern eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement führt einen Einfügevorgang an. Auf diese Weise sind die <xref:System.Web.UI.WebControls.GridView> Steuerelement synchronisiert werden, mit der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche zum Einfügen in eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, aber vor der Insert-Vorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> Ereignis wird ausgelöst, wenn eine Schaltfläche zum Einfügen in eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, aber vor der Insert-Vorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. den Insert-Vorgang abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs> Objekt übergeben wird, an den Ereignishandler, die Ihnen die Möglichkeit anzugeben, dass der Insert-Vorgang abgebrochen werden soll. Legen Sie zum Abbrechen des Insert-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch Bearbeiten der <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A> Auflistung, falls erforderlich, bevor die Werte an die Datenquelle übergeben werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> Ereignis für die HTML-Codierung die Werte, die vom Benutzer eingegeben werden, bevor ein neuer Datensatz mit der Datenquelle hinzugefügt wird.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche "Aktualisieren" in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, jedoch erst nach dem Update-Vorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> Ereignis wird ausgelöst, wenn eine Schaltfläche "Aktualisieren" in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, jedoch erst nach dem Update-Vorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse der Update-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> Objekt an den Ereignishandler, wodurch Sie zum Bestimmen der Anzahl der betroffenen Zeilen und alle Ausnahmen, die möglicherweise aufgetreten sind, übergeben wird. Sie können auch angeben, ob die Ausnahme im Ereignis Handler behandelt, indem wurde die <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> Eigenschaft. Um das Steuerelement nach einem Updatevorgang in den Bearbeitungsmodus zu belassen, legen die <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> Ereignis Aktualisieren einer <xref:System.Web.UI.WebControls.GridView> nach Steuern eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement führt einen Updatevorgang. Auf diese Weise sind die <xref:System.Web.UI.WebControls.GridView> Steuerelement synchronisiert werden, mit der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche "Aktualisieren" in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement geklickt wird, jedoch vor dem Updatevorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> Ereignis wird ausgelöst, wenn eine Schaltfläche "Aktualisieren" in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement geklickt wird, jedoch vor dem Updatevorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. den Update-Vorgang abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie den Index, der dem aktualisierten Datensatz gelesen ermitteln und um anzugeben, dass der Update-Vorgang abgebrochen werden soll. Legen Sie zum Abbrechen des Update-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch Bearbeiten der <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A>, und <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> Auflistungen, falls erforderlich, bevor die Werte an die Datenquelle übergeben werden. Ein gängiges Verfahren zum Verwenden dieser Sammlungen ist für die HTML-Codierung die Werte, die vom Benutzer angegeben werden, bevor sie in der Datenquelle gespeichert werden. Dadurch werden Script-Injection-Angriffe verhindert.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> Ereignis für die HTML-Codierung die Werte, die vom Benutzer eingegeben werden, bevor ein Datensatz in der Datenquelle aktualisiert wird.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" /> , die den Status des darstellt der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</param>
        <summary>Lädt den Zustand der Eigenschaften in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement beibehalten werden, selbst wenn die <see cref="P:System.Web.UI.Control.EnableViewState" /> -Eigenschaftensatz auf <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.LoadControlState%2A> Methode wird verwendet, um das Laden des Zustands der Eigenschaften in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement beibehalten werden, selbst wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" /> , die den Status des darstellt der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.DetailsView" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient in erster Linie durch die .NET Framework-Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden. Allerdings können Entwickler von Steuerelementen überschreiben Sie diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Die <xref:System.Web.UI.WebControls.DetailsView.LoadViewState%2A> Methode wird verwendet, um den zuvor gespeicherten Ansichtszustand des laden die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement versucht, zwischen bearbeiten, einfügen und nur-Lese-Modus, jedoch erst nach dem Ändern der <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> Eigenschaft aktualisiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> Ereignis wird ausgelöst, wenn eine <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement versucht, zwischen bearbeiten, einfügen und nur-Lese-Modus, jedoch erst nach dem Ändern der <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> Eigenschaft aktualisiert wird. Dadurch können Sie einen Ereignishandler bereitstellen, die eine benutzerdefinierte Routine, z. B. Synchronisierung führt der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement mit einem anderen Steuerelement, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> Ereignis, um den aktuellen Modus in der Kopfzeile angezeigt.  
  
 [!code-aspx-csharp[DetailsViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanged/CS/detailsviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanged/VB/detailsviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement versucht, zwischen bearbeiten, einfügen und nur-Lese-Modus, jedoch bevor die <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> Eigenschaft aktualisiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> Ereignis wird ausgelöst, wenn eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement versucht, zwischen bearbeiten, einfügen und nur-Lese-Modus, jedoch bevor die <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> Eigenschaft aktualisiert wird. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. die Änderung Modus abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie zum Bestimmen des neuen Modus, um zu bestimmen, ob die Änderung der Benutzer einen Bearbeitungsvorgang abgebrochen wurde oder die Änderung abzubrechen. Den neuen Modus ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A> Eigenschaft. Um zu bestimmen, ob die Änderung der Benutzer einen Bearbeitungsvorgang abgebrochen wurde, verwenden die <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A> Eigenschaft. Sie können die Änderung des Modus "Abbrechen", durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> Ereignis, um die Auslagerung deaktivieren funktioln bei der <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus befindet.  
  
 [!code-aspx-csharp[DetailsViewModeChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanging/CS/detailsviewmodechangingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanging/VB/detailsviewmodechangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Bestimmt, ob das Ereignis für das Webserversteuerelement Serversteuerelementhierarchie der Seite Benutzer Benutzeroberfläche (UI) übergeben wird.</summary>
        <returns>
          <see langword="true" />, wenn das Ereignis abgebrochen wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnBubbleEvent%2A> Methode implementiert die <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Methode, um Ereignisse aus untergeordneten Steuerelementen an die Seitenhierarchie zu übergeben.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Eine <see cref="T:System.EventArgs" />-Klasse, die die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.Control.Init> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DetailsViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.DetailsViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.DetailsViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Für das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.DetailsViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.DetailsViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Für das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.DetailsViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Für das <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.DetailsViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Für das <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.DetailsViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement nicht an ein Datenquellen-Steuerelement gebunden ist, der Pagingvorgang wurde nicht abgebrochen und ein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Das <see cref="T:System.Web.UI.Page" />, das das Ereignis ausgelöst hat.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Legt initialisierten Zustand des datengebundenen Steuerelements fest, bevor das Steuerelement geladen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A> Methode wird verwendet, um die steuern, wenn die Datenbindung innerhalb des Lebenszyklus der Seite auftritt. Dies geschieht durch Festlegen der internen initialisierten Zustands des datengebundenen Steuerelements. Da dem Initialisierung Zustand des Steuerelements festgelegt ist, während die <xref:System.Web.UI.Page.PreLoad> Phase des Lebenszyklus der Seite, die <xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> Ereignishandler wird jedes Mal eine Dateneigenschaft des Steuerelements nach dieser Phase, um zu signalisieren, dass das Steuerelement seine Daten erneut binden muss geändert wird aufgerufen vor dem Rendern.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A> Methode wird überschrieben, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Klasse, um die <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> Eigenschaft, um `true` in Fällen, in denen die HTTP-Anforderung ist ein Postback und Ansichtszustand aktiviert ist jedoch das datengebundene Steuerelement noch nicht gebunden wurde. Dieses Szenario ist mit Steuerelementen wie z. B. <xref:System.Web.UI.WebControls.Wizard> und <xref:System.Web.UI.WebControls.MultiView>, wobei die Sichtbarkeit des Steuerelements zur Laufzeit geändert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode benachrichtigt das Serversteuerelement an alle erforderlichen Vorbereitungsschritte vor dem Speichern der Ansichtszustand und Rendern von Inhalt an. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Klasse.  
  
 Mit der <xref:System.Web.UI.WebControls.DetailsView.OnPreRender%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Datensätze in der Datenquelle ab.</summary>
        <value>Die Anzahl der Datensätze in der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft `null`, `0` wird zurückgegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Index des angezeigten Datensatzes fest.</summary>
        <value>Der nullbasierte Index des Datenelements angezeigt wird, einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement aus der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> -Eigenschaftensatz auf `true`), verwenden die <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> -Eigenschaft können Sie den Index des aktuell angezeigten Datensatzes zu bestimmen. Diese Eigenschaft können auch um den angezeigten Datensatz programmgesteuert zu ändern.  
  
> [!NOTE]
>  Wenn Paging-Funktion aktiviert ist, können Sie diese Eigenschaft auch verwenden, um zu bestimmen, die Seitenzahl des Datensatzes angezeigt; Bedenken Sie jedoch, dass diese Eigenschaft nullbasiert ist.  
  
 Verwenden Sie zum Bestimmen der Gesamtzahl der Elemente in der Datenquelle die <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als <see langword="-1" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Wert von der <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> eigenschaftenänderungen nach einem Pagingvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement löst die <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> Ereignis aus, wenn eine Pagerschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Seite") innerhalb des Steuerelements geklickt wird, aber nachdem der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> Eigenschaft.  
  
 Pagerschaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dieses Ereignis wird häufig zum Synchronisieren einer <xref:System.Web.UI.WebControls.DetailsView> steuern, mit einer <xref:System.Web.UI.WebControls.GridView> Steuerelement oder Festlegen des Verhaltens von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement nach einem Pagingvorgang.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> Ereignis zurückzugebenden der <xref:System.Web.UI.WebControls.DetailsView> auf nur-Lese Modus aus, wenn der Benutzer mit einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Wert von der <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> eigenschaftenänderungen vor einem Pagingvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement löst die <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> Ereignis aus, wenn eine Pagerschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Seite" festgelegt) innerhalb des Steuerelements geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement behandelt den Pagingvorgang. Dadurch können Sie einen Ereignishandler bereitstellen, der eine benutzerdefinierte Routine ausführt, z. B. den Pagingvorgang Abbrechen, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> Eigenschaft.  
  
 Pagerschaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 Ein <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> Objekt übergeben wird, an den Ereignishandler, wodurch Sie den Index der vom Benutzer ausgewählten Seite bestimmen und anzugeben, dass der Pagingvorgang abgebrochen werden soll. Um den Index des vom Benutzer ausgewählten Seite zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A> Eigenschaft. Legen Sie zum Abbrechen des Pagingvorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> Ereignis, um eine Pagingvorgang "Abbrechen".  
  
 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.PagerSettings" /> Objekt, das Sie zum Festlegen der Eigenschaften der Pagerschaltflächen in ermöglicht eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.PagerSettings" /> , mit der Sie zum Festlegen der Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> Eigenschaft zum Steuern von der Einstellung der Pagerzeile in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Pagerzeile wird angezeigt, wenn die Auslagerung-Funktion aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`) und enthält die Steuerelemente, mit denen den Benutzer zu den einzelnen Datensätzen im Steuerelement navigieren können. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.PagerSettings> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.PagerSettings> Objekt (z. B. `PagerSetting-Mode`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerSetting.Mode`). Allgemeine Einstellungen beinhalten die Pagerzeile Anzeigemodus und benutzerdefinierten Text oder Bilder für die Steuerelemente für die Seitennavigation.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> Eigenschaft, um die Eigenschaften der Pagerzeile anzugeben.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die den Stil der Pagerzeile darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> -Eigenschaft zur Steuerung der Darstellung von die Pagerzeile in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Pagerzeile wird angezeigt, wenn die Auslagerung-Funktion aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`) und enthält die Steuerelemente, mit denen den Benutzer auf den verschiedenen Seiten im Steuerelement navigieren können. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `PagerStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> Eigenschaft, um die Schriftart und den Stil Einstellungen für die Pagerzeile anzugeben.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für die Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.ITemplate" /> , die benutzerdefinierte Inhalte für die Pagerzeile enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Pagerzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.DetailsView> steuern, wenn das Pagingfeature aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft auf "true"). Die Pagerzeile enthält Steuerelemente, mit die den Benutzer auf den verschiedenen Seiten im Steuerelement navigieren können. Anstatt die integrierte Pager-Zeile-Benutzeroberfläche (UI) zu verwenden, definieren Sie Ihre eigene Benutzeroberfläche mithilfe der <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für die Pagerzeile anzugeben, platzieren Sie zuerst `<PagerTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<PagerTemplate>` Tags. Verwenden Sie zum Steuern der Darstellung der Pagerzeile die <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> zu eine benutzerdefinierten Pagerzeile zu erstellenden Eigenschaft.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt.</param>
        <summary>Bindet die angegebene Datenquelle auf die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement an die angegebene Datenquelle an das Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richtet die Steuerelementhierarchie, der die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> in der Steuerelementhierarchie nach oben festzulegenden Steuerelements die <xref:System.Web.UI.WebControls.DetailsView> zu steuern, bevor das Steuerelement gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument an den Ereignishandler übergeben werden soll.</param>
        <summary>Erstellt die Argumente für den Rückrufhandler in der <see cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" /> Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent%2A> Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement erstellt, die Argumente für den Rückrufhandler in der <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Ereignisargument aus dem erstellt eine <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> für die Ereignisse, die ausgelöst werden.</param>
        <summary>Löst die entsprechenden Ereignisse für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> steuern, wenn es an den Server zurückgesendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite ruft die <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> Methode, wenn ein Postbackereignis, das in diesem Fall löst die entsprechenden Ereignisse für ein <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Dieser Aufruf erfolgt im Lebenszyklus Seite nach dem Laden und die Änderung Benachrichtigung abgeschlossen sind, aber bevor Prerendering auftritt. Diese Methode wurde implementiert, um das Erstellen einer <xref:System.Web.UI.WebControls.CommandEventArgs> Objekt für die Ereignisse, die ausgelöst werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" /> , der den Ausgabestream zum Rendern auf dem Client enthält.</param>
        <summary>Zeigt die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement auf dem Client unter Verwendung des angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.Render%2A> Methode wird verwendet, um den Inhalt des Serversteuerelements an der mit dem angegebenen Clientbrowser gerendert <xref:System.Web.UI.HtmlTextWriter> Objekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> Objekte, die darstellen, die die Datenzeilen in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRowCollection" /> , enthält die Datenzeilen in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> -Eigenschaft (Auflistung) wird verwendet, um speichern die Datenzeilen in einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement füllt automatisch die <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> Sammlung durch Erstellen einer <xref:System.Web.UI.WebControls.DetailsViewRow> Objekt für jeden Datensatz in der Datenquelle, und klicken Sie dann auf die Auflistung hinzufügen des Objekts. Diese Eigenschaft wird häufig verwendet, um auf eine bestimmte Zeile im Steuerelement zuzugreifen oder durchlaufen die gesamte Auflistung von Zeilen.  
  
> [!NOTE]
>  Nur Datenzeilen werden gespeichert, der <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> Auflistung. Die <xref:System.Web.UI.WebControls.DetailsViewRow> Objekte, die die Header, Footer und Pager Zeilen sind nicht in der Auflistung enthalten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> -Eigenschaft auf eine Datenzeile in einer <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Datenzeile wird verwendet, um das Abrufen des Werts eines Felds aus dem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator RowsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Objekt, implementiert die <see cref="T:System.Web.UI.IAutoFieldGenerator" /> Schnittstelle, um Zeilen in der Ansicht automatisch zu füllen.</summary>
        <value>Ein Objekt, das Implementieren der <see cref="T:System.Web.UI.IAutoFieldGenerator" /> Schnittstelle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> -Objekt, das Ihnen ermöglicht, legen Sie die Darstellung der Datenzeilen in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> , die den Stil der Datenzeilen in darstellt ein <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> -Eigenschaft zur Steuerung der Darstellung von Datenzeilen in eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Wenn die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> -Eigenschaft ebenfalls festgelegt wird, werden die Datenzeilen abwechselnd angezeigt der <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> Einstellungen und die <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> Einstellungen. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `RowStyle-ForeColor`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `RowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> -Eigenschaft an die Schriftart und den Stil Einstellungen für die Zeilen in der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der Eigenschaften in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement beibehalten werden, selbst wenn die <see cref="P:System.Web.UI.Control.EnableViewState" /> -Eigenschaftensatz auf <see langword="false" />.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück. Wenn dem Steuerelement kein Ansichtszustand zugeordnet ist, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Status der Eigenschaften im Speichern der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement beibehalten werden, selbst wenn die <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.DetailsView" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.SaveViewState%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement den Zustand des Steuerelements zu speichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüsselwert der Daten des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Schlüsselwert für die Daten des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> -Eigenschaft zum Bestimmen der Schlüsselwert der Daten für den aktuellen Datensatz. Die tatsächlichen abzurufenden <xref:System.Web.UI.WebControls.DataKey?displayProperty=nameWithType> Objekt, das Datenschlüssel für den Datensatz darstellt, der <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> Eigenschaft.  
  
 Diese Eigenschaft ist die Standardeigenschaft, die eine <xref:System.Web.UI.WebControls.ControlParameter> -Objekt zur Laufzeit gebunden wird. Weitere Informationen finden Sie unter <xref:System.Web.UI.ControlValuePropertyAttribute>, <xref:System.Web.UI.WebControls.ControlParameter>, und [Verwenden von Parametern mit Steuerelementen für Datenquellen für das Filtern](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> -Eigenschaft zum Bestimmen der Schlüsselwert der Daten für den aktuellen Datensatz.  
  
 [!code-aspx-csharp[DetailsViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSelectedValue/CS/detailsviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSelectedValue/VB/detailsviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der festzulegende Indexwert.</param>
        <summary>Legt den Index der aktuell angezeigten Seite in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finden Sie unter der Methode <see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />.</summary>
        <returns>Die Ergebnisse des Rückrufs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement implementiert die <xref:System.Web.UI.ICallbackEventHandler> Schnittstelle und verwendet die <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> zum Abrufen von Daten und die <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> Methode, um die abgerufenen Daten an das Steuerelement zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Die Ereignisargumente.</param>
        <summary>Löst das Rückrufereignis mit den angegebenen Argumenten aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />.</summary>
        <value>Gibt die <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" /> Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.DetailsView> Instanz umgewandelt wird die <xref:System.Web.UI.IDataItemContainer> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Gibt <see langword="0" />zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.DetailsView> Instanz umgewandelt wird die <xref:System.Web.UI.IDataItemContainer> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Eine Zeichenfolge, die ein optionales Ereignisargument für die Übergabe an den Ereignishandler darstellt.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.DetailsView> Instanz umgewandelt wird die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Schaltflächen-Steuerelement, das die Seite an den Server zurückgesendet.</param>
        <param name="argument">Das Argument für die Rückrufereignis.</param>
        <summary>Erstellt das Rückrufskript für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <returns>Die Rückrufskripts für die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement an die Rückrufskript zu generieren. Wenn die <xref:System.Web.UI.WebControls.DetailsView> Rendern Steuerelements nicht Clientskript, oder, wenn die `argument` Parameter ist `null` oder eine leere Zeichenfolge (""), gibt diese Methode `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />.</summary>
        <value>Ein Array, das die Namen der primären Schlüsselfelder der Elemente enthält, die in einem datengebundenen Steuerelement angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataMember" />.</summary>
        <value>Der Name der Liste der Daten, die die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement bindet an.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSource" />.</summary>
        <value>Ein Objekt, das die Datenquelle, aus der darstellt die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement seine Daten abruft. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />.</summary>
        <value>Die ID des Datenquellen-Steuerelements, das die Liste der Daten enthält die Elemente an, die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement abgerufen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />.</summary>
        <value>Ein Objekt, das die Liste der Daten enthält die Elemente an, die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement abgerufen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />.</summary>
        <value>Ein Objekt, das die Daten-Schlüssel-Wert der Zeile in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.Mode" />.</summary>
        <value>Der aktuelle Modus des der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Web.UI.WebControls.DetailsView> kann festgelegt werden, um `ReadOnly`, `Edit` oder `Delete`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieser Eigenschaft finden Sie in <see cref="P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />.</summary>
        <value>Das Steuerelement, das automatisch, die Spalten für generiert eine <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.DetailsView>-Instanz in eine <xref:System.Web.UI.WebControls.IFieldControl>-Schnittstelle umgewandelt wird.  
  
 Diese Eigenschaft dient zum automatischen Generieren von Spalten für eine <xref:System.Web.UI.WebControls.DetailsView> Steuerelement, das ASP.NET Dynamic Data-Funktionen verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Steuerelement, das clientseitige Postbackereignis generiert.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />.</summary>
        <returns>Ein <see cref="T:System.Web.UI.PostBackOptions" /> mit den erforderlichen Angaben für <see cref="Overload:System.Web.UI.Page.GetPostBackEventReference" /> So erstellen Sie ein gültiges Skript, das bei der Ausführung auf dem Client ein Client initiiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.DetailsView> Instanz umgewandelt wird die <xref:System.Web.UI.IPostBackEventHandler> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buttonControl" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="buttonControl" />bewirkt die Validierung in der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement und versucht, die gleiche <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement ein postback Ziel.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.DetailsView" />-Steuerelement ab.</summary>
        <value>Wenn <see cref="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" /> ist <see langword="true" />, gibt diese Eigenschaft <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />. Andernfalls wird zurückgegeben <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.DetailsView.TagKey%2A> Eigenschaft ermöglicht den Ausgabestream zum Schreiben des entsprechenden HTML-Markup für die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können diese Eigenschaft, um anzugeben, welcher überschreiben <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wert für das abgeleitete Steuerelement verwenden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> -Objekt, das die oberste Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> , die die obere Pagerzeile in darstellt, die <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (durch Festlegen der <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> Eigenschaft `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement. Die Pagerzeile enthält Steuerelemente, die ermöglicht dem Benutzer das Navigieren zu anderen Datensätzen und oben, unten oder sowohl oben als und unteren Rand des Steuerelements angezeigt werden können. Verwenden der <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.DetailsViewRow> -Objekt, das die oberste Pagerzeile in die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelements erstellt die unteren Pagerzeile in die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die oberste Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Jede Änderung an der <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.DetailsView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> Eigenschaft, um die oberste Pagerzeile der Zugriff auf die <xref:System.Web.UI.WebControls.DetailsView> während steuern die <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> Ereignis. Zwei <xref:System.Web.UI.WebControls.Label> Steuerelemente in der benutzerdefinierten Pagerzeile werden dann mit die aktuelle Seitenzahl und Gesamtseitenzahl aktualisiert.  
  
 [!code-aspx-csharp[DetailsViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewTopPagerRow/CS/detailsviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[DetailsViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewTopPagerRow/VB/detailsviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kennzeichnet den Anfangspunkt, um nachzuverfolgen und zu speichern, Änderungen am Ansichtszustand zum Starten der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird überschrieben, um den Ausgangspunkt nachzuverfolgen und zu speichern von Änderungen an das Steuerelement als Teil der Ansichtszustand des Steuerelements zu beginnen zu kennzeichnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />um die Validierung ausführen, wenn die Methode aufgerufen wird; andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert den aktuellen Datensatz in der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, verwenden Sie die <xref:System.Web.UI.WebControls.DetailsView.UpdateItem%2A> Methode, um den aktuellen Datensatz in der Datenquelle programmgesteuert aktualisieren. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des aktualisieren müssen die <xref:System.Web.UI.WebControls.DetailsView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement muss in den Bearbeitungsmodus sein, wenn diese Methode aufgerufen, andernfalls wird ein <xref:System.Web.HttpException> Ausnahme wird ausgelöst.  
  
 Um anzugeben, ob die seitenüberprüfung vor dem Updatevorgang ausgeführt wird, verwenden die `causesValidation` Parameter. Aufrufen dieser Methode löst auch der <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> und <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> Ereignisse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn die <see cref="T:System.Web.UI.WebControls.DetailsView" /> -Steuerelement ist nicht im Bearbeitungsmodus befindet.  
  
 \- oder –  
  
 Die <see cref="T:System.Web.UI.DataSourceView" /> zugeordneten der <see cref="T:System.Web.UI.WebControls.DetailsView" /> Steuerelement <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Updatevorgang ausführt.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Updatevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
