<Type Name="ListView" FullName="System.Web.UI.WebControls.ListView">
  <TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IDataKeysControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IDataKeysControl, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListView" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPageableItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt die Werte einer Datenquelle mithilfe benutzerdefinierter Vorlagen an. Die <see cref="T:System.Web.UI.WebControls.ListView" /> -Steuerelement ermöglicht Benutzern das auswählen, sortieren, löschen, bearbeiten und Einfügen von Datensätzen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Vorlagen](#templates)  
  
-   [Binden an eine Datenquelle](#binding_to_a_data_source)  
  
-   [Datenvorgänge](#data_operations)  
  
-   [Ereignisse](#Events)  
  
-   [Deklarationssyntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.ListView> Steuerelement wird verwendet, um die Werte aus einer Datenquelle anzuzeigen. Der Typ ähnelt dem <xref:System.Web.UI.WebControls.GridView> zu steuern, mit dem Unterschied, dass Daten mithilfe benutzerdefinierter Vorlagen anstelle von Zeilenfeldern angezeigt. Erstellen eigene Vorlagen, erhalten Sie mehr Flexibilität bei der Steuerung, wie die Daten angezeigt werden.  
  
 Visual Studio-Projekt mit Quellcode ist zu diesem Thema steht zur Verfügung: [herunterladen](http://go.microsoft.com/fwlink/?LinkId=199759).  
  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement unterstützt die folgenden Funktionen:  
  
-   Unterstützung für die Bindung wie z. B. Datenquellensteuerelemente <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.LinqDataSource>, und <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Anpassbare Darstellung durch benutzerdefinierte Vorlagen und Formatvorlagen.  
  
-   Integrierte Sortierfunktionen.  
  
-   Integrierte aktualisieren und Löschen von Funktionen.  
  
-   Fügen Sie integrierte Funktionen.  
  
-   Unterstützung für Pagingfunktionen mithilfe einer <xref:System.Web.UI.WebControls.DataPager> Steuerelement.  
  
-   Integrierte Element Auswahlfunktionen.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.ListView> -Objektmodell für dynamisch festlegen von Eigenschaften, Ereignisse zu behandeln und so weiter.  
  
-   Mehrfachen Schlüsselfelder.  
  
 Informationen über andere datengebundene Steuerelemente, die in ASP.NET verfügbar sind, finden Sie unter [datengebundene Webserversteuerelemente](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96).  
  
<a name="templates"></a>   
## <a name="templates"></a>Vorlagen  
 In der Reihenfolge für die <xref:System.Web.UI.WebControls.ListView> steuern, um Inhalt anzuzeigen, müssen Sie Vorlagen für die verschiedenen Teile des Steuerelements erstellen. Die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> ist erforderlich. Alle anderen Vorlagen sind optional. Die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Eigenschaft ist nicht erforderlich.  
  
 Allerdings müssen Sie eine Vorlage für den Modus erstellen, in denen das Steuerelement so konfiguriert ist. Z. B. eine <xref:System.Web.UI.WebControls.ListView> Steuerelement unterstützt das Einfügen von Datensätzen müssen ein <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage definiert. Die folgende Tabelle enthält die Vorlagen, die Sie, für erstellen können die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
|Typ "Template"|Beschreibung|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>|Die Stammvorlage, die ein Container-Objekt, z. B. definiert eine `table`, `div`, oder `span` -Element, das der Inhalt definiert, die enthalten ist das <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> oder <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage. Er enthält möglicherweise auch eine <xref:System.Web.UI.WebControls.DataPager> Objekt.|  
|<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>|Definiert den Inhalt von datengebundenen für einzelne Elemente angezeigt.|  
|<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>|Definiert den Inhalt, um zwischen den einzelnen Elementen zu rendern.|  
|<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>|Definiert ein Containerobjekt, z. B. eine Tabellenzeile (`tr`), `div`, oder `span` -Element, das den Inhalt definiert, die enthält die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> und <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> Vorlagen. Die Anzahl der Elemente, die in einer Gruppe angezeigt werden gemäß der <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>|Definiert den Inhalt, die zwischen Gruppen von Elementen dargestellt.|  
|<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>|Definiert den Inhalt für ein leeres gerendert Element eine <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage verwendet wird. Z. B. wenn die <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft auf 5 festgelegt ist, und die Gesamtanzahl der aus der Datenquelle zurückgegebenen Elemente gleich 8 ist die letzte Gruppe von Daten, die angezeigt werden, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement enthält drei Elemente entsprechend den Angaben von der <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage und zwei Elemente nach den Angaben von der <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> Vorlage.|  
|<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>|Definiert den Inhalt zu rendern, wenn die Datenquelle keine Daten zurückgibt.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>|Definiert den Inhalt für das ausgewählte Datenelement, das ausgewählte Element von anderen Elementen zu unterscheiden gerendert.|  
|<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>|Definiert den Inhalt für abwechselnde Elemente unterscheiden zwischen aufeinander folgenden Elementen erleichtern gerendert.|  
|<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>|Definiert den Inhalt rendern, sofern ein Element bearbeitet wird. Die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage wird gerendert, anstelle von der <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage für das Datenelement, das gerade bearbeitet wird.|  
|<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>|Definiert den Inhalt, um das Einfügen eines Elements gerendert. Die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage wird gerendert, anstelle von einer <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage entweder am Anfang oder am Ende der Elemente, die vom angezeigt werden die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Sie können angeben, wo der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage mit gerendert wird der <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> Eigenschaft des der <xref:System.Web.UI.WebControls.ListView> Steuerelement.|  
  
 Den Wert eines Felds in einer Vorlage angezeigt, wie z. B. <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>, Sie verwenden einen Datenbindungsausdruck. Weitere Informationen zu Datenbindungsausdrücke, finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Binden von Eingabesteuerelemente in der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> und <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlagen auf Felder einer Datenquelle, können Sie bidirektionale Bindungsausdrücke verwenden. Dies ermöglicht die <xref:System.Web.UI.WebControls.ListView> Steuerelement automatisch Extrahieren der Werte des Eingabesteuerelement für ein Update oder insert-Vorgang. Bidirektionale Bindungsausdrücken können auch Eingabesteuerelemente in einer <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> automatisch auf die ursprünglichen Werte des Felds angezeigt. Weitere Informationen zu Ausdrücken bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_a_data_source"></a>   
## <a name="binding-to-a-data-source"></a>Binden an eine Datenquelle  
 Sie binden die <xref:System.Web.UI.WebControls.ListView> Steuerelement an ein Datenquellen-Steuerelement (z. B. die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement oder <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelement) oder mit einer Data Source-Sammlung, die implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Schnittstelle, wie <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, oder anderen Auflistungstypen. Verwenden Sie eine der folgenden Methoden zum Binden der <xref:System.Web.UI.WebControls.ListView> Steuerelement in den entsprechenden Datenquellentyp:  
  
-   Legen Sie die Bindung an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListView> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuerelements. Die <xref:System.Web.UI.WebControls.ListView> Steuerelement automatisch an das angegebene Datenquellensteuerelement gebunden und Nutzen der Datenquelle Zugriffssteuerungsfunktionen sortieren, einfügen, aktualisieren, löschen und Pagingfunktionen ausführen. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
-   An eine Datenquelle binden, implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Netzwerkschnittstelle, die programmgesteuert festgelegt die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListView> die Steuerung an die Datenquelle, und rufen Sie anschließend die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode. Wenn Sie diese Technik verwenden die <xref:System.Web.UI.WebControls.ListView> Steuerelement bietet keine integrierte sortieren, aktualisieren, löschen und Pagingfunktionen. Sie müssen diese Funktionalität bereit, mit dem entsprechenden Ereignis.  
  
 Weitere Informationen zur Datenbindung finden Sie unter [ASP.NET Data Access Content Map](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement anzuzeigende Benutzereingaben, die möglicherweise böswillige Clientskripts umfasst verwendet werden kann. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet wird, bevor Sie ihn in der Anwendung anzeigen. Es wird dringend empfohlen, dass Werte HTML-codierte nach Möglichkeit sein, bevor sie dieses Steuerelement angezeigt werden. ASP.NET verfügt über eine eingabeanforderung Validierungsfunktion zum Blockieren von Skript und HTML in Benutzereingaben. Validierungssteuerelemente für Server können auch um eine Benutzereingabe zu überprüfen. Weitere Informationen finden Sie unter [Einführung in die Validierungssteuerelemente](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Datenvorgänge  
 Wenn die <xref:System.Web.UI.WebControls.ListView> Steuerelement an ein Datenquellen-Steuerelement gebunden ist die <xref:System.Web.UI.WebControls.ListView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen und ermöglichen Sie automatische Sortierung, INSERT-, Update- und Funktionalität zu löschen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.ListView> Steuerelement bieten Unterstützung für Sortierung, einfügen, aktualisieren und Löschen mit anderen Typen von Datenquellen. Um diese Vorgänge zu implementieren, müssen Sie jedoch Code in einem entsprechenden Ereignishandler erstellen.  
  
 Da die <xref:System.Web.UI.WebControls.ListView> -Steuerelement verwendet Vorlagen, er bietet eine Möglichkeit zum automatischen Generieren von Schaltflächen bereit, führen Sie Update, Delete, Insert, sortieren, oder wählen Sie die Vorgänge. Sie müssen diese Schaltflächen manuell in die entsprechende Vorlage einschließen. Die <xref:System.Web.UI.WebControls.ListView> Steuerelement erkennt bestimmte Schaltflächen, deren <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf einen bestimmten Wert festgelegt ist. Die folgende Tabelle enthält die Schaltflächen, die die <xref:System.Web.UI.WebControls.ListView> Steuerelement erkanntes und ihre Funktionen.  
  
|Schaltfläche|CommandName-Wert|Beschreibung|  
|------------|-----------------------|-----------------|  
|Abbrechen|"Cancel"|Bricht einen bearbeiten oder Insert-Vorgang ab. Löst das <xref:System.Web.UI.WebControls.ListView.ItemCanceling>-Ereignis aus.|  
|Löschen|"Löschen"|Löscht den aktuellen Datensatz aus der Datenquelle an. Löst das <xref:System.Web.UI.WebControls.ListView.ItemDeleted> und <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignisse.|  
|Auswählen|"Wählen Sie"|Legt die <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft, um die <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> Eigenschaftswert für das Element. Rendert die <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> und <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignisse.|  
|Bearbeiten|"Bearbeiten"|Legt das Element im Bearbeitungsmodus befindet. Rendert die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.ItemEditing>-Ereignis aus.|  
|Insert|"Einfügen"|Fügt die gebundenen Werte aus der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage in der Datenquelle. Löst das <xref:System.Web.UI.WebControls.ListView.ItemInserting> und <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignisse.|  
|Aktualisieren|"Update"|Aktualisiert den aktuellen Datensatz in der Datenquelle mit den gebundenen Werten aus der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage. Löst das <xref:System.Web.UI.WebControls.ListView.ItemUpdating> und <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignisse.|  
|Sortieren|"Sortieren"|Sortiert die Spalten aufgeführt, die der `CommandArgument` -Eigenschaft der Schaltfläche. Löst das <xref:System.Web.UI.WebControls.ListView.Sorting> und <xref:System.Web.UI.WebControls.ListView.Sorted> Ereignisse.|  
  
 Im Gegensatz zu der Schaltfläche "löschen" (Dadurch werden das aktuelle Datenelement sofort gelöscht wird), wenn auf die Schaltfläche "Bearbeiten" geklickt wird, die <xref:System.Web.UI.WebControls.ListView> -Steuerelement zeigt das aktuelle Element im Bearbeitungsmodus befindet. In den Bearbeitungsmodus wechseln, den Inhalt, der in enthalten ist die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Eigenschaft wird für das aktuelle Datenelement angezeigt. In der Regel wird die Schaltfläche "Bearbeiten" in der Bearbeitungselementvorlage, ein Update mit einer Schaltfläche "Abbrechen" ersetzt. Eingabesteuerelemente, die für den Datentyp des Felds geeignet sind (z. B. eine <xref:System.Web.UI.WebControls.TextBox> oder <xref:System.Web.UI.WebControls.CheckBox> Steuerelement) in der Regel auch Anzeigen der Wert eines Felds für einen Benutzer zu ändern. Klicken auf die Schaltfläche "Aktualisieren" aktualisiert den Datensatz in der Datenquelle, und klicken auf die Schaltfläche "Abbrechen" bricht den Bearbeitungsvorgang ab.  
  
 Die Einfügefunktionalität ist aktiviert. wenn der <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem> oder <xref:System.Web.UI.WebControls.InsertItemPosition.LastItem>. Diese Eigenschaft definiert, wohin die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage für das einzufügende Element gerendert wird. Die Insert-Elementvorlage enthält in der Regel ein INSERT- und eine Schaltfläche "Abbrechen", und leere Eingabesteuerelemente für Benutzer zur Eingabe der Werte für den neuen Eintrag angezeigt werden. Auf die Schaltfläche "Einfügen" klicken, wird der Datensatz in der Datenquelle eingefügt, und klicken auf die Schaltfläche "Abbrechen" löscht alle Felder.  
  
### <a name="sorting"></a>Sortieren  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement ermöglicht Benutzern das Sortieren der Elemente, indem Sie auf die Sortierschaltfläche. Sortierfunktion wird definiert, der `CommandArgument` -Eigenschaft der Schaltfläche mit den Spalten sortiert werden.  
  
### <a name="paging"></a>Paging  
 Anstatt alle Datensätze aus der Datenquelle zur gleichen Zeit, die <xref:System.Web.UI.WebControls.ListView> Steuerelement kann die Datensätze in Seiten geteilt. Zum Aktivieren von Paging Zuordnen einer <xref:System.Web.UI.WebControls.DataPager> steuern, mit der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Fügen Sie dann eine <xref:System.Web.UI.WebControls.DataPager> -Steuerelement innerhalb der <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage. Alternativ können Sie Wenn der <xref:System.Web.UI.WebControls.DataPager> Steuerelement liegt außerhalb der <xref:System.Web.UI.WebControls.ListView> steuern, legen Sie die <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> Eigenschaft, um die <xref:System.Web.UI.Control.ID%2A> von der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
<a name="Events"></a>   
## <a name="events"></a>Ereignisse  
 Die folgende Tabelle enthält die Ereignisse, die von unterstützt werden die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
|Ereignis|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.ItemCanceling>|Tritt auf, wenn die Schaltfläche "Abbrechen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Abbrechen") geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement bricht den Vorgang zum Einfügen oder bearbeiten. Dieses Ereignis wird häufig verwendet, um den Vorgang "Abbrechen" zu beenden.|  
|<xref:System.Web.UI.WebControls.ListView.ItemCommand>|Tritt auf, wenn eine Schaltfläche, in geklickt wird der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Ereignis wird häufig verwendet, um eine benutzerdefinierte Aufgabe auszuführen, wenn im Steuerelement geklickt wird.|  
|<xref:System.Web.UI.WebControls.ListView.ItemCreated>|Tritt auf, wenn ein neues Element, in erstellt wird der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Ereignis wird häufig verwendet, um den Inhalt eines Elements ändern, wenn das Element erstellt wird.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDataBound>|Tritt auf, wenn ein Datenelement, um Daten in gebunden ist die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Ereignis wird häufig verwendet, um den Inhalt eines Elements ändern, wenn das Element an Daten gebunden ist.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleted>|Tritt auf, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Löschen" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleting>|Tritt auf, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Löschen" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um zu bestätigen, oder brechen Sie den Löschvorgang.|  
|<xref:System.Web.UI.WebControls.ListView.ItemEditing>|Tritt auf, wenn eine Schaltfläche "Bearbeiten" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Bearbeiten" festgelegt) geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement in den Bearbeitungsmodus wechselt. Dieses Ereignis wird häufig verwendet, um den Vorgang abzubrechen.|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserted>|Tritt auf, wenn eine Schaltfläche Einfügen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Einfügen" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement fügt die neuen Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Einfügevorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserting>|Tritt auf, wenn eine Insert-Schaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Einfügen" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, aber vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement einfügen des Datensatzes. Dieses Ereignis wird häufig verwendet, brechen Sie den Einfügevorgang oder ändern die Werte des neuen Elements zu überprüfen.|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdated>|Tritt auf, wenn eine Schaltfläche "Aktualisieren" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Update" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Updatevorgangs überprüfen.|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdating>|Tritt auf, wenn eine Schaltfläche "Aktualisieren" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Update" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um den Aktualisierungsvorgang abzubrechen oder zu ändern oder die Werte des bearbeiteten Elements zu überprüfen.|  
|<xref:System.Web.UI.WebControls.ListView.LayoutCreated>|Tritt auf, wenn die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage wird erstellt, einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, nachdem die Vorlage erstellt wird.|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>|Tritt auf, wenn die Seiteneigenschaften geändert werden, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte fest.|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>|Tritt auf, wenn die Datenseiten Eigenschaften geändert werden, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte fest.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>|Tritt auf, wenn eine Schaltfläche auswählen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Select" festgelegt) geklickt wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. Dieses Ereignis wird häufig verwendet, um eine benutzerdefinierte Aufgabe auszuführen, nachdem ein Element im Steuerelement ausgewählt ist.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>|Tritt auf, wenn eine Schaltfläche auswählen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Select" festgelegt) geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. Dieses Ereignis wird häufig verwendet, um die select-Vorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.ListView.Sorted>|Tritt auf, wenn eine Sortierschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Sort" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. Dieses Ereignis wird normalerweise verwendet, um einen benutzerdefinierten Task auszuführen, nachdem ein Benutzer auf eine Sortierschaltfläche klickt, und die Daten sortiert wurden.|  
|<xref:System.Web.UI.WebControls.ListView.Sorting>|Tritt auf, wenn eine Sortierschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Sort" festgelegt) geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. Dieses Ereignis wird häufig verwendet, den Sortiervorgang abbrechen oder eine benutzerdefinierte Sortierroutine auszuführen.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:ListView  
    ConvertEmptyStringToNull="True|False"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    GroupPlaceholderID="string"  
    GroupItemCount="integer"  
    ID="string"  
    InsertItemPosition="None|FirstItem|LastItem"  
    ItemPlaceholderID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCanceling="ItemCanceling event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemEditing="ItemEditing event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLayoutCreated="LayoutCreated event handler"  
    OnLoad="Load event handler"  
    OnPagePropertiesChanged="PagePropertiesChanged event handler"  
    OnPagePropertiesChanging="PagePropertiesChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SelectedIndex="integer"  
    SkinID="string"  
    Style="string"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <EmptyItemTemplate>  
            <!-- child controls -->  
        </EmptyItemTemplate>  
        <GroupSeparatorTemplate>  
            <!-- child controls -->  
        </GroupSeparatorTemplate>  
        <GroupTemplate>  
            <!-- child controls -->  
        </GroupTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <ItemSeparatorTemplate>  
            <!-- child controls -->  
        </ItemSeparatorTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <LayoutTemplate>  
                <!-- child controls -->  
        </LayoutTemplate>  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
</asp:ListView>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView> -Steuerelement zum Anzeigen von Datensätzen aus einer Datenbank mithilfe einer HTML-Tabelle. Die Werte werden abgerufen, indem Sie mit einem <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/CS/ListViewSimpleCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/VB/ListViewSimpleVB.aspx#1)]
  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView> -Steuerelement zum Anzeigen von Werten in einem Flusslayout mithilfe der `div` Element. Die Werte werden abgerufen, indem Sie mit einem <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/CS/ListViewFlowLayoutCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/VB/ListViewFlowLayoutVB.aspx#1)]
  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement einfügen, löschen und Aktualisieren von Datensätzen.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/CS/ListViewEditCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/VB/ListViewEditVB.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ListView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.ListView> Klasse. Dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.ListView> zu einer Seite zu steuern, erstellen Sie ein neues <xref:System.Web.UI.WebControls.ListView> Objekt. Legen Sie die Eigenschaften, und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung eines Containers zu steuern, wie z. B. eine <xref:System.Web.UI.WebControls.PlaceHolder> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.String.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.AccessKey%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControlToContainer">
      <MemberSignature Language="C#" Value="protected virtual void AddControlToContainer (System.Web.UI.Control control, System.Web.UI.Control container, int addLocation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddControlToContainer(class System.Web.UI.Control control, class System.Web.UI.Control container, int32 addLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="addLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Ein Objekt, das die zu dem Container hinzugefügt werden Steuerelemente enthält.</param>
        <param name="container">Der Container, die verwendet wird, um die untergeordneten Steuerelemente zu speichern.</param>
        <param name="addLocation">Die Position in der steuerelementeauflistung auf dem das untergeordnete Steuerelement hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene Steuerelement dem angegebenen Container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.AddControlToContainer%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement hinzufügen des Steuerelements auf den angegebenen Container.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für die abwechselnde Datenelement in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für die abwechselnde Datenelement in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> Eigenschaft, um eine benutzerdefinierte Benutzeroberfläche (UI) für das abwechselnde Datenelement zu definieren. Die <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> Vorlage enthält in der Regel die gleichen Steuerelemente und den Inhalt als die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage Elemente jedoch mit einer anderen Darstellung zu unterscheiden.  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie ein `AlternatingItemTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Fügen Sie Steuerelemente und Inhalt zwischen den öffnenden und schließenden `<AlternatingItemTemplate>` Tags. Um die Feldwerte aus der Datenquelle anzuzeigen, verwenden Sie einen Datenbindungsausdruck. Weitere Informationen finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Zum Erstellen von Schaltflächen, die automatisch auswählen, löschen und Bearbeiten von Vorgängen, fügen Sie der Vorlage ein Schaltflächen-Steuerelement hinzu. Legen Sie seine <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltflächentyp|CommandName-Wert|  
|-----------------|-----------------------|  
|Löschen|"Löschen"|  
|Bearbeiten|"Bearbeiten"|  
|Auswählen|"Wählen Sie"|  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> Vorlage zum Definieren des Stils für abwechselnde Elemente in einem <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/CS/ListViewAlternatingItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/VB/ListViewAlternatingItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.BackColor%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.BorderColor%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.BorderStyle%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.BorderWidth%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen des Datenfelds, dessen Wert zur eindeutigen Identifizierung jeder Datenzeile dient, ein <see cref="T:System.Web.UI.WebControls.ListView" /> steuern, wann die <see cref="P:System.Web.UI.Control.ClientIDMode" /> -Eigenschaftensatz auf <see cref="F:System.Web.UI.ClientIDMode.Predictable" />.</summary>
        <value>Der Name des Datenfelds, dessen Wert zur eindeutigen Identifizierung jeder Instanz von dient, einem <see cref="T:System.Web.UI.WebControls.ListView" /> steuern, wenn ASP.NET generiert die <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu verhindern, dass Namenskonflikte, wenn mehrere Instanzen eines Steuerelements in mehreren Zeilen gerendert werden eine <xref:System.Web.UI.WebControls.ListView> Steuerelement, ASP.NET generiert einen eindeutigen <xref:System.Web.UI.Control.ClientID%2A> Wert für jede Instanz des Steuerelements. Sie angeben, wie die <xref:System.Web.UI.Control.ClientID%2A> Wert wird generiert, durch Festlegen der <xref:System.Web.UI.Control.ClientIDMode%2A> Eigenschaft. Wenn Sie festlegen, die <xref:System.Web.UI.Control.ClientIDMode%2A> Eigenschaft <xref:System.Web.UI.ClientIDMode.Predictable>, generiert ASP.NET die <xref:System.Web.UI.Control.ClientID%2A> durch Anhängen eines Suffixes an, die im angegebenen Feld "Daten" abgeleitet ist <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>. Wenn <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> ist nicht festgelegt ist, wird das Suffix ist eine laufende Nummer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Datenwerte, die verwendet werden, um jede Instanz eines datengebundenen Steuerelements eindeutig zu identifizieren, wenn ASP.NET generiert die <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</summary>
        <value>Die Datenwerte, die verwendet werden, um jede Instanz eines datengebundenen Steuerelements eindeutig zu identifizieren, wenn ASP.NET generiert die <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Web.UI.ControlCollection" /> steuert-Objekt, das untergeordnete Element darstellt, der die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die Auflistung der untergeordneten Steuerelemente für die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Controls%2A> Eigenschaft überschreibt die basisimplementierung. Dadurch wird sichergestellt, die alle untergeordneten Steuerelemente, bevor Sie die Eigenschaft gibt erstellt wurden die <xref:System.Web.UI.ControlCollection> Objekt.  
  
 Die <xref:System.Web.UI.Control.Controls%2A> Eigenschaft können Sie die Instanz der programmgesteuerten Zugriff auf die <xref:System.Web.UI.ControlCollection> -Klasse für die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Sie können Steuerelemente zur Auflistung hinzufügen, entfernen Sie Steuerelemente aus der Auflistung oder die Serversteuerelemente in der Auflistung durchlaufen.  
  
 Auf ein bestimmtes untergeordnetes Steuerelement von der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, können Sie die <xref:System.Web.UI.Control.FindControl%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob bei der Aktualisierung des Datenfelds in der Datenquelle Werte, die leere Zeichenfolgen ("") darstellen, in NULL-Werte konvertiert werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn leere Zeichenfolgenwerte automatisch in NULL-Werte konvertiert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Parameter> Objekt der Datenquelle zu steuern, die die <xref:System.Web.UI.WebControls.ListView> gebunden ist, verfügt ebenfalls über eine Eigenschaft namens <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>. Diese Eigenschaft wird die gleiche Funktion. Stellen Sie sicher, dass beide Eigenschaften entsprechend festgelegt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die Steuerelementhierarchie, die verwendet wird, zum Rendern der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement, basierend auf den Werten, die im Ansichtszustand gespeichert sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateChildControls> Methode ist eine Hilfsmethode, die vom verwendet die <xref:System.Web.UI.WebControls.ListView> Klasse, um die Hierarchie der Steuerelemente zu erstellen. Diese Überladung der Methode wird die Steuerelementhierarchie anhand der Werte aus dem Ansichtszustand, statt direkt aus der Datenquelle erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Ein Objekt, das für die Datenquelle enthält die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</param>
        <param name="dataBinding">
          <see langword="true" />um anzugeben, dass die untergeordneten Steuerelemente an Daten gebunden sind. <see langword="false" /> um anzugeben, dass das Steuerelement selbst aus dem Ansichtszustand während eines Postbacks neu erstellt werden.</param>
        <summary>Erstellt die Steuerelementhierarchie, die verwendet wird, zum Rendern der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement unter Verwendung der angegebenen Datenquelle.</summary>
        <returns>Die Anzahl der Elemente, die erstellt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateChildControls%2A> Methode wird verwendet, um die Steuerelementhierarchie des erstellen die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="dataSource" />Gibt <see langword="null" /> für <see cref="T:System.Web.UI.DataSourceView" />.  
  
 - oder -   
  
 <paramref name="dataSource" />implementiert nicht die <see cref="T:System.Collections.ICollection" /> Schnittstelle und nicht zurückgeben kann ein <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> Wert.  
  
 - oder -   
  
 <paramref name="dataSource" />implementiert nicht die <see cref="T:System.Collections.ICollection" /> Schnittstelle und <paramref name="dataBinding" /> festgelegt ist, um <see langword="false" />.  
  
 - oder -   
  
 Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement enthält keine Gruppenplatzhalter angegeben.  
  
 - oder -   
  
 Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement enthält keine Elementplatzhalter angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das Standardformat für das Steuerelement an.</summary>
        <returns>Das Format für die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, rufen Sie die <xref:System.Web.UI.WebControls.ListView.CreateControlStyle%2A> -Methode, eine <xref:System.NotSupportedException> Ausnahme wird ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, zum Aufrufen der <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> Methode.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewDataItem CreateDataItem (int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewDataItem CreateDataItem(int32 dataItemIndex, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewDataItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItemIndex" Type="System.Int32" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataItemIndex">Der Index des Datenelements in der zugrunde liegenden Daten Datenquellenobjekts.</param>
        <param name="displayIndex">Der Anzeigeindex des Datenelements in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</param>
        <summary>Erstellt ein Datenelement in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <returns>Ein Datenelement, das mit den angegebenen Parametern erstellt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die <see cref="T:System.Web.UI.DataSourceSelectArguments" /> Objekt, das die Argumente enthält, die an die Datenquelle übergeben werden.</summary>
        <returns>Die Argumente, die an die Datenquelle übergeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. In dieser Implementierung der <xref:System.Web.UI.DataSourceSelectArguments> Objekt enthält die Argumente für Auslagerungsvorgänge.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.ListView" /> -Klasse, Sie können diese Methode überschreiben und benutzerdefinierte Werte, die an die Datenquelle übergeben werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyDataItem">
      <MemberSignature Language="C#" Value="protected virtual void CreateEmptyDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateEmptyDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> Vorlage in die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateEmptyDataItem%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> zu erstellende Steuerelement die <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> Vorlage. Die Vorlage für leere Daten wird angezeigt, wenn die Datenquelle keine Datensätze zurückgibt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateEmptyItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateEmptyItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein leeres Element in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <returns>Das leere Element, das erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateEmptyItem%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement ein leeres Element erstellt. Das leere Element wird angezeigt. wenn die letzte Gruppe von einer Seite der Daten in der <xref:System.Web.UI.WebControls.ListView> Steuerelement enthält keine Datensätze mehr angezeigt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInsertItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateInsertItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateInsertItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateInsertItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Insert-Element in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <returns>Die Insert-Element, das erstellt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateInsertItem%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement ein Insert-Element zu erstellen. Ein Insert-Element ist ein <xref:System.Web.UI.WebControls.ListViewItem> Objekt, dessen <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> gleich <xref:System.Web.UI.WebControls.ListViewItemType?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement verfügt nicht über ein <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> angegebene Vorlage.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateItem(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType">Einer der <see cref="T:System.Web.UI.WebControls.ListViewItemType" />-Werte.</param>
        <summary>Erstellt eine <see cref="T:System.Web.UI.WebControls.ListViewItem" /> Objekt mit dem angegebenen Typ.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.ListViewItem" /> Objekt mit dem angegebenen Typ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateItem%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> zu erstellende Steuerelement ein <xref:System.Web.UI.WebControls.ListViewItem> Objekt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsInGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle</param>
        <param name="dataBinding">
          <see langword="true" />Gibt an, dass die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement wird an Daten gebunden ist, andernfalls <see langword="false" />.</param>
        <param name="insertPosition">Einer der <see cref="T:System.Web.UI.WebControls.InsertItemPosition" />-Werte.</param>
        <param name="keyArray">Ein Array, das den Schlüssel zur Wert jedes Elements in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</param>
        <summary>Erstellt die <see cref="T:System.Web.UI.WebControls.ListView" /> Hierarchie in Gruppen zu steuern.</summary>
        <returns>Ein Objekt, das alle Datenelemente der aktuellen Seite der Daten in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateItemsInGroups%2A> Methode wird verwendet, um die Steuerelementhierarchie des erstellen die <xref:System.Web.UI.WebControls.ListView> -Steuerelement in Gruppen. Diese Methode wird verwendet, durch die <xref:System.Web.UI.WebControls.ListView> steuern nur, wenn die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> und <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaften definiert werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement enthält keine Elementplatzhalter angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateItemsWithoutGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle</param>
        <param name="dataBinding">
          <see langword="true" />Gibt an, dass die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement wird an Daten gebunden ist, andernfalls <see langword="false" />.</param>
        <param name="insertPosition">Einer der <see cref="T:System.Web.UI.WebControls.InsertItemPosition" />-Werte.</param>
        <param name="keyArray">Ein Array, das den Schlüssel zur Wert jedes Elements in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</param>
        <summary>Erstellt die <see cref="T:System.Web.UI.WebControls.ListView" /> Hierarchie ohne Gruppen zu steuern.</summary>
        <returns>Ein Objekt, das alle Datenelemente der aktuellen Seite der Daten in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups%2A> Methode wird verwendet, um die Steuerelementhierarchie des erstellen die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Diese Methode wird verwendet, durch die <xref:System.Web.UI.WebControls.ListView> steuern nur, wenn die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> -Eigenschaft ist nicht definiert.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void CreateLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt den Stammcontainer in die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.CreateLayoutTemplate%2A> Methode ist eine Hilfsmethode, die zum Erstellen des Stammcontainers in die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die Inhalte des Containers werden definiert, durch die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSuffixArrayList">
      <MemberSignature Language="C#" Value="protected virtual void CreateSuffixArrayList (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, System.Collections.ArrayList suffixArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSuffixArrayList(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, class System.Collections.ArrayList suffixArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="suffixArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">Die Datenquelle, die Werte für das Suffix bereitstellt.</param>
        <param name="suffixArray">Das Suffixarray.</param>
        <summary>Erstellt ein Array von Suffixe für ASP.NET verwenden beim Generieren der <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.String.Empty" />, die angibt, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.CssClass%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Array, das die Namen der primären Schlüsselfelder für die in der angezeigten Elemente enthält einen <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Array, das den Namen des Primärschlüssels enthält Felder für die Elemente angezeigt, die einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft, um anzugeben, das Feld oder Felder, die den Primärschlüssel der Datenquelle darstellen. Um diese Eigenschaft deklarativ festzulegen, verwenden Sie eine durch Trennzeichen getrennte Liste von Feldnamen.  
  
 Wenn die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.ListView> Steuerelement füllt automatisch seine <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Auflistung mit den Werten aus den angegebenen Feldern. Dies bietet eine einfache Möglichkeit, die Primärschlüssel der einzelnen Elemente zugreifen.  
  
> [!IMPORTANT]
>  Die <xref:System.Web.UI.WebControls.ListView> Steuerelement Schlüsselfeld-Werte in der Steuerelementzustand Feld speichert. Wenn diese Werte vertraulichen Informationen enthalten, es wird empfohlen, Ansichtszustand-Verschlüsselung zu, durch Festlegen Aktivieren der <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> Eigenschaft `ViewStateEncryptionMode.Always`.  
  
 Müssen die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> -Eigenschaft für das automatische Aktualisieren und Löschen von Funktionen von der <xref:System.Web.UI.WebControls.ListView> Steuerelement funktioniert. Die Werte dieser Schlüsselfelder werden an das Datenquellensteuerelement übergeben, um das Element, um das update oder delete übereinstimmen.  
  
 Felder, die als Daten angegeben sind Schlüssel mithilfe der <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft an die Datenquellen-Steuerelement übergeben werden, während der Update und delete-Operationen mithilfe der `Keys` Auflistung. Datenschlüsselfelder werden an das Datenquellensteuerelement übergeben, auch wenn sie nicht auf die Steuerelemente in einer Vorlage gebunden sind.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft, um das Schlüsselfeld der Datenquelle anzugeben.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.DataKey" /> Objekte, die darstellen, die Daten-Schlüssel-Wert für jedes Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das für jedes Element in den Datenschlüssel enthält einen <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.ListView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> Objekt für jedes Element im Steuerelement. Die <xref:System.Web.UI.WebControls.DataKey> Objekt enthält die Werte der Felder, die in angegeben sind die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.DataKey> Objekte werden dann an des Steuerelements hinzugefügt <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Auflistung.  
  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Eigenschaft zum Abrufen der <xref:System.Web.UI.WebControls.DataKey> -Objekt für ein bestimmtes Datenelement in der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 Können Sie die <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> Eigenschaft zum Abrufen der <xref:System.Web.UI.WebControls.DataKey> -Objekt für das aktuell ausgewählte Element. Sie können auch die <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> Eigenschaft, um den Daten-Schlüssel-Wert für das aktuell ausgewählte Element direkt abzurufen.  
  
 Können Sie die <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A?displayProperty=nameWithType> Eigenschaft zum Abrufen der <xref:System.Web.UI.WebControls.DataKey> Objekt für das Element, für die eine Schaltfläche geklickt wurde.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Eigenschaft zur Bestimmung der Schlüssel zur Werte für die Elemente in einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Es wird gezeigt, wie die Benutzerauswahl basierend auf ein Datenelement statt das Standardverhalten, das für den Index wird beibehalten.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der Index des Elements, das gelöscht werden soll.</param>
        <summary>Löscht den Eintrag am angegebenen Index aus der Datenquelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode, um den Eintrag am angegebenen Index aus der Datenquelle programmgesteuert löschen. Diese Methode wird in der Regel zum Löschen eines Datensatzes von außerhalb der <xref:System.Web.UI.WebControls.ListView> steuern, z. B. ein anderes Steuerelement auf der Seite. Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.ItemDeleted> und <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode, um programmgesteuert löschen Sie das ausgewählte Element in eine <xref:System.Web.UI.WebControls.ListView> Steuerelement aus der Datenquelle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> ist kleiner als 0.  
  
 - oder -   
  
 Die <see cref="T:System.Web.UI.DataSourceView" /> -Objekt, das zugeordnet ist die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_DeleteMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode aufrufen, um Daten zu löschen.</summary>
        <value>Der Name der Methode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft führt dazu, dass die modellbindung als die Methode für die Datenbindung verwendet werden soll.  
  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Index des Elements, das bearbeitet wird.</summary>
        <value>Der nullbasierte Index des Elements, das bearbeitet wird. Der Standardwert ist-1 und bedeutet, dass kein Element bearbeitet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> Eigenschaft programmgesteuert festzulegen oder zu bestimmen, welches im Element ein <xref:System.Web.UI.WebControls.ListView> Steuerelement zu bearbeiten. Wenn diese Eigenschaft auf den Index eines Elements im Steuerelement festgelegt ist, wird dieses Element im Bearbeitungsmodus angezeigt. In den Bearbeitungsmodus wechseln, wird das Element gerendert, indem Sie die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> anstelle der Vorlage der <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage. Sie können Auffüllen der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> mit von datengebundenen Steuerelementen, um Benutzern das Ändern der Werte für das Element zu aktivieren. So wechseln Sie von Bearbeitungsmodus anzeigen, wird festlegen Sie diese Eigenschaft auf-1.  
  
 Die <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> Eigenschaft wird normalerweise verwendet, wenn Sie keine programmgesteuert zu ermitteln, welches Element bearbeitet wird, oder wenn Sie benutzerdefinierte Bearbeitungsfunktionen Hinzufügen der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die <xref:System.Web.UI.WebControls.ListView> Steuerelement verfügt über ein integriertes Feature, mit dem automatisch ein Element im Bearbeitungsmodus versetzt wird, wenn Sie die Elementvorlage eine Schaltfläche hinzufügen, deren <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaftensatz auf `Edit`.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> Eigenschaft, um zu bestimmen, ob ein Element im Bearbeitungsmodus in das <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListViewDataItem> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/CS/ListViewDataItemDataItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/VB/ListViewDataItemDataItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> Eigenschaft auf einen Wert kleiner als-1 festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem EditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem EditItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element, das im Bearbeitungsmodus in ist eine <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Das Element, das im Bearbeitungsmodus in ist eine <see cref="T:System.Web.UI.WebControls.ListView" /> -Steuerelement, oder <see langword="null" /> , wenn kein Element im Bearbeitungsmodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.EditItem%2A> Eigenschaft, um den Zugriff auf das Element, das im Bearbeitungsmodus in ist eine <xref:System.Web.UI.WebControls.ListView> Steuerelement. Der Inhalt eines Elements bearbeiten wird definiert, indem die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie das Element abrufen, die sich im Bearbeitungsmodus befindet, mithilfe der <xref:System.Web.UI.WebControls.ListView.EditItem%2A> Eigenschaft Zugriff auf Steuerelemente, die in enthaltenen der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für das Element im Bearbeitungsmodus befindet.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für das Element im Bearbeitungsmodus befindet. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Eigenschaft so definieren Sie eine benutzerdefinierte Benutzeroberfläche (UI) für das Element im Bearbeitungsmodus befindet. Die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage enthält normalerweise die Eingabesteuerelemente für den Benutzer, die Werte von einem vorhandenen Datensatz aktualisieren. Es enthält auch in der Regel Schaltflächen, um den Datensatz zu aktualisieren und die Update-Vorgang "Abbrechen".  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie ein `EditItemTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Fügen Sie dann den Inhalt und die Steuerelemente für die Vorlage, um die `EditItemTemplate` Element. Sie können ein Feld eines Eingabesteuerelements mithilfe eines Ausdrucks für die bidirektionale Bindung zuordnen. Dies ermöglicht die <xref:System.Web.UI.WebControls.ListView> -Steuerelement zum Anzeigen von des ursprünglichen Wert automatisch in den zugeordneten Eingabesteuerelements für das Element im Bearbeitungsmodus befindet. Wenn ein Datensatz aktualisiert wird, die <xref:System.Web.UI.WebControls.ListView> Steuerelement kann den Wert des aktualisierten Felds automatisch aus der zugeordneten Eingabesteuerelements extrahieren. Weitere Informationen finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Zum Erstellen von Schaltflächen, die die integrierte "Abbrechen" und die Updatevorgänge ausführen, fügen Sie der Vorlage ein Schaltflächen-Steuerelement hinzu. Legen Sie seine <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltflächentyp|CommandName-Wert|  
|-----------------|-----------------------|  
|Abbrechen|"Cancel"|  
|Aktualisieren|"Update"|  
  
   
  
## Examples  
 Im folgende Beispiel zeigt, wie eine benutzerdefinierte Vorlage für das Element im Bearbeitungsmodus zu definieren.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für die leere Vorlage, die beim Rendern einer <see cref="T:System.Web.UI.WebControls.ListView" /> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.</summary>
        <value>Ein Objekt, das den benutzerdefinierten Inhalt für die leere Vorlage enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Vorlage wird angezeigt, einem <xref:System.Web.UI.WebControls.ListView> steuern, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält und die <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>. Die Vorlage wird gerendert, statt die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage. Wenn die <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> Eigenschaft wird auf einen Wert festgelegt, außer <xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>die <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> Vorlage wird nicht gerendert.  
  
 Sie können eine benutzerdefinierte Benutzeroberfläche (UI) für die leere Vorlage definieren, mit der <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> Eigenschaft. Fügen Sie zum Angeben einer benutzerdefinierten Vorlage deklarativ für die leere Vorlage und `EmptyDataTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `EmptyDataTemplate` Element.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine benutzerdefinierte Vorlage für die leere Vorlage definiert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/CS/ListViewEmptyDataTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/VB/ListViewEmptyDataTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für das leere Element, das gerendert wird eine <see cref="T:System.Web.UI.WebControls.ListView" /> steuern, wann es sind keine Datenelemente für mehr in der letzten Zeile der aktuellen Datenseite angezeigt.</summary>
        <value>Ein Objekt, das den benutzerdefinierten Inhalt für das leere Element enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das leere Element wird angezeigt, einem <xref:System.Web.UI.WebControls.ListView> steuern, wann es sind keine weiteren Datenelemente in der letzten Gruppe der aktuellen Seite angezeigt. Dies kann nur auftreten, wenn <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> auf einen Wert größer als 1 festgelegt ist. Z. B. in einer <xref:System.Web.UI.WebControls.ListView> -Steuerelement, das <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft möglicherweise auf 5 festgelegt und die Gesamtanzahl der aus der Datenquelle zurückgegebenen Elemente ist 8. In diesem Fall enthalten die letzte Zeile der Daten drei Elemente, die definiert, indem Sie die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage und zwei Elemente definiert, indem Sie die <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> Vorlage.  
  
 Sie können eine benutzerdefinierte Benutzeroberfläche (UI) für das leere Element definieren, mit der <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> Eigenschaft. Fügen Sie zum Angeben einer benutzerdefinierten Vorlage für das leere Element deklarativ eine `EmptyItemTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `EmptyItemTemplate` Element.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine benutzerdefinierte Vorlage für das leere Element definiert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/CS/ListViewEmptyItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/VB/ListViewEmptyItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob ein Validierungssteuerelement Ausnahmen behandelt, die auftreten, bei Einfüge- oder Updatevorgänge fest.</summary>
        <value>
          <see langword="true" />Wenn ein Validierungssteuerelement Ausnahmen behandelt, die auftreten, bei Einfüge- oder Updatevorgänge; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Zeilenauswahl weiterhin auftritt, wenn ein Benutzer durch die Daten in einem datengebundenen Steuerelement fest.</summary>
        <value>
          <see langword="true" />Wenn die Zeilenauswahl beibehalten; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, wie ausgewählte Zeilen beibehalten werden, wenn die <xref:System.Web.UI.WebControls.ListView> -Steuerelement befindet sich im Pagingmodus. Standardmäßig basiert die Zeilenauswahl auf Zeilenindex. Dieselbe Zeile (z. B. die dritte Zeile), die auf jeder Seite ausgewählt ist. Alternativ können Sie basierend auf der ausgewählten Zeile des Datenschlüssels Persistenz aktivieren. In diesem Fall wählen Sie die Zeile 3 auf Seite 1, und wechseln Sie zu Seite 2, ist keine Zeile auf Seite 2. ausgewählt. Wenn Sie zurück auf Seite 1 verschoben haben, wird die Zeile 3 weiterhin ausgewählt. Um diese Funktionalität zu aktivieren, legen Sie diese Eigenschaft auf `true`.  
  
> [!NOTE]
>  In Versionen 2.0, 3.0 und 3.5 von ASP.NET wurde Zeilenauswahl nur auf Zeilenindex basiert. Standardmäßig basiert die Zeilenauswahl in ASP.NET 4 auf Index für die Abwärtskompatibilität.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void EnsureLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass die <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> Inhalt wird in richtig erstellt die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement, um sicherzustellen, dass die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Inhalt für das Steuerelement nur einmal hinzugefügt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractItemValues">
      <MemberSignature Language="C#" Value="public virtual void ExtractItemValues (System.Collections.Specialized.IOrderedDictionary itemValues, System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractItemValues(class System.Collections.Specialized.IOrderedDictionary itemValues, class System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemValues">Ein Dictionary-Objekt, das zum Speichern der Feldwerte verwendet wird.</param>
        <param name="item">Die <see cref="T:System.Web.UI.WebControls.ListViewItem" /> Objekt aus, das die Feldwerte abzurufen.</param>
        <param name="includePrimaryKey">
          <see langword="true" />um die Primärschlüsselfelds oder Felder enthalten. andernfalls <see langword="false" />.</param>
        <summary>Ruft die Werte der einzelnen Felder, die in das angegebene Element deklariert wird, und speichert sie in der angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ExtractItemValues%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Abrufen der Werte der einzelnen Felder, die in deklariert ist `item`. Sie können angeben, ob die extrahierten Werte Schlüsselfelder mit umfassen die `includePrimaryKey` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemValues" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="item" /> ist kein <see cref="T:System.Web.UI.WebControls.ListViewDataItem" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindPlaceholder">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindPlaceholder (string containerID, System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindPlaceholder(string containerID, class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerID" Type="System.String" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="containerID">Der Bezeichner für das Steuerelement gefunden werden.</param>
        <param name="container">Der zu durchsuchenden Container.</param>
        <summary>Sucht den angegebenen Container für ein Steuerelement mit dem angegebenen Bezeichner.</summary>
        <returns>Das angegebene Steuerelement oder <see langword="null" /> , wenn das angegebene Steuerelement nicht gefunden werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> Eigenschaft. Diese Eigenschaft wird nicht unterstützt, durch die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Diese Eigenschaft wird nicht unterstützt und löst eine <see cref="T:System.NotSupportedException" /> Fehler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, den Zugriff auf die <xref:System.Web.UI.WebControls.ListView.Font%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, den Zugriff auf die <see cref="P:System.Web.UI.WebControls.ListView.Font" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.ForeColor%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst.  Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupItemCount">
      <MemberSignature Language="C#" Value="public virtual int GroupItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GroupItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Anzahl der Elemente für die anzuzeigenden pro Gruppe in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die Anzahl der Elemente für die anzuzeigenden pro Gruppe in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standard ist 1, der angibt, dass die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement wird ein Element pro Gruppe anzeigen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> -Eigenschaft an die Anzahl der Elemente, die in zusammengefasst werden die <xref:System.Web.UI.WebControls.ListView> Steuerelement. (Das heißt, gibt dies die Anzahl der Elemente, die für jede Gruppe des Steuerelements angezeigt.) Für jede Gruppe die <xref:System.Web.UI.WebControls.ListView> Steuerelement rendert den Inhalt der <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage und der Platzhalter für Elemente mit dem tatsächlichen Elementinhalt ersetzt. Dies der Fall ist dies so oft wie die Anzahl der Elemente, die definiert, indem Sie die <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft.  
  
 Können Sie <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> mit der <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage zum Erstellen eines gekachelten Layouts in der <xref:System.Web.UI.WebControls.ListView> Steuerelement. In einem gekachelten Tabellenlayout werden die Elemente in einer Zeile horizontal wiederholt. Die Anzahl der Häufigkeit, mit der ein Element wiederholt wird, wird angegeben, indem die <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie ein gekacheltes Layout erstellt die <xref:System.Web.UI.WebControls.ListView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft. Es wird gezeigt, wie diese Eigenschaft programmgesteuert zu ändern.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/CS/ListViewGroupItemCountCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/VB/ListViewGroupItemCountVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> Eigenschaft auf einen Wert kleiner als 1 festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string GroupPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("groupPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die ID für die Gruppenplatzhalter in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die ID für die Gruppenplatzhalter in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist "GroupPlaceholder".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> Eigenschaft, um eine ID für den Gruppenplatzhalter anzugeben. Der Gruppenplatzhalter ist das Steuerelement, das Sie zum Hinzufügen der <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage, wenn Sie Gruppen verwenden, um darzustellen, in die Gruppe gerendert wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> -Eigenschaft an eine andere ID für die Gruppenplatzhalter, der die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene ID ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für das Trennzeichen zwischen den Gruppen in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das den benutzerdefinierten Inhalt für das Gruppentrennzeichen enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Trennzeichen ermöglicht es Ihnen, ein Element zu versetzen, der benutzerdefinierten Inhalt zwischen den einzelnen Gruppen verfügt. Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement rendert dann abwechselnd die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Inhalt und die <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> Inhalt. Die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Inhalt wird immer zuletzt gerendert.  
  
 Stellen Sie sicher, dass Sie den Inhalt für die gesamte Zeile im Definieren der <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> Vorlage, da die <xref:System.Web.UI.WebControls.ListView> -Steuerelement rendert die <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> Inhalte innerhalb der <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage. Z. B. die Gruppen in der <xref:System.Web.UI.WebControls.ListView> Steuerelement möglicherweise mit einer Zeile einer Tabelle erstellt werden (`tr`) Element. Wenn die <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft ist auf 3 festgelegt, die `colspan` Attribut muss festgelegt werden, auf 3 in der <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> Vorlage.  
  
 Fügen Sie zum Angeben einer Vorlage für das Trennzeichen deklarativ eine `GroupSeparatorTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `GroupSeparatorTemplate` Element.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie ein Gruppentrennzeichen in erstellt die <xref:System.Web.UI.WebControls.ListView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für den Container in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für den Container in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Eigenschaft zum Erstellen eines gekachelten Layouts in der <xref:System.Web.UI.WebControls.ListView> Steuerelement. In einem gekachelten Tabellenlayout werden die Elemente in einer Zeile horizontal wiederholt. Die Anzahl der Häufigkeit, mit der ein Element wiederholt wird, wird angegeben, indem die <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> Eigenschaft.  
  
 Fügen Sie zum Angeben einer Vorlage für den Container deklarativ eine `GroupTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `GroupTemplate` Element.  
  
 Die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> -Eigenschaft muss einen Platzhalter für das Datenelement, z. B. einer Tabellenzelle enthalten (`td`), `div`, oder `span` Element. Dieser Platzhalter benötigen die `runat` -Attribut auf "Server" festgelegt und die `ID` Attribut festgelegt wird, auf den Wert des der <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> Eigenschaft. Zur Laufzeit die <xref:System.Web.UI.WebControls.ListView> Steuerelement ersetzt den Platzhalter durch den Inhalt, der für jedes Element in definiert ist die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> und <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> Vorlagen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie ein gekacheltes Layout erstellt die <xref:System.Web.UI.WebControls.ListView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.Height%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.Height" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem InsertItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem InsertItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Einfügeelement, der eine <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das das einzufügende Element stellt eine <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> Eigenschaft, um Zugriff auf das Einfügeelement, der eine <xref:System.Web.UI.WebControls.ListView> Steuerelement. Ein Insert-Element ist ein <xref:System.Web.UI.WebControls.ListViewItem> Objekt, dessen <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> gleich <xref:System.Web.UI.WebControls.ListViewItemType?displayProperty=nameWithType>. Der Inhalt eines Elements einfügen wird definiert, indem die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie das einzufügende Element mithilfe der <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> Eigenschaft Zugriff auf Steuerelemente, die in enthaltenen der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage.  
  
> [!IMPORTANT]
>  In diesem Beispiel enthält Textfelder, die Benutzereingaben akzeptieren, die ein potenzielles darstellen Sicherheitsrisiko. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/CS/ListViewInsertItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/VB/ListViewInsertItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItemPosition">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.InsertItemPosition InsertItemPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.InsertItemPosition InsertItemPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.InsertItemPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Speicherort der der <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> Vorlage beim Rendern als Teil der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.InsertItemPosition" />-Werte. Die Standardeinstellung ist <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />, gibt an, dass die <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> Inhalt wird nicht gerendert werden, durch die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle enthält die Positionswerte verfügbaren Elemente.  
  
|Zeilentyp|Beschreibung|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|Rendert die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage als erstes Element in der <xref:System.Web.UI.WebControls.ListView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|Rendert die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage als das letzte Element in der <xref:System.Web.UI.WebControls.ListView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>|Rendert die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage.|  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie konfigurieren eine <xref:System.Web.UI.WebControls.ListView> -Steuerelement zum Anzeigen der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für ein Einfügeelement in die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für das einzufügende Element im enthält die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Eigenschaft, um eine benutzerdefinierte Benutzeroberfläche (UI) für das einzufügende Element im Definieren der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Diese Benutzeroberfläche wird am Anfang oder am Ende der angezeigten Elemente gerendert. Sie angeben, in dem die Benutzeroberfläche gerendert wird, mithilfe der <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage enthält normalerweise die Eingabesteuerelemente für den Benutzer die Werte für einen neuen Datensatz eingeben. Es enthält auch in der Regel Schaltflächen oder links, um den Datensatz einzufügen und den Insert-Vorgang "Abbrechen".  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie ein `InsertItemTemplate` Element innerhalb der `ListView` Element. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `InsertItemTemplate` Element. Sie können ein Feld eines Eingabesteuerelements mithilfe eines Ausdrucks für die bidirektionale Bindung zuordnen. Wenn ein Datensatz eingefügt wird, die <xref:System.Web.UI.WebControls.ListView> Steuerelement extrahiert automatisch den Wert des Felds aus der zugeordneten Eingabesteuerelements. Weitere Informationen finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Zum Erstellen von Schaltflächen, die die integrierten Abbruch- und Einfügevorgänge, fügen Sie der Vorlage ein Schaltflächen-Steuerelement hinzu. Legen Sie seine <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltflächentyp|CommandName-Wert|  
|-----------------|-----------------------|  
|Abbrechen|"Cancel"|  
|Insert|"Einfügen"|  
  
 Sie können steuern, die Position des einzufügenden Elements in der <xref:System.Web.UI.WebControls.ListView> Steuerung mithilfe der <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie eine benutzerdefinierte Vorlage für das einzufügende Element definiert ein <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_InsertMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode aufrufen, um Daten einzufügen.</summary>
        <value>Der Name der Methode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft führt dazu, dass die modellbindung als die Methode für die Datenbindung verwendet werden soll.  
  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewItem">
      <MemberSignature Language="C#" Value="public virtual void InsertNewItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />um die Validierung ausführen, wenn diese Methode aufgerufen wird; andernfalls <see langword="false" />.</param>
        <summary>Fügt den aktuellen Datensatz in der Datenquelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode, um das programmgesteuerte Einfügen eines Elements in der Datenquelle. Diese Methode dient normalerweise zum Einfügen eines Elements von außerhalb der <xref:System.Web.UI.WebControls.ListView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> -Methode, müssen Sie definieren eine <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage in die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Sie müssen auch festlegen, die <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> -Eigenschaft auf einen anderen Wert als <xref:System.Web.UI.WebControls.InsertItemPosition?displayProperty=nameWithType>. Um anzugeben, ob die seitenüberprüfung vor der Insert-Vorgang ausgeführt wird, verwenden die `causesValidation` Parameter.  
  
 Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.ItemInserted> und <xref:System.Web.UI.WebControls.ListView.ItemInserting> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode, um den Inhalt des Elements in der Insert programmgesteuert einzufügen ein <xref:System.Web.UI.WebControls.ListView> Steuerelement in der Datenquelle.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/CS/ListViewInsertNewItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/VB/ListViewInsertNewItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement verfügt nicht über ein Insert-Element.  
  
 - oder -   
  
 Die <see cref="T:System.Web.UI.DataSourceView" /> zugeordnete Objekt der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyDataTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyDataTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyDataTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den angegebenen Auffüllen <xref:System.Web.UI.Control> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> Vorlage.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient zum Auffüllen der <xref:System.Web.UI.Control> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> Vorlage.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Ein Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInsertItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateInsertItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateInsertItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, der zum Speichern der untergeordneten Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> Vorlage.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> Objekt mithilfe der untergeordneten Steuerelemente, die in enthaltenen der <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemTemplate (System.Web.UI.Control container, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemTemplate(class System.Web.UI.Control container, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">Der Container, die verwendet wird, um die untergeordneten Steuerelemente zu speichern.</param>
        <param name="displayIndex">Der Anzeigeindex des Elements, das instanziiert wird.</param>
        <summary>Füllt das angegebene <see cref="T:System.Web.UI.Control" /> -Objekt unter Verwendung der untergeordnete Steuerelemente von einem von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelementvorlagen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet eine andere Vorlage Abhängigkeit vom Modus des Elements wird instanziiert und die Einstellungen der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die <xref:System.Web.UI.WebControls.ListView.InstantiateItemTemplate%2A> Methode verwendet eine der folgenden Vorlagen für den Container aufgefüllt:  
  
-   <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>  
  
    > [!NOTE]
    >  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement verfügt nicht über ein <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> angegebene Vorlage.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob das modellbindung verwendet wird.</summary>
        <value>
          <see langword="true" />Wenn die modellbindung verwendet, andernfalls wird <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCanceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn bei einem Abbruchvorgang, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement bricht den Vorgang zum Einfügen oder bearbeiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemCanceling> Ereignis aus, wenn eine Schaltfläche "Abbrechen", in der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> oder <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement bricht den Vorgang zum Einfügen oder bearbeiten. (Eine Schaltfläche "Abbrechen" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Cancel" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. beenden den Vorgang "Abbrechen", wenn das Element in einem unbeabsichtigten Zustand gelangen würde.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> Objekt übergeben wird, an den Ereignishandler, in dem Sie den Index des Elements bestimmen kann. Außerdem können Sie angeben, dass der Vorgang "Abbrechen" beendet werden soll. Um den Vorgang zu beenden, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Web.UI.WebControls.ListView.ItemCanceling> -Ereignishandler.  
  
> [!IMPORTANT]
>  In diesem Beispiel enthält Textfelder, die Benutzereingaben akzeptieren, die ein potenzielles darstellen Sicherheitsrisiko. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/CS/ListViewItemCancelingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/VB/ListViewItemCancelingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Schaltfläche in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.ListView> Steuerelement geklickt wird. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf.  
  
 Schaltflächen einem <xref:System.Web.UI.WebControls.ListView> Steuerelement kann auch integrierte Funktionalität des Steuerelements aufrufen. Die folgende Tabelle enthält Werte, mit dem Sie mit der <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft einer Schaltfläche, um integrierte Funktionen aufzurufen.  
  
|CommandName-Wert|Beschreibung|  
|-----------------------|-----------------|  
|"Cancel"|Bricht einen bearbeiten oder Insert-Vorgang ab. Löst das <xref:System.Web.UI.WebControls.ListView.ItemCanceling>-Ereignis aus.|  
|"Löschen"|Löscht den aktuellen Datensatz aus der Datenquelle an. Löst das <xref:System.Web.UI.WebControls.ListView.ItemDeleted> und <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignisse.|  
|"Wählen Sie"|Legt die <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft, um die <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> Eigenschaftswert für das Element. Rendert die <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> und <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignisse.|  
|"Bearbeiten"|Legt das Element im Bearbeitungsmodus befindet. Rendert die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.ItemEditing>-Ereignis aus.|  
|"Einfügen"|Fügt die gebundenen Werte aus der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage in der Datenquelle. Löst das <xref:System.Web.UI.WebControls.ListView.ItemInserting> und <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignisse.|  
|"Update"|Aktualisiert den aktuellen Datensatz in der Datenquelle mit den gebundenen Werten aus der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage. Löst das <xref:System.Web.UI.WebControls.ListView.ItemUpdating> und <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignisse.|  
|"Sortieren"|Sortiert die Spalten aufgeführt, die der `CommandArgument` -Eigenschaft der Schaltfläche. Löst das <xref:System.Web.UI.WebControls.ListView.Sorting> und <xref:System.Web.UI.WebControls.ListView.Sorted> Ereignisse.|  
  
 Die <xref:System.Web.UI.WebControls.ListView.ItemCommand> Ereignis wird auch ausgelöst, wenn eine Schaltfläche, die in der obigen Tabelle aufgeführt ist. Allerdings wird empfohlen, dass Sie in der Tabelle aufgeführten Ereignisse zu verwenden. Die <xref:System.Web.UI.WebControls.ListView.ItemCommand> Ereignis wird in der Regel verwendet, um benutzerdefinierte Vorgänge behandelt.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewCommandEventArgs> Objekt wird an den Ereignishandler, können Sie bestimmen die Befehlsnamen und Befehlsargument der Schaltfläche, auf die geklickt wurde, übergeben. Um den Namen des Befehls zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A?displayProperty=nameWithType> Eigenschaft. Das Befehlsargument ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A?displayProperty=nameWithType> Eigenschaft. Um das Steuerelement zuzugreifen, die das Ereignis ausgelöst hat, verwenden die <xref:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Web.UI.WebControls.ListView.ItemCommand> -Ereignishandler.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Element, in erstellt wird einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, eine <xref:System.Web.UI.WebControls.ListViewItem> Objekt muss für jedes Element im Steuerelement erstellt werden. Die <xref:System.Web.UI.WebControls.ListView.ItemCreated> Ereignis wird ausgelöst, wenn jedes Element in der <xref:System.Web.UI.WebControls.ListView> Steuerelement erstellt wird. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Hinzufügen von benutzerdefinierten Inhalten zu einem Element.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewItemEventArgs> Objekt an den Ereignishandler, können Sie die Eigenschaften des Elements, das erstellt wird, den Zugriff auf die übergeben wird. Um ein bestimmtes Steuerelement im Element zuzugreifen, verwenden die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.ListViewItem> -Objekt, das in enthalten ist die <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ListViewItemEventArgs> Objekt. Sie können ermitteln, welches Element (Datenelement, Insert-Element, leeres Element) wird erstellt unter Verwendung der <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Datenelement, auf Daten in gebunden ist einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bevor Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, muss jedes Element im Steuerelement zu einem Datensatz in der Datenquelle gebunden werden. Die <xref:System.Web.UI.WebControls.ListView.ItemDataBound> Ereignis wird ausgelöst, wenn ein Datenelement, auf Daten in gebunden ist der <xref:System.Web.UI.WebControls.ListView> Steuerelement. (Datenelemente werden durch dargestellt <xref:System.Web.UI.WebControls.ListViewDataItem> Objekte.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Änderung der Daten, die an das Element gebunden ist.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewItemEventArgs> Objekt an den Ereignishandler, können Sie die Eigenschaften des Elements, das gebunden wird, den Zugriff auf die übergeben wird. Um ein bestimmtes Steuerelement im Element zuzugreifen, verwenden die <xref:System.Web.UI.Control.FindControl%2A> Methode der <xref:System.Web.UI.WebControls.ListViewItem> -Objekt, das in enthalten ist die <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ListViewItemEventArgs> Objekt. Sie können ermitteln, welches Element (Datenelement, Insert-Element, leeres Element) gebunden wird mithilfe der <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung des <xref:System.Web.UI.WebControls.ListView.ItemDataBound>-Ereignisses veranschaulicht.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/CS/ListViewItemDataBoundCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/VB/ListViewItemDataBoundVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Löschvorgang, nachdem angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement löscht das Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemDeleted> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "löschen" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht das Element. (Eine Schaltfläche zum Löschen ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Löschen" (Delete) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Überprüfen der Ergebnisse des Löschvorgangs.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> Objekt übergeben wird, an den Ereignishandler, können Sie die Anzahl der Zeilen zu bestimmen, die in der Datenquelle betroffen sind. Außerdem können Sie bestimmen, welche Ausnahmen aufgetreten sind. Sie können angeben, ob die Ausnahme im Ereignishandler durch Festlegen von behandelt wurde die <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemDeleted> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/CS/ListViewDeletedEventArgsCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/VB/ListViewDeletedEventArgsVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Löschvorgang, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement löscht das Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "löschen" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht das Element. (Eine Schaltfläche zum Löschen ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Löschen" (Delete) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Delete-Vorgang abgebrochen wird.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> Objekt übergeben wird, an den Ereignishandler, in dem Sie den Index des aktuellen Elements bestimmen kann. Außerdem können Sie angeben, dass der Delete-Vorgang abgebrochen werden soll. Um den Löschvorgang abzubrechen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> -Objekt `true`. Sie können auch arbeiten mit der <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values%2A> Sammlungen, bevor die Werte an die Datenquelle übergeben werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie Sie deklarativ hinzufügen, einen Ereignishandler für das <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemEditing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Bearbeitungsvorgangs, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Element im Bearbeitungsmodus abgelegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemEditing> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Bearbeiten", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.ListView> Element im Bearbeitungsmodus abgelegt wird. (Eine Schaltfläche zum Bearbeiten ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Bearbeiten" (Edit) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Bearbeitung abbrechen.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewEditEventArgs> Objekt übergeben wird, an den Ereignishandler, in dem Sie den Index des aktuellen Elements bestimmen kann. Außerdem können Sie angeben, dass die Bearbeitung abgebrochen werden soll. Legen Sie zum Abbrechen des Bearbeitungsvorgangs die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewEditEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemEditing> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Einfügevorgang, nachdem angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement wurde das Element in der Datenquelle eingefügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis aus, wenn eine Schaltfläche zum Einfügen in die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement fügt das Element in der Datenquelle. (Eine Einfügeschaltfläche ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Einfügen" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Überprüfen der Ergebnisse eines Einfügevorgangs.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Objekt übergeben wird, an den Ereignishandler, dadurch können Sie die Anzahl der betroffenen Datensätze zu ermitteln. Außerdem können Sie bestimmen, welche Ausnahmen aufgetreten sind. Verwenden Sie zum Bestimmen der Anzahl der Datensätze, die von der Insert-Vorgang betroffen sind, die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> Eigenschaft. Um zu bestimmen, ob Ausnahmen aufgetreten sind, verwenden die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> Eigenschaft. Sie können auch angeben, ob die Ausnahme im Ereignis Handler behandelt, indem wurde die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Werte des eingefügten Datensatzes zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> Eigenschaft.  
  
 Wenn die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> Eigenschaft gibt an, dass keine Elemente eingefügt wurden, können Sie die einzufügenden Werte zum Binden der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage durch Festlegen der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Einfügevorgang, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement führt das Einfügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemInserting> Ereignis aus, wenn eine Schaltfläche zum Einfügen in die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement einfügen des Datensatzes. (Eine Einfügeschaltfläche ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Einfügen" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis auftritt, z. B. HTML-Codierung der Werte eines Datensatzes, bevor er in der Datenquelle eingefügt wird.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewInsertEventArgs> Objekt wird an den Ereignishandler, dadurch können Sie den Wert eines Arguments optionaler Befehl gesendet, um zu bestimmen, übergeben die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Außerdem können Sie angeben, dass der Insert-Vorgang abgebrochen werden soll. Legen Sie zum Abbrechen des Insert-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können die lesen oder ändern Sie die Feldwerte für den neuen Eintrag mit dem <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemInserting> Ereignis.  
  
> [!IMPORTANT]
>  In diesem Beispiel enthält Steuerelemente, die Benutzereingaben akzeptieren, die ein potenzielles darstellen Sicherheitsrisiko. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string ItemPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("itemPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die ID für den Platzhalter für die Elemente in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die ID für den Platzhalter für die Elemente in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist "ItemPlaceholder".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> Eigenschaft, um eine ID für den Elementplatzhalter anzugeben. Der Elementplatzhalter ist das Steuerelement, das Sie Hinzufügen der <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage (Wenn Sie keine Gruppen verwendet werden) oder auf die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage (Wenn Sie Gruppen verwenden) darstellen, in dem das Element wird gerendert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> Eigenschaft eine ID für den Elementplatzhalter, der an die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene ID ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> Objekte, die darstellen, die die Datenelemente der aktuellen Seite der Daten in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das alle Datenelemente der aktuellen Seite der Daten in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Items%2A> Eigenschaft wird verwendet, um die Datenelemente in Speichern einer <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement füllt automatisch die <xref:System.Web.UI.WebControls.ListView.Items%2A> Auflistung nach der Erstellung einer <xref:System.Web.UI.WebControls.ListViewDataItem> Objekt für jeden Datensatz in der aktuellen Seite der Daten in der Datenquelle. Es anschließend jedes Objekt der Auflistung hinzugefügt. Diese Eigenschaft wird normalerweise verwendet, um auf ein bestimmtes Element im Steuerelement zuzugreifen oder die vollständige Auflistung der Elemente durchlaufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.Items%2A> Zugriff auf das Element, das in bearbeitet wird, wird diese Auflistung ein <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListView.ItemEditing> Ereignis.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerdefinierten Inhalt für das Trennzeichen zwischen den Elementen in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das den benutzerdefinierten Inhalt für das Trennzeichen zwischen den Elementen des enthält die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> Eigenschaft definiert den Inhalt für das Trennzeichen zwischen den einzelnen Elementen der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> wird nach dem jedes Element nur die letzte angezeigt.  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie ein `ItemSeparatorTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `ItemSeparatorTemplate` Element.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie ein Trennzeichen in erstellt die <xref:System.Web.UI.WebControls.ListView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für das Datenelement in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für das Datenelement in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Eigenschaft definieren Sie eine benutzerdefinierte Benutzeroberfläche (UI), um die Datenelemente anzuzeigen. Die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage ist erforderlich, durch die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Es enthält in der Regel Steuerelemente, um die Feldwerte eines Datensatzes anzuzeigen. Wenn Sie Benutzer, die die Daten ändern können möchten, Sie normalerweise auch Schaltflächen zum Hinzufügen der <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage, mit denen Benutzer wählen Sie einen Datensatz, um in den Bearbeitungsmodus wechseln, oder Löschen eines Datensatzes.  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie ein `ItemTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `ItemTemplate` Element. Um die Feldwerte der Datenquelle anzuzeigen, die an das Steuerelement gebunden ist, verwenden Sie einen Datenbindungsausdruck. Weitere Informationen finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Um Schaltflächen zu erstellen, die die integrierte SELECT-Anweisung ausführen, löschen, und Bearbeiten von Vorgängen, Hinzufügen eines Button-Steuerelements an die Vorlage. Legen Sie seine <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltflächentyp|CommandName-Wert|  
|-----------------|-----------------------|  
|Löschen|"Löschen"|  
|Bearbeiten|"Bearbeiten"|  
|Auswählen|"Wählen Sie"|  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie eine benutzerdefinierte Vorlage für ein Datenelement im Definieren der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Aktualisierungsvorgang, nachdem angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement das Element aktualisiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Aktualisieren" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement das Element aktualisiert. (Eine Schaltfläche "Aktualisieren" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Update" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Überprüfen der Ergebnisse des Updatevorgangs.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> Objekt übergeben wird, an den Ereignishandler, in dem Sie die Anzahl der betroffenen Zeilen ermitteln kann. Außerdem können Sie bestimmen, welche Ausnahmen aufgetreten sind. Sie können angeben, ob die Ausnahme im Ereignis Handler behandelt, indem wurde die <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> Objekt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Aktualisierungsvorgang, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement das Element aktualisiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemUpdating> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Aktualisieren" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement das Element aktualisiert. (Eine Schaltfläche "Aktualisieren" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Update" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Updatevorgang abgebrochen wird.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> Objekt übergeben wird, an den Ereignishandler, in dem Sie den Index des aktuellen Elements bestimmen kann. Außerdem können Sie angeben, dass der Update-Vorgang abgebrochen werden soll. Legen Sie zum Abbrechen des Update-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> -Objekt `true`.  
  
 Sie können mit arbeiten die <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, und <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> Sammlungen, bevor die Werte an die Datenquelle übergeben werden. Eine typische Herangehensweise an diese Sammlungen verwenden, ist für die HTML-Codierung die Werte, die vom Benutzer angegeben werden, bevor sie in der Datenquelle gespeichert werden. Dadurch wird das Script-Injection-Angriffe zu verhindern.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Hinzufügen eines ereignishandlers für das <xref:System.Web.UI.WebControls.ListView.ItemUpdating> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/CS/ListViewItemUpdatingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/VB/ListViewItemUpdatingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutCreated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> Vorlage wird erstellt, einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bevor Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage erstellt werden muss, um als Stammcontainer für das Steuerelement fungieren. Die <xref:System.Web.UI.WebControls.ListView.LayoutCreated> Ereignis wird ausgelöst, wenn die Layoutvorlage in der <xref:System.Web.UI.WebControls.ListView> Steuerelement erstellt wird. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für den Stammcontainer in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für den Stammcontainer in enthält eine <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Eigenschaft, um eine benutzerdefinierte Benutzeroberfläche (UI) für den Stammcontainer der definieren die <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 Fügen Sie zum Angeben der Layoutvorlage für einen `LayoutTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `LayoutTemplate` Element.  
  
 Die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Inhalt umfasst ein Platzhaltersteuerelement z. B. eine Tabellenzeile (`tr`)-Element für die Elemente, die von definiert werden die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage oder für Gruppen, die von definiert sind die <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage. Das Platzhaltersteuerelement benötigen die `runat` -Attribut auf "Server" festgelegt und die `ID` Attribut festgelegt wird, auf den Wert des der <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> oder <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> -Eigenschaft, je nachdem, ob die <xref:System.Web.UI.WebControls.ListView> Steuerelement wird mithilfe von Gruppen.  
  
 Die <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage ist nicht erforderlich, durch die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Können Sie die <xref:System.Web.UI.WebControls.ListView> zu steuern, ohne eine <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> und auch ohne ein Platzhaltersteuerelement für Server mit einer bekannten ID  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine benutzerdefinierte Vorlage für den Stammcontainer im Definieren der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement ohne die Definition einer <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage im Steuerelement. Ein Serversteuerelement mit einer bekannten ID wird ebenfalls nicht angegeben.  
  
```  
<asp:ListView ID="ListView1" runat="server">  
  <ItemTemplate>  
    <% Eval("LastName")%>  
  </ItemTemplate>  
</asp:ListView>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den gespeicherten Zustand für das Steuerelement enthält.</param>
        <summary>Lädt den Zustand der Eigenschaften in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement, das beibehalten werden muss, auch dann, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" /> -Eigenschaftensatz auf <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das die gespeicherten Ansichtszustandswerte für das Steuerelement enthält.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.ListView" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient in erster Linie durch die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden. Allerdings können Entwickler von Steuerelementen überschreiben Sie diese Methode, um anzugeben, wie ein benutzerdefiniertes Serversteuerelement seinen Ansichtszustand wiederherstellt. Weitere Informationen finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="protected virtual int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl von Elementen auf einer einzelnen Seite angezeigt werden sollen die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die maximale Anzahl von Elementen auf einer einzelnen Seite angezeigt werden sollen die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Web.UI.WebControls.DataPager> Objekt zugeordnet ist die <xref:System.Web.UI.WebControls.ListView> -Steuerelement, das <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> Eigenschaftswert wird gesteuert, indem die <xref:System.Web.UI.WebControls.DataPager> Objekt, und er ist identisch mit der <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> Eigenschaftswert. Der Wert ist, andernfalls-1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Bestimmt, ob ein Ereignis für die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement behandelt werden sollen.</summary>
        <returns>
          <see langword="true" />Wenn das Ereignis verarbeitet werden soll. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.OnBubbleEvent%2A> Methode wird verwendet, durch die <xref:System.Web.UI.WebControls.ListView> Steuerelement optional Ereignisse behandeln, die in der Steuerelementhierarchie nach oben übergeben werden. Sie bestimmt, ob für die Ereignisbehandlung durch Untersuchen der Eigenschaften von der <xref:System.EventArgs> -Objekt, das in enthalten sind die `e` Parameter. Wenn ein Ereignis verarbeitet werden muss, führt die Methode die entsprechende Aktion aus. Andere Ereignisse werden ignoriert und der Steuerelementhierarchie nach oben übergeben. Der Rückgabewert dieser Methode gibt an, ob das Ereignis behandelt oder das Ereignis in der Steuerelementhierarchie nach oben übergeben.  
  
 Die <xref:System.Web.UI.WebControls.ListView> Steuerelement überschreibt die basisimplementierung dieser Methode die entsprechende Aktion ausführen, wenn eine der Schaltflächen, das vom Steuerelement erkannt wird geklickt wird. Die folgende Tabelle enthält die Schaltflächen, die die <xref:System.Web.UI.WebControls.ListView> Steuerelement erkanntes.  
  
|CommandName-Wert|Beschreibung|  
|-----------------------|-----------------|  
|"Cancel"|Bricht einen bearbeiten oder Insert-Vorgang ab. Löst das <xref:System.Web.UI.WebControls.ListView.ItemCanceling>-Ereignis aus.|  
|"Löschen"|Löscht den aktuellen Datensatz aus der Datenquelle an. Löst das <xref:System.Web.UI.WebControls.ListView.ItemDeleted> und <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignisse.|  
|"Wählen Sie"|Legt die <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft, um die <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> Eigenschaftswert für das Element. Rendert die <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> und <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignisse.|  
|"Bearbeiten"|Legt das Element im Bearbeitungsmodus befindet. Rendert die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage für das Element. Löst das <xref:System.Web.UI.WebControls.ListView.ItemEditing>-Ereignis aus.|  
|"Einfügen"|Fügt die gebundenen Werte aus der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage in der Datenquelle. Löst das <xref:System.Web.UI.WebControls.ListView.ItemInserting> und <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignisse.|  
|"Update"|Aktualisiert den aktuellen Datensatz in der Datenquelle mit den gebundenen Werten aus der <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Vorlage. Löst das <xref:System.Web.UI.WebControls.ListView.ItemUpdating> und <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignisse.|  
|"Sortieren"|Sortiert die Spalten aufgeführt, die der `CommandArgument` -Eigenschaft der Schaltfläche. Löst das <xref:System.Web.UI.WebControls.ListView.Sorting> und <xref:System.Web.UI.WebControls.ListView.Sorted> Ereignisse.|  
  
 Diese Version der Methode gibt `true` , wenn eine der folgenden Schaltflächen löst ein Ereignis aus, die vom Steuerelement behandelt wird. Weitere Informationen zu Ereignis bubbling, finden Sie unter [NIB: Ereignisse und Delegaten](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Benachrichtigung durch diese Methode müssen Webserversteuerelemente alle Initialisierungsschritte ausführen, die zum Erstellen und Einrichten einer Instanz erforderlich sind. In dieser Phase des Lebenszyklus des Serversteuerelements hat Ansichtszustand des Steuerelements noch nicht aufgefüllt. Darüber hinaus können Sie beim diese Methode aufgerufen wird, unabhängig davon, ob es sich um ein untergeordnetes oder übergeordnetes dieses Steuerelements ist, anderen Serversteuerelementen zugreifen. Andere Steuerelemente sind nicht unbedingt erstellt und für den Zugriff bereit.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnInit%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCanceling">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCanceling (System.Web.UI.WebControls.ListViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCanceling(class System.Web.UI.WebControls.ListViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemCanceling> Ereignis aus, wenn eine Schaltfläche "Abbrechen", in das Steuerelement geklickt wird, jedoch vor dem Beenden einfügen oder Bearbeitungsmodus befindet. (Eine Schaltfläche "Abbrechen" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Cancel" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. beenden den Vorgang "Abbrechen", wenn das Element in einem unbeabsichtigten Zustand gelangen würde.  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.ListView.ItemCanceling> Ereignis. Es wird in der Regel von Steuerelemententwicklern verwendet, wenn das Erweitern der <xref:System.Web.UI.WebControls.ListView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für das <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.ListViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.ListViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in einer Elementvorlage geklickt wird, aber bevor der Befehl ausgeführt wird. Dadurch können Sie eine benutzerdefinierte Routine als Reaktion auf die angegebene ausführen <xref:System.Web.UI.WebControls.Button.CommandName%2A> oder <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Wert bei jedem dieses Ereignisses auftreten.  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.ListView.ItemCommand> Ereignis. Es wird in der Regel von Steuerelemententwicklern verwendet, wenn das Erweitern der <xref:System.Web.UI.WebControls.ListView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, eine <xref:System.Web.UI.WebControls.ListViewItem> Objekt muss für jedes Element im Steuerelement erstellt werden. Die <xref:System.Web.UI.WebControls.ListView.ItemCreated> Ereignis wird ausgelöst, wenn jedes Element in der <xref:System.Web.UI.WebControls.ListView> Steuerelement erstellt wird. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Hinzufügen von Inhalt zu einem Element.  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.ListView.ItemCreated> Ereignis. Es wird in der Regel von Steuerelemententwicklern verwendet, wenn das Erweitern der <xref:System.Web.UI.WebControls.ListView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bevor Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, muss jedes Element im Steuerelement zu einem Datensatz in der Datenquelle gebunden werden. Die <xref:System.Web.UI.WebControls.ListView.ItemDataBound> Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.ListViewItem> Objekt an ein Datenelement gebunden ist. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Werte des Datenelements während des Bindungsvorgangs ändern.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemDataBound%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> in einer abgeleiteten Klasse müssen Sie zum Aufrufen der Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.ListViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.ListViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemDeleted> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "löschen" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht das Element. (Eine Schaltfläche zum Löschen ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Löschen" (Delete) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Überprüfen der Ergebnisse des Löschvorgangs.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemDeleted%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.ListViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.ListViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemDeleting> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "löschen" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement löscht das Element. (Eine Schaltfläche zum Löschen ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Löschen" (Delete) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Delete-Vorgang abgebrochen wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemDeleting%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement ist nicht an ein Datenquellen-Steuerelement gebunden, indem die <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> Eigenschaft.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnItemEditing (System.Web.UI.WebControls.ListViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemEditing(class System.Web.UI.WebControls.ListViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemEditing> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Bearbeiten", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.ListView> Steuerelement in den Bearbeitungsmodus wechselt. (Eine Schaltfläche zum Bearbeiten ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf "Bearbeiten" (Edit) festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Bearbeitung abbrechen.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemEditing%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement ist nicht an ein Datenquellen-Steuerelement gebunden, indem die <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> Eigenschaft.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.ListViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.ListViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis wird ausgelöst, wenn ein Element einfügen geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement fügt das Element. (Eine Einfügeschaltfläche ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Einfügen" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Abrufen automatisch generierter Werte aus der Datenbank für das eingefügte Element.  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis. Es wird in der Regel von Steuerelemententwicklern verwendet, wenn das Erweitern der <xref:System.Web.UI.WebControls.ListView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.ListViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.ListViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemInserting> Ereignis aus, wenn eine Schaltfläche zum Einfügen in das Steuerelement geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement einfügen des Datensatzes. (Eine Einfügeschaltfläche ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Einfügen" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. HTML-Codierung, oder überprüfen die Werte eines Datensatzes, bevor er in der Datenquelle eingefügt wird.  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.ListView.ItemInserting> Ereignis. Es wird in der Regel von Steuerelemententwicklern verwendet, wenn das Erweitern der <xref:System.Web.UI.WebControls.ListView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement ist nicht an ein Datenquellen-Steuerelement gebunden, indem die <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> Eigenschaft.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.ListViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.ListViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemUpdated> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Aktualisieren" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement das Element aktualisiert. (Eine Schaltfläche "Aktualisieren" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Update" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Überprüfen der Ergebnisse des Updatevorgangs.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemUpdated%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.ListViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.ListViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.ItemUpdating> Ereignis wird ausgelöst, wenn ein Element der Schaltfläche "Aktualisieren" geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement das Element aktualisiert. (Eine Schaltfläche "Aktualisieren" ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Update" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die Updatevorgang abgebrochen wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnItemUpdating%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement ist nicht an ein Datenquellen-Steuerelement gebunden, indem die <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> Eigenschaft.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement gerendert werden kann, eine <xref:System.Web.UI.WebControls.ListViewItem> Objekt fungieren als Container für das Steuerelement erstellt werden muss. Die <xref:System.Web.UI.WebControls.ListView.LayoutCreated> Ereignis wird ausgelöst, wenn die Layoutvorlage, in erstellt wird der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Ändern der Sichtbarkeit eines Steuerelements, das in, das <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> Vorlage.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnLayoutCreated%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> Ereignis wird ausgelöst, wenn die Seiteneigenschaften geändert werden, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte mithilfe der <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> Methode. Dadurch können Sie eine benutzerdefinierte Routine, wie z. B. einen benutzerdefinierten Pagingvorgang durchführen, wenn dieses Ereignis tritt auf.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanging (System.Web.UI.WebControls.PagePropertiesChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanging(class System.Web.UI.WebControls.PagePropertiesChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PagePropertiesChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> Ereignis wird ausgelöst, wenn die Seiteneigenschaften geändert werden, aber vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte mithilfe der <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> Methode. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Löschen der <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> oder <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> Eigenschaften.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignis wird ausgelöst, wenn ein Element auswählen-Schaltfläche, nachdem geklickt wird die <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. (Eine Schaltfläche auswählen, ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Select" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. durch eine statusbezeichnung mit dem aktuell ausgewählten Element aktualisieren.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.ListViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.ListViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> Ereignis wird ausgelöst, wenn ein Element auswählen-Schaltfläche geklickt wird, aber vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. (Eine Schaltfläche auswählen, ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Select" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. den ausgewählte Vorgang abbrechen.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für das <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />-Ereignis ist kein Handler vorhanden.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.Sorted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Sorted> Ereignis wird ausgelöst, wenn auf eine Sortierschaltfläche geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. (Eine Schaltfläche zum Sortieren ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Sort" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnSorted%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.ListViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.ListViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.Sorting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Sorting> Ereignis wird ausgelöst, wenn auf eine Sortierschaltfläche geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. (Eine Schaltfläche zum Sortieren ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Sort" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. Abbruch des Sortiervorgangs.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnSorting%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement ist nicht an ein Datenquellen-Steuerelement gebunden, indem die <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> Eigenschaft.</exception>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23TotalRowCountAvailable> Ereignis wird ausgelöst, wenn Daten verfügbar, für die <xref:System.Web.UI.WebControls.DataPager> Steuerelement.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [NIB: durch das Auslösen eines Ereignisses](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  
  
 Die <xref:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable%2A> -Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie außer Kraft setzen <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PagePropertiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PagePropertiesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Seiteneigenschaften geändert werden, nachdem die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement legt die neuen Werte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> Ereignis wird ausgelöst, wenn die Seiteneigenschaften geändert werden, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte mithilfe der <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> Methode. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Löschen des ausgewählten Elements oder ein benutzerdefiniertes Paging-Vorgang.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Seiteneigenschaften geändert werden, jedoch bevor die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement legt die neuen Werte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> Ereignis wird ausgelöst, wenn die Seiteneigenschaften geändert werden, aber vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement legt die neuen Werte mithilfe der <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> Methode. Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. das Löschen der <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> oder <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> Eigenschaften.  
  
 Ein <xref:System.Web.UI.WebControls.PagePropertiesChangingEventArgs> Objekt an den Ereignishandler, dadurch können Sie den Index des ersten Datensatzes, der auf der Seite angezeigten bestimmen übergeben wird. Außerdem können Sie bestimmen, die maximale Anzahl von Elementen auf einer einzelnen Seite angezeigt werden sollen.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie erstellen einen Ereignishandler für das <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein Objekt, implementiert die <see cref="T:System.Collections.IEnumerable" /> -Schnittstelle, und dass die Daten enthält.</param>
        <summary>Bindet die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement an die angegebene Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement zum Binden des Steuerelements an die angegebene Datenquelle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> -Methode versiegelt ist, müssen Sie überschreiben die <see cref="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" /> Methode, wenn zusätzliche Aufgaben beim Binden von Daten zu ausgeführt werden sollen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformSelect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Daten aus der zugeordneten Datenquelle ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> Methode wird aufgerufen, nachdem die Daten abgerufen werden, um das datengebundene Steuerelement an Daten binden. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.RemoveItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht alle untergeordneten Steuerelemente in einem Container Element oder eine Gruppe, der die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um alle untergeordneten Steuerelemente in einem Container Element oder eine Gruppe von Löschen der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Haben eine <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> Vorlage definiert, der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, das <xref:System.Web.UI.WebControls.ListView.RemoveItems%2A> Methode werden alle untergeordneten Steuerelemente im Gruppencontainer entfernt. Andernfalls wird er alle untergeordneten Steuerelemente in Elementcontainers entfernen.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Das Objekt, das zum Rendern des Inhalts des Serversteuerelements im Browser des Clients verwendet wird.</param>
        <summary>Rendert die Webserverinhalte an den Clientbrowser mit dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Render%2A> Methode wird verwendet, um den Inhalt des Serversteuerelements an den Clientbrowser gerendert wird, unter Verwendung des angegebenen <xref:System.Web.UI.HtmlTextWriter> Objekt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der Eigenschaften in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement, das beibehalten werden muss, auch dann, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" /> -Eigenschaftensatz auf <see langword="false" />.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück. Wenn dem Steuerelement kein Ansichtszustand zugeordnet ist, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Status der Eigenschaften im Speichern der <xref:System.Web.UI.WebControls.ListView> Steuerelement, das beibehalten werden muss, auch dann, wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <returns>Ein Objekt, das den gespeicherten Ansichtszustand enthält Werte für die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.SaveViewState%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement den Zustand des Steuerelements zu speichern. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel zur-Wert für das ausgewählte Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die Daten Schlüssel für das ausgewählte Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Die Standardeinstellung ist <see langword="null" />, was bedeutet, dass aktuell kein Element ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.ListView> -Steuerelements erstellt eine <xref:System.Web.UI.WebControls.DataKey> Objekt für jedes Element im Steuerelement mit dem Wert oder die Werte des angegebenen Felds oder der Felder. Die <xref:System.Web.UI.WebControls.DataKey> Objekte werden dann an des Steuerelements hinzugefügt <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Auflistung. In der Regel wird die <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Eigenschaft dient zum Abrufen der <xref:System.Web.UI.WebControls.DataKey> -Objekt für ein bestimmtes Datenelement in der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Jedoch wenn nur abgerufen werden sollen die <xref:System.Web.UI.WebControls.DataKey> Objekt des derzeit ausgewählten Elements können Sie die <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> -Eigenschaft, wie eine Verknüpfung.  
  
 Mithilfe der <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> Eigenschaft entspricht dem Abrufen der <xref:System.Web.UI.WebControls.DataKey> -Objekt aus der <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Auflistung an der vom angegebenen Index der <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft. Sie können auch die <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> Eigenschaft, um den Daten-Schlüssel-Wert für das aktuell ausgewählte Element direkt abzurufen.  
  
 Wenn Sie erstellen eine <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, und Sie darauf zugreifen möchten ein Schlüsselfeld als das erste Feld, verwenden Sie die indizierte <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> Eigenschaft in der <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> Eigenschaft der <xref:System.Web.UI.WebControls.ControlParameter> Objekt.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie das zweite Schlüsselfeld als Parameter in einem Master/Detail-Szenario verwendet wird. Ein <xref:System.Web.UI.WebControls.ListView> Steuerelement wird verwendet, um Datensätze aus der Produktbestands-Tabelle der AdventureWorks-Datenbank anzuzeigen. Wenn ein Element ausgewählt ist, der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, die Details des Produkts angezeigt werden, in einer anderen <xref:System.Web.UI.WebControls.ListView> Steuerelement. "ProductID" ist der zweite Name in der ersten <xref:System.Web.UI.WebControls.ListView> Steuerelement. Der zweite Schlüssel für den Zugriff auf der Code verwendet den Wert der `ProductInventoryListView.SelectedDataKey[1]` (`ProductInventoryListView.SelectedDataKey(1)` in Visual Basic) als die <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> für die <xref:System.Web.UI.WebControls.ControlParameter> Objekt. Diese Parameterobjekts wird wiederum von verwendet die <xref:System.Web.UI.WebControls.SqlDataSource> zu steuern, die zweite <xref:System.Web.UI.WebControls.ListView> Steuerelement gebunden ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/CS/ListViewSelectedDataKeyCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/VB/ListViewSelectedDataKeyVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Keine Datenschlüssel werden angegeben, der <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Index des ausgewählten Elements in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Der nullbasierte Index des ausgewählten Elements in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist-1 und bedeutet, dass aktuell kein Element ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> -Eigenschaft bestimmt den Index des derzeit ausgewählten Elements in einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Diese Eigenschaft können auch programmgesteuert ein Element im Steuerelement auswählen. (Jedoch, wenn Sie manuell Data-Bind der <xref:System.Web.UI.WebControls.ListView> Steuerelement Sie u. u. verarbeiten lesen oder durch Festlegen dieser Eigenschaft ebenfalls manuell.)  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft, um zu bestimmen, ob ein Element, in ausgewählt ist einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> Methode.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> Eigenschaft auf einen Wert kleiner als-1 festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Element auswählen-Schaltfläche, nachdem geklickt wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement den Auswahlvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignis wird ausgelöst, wenn ein Element auswählen-Schaltfläche, nachdem geklickt wird die <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. (Eine Schaltfläche auswählen, ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Select" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. durch eine statusbezeichnung mit Informationen über das aktuell ausgewählte Element aktualisieren.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie erstellen einen Ereignishandler für das <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Element auswählen-Schaltfläche geklickt wird, aber vor der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement den Auswahlvorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> Ereignis wird ausgelöst, wenn ein Element auswählen-Schaltfläche geklickt wird, aber vor der <xref:System.Web.UI.WebControls.ListView> Steuerelement den Auswahlvorgang. (Eine Schaltfläche auswählen, ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Select" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. die select-Vorgang abgebrochen wird.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> Eigenschaft.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> Objekt wird an den Ereignishandler, wodurch Sie den Index des Elements zu ermitteln, die vom Benutzer ausgewählt wurde übergeben. Außerdem können Sie angeben, dass der ausgewählte Vorgang abgebrochen werden soll. Legen Sie zum Abbrechen des ausgewählte Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie erstellen einen Ereignishandler für das <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/CS/ListViewItemSelectedIndexChangingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/VB/ListViewItemSelectedIndexChangingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die benutzerdefinierte Inhalte für das ausgewählte Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Ein Objekt, das die benutzerdefinierte Inhalte für das ausgewählte Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> Eigenschaft definieren Sie eine benutzerdefinierte Benutzeroberfläche (UI) für das ausgewählte Element in einem <xref:System.Web.UI.WebControls.ListView> Steuerelement. Die <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> wird normalerweise verwendet, um das ausgewählte Element aus der anderen angezeigten Elemente zu unterscheiden. <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>wird gerendert, statt die <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> Vorlage für das ausgewählte Element.  
  
 Um die benutzerdefinierte Vorlage deklarativ anzugeben, fügen Sie eine `SelectedItemTemplate` Element innerhalb der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zum Hinzufügen der `SelectedItemTemplate` Element. Um die Feldwerte der Datenquelle anzuzeigen, die an das Steuerelement gebunden ist, verwenden Sie einen Datenbindungsausdruck. Weitere Informationen finden Sie unter [Datenbindungsfunktionen Expressions Overview](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Sie können auch die Schaltflächen zum Hinzufügen der <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>. Zum Erstellen von Schaltflächen, die die integrierte löschen und Bearbeiten von Vorgänge ausgeführt, fügen Sie ein Button-Steuerelement auf die Vorlage, und legen seine <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltflächentyp|CommandName-Wert|  
|-----------------|-----------------------|  
|Löschen|"Löschen"|  
|Bearbeiten|"Bearbeiten"|  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> Eigenschaft definiert den Inhalt des ausgewählten Elements in der <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Daten-Schlüssel-Wert für das beibehaltene ausgewählte Element in einem datengebundenen Steuerelement.</summary>
        <value>Der Dek für den beibehaltenen Element in einem datengebundenen Steuerelement ausgewählt. Die Standardeinstellung ist <see langword="null" />, was bedeutet, dass aktuell kein Element ausgewählt ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel zur-Wert, der das ausgewählte Element in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Die Daten-Schlüssel-Wert des ausgewählten Elements in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> Eigenschaft kann festgelegt werden, um eine durch Trennzeichen getrennte Liste von Feldnamen, die den Primärschlüssel der Datenquelle darstellen. Wenn er festgelegt ist, die <xref:System.Web.UI.WebControls.ListView> -Steuerelement erstellt automatisch eine <xref:System.Web.UI.WebControls.DataKey> Objekt für jedes Element im Steuerelement mit dem Wert oder die Werte des angegebenen Felds oder der Felder. Die <xref:System.Web.UI.WebControls.DataKey> Objekte werden dann an des Steuerelements hinzugefügt <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Auflistung.  
  
 In der Regel wird die <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> Eigenschaft dient zum Abrufen der <xref:System.Web.UI.WebControls.DataKey> -Objekt für ein bestimmtes Datenelement in der <xref:System.Web.UI.WebControls.ListView> Steuerelement. Jedoch wenn nur abgerufen werden soll die <xref:System.Web.UI.WebControls.DataKey> Objekt des derzeit ausgewählten Elements können Sie die <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> -Eigenschaft, wie eine Verknüpfung. Sie können auch direkt den Daten-Schlüssel-Wert, der das erste Schlüsselfeld des ausgewählten Elements bestimmen, mit der <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> Eigenschaft.  
  
 Wenn Sie erstellen eine <xref:System.Web.UI.WebControls.ControlParameter> -Objekt und ein Schlüsselfeld außer dem ersten Feld, Verwendung zugreifen möchten, die <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> Eigenschaft. Ein Beispiel finden Sie die <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie das erste Schlüsselfeld als Parameter in einem Master/Detail-Szenario verwendet wird. Wenn ein Element ausgewählt ist, der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, das <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> Eigenschaft dient als der <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> für die <xref:System.Web.UI.WebControls.ControlParameter> Objekt. Diese Parameterobjekts wird wiederum von verwendet die <xref:System.Web.UI.WebControls.SqlDataSource> zu steuern, die zweite <xref:System.Web.UI.WebControls.ListView> Steuerelement gebunden ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> Eigenschaft, um den Wert des Schlüsselfelds zu bestimmen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/CS/ListViewSelectedValueCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/VB/ListViewSelectedValueVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectItem">
      <MemberSignature Language="C#" Value="public void SelectItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index des Elements, das sich im Bearbeitungsmodus befindet.</param>
        <summary>Wählt das Element, das im Bearbeitungsmodus in ist eine <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Elementindex ist negativ.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEditItem">
      <MemberSignature Language="C#" Value="public void SetEditItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index des Elements, das in den Bearbeitungsmodus.</param>
        <summary>Legt das angegebene Element im Bearbeitungsmodus in einem <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.EditItem%2A> Eigenschaft, um den Zugriff auf das Element, das im Bearbeitungsmodus in eingefügt wird ein <xref:System.Web.UI.WebControls.ListView> Steuerelement. Der Inhalt eines Elements bearbeiten wird definiert, indem die <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> Eigenschaft.  
  
 Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.ItemEditing> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">Der Index des ersten Datensatzes auf der Seite.</param>
        <param name="maximumRows">Die maximale Anzahl von Elementen auf einer Seite.</param>
        <param name="databind">
          <see langword="true" />das Steuerelement erneut binden, nachdem die Eigenschaften festgelegt werden; andernfalls <see langword="false" />.</param>
        <summary>Legt die Eigenschaften einer Seite der Daten in der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumRows" /> ist kleiner als 1.  
  
 - oder -   
  
 <paramref name="startRowIndex" /> ist kleiner als 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">Der Sortierausdruck zum Sortieren der <see cref="T:System.Web.UI.WebControls.ListView" /> mit steuern.</param>
        <param name="sortDirection">Einer der <see cref="T:System.Web.UI.WebControls.SortDirection" />-Werte.</param>
        <summary>Sortiert die <see cref="T:System.Web.UI.WebControls.ListView" /> -Steuerelement, abhängig von der angegebenen Sortierungsausdruck und Richtung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.Sort%2A> -Methode programmgesteuert sortieren die Daten, die in angezeigt wird der <xref:System.Web.UI.WebControls.ListView> Steuerelement unter Verwendung des angegebenen Sortierungsausdruck und Richtung. Der Sortierausdruck gibt die Spalte oder Spalten sortieren mit. Um mehrere Spalten zu sortieren, erstellen Sie einen Sortierungsausdruck an, der eine durch Trennzeichen getrennte Liste von Feldnamen enthält. Die Sortierreihenfolge gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge durchgeführt wird.  
  
 Diese Methode wird in der Regel verwenden, wenn Sie den Inhalt der sortieren möchten die <xref:System.Web.UI.WebControls.ListView> steuern, von außerhalb der Kontrolle wie z. B. von einem anderen Steuerelement auf der Seite. Diese Methode dient auch programmgesteuert eine Standardsortierreihenfolge für Festlegen der <xref:System.Web.UI.WebControls.ListView> steuern, wann er zunächst gerendert wird.  
  
 Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.Sorted> und <xref:System.Web.UI.WebControls.ListView.Sorting> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.Sort%2A> -Methode programmgesteuert sortiert die <xref:System.Web.UI.WebControls.ListView> Kontrolle durch mehrere Datenfelder.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.ListView" /> gebunden ist, ein Datenquellen-Steuerelement, aber die <see cref="T:System.Web.UI.DataSourceView" /> Objekt, das mit der Datenquelle verknüpft ist, ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sortierrichtung des Felds oder der Felder, die sortiert wird, werden ab.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SortDirection" />-Werte. Die Standardeinstellung ist <see langword="SortDirection.Ascending" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> -Eigenschaft können Sie bestimmen, ob das Feld oder Felder, die zu sortierenden in aufsteigender oder absteigender Reihenfolge sortiert werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> Eigenschaft, um die Sortierreihenfolge der programmgesteuert zu ermitteln einer <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Sortiervorgang, nachdem angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement behandelt den Sortiervorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Sorted> Ereignis wird ausgelöst, wenn auf eine Sortierschaltfläche geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, nachdem die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. (Eine Schaltfläche zum Sortieren ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Sort" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sortierungsausdruck, der das Feld oder Felder, die sortiert wird, werden zugeordnet ist.</summary>
        <value>Der Sortierausdruck, der das Feld oder Felder, die sortiert wird, werden zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn mehrere Spalten sortiert sind, enthält diese Eigenschaft eine durch Trennzeichen getrennte Liste der Felder, die nach zu sortieren.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.SortExpression%2A> Eigenschaft, um die Spalte programmgesteuert zu ermitteln, die in sortiert wird ein <xref:System.Web.UI.WebControls.ListView> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Sortiervorgang, jedoch bevor angefordert wird die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement behandelt den Sortiervorgang.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.Sorting> Ereignis wird ausgelöst, wenn auf eine Sortierschaltfläche geklickt wird oder die <xref:System.Web.UI.WebControls.ListView.Sort%2A> Methode aufgerufen wird, jedoch bevor die <xref:System.Web.UI.WebControls.ListView> Steuerelement behandelt den Sortiervorgang. (Eine Schaltfläche zum Sortieren ist ein Schaltflächensteuerelement, dessen <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft auf "Sort" festgelegt ist.) Dadurch können Sie eine benutzerdefinierte Routine durchführen, wenn dieses Ereignis tritt auf, z. B. den Sortierungsausdruck anpassen.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewSortEventArgs> Objekt übergeben wird, an den Ereignishandler, dadurch können Sie den Sortierungsausdruck für die Spalte zu bestimmen. Außerdem können Sie angeben, dass der Sortiervorgang abgebrochen werden soll. Legen Sie zum Abbrechen des Sortiervorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.ListViewSortEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie erstellen einen Ereignishandler für das <xref:System.Web.UI.WebControls.ListView.Sorting> Ereignis.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/CS/ListViewSortingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/VB/ListViewSortingVB.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="protected virtual int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des ersten Datensatzes, der auf eine Seite mit Daten in angezeigt wird der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>Der Index des ersten Datensatzes, der auf einer Seite der Daten in angezeigt wird der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Datenwerte, die verwendet werden, um jede Instanz eines datengebundenen Steuerelements eindeutig zu identifizieren, wenn ASP.NET generiert die <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</summary>
        <value>Eine Auflistung der Datenfeld Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.IDataKeysControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Array, das die Namen der primären Schlüsselfelder der Elemente enthält, die in einem datengebundenen Steuerelement angezeigt werden.</summary>
        <value>Ein Array, das die Namen der primären Schlüsselfelder der Elemente enthält, die in einem datengebundenen Steuerelement angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Liste der Daten, denen das datengebundene Steuerelement gebunden wird, wenn die Datenquelle mehr als eine unterschiedliche Liste der Datenelemente enthält.</summary>
        <value>Der Name der Liste der Daten, denen an ein datengebundenes Steuerelement bindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Objekt aus dem ein datengebundenes Steuerelement seine Liste mit Datenelementen abruft.</summary>
        <value>Das Objekt, das die Liste der Daten enthält, die ein datengebundenes Steuerelement abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die ID des Datenquellen-Steuerelements aus dem ein datengebundenes Steuerelement seine Liste mit Datenelementen abruft.</summary>
        <value>Die ID eines Steuerelements, das die Datenquelle darstellt, von der ein datengebundenes Steuerelement seine Daten abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt, implementiert die <see cref="T:System.Web.UI.IDataSource" /> -Schnittstelle, die Zugriff auf den Inhalt des Objekts Daten bereitstellt.</summary>
        <value>Das Datenquellenobjekt, das die Liste der Datenelemente enthält, die ein datengebundenes Steuerelement abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenfelds, dessen Wert zur eindeutigen Identifizierung jeder Datenzeile dient, ab einem <see cref="T:System.Web.UI.WebControls.ListView" /> steuern, wann die <see cref="P:System.Web.UI.Control.ClientIDMode" /> -Eigenschaftensatz auf <see cref="F:System.Web.UI.ClientIDMode.Predictable" />.</summary>
        <value>Der Name des Datenfelds, dessen Wert zur eindeutigen Identifizierung jeder Instanz von dient, einem <see cref="T:System.Web.UI.WebControls.ListView" /> steuern, wenn ASP.NET generiert die <see cref="P:System.Web.UI.Control.ClientID" /> Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.IDataKeysControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Schlüssel zur-Werte, die jede Zeile in einem datengebundenen Steuerelement darstellen.</summary>
        <value>Ein Array, das die Schlüssel zur Werte der einzelnen Zeilen in einem datengebundenen Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundListControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Wert, der angibt, ob eine ausgewählte Zeile weiterhin auftritt, wenn ein Benutzer durch die Daten in einem datengebundenen Steuerelement fest.</summary>
        <value>
          <see langword="true" />Wenn die Auswahl auf Datenschlüsseln basiert; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundListControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel zur-Objekt, das die Daten-Schlüssel-Wert für die ausgewählte Zeile in einem datengebundenen Steuerelement enthält.</summary>
        <value>Ein Objekt, das Daten-Schlüssel-Wert für die ausgewählte Zeile in einem datengebundenen Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundListControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Index der ausgewählten Zeile in einem datengebundenen Steuerelement.</summary>
        <value>Der Index der ausgewählten Zeile in einem datengebundenen Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundListControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />.</summary>
        <value>Die maximale Anzahl von Elementen auf einer einzelnen Seite angezeigt werden sollen die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23MaximumRows%2A> Eigenschaft verwendet den Wert der <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> Eigenschaft, um die maximale Anzahl von Elementen auf einer einzelnen Seite angezeigt werden sollen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties">
      <MemberSignature Language="C#" Value="void IPageableItemContainer.SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">Der Index des ersten Datensatzes auf der Seite.</param>
        <param name="maximumRows">Die maximale Anzahl von Elementen auf einer Seite.</param>
        <param name="databind">
          <see langword="true" />das Steuerelement erneut binden, nachdem die Eigenschaften festgelegt werden; andernfalls <see langword="false" />.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23SetPageProperties%2A> Methode ruft die <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> Methode der <xref:System.Web.UI.WebControls.ListView> Steuerelement, um die Seiteneigenschaften festzulegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />.</summary>
        <value>Der Index des ersten Datensatzes, der auf einer Seite der Daten in angezeigt wird der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23StartRowIndex%2A> Eigenschaft verwendet den Wert der <xref:System.Web.UI.WebControls.ListView.StartRowIndex%2A> Eigenschaft, um den Index des ersten Datensatzes, der auf der Seite angezeigt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Daten-Schlüssel-Wert für den ausgewählten Datensatz in einem datengebundenen Steuerelement.</summary>
        <value>Der Schlüssel zur Wert für den ausgewählten Datensatz in einem datengebundenen Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.ListView>-Instanz in eine <xref:System.Web.UI.WebControls.IPersistedSelector>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see langword="0" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.TabIndex%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.String.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.ToolTip%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> Eigenschaft.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (int itemIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(int32 itemIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der Index des zu aktualisierenden Elements.</param>
        <param name="causesValidation">
          <see langword="true" />um die Validierung ausführen, wenn diese Methode aufgerufen wird; andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert den Datensatz am angegebenen Index in der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode, um den Datensatz am angegebenen Index in der Datenquelle programmgesteuert aktualisieren. Diese Methode wird in der Regel verwenden, wenn Sie, zum Aktualisieren eines Datensatzes von außerhalb möchten der <xref:System.Web.UI.WebControls.ListView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Diese Methode kann nur für ein Element aufgerufen werden, die ein bidirektionales datengebundenen Eingabesteuerelement enthält. Weitere Informationen zu Ausdrücken bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).  
  
 Um anzugeben, ob die seitenüberprüfung vor dem Updatevorgang ausgeführt wird, verwenden die `causesValidation` Parameter.  
  
 Diese Methode löst die <xref:System.Web.UI.WebControls.ListView.ItemUpdated> und <xref:System.Web.UI.WebControls.ListView.ItemUpdating> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> Methode, um programmgesteuert aktualisiert eine <xref:System.Web.UI.WebControls.ListView> Element in der Datenquelle.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/CS/ListViewUpdateItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/VB/ListViewUpdateItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> ist kleiner als 0.  
  
 - oder -   
  
 Die <see cref="T:System.Web.UI.DataSourceView" /> -Objekt, das zugeordnet ist die <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_UpdateMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen der Methode aufrufen, um Daten zu aktualisieren.</summary>
        <value>Der Name der Methode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft führt dazu, dass die modellbindung als die Methode für die Datenbindung verwendet werden soll.  
  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überschreibt die <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> Eigenschaft. Durch Festlegen dieser Eigenschaft wird nicht von der <see cref="T:System.Web.UI.WebControls.ListView" /> Steuerelement.</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, die angibt, dass die Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stileigenschaften werden nicht unterstützt, indem Sie die <xref:System.Web.UI.WebControls.ListView> Steuerelement. Wenn Sie versuchen, legen Sie die <xref:System.Web.UI.WebControls.ListView.Width%2A> -Eigenschaft, ein <xref:System.NotSupportedException> Ausnahme wird ausgelöst. Wenn Sie die Eigenschaft abrufen, wird den Standardwert der entsprechenden Eigenschaft der Basisklasse zurückgegeben.  
  
 Stil der <xref:System.Web.UI.WebControls.ListView> -Steuerelement, müssen Sie die Steuerelemente in einer Formatieren der <xref:System.Web.UI.WebControls.ListView> Vorlagen mithilfe von cascading style Sheets (CSS) Klassen oder Inline Style-Elemente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Es wurde versucht, Festlegen der <see cref="P:System.Web.UI.WebControls.ListView.Width" /> Eigenschaft.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
