<Type Name="TableRowCollection" FullName="System.Web.UI.WebControls.TableRowCollection">
  <TypeSignature Language="C#" Value="public sealed class TableRowCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableRowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TableRowCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TableRowsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt eine Auflistung von <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte, die in eine einzelne Zeile darstellen einer <see cref="T:System.Web.UI.WebControls.Table" /> Steuerelement. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Klasse eine Auflistung von programmgesteuerte Verwaltung <xref:System.Web.UI.WebControls.TableRow> Objekte. Diese Klasse wird häufig zum Hinzufügen oder Entfernen von Zeilen aus einem <xref:System.Web.UI.WebControls.Table> Steuerelement.  
  
> [!NOTE]
>  Ein <xref:System.Web.UI.WebControls.Table> Steuerelement enthält eine <xref:System.Web.UI.WebControls.Table.Rows%2A> -Auflistung, die eine Auflistung von darstellt <xref:System.Web.UI.WebControls.TableRow> Objekte. Jede <xref:System.Web.UI.WebControls.TableRow> stellt eine einzelne Zeile in der Tabelle dar und enthält eine <xref:System.Web.UI.WebControls.TableRow.Cells%2A> -Auflistung, die eine Auflistung von darstellt <xref:System.Web.UI.WebControls.TableCell> Objekte. Diese <xref:System.Web.UI.WebControls.TableCell> -Objekte stellen die einzelnen Zellen in der Tabelle dar. Um eine einzelne Zelle zu erhalten, benötigen Sie zuerst eine <xref:System.Web.UI.WebControls.TableRow> aus der <xref:System.Web.UI.WebControls.Table.Rows%2A> Auflistung von einem <xref:System.Web.UI.WebControls.Table> Steuerelement. Sie erhalten dann einen <xref:System.Web.UI.WebControls.TableCell> aus der <xref:System.Web.UI.WebControls.TableRow.Cells%2A> Auflistung von der <xref:System.Web.UI.WebControls.TableRow>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie Zeilen einer Tabelle programmgesteuert durch Hinzufügen von hinzufügen <xref:System.Web.UI.WebControls.TableRow> Objekte, die die Zeilen der Tabelle darstellen der <xref:System.Web.UI.WebControls.Table> steuern, über die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft.  
  
 [!code-aspx-csharp[Classic TableRowCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic TableRowCollection Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic TableRowCollection Example/Common/source.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Add(System.Web.UI.WebControls.TableRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.TableRow" /> hinzuzufügendes Objekt die <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekt an das Ende der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Der Index des <see cref="T:System.Web.UI.WebControls.TableRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Hinzufügen einer <xref:System.Web.UI.WebControls.TableRow> Objekt am Ende einer <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A> -Methode zum Hinzufügen einer <xref:System.Web.UI.WebControls.TableRow> -Objekt an eine <xref:System.Web.UI.WebControls.TableRowCollection>. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddAt(System.Int32,System.Web.UI.WebControls.TableRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="index">Die Position in der <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> an dem Hinzufügen der <see cref="T:System.Web.UI.WebControls.TableRow" />.</param>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.TableRow" /> hinzuzufügendes Objekt die <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Fügt das angegebene <see cref="T:System.Web.UI.WebControls.TableRow" /> -Objekt an die <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> an der angegebenen Indexposition.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Einfügen der angegebenen <xref:System.Web.UI.WebControls.TableRow> in einem <xref:System.Web.UI.WebControls.TableRowCollection> am angegebenen Index.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Hinzufügen einer <xref:System.Web.UI.WebControls.TableRow> bis zum Mittelpunkt des Objekts ein <xref:System.Web.UI.WebControls.TableRowCollection>. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse.  
  
 [!code-aspx-csharp[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.WebControls.TableRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.WebControls.TableRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.AddRange(System.Web.UI.WebControls.TableRow[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Web.UI.WebControls.TableRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">Das Array mit den <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekten, die der Auflistung hinzugefügt.</param>
        <summary>Fügt der <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte aus dem angegebenen Array an das Ende der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> -Methode, um die <xref:System.Web.UI.WebControls.TableRow> -Objekte der Auflistung aus dem angegebenen Array. Diese Methode wird häufig verwendet, wenn Sie eine Tabelle erstellen. Um eine Tabelle zu erstellen, erstellen Sie zunächst ein Array von <xref:System.Web.UI.WebControls.TableRow> -Objekten, die die Zeilen der Tabelle darstellen. Verwenden Sie als Nächstes die <xref:System.Web.UI.WebControls.TableRowCollection.AddRange%2A> -Methode, die Übergabe von Arrays als Argument, zum Hinzufügen der <xref:System.Web.UI.WebControls.TableRow> -Objekte der Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert des <paramref name="rows" />-Parameters ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle <see cref="T:System.Web.UI.WebControls.TableRow" /> -Steuerelemente aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können alle entfernen <xref:System.Web.UI.WebControls.TableRow> Objekte aus der <xref:System.Web.UI.WebControls.TableRowCollection> und legen Sie die <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> Eigenschaft auf 0.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.Clear%2A> Methode, um alle entfernen <xref:System.Web.UI.WebControls.TableRow> Objekte aus der <xref:System.Web.UI.WebControls.TableRowCollection> der Tabelle und Ersetzen Sie sie mit den neuen <xref:System.Web.UI.WebControls.TableRow> Objekte.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein nullbasiertes <see cref="T:System.Array" />, das die kopierten Elemente aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> empfängt.</param>
        <param name="index">Die erste Position in der angegebenen <see cref="T:System.Array" /> an Inhalt kopiert wird.</param>
        <summary>Kopiert die Elemente aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> in den angegebenen <see cref="T:System.Array" />, beginnend mit dem angegebenen Index in die <see cref="T:System.Array" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Kopieren der Inhalte der <xref:System.Web.UI.WebControls.TableRowCollection> in die angegebene <xref:System.Array?displayProperty=nameWithType>, beginnend am angegebenen Index.  
  
> [!NOTE]
>  Die `array` Parameter muss eine nullbasierte <xref:System.Array?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.CopyTo%2A> Methode kopiert die Elemente aus der <xref:System.Web.UI.WebControls.TableRowCollection> in das angegebene Array.  
  
 [!code-aspx-csharp[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte in der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Die Anzahl der <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte in der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu bestimmen, die Anzahl der Zeilen in der <xref:System.Web.UI.WebControls.TableRowCollection>. Die <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> Eigenschaft wird häufig beim Durchlaufen des Auflistung zum Bestimmen der oberen Grenze verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> -Eigenschaft zum Bestimmen der Anzahl der Zeilen in der <xref:System.Web.UI.WebControls.TableRowCollection>. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse.  
  
 [!code-csharp[Classic TableRowCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic TableRowCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Collections.IEnumerator" /> implementiert-Objekt, das alle enthält <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte innerhalb der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" /> implementiert-Objekt, das alle enthält <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekte innerhalb der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Erstellen einer <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implementiert-Objekt, das zum Abrufen jedes einzelnen Elements im durchlaufen werden kann die <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
 Verwenden der <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> Eigenschaft, um das Element derzeit in der Auflistung verweist.  
  
 Verwenden der <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> -Methode zum nächsten Element in der Auflistung zu verschieben.  
  
 Verwenden der <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> Methode, um den Enumerator auf die ursprüngliche Position zurück.  
  
> [!NOTE]
>  Die <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> -Methode muss aufgerufen werden, nach dem Erstellen einer <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implementiert-Objekt oder mit der <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> Methode, um den Enumerator auf das erste Element in der Auflistung zu bewegen. Andernfalls das Element dargestellt, durch die <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> Eigenschaft ist nicht definiert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.GetEnumerator%2A> Methode zum Erstellen einer <xref:System.Collections.IEnumerator?displayProperty=nameWithType> implementiert-Objekt, das zum Anzeigen von Elementen in der Tabelle durchlaufen wird.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowIndex">
      <MemberSignature Language="C#" Value="public int GetRowIndex (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowIndex(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.GetRowIndex(System.Web.UI.WebControls.TableRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekt zu suchende in der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Gibt einen Wert, der den Index des angegebenen darstellt <see cref="T:System.Web.UI.WebControls.TableRow" /> aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <returns>Die Position der Ordinalindex des angegebenen <see cref="T:System.Web.UI.WebControls.TableRow" /> innerhalb der Auflistung. Der Standardwert ist-1 und, die bedeutet den angegebenen <see cref="T:System.Web.UI.WebControls.TableRow" /> nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, den Index des angegebenen <xref:System.Web.UI.WebControls.TableRow> in der <xref:System.Web.UI.WebControls.TableRowCollection>. Wenn das angegebene <xref:System.Web.UI.WebControls.TableRow> wurde nicht gefunden wird, wird ein Index "-1" zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> Eigenschaft den Zeilenindex der ausgewählten Zelle angezeigt.  
  
 [!code-aspx-csharp[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.GetRowIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.GetRowIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> schreibgeschützt ist.</summary>
        <value>
          <see langword="false" />in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt diese Eigenschaft immer `false` gibt an, dass die <xref:System.Web.UI.WebControls.TableRowCollection> in geschrieben werden können, um in allen Fällen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value>
          <see langword="false" />in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird von abgeleiteten <xref:System.Collections.ICollection?displayProperty=nameWithType> und wird überschrieben, um stets `false`.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.TableCellCollection.IsSynchronized%2A> -Eigenschaft, finden Sie unter der <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> Eigenschaft von der <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Ein Ordinalindex-Wert, der angibt, <see cref="T:System.Web.UI.WebControls.TableRow" /> zurückzugebenden Objekts. Dieser Index ist nullbasiert.</param>
        <summary>Ruft eine <see cref="T:System.Web.UI.WebControls.TableRow" /> aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> am angegebenen Index.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.TableRow" /> , die stellt ein Element in der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Indexer zum Abrufen einer Einzelperson <xref:System.Web.UI.WebControls.TableRow> aus der <xref:System.Web.UI.WebControls.TableRowCollection> am angegebenen Index mithilfe von einfachen Array-Notation.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie den Indexer zum Abrufen einer <xref:System.Web.UI.WebControls.TableRow> aus einem <xref:System.Web.UI.WebControls.TableRowCollection>. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse.  
  
 [!code-aspx-csharp[Classic TableRowCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TableRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TableRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.Remove(System.Web.UI.WebControls.TableRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.TableRow" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekt, das Aufheben der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Entfernt die angegebene <see cref="T:System.Web.UI.WebControls.TableRow" /> aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Entfernen des angegebenen <xref:System.Web.UI.WebControls.TableRow> aus einem <xref:System.Web.UI.WebControls.TableRowCollection>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A> Methode, um eine Zeile aus der Tabelle zu entfernen. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse.  
  
 [!code-aspx-csharp[Classic TableRowCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des der <see cref="T:System.Web.UI.WebControls.TableRow" /> Objekt, das Aufheben der <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</param>
        <summary>Entfernt eine <see cref="T:System.Web.UI.WebControls.TableRow" /> aus der <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> am angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Entfernen einer <xref:System.Web.UI.WebControls.TableRow> aus der <xref:System.Web.UI.WebControls.TableRowCollection> am angegebenen Index.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.TableRowCollection.RemoveAt%2A> Methode, um eine Zeile aus der Tabelle zu entfernen. Beachten Sie, dass im Beispiel die <xref:System.Web.UI.WebControls.Table.Rows%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.Table> ist eine Instanz einer der <xref:System.Web.UI.WebControls.TableRowCollection> Klasse. Beachten Sie, dass der Index des der <xref:System.Web.UI.WebControls.Table.Rows%2A> Auflistung ist nullbasiert.  
  
 [!code-aspx-csharp[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TableRowCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TableRowCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt, das verwendet werden kann, zum Synchronisieren des Zugriffs auf die <see cref="T:System.Web.UI.WebControls.TableRowCollection" />.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das in dieser Implementierung zurückgegebene Objekt stellt der <xref:System.Web.UI.WebControls.TableRowCollection> selbst.  
  
 Weitere Informationen zu den <xref:System.Web.UI.WebControls.TableCellCollection.SyncRoot%2A> -Eigenschaft, finden Sie unter der <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> Eigenschaft von der <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Add(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt der Auflistung ein Objekt hinzu.</summary>
        <returns>Der Index, an dem das Objekt der Sammlung hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sollten Sie verwenden die <xref:System.Web.UI.WebControls.TableRowCollection.Add%2A?displayProperty=nameWithType> -Methode zum Hinzufügen eines Elements, das eine <xref:System.Web.UI.WebControls.TableRowCollection> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Add%2A> Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TableRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Die in der Auflistung zu suchende Objekt.</param>
        <summary>Bestimmt, ob das angegebene Objekt in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />Wenn das Objekt in der Auflistung ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Contains%2A> Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TableRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Die in der Auflistung zu suchende Objekt.</param>
        <summary>Sucht nach dem angegebenen Objekt und gibt den nullbasierten Index des ersten Vorkommens innerhalb der Auflistung.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens des Objekts in der Auflistung ist; andernfalls -1, wenn das Objekt nicht in der Auflistung vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sollten Sie verwenden die <xref:System.Web.UI.WebControls.TableRowCollection.GetRowIndex%2A> Methode zum Abrufen des Indexes eines Elements in einem <xref:System.Web.UI.WebControls.TableRowCollection> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23IndexOf%2A> Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TableRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index in der Auflistung, an dem das Objekt eingefügt werden soll.</param>
        <param name="o">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
        <summary>Fügt ein Objekt am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sollten Sie verwenden die <xref:System.Web.UI.WebControls.TableRowCollection.AddAt%2A> -Methode zum Hinzufügen eines Elements, das eine <xref:System.Web.UI.WebControls.TableRowCollection> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Insert%2A> Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TableRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" />Wenn die Liste eine feste Größe verfügt; andernfalls<see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.TableRowCollection> Instanz umgewandelt wird die <xref:System.Collections.IList> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Das Element am angegebenen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Kann verwendet werden nur, wenn die <xref:System.Web.UI.WebControls.TableRowCollection> Instanz umgewandelt wird die <xref:System.Collections.IList> Schnittstelle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TableRowCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Das aus der Auflistung zu entfernende Objekt.</param>
        <summary>Entfernt ein Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sollten Sie verwenden die <xref:System.Web.UI.WebControls.TableRowCollection.Remove%2A?displayProperty=nameWithType> -Methode zum Entfernen eines Elements aus einer <xref:System.Web.UI.WebControls.TableRowCollection> Objekt.  
  
 Die <xref:System.Web.UI.WebControls.TableRowCollection.System%23Collections%23IList%23Remove%2A> Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.TableRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
