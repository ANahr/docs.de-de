<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konvertiert eine Zeichenfolge, enthält eine Liste der Schriftartennamen und ein Array von Zeichenfolgen zurück, das die einzelnen Namen darstellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode dieser Klasse zum Konvertieren einer einzelnen Zeichenfolge mit einer Liste der Schriftartennamen in ein Array von Zeichenfolgen, das die einzelnen Namen enthält. Jeder Schriftartenname in der Zeichenfolge muss durch ein Komma getrennt werden. Z. B. die Zeichenfolge "arial, times neue roman, Verdana", konvertiert ein Array, die Zeichenfolgen "arial enthält", "Times new Roman" und "Verdana". Beachten Sie, dass die Kommas und Leerzeichen am Anfang oder Ende des Namens der Schriftart entfernt werden. Leerraum in der Mitte von Namen einer Schriftart wird nicht entfernt.  
  
 Die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> -Methode führt den Vorgang. Konvertiert ein Array von Zeichenfolgen, die die einzelnen Schriftartnamen in eine einzelne Zeichenfolge mit einer Liste der Namen enthält. Ein Array, das die Zeichenfolgen "arial", "Times new Roman" und "Verdana" enthält beispielsweise konvertiert, auf die Zeichenfolge "arial, times neue roman, Verdana". Beachten Sie, dass Trennzeichen zwischen den Schriftartnamen ohne Leerraum automatisch eingefügt werden.  
  
 Rufen Sie die <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> Methode, um sicherzustellen, dass die Konvertierung nicht kann vor dem Aufruf durchgeführt werden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter> -Klasse zum Konvertieren einer Zeichenfolge mit einer Liste der Schriftartennamen in ein Array von Zeichenfolgen, das die einzelnen Namen enthält. Das Array von Zeichenfolgen wird dann wieder in eine einzelne Zeichenfolge konvertiert und angezeigt.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sollten einen Typkonverter nie direkt zugreifen. Rufen Sie stattdessen den entsprechenden Konverter mithilfe einer <xref:System.ComponentModel.TypeDescriptor> Objekt. Weitere Informationen finden Sie in den Beispielen in <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Sie können optional auch übergeben <see langword="null" /> für diesen Parameter.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" /> , die den Datentyp konvertiert darstellt.</param>
        <summary>Bestimmt, ob dieser Konverter ein Objekt des Typs angegebenen Daten in ein Array von Zeichenfolgen mit einzelnen Schriftartnamen konvertieren kann.</summary>
        <returns>
          <see langword="true" />Wenn der Typ konvertiert werden kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> Methode, um zu bestimmen, ob der angegebene Datentyp in ein Array von Zeichenfolgen mit einzelnen Schriftartnamen konvertiert werden kann.  
  
> [!NOTE]
>  Dieser Konverter kann nur von Konvertieren einer `string` -Datentyp. Die `sourceType` Parameter muss vom Typ <xref:System.String>. Diese Methode hingegen gibt `false` um anzugeben, dass der angegebenen Datentyp konvertiert werden kann.  
  
 Sie können optional auch übergeben `null` für die `context` Parameter.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>-Methode verwenden. Im Beispiel wird ermittelt, ob der angegebene Datentyp in ein Array von Zeichenfolgen kann, die die einzelnen Schriftartnamen enthält konvertiert werden, vor dem Ausführen der Konvertierung.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird in dieser Methode nicht verwendet. Es ist für zukünftige Versionen von dieser Methode reserviert. Sie können optional auch übergeben <see langword="null" /> für diesen Parameter.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" /> Objekt, das Informationen über eine Kultur, z. B. Sprache, Kalendersystem usw. darstellt. Dieser Parameter wird in dieser Methode nicht verwendet. Es ist für zukünftige Versionen von dieser Methode reserviert. Sie können optional auch übergeben <see langword="null" /> für diesen Parameter.</param>
        <param name="value">Ein <see cref="T:System.Object" /> Instanz, die die Quellzeichenfolge zum Konvertieren von darstellt.</param>
        <summary>Konvertiert eine Zeichenfolge, die eine Liste der Schriftartennamen in ein Array von Zeichenfolgen mit einzelnen Schriftartnamen darstellt.</summary>
        <returns>Ein <see cref="T:System.Object" /> , der das Array von Zeichenfolgen, die mit den einzelnen Schriftartnamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode zum Konvertieren einer Zeichenfolge mit einer Liste der Schriftartennamen in ein Array von Zeichenfolgen, das die einzelnen Namen enthält. Jeder Schriftartenname in der Zeichenfolge muss durch ein Komma getrennt werden. Z. B. die Zeichenfolge "arial, times neue roman, Verdana", konvertiert ein Array, die Zeichenfolgen "arial enthält", "Times new Roman" und "Verdana". Beachten Sie, dass die Kommas und Leerzeichen am Anfang oder Ende des Namens der Schriftart entfernt werden. Leerraum in der Mitte von Namen einer Schriftart wird nicht entfernt.  
  
> [!NOTE]
>  Die `context` und `culture` in dieser Version der Methode keine Parameter verwendet werden; sie sind reserviert für zukünftige Versionen der Methode. Sie können optional auch übergeben `null` für diese Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> Methode zum Konvertieren einer Zeichenfolge mit einer Liste der Schriftartennamen in ein Array von Zeichenfolgen, das die einzelnen Namen enthält.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Objekt, das Informationen über den Kontext eines Typkonverters bereitstellt. Dieser Parameter wird in dieser Methode nicht verwendet. Es ist für zukünftige Versionen von dieser Methode reserviert. Sie können optional auch übergeben <see langword="null" /> für diesen Parameter.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" /> Objekt, das Informationen über eine Kultur, z. B. Sprache, Kalendersystem usw. darstellt. Dieser Parameter wird in dieser Methode nicht verwendet. Es ist für zukünftige Versionen von dieser Methode reserviert. Sie können optional auch übergeben <see langword="null" /> für diesen Parameter.</param>
        <param name="value">Ein Objekt, das Quellarray von zum Konvertieren von Zeichenfolgen darstellt.</param>
        <param name="destinationType">Ein <see cref="T:System.Object" /> Instance-Objekt, das den Datentyp zu konvertieren darstellt. Dieser Parameter muss vom Typ <see cref="T:System.String" />.</param>
        <summary>Erstellt eine Zeichenfolge, die eine Liste der Schriftartennamen aus einem Array von Zeichenfolgen mit einzelnen Schriftartnamen darstellt.</summary>
        <returns>Ein <see cref="T:System.Object" /> Instanz, die eine Zeichenfolge, enthält eine Liste der Schriftartennamen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Methode, um ein Array von Zeichenfolgen, die mit den einzelnen Schriftartnamen in eine einzelne Zeichenfolge mit einer Liste der Namen zu konvertieren. Ein Array, das die Zeichenfolgen "arial", "Times new Roman" und "Verdana" enthält beispielsweise konvertiert, auf die Zeichenfolge "arial, times neue roman, Verdana". Beachten Sie, dass Trennzeichen zwischen den Schriftartnamen ohne Leerraum automatisch eingefügt werden.  
  
> [!NOTE]
>  Dieser Konverter kann nur für Konvertieren einer `string` -Datentyp. Die `destinationType` Parameter muss vom Typ <xref:System.String>.  
  
> [!NOTE]
>  Die `context` und `culture` in dieser Version der Methode keine Parameter verwendet werden; sie sind reserviert für zukünftige Versionen der Methode. Sie können optional auch übergeben `null` für diese Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Methode konvertiert ein Array von Zeichenfolgen, die mit den einzelnen Namen in eine einzelne Zeichenfolge, die eine Liste von Schriftarten enthält.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> ist nicht vom Typ <see cref="T:System.String" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
