<Type Name="FieldTemplateFactory" FullName="System.Web.DynamicData.FieldTemplateFactory">
  <TypeSignature Language="C#" Value="public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldTemplateFactory extends System.Object implements class System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Erstellt eine Feldvorlage an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird standardmäßig diese Klasse implementiert die <xref:System.Web.DynamicData.IFieldTemplateFactory> -Schnittstelle, und verwendet die <xref:System.Web.UI.UserControl> Klasse, um das Feldvorlagen erstellen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildVirtualPath(string templateName, class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName">Der Name der Vorlage verwendet werden soll.</param>
        <param name="column">Gibt die Datenspalte, die auf die Feldvorlage angewendet wird.</param>
        <param name="mode">Gibt den Anzeigemodus der Feldvorlage an.</param>
        <summary>Den virtuellen Pfad zu einer Feldvorlage, die basierend auf den Feldnamen für die Vorlage und der Modus erstellt werden.</summary>
        <returns>Der virtuelle Pfad auf die Feldvorlage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig erstellt diese Methode den virtuellen Pfad zu einer Feldvorlage mithilfe der Vorlagenname, Anfügen den Modus aus, und klicken Sie dann eine ascx-Erweiterung hinzufügen. Z. B. wenn `templateName` MyFieldTemplate und `mode` bearbeiten, ist, und klicken Sie dann der virtuelle Pfad MyFieldTemplate_Edit.ascx, in dem Ordner, der von der Vorlage für virtuelle Ordnerpfad angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="templateName" /> ist NULL.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Gibt die Datenspalte, die auf die Feldvorlage angewendet wird.</param>
        <param name="mode">Gibt den Anzeigemodus der Feldvorlage an.</param>
        <param name="uiHint">Gibt die Feldvorlage an, die verwendet werden soll.</param>
        <summary>Erstellt eine Instanz einer Feldvorlage mithilfe der <see cref="T:System.Web.DynamicData.MetaColumn" />-Klasse, der <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" />-Klasse und der <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" />-Eigenschaft.</summary>
        <returns>Eine Instanz der Schnittstelle, die die <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> -Klasse implementiert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFieldTemplateVirtualPath(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Gibt die Datenspalte, die auf die Feldvorlage angewendet wird.</param>
        <param name="mode">Gibt den Anzeigemodus der Feld Vorlage – nur lesen, bearbeiten oder einfügen.</param>
        <param name="uiHint">Gibt die Feldvorlage an, die verwendet werden soll. Dieser Parameter wirkt sich auf, die Feldvorlage nachschlagen.</param>
        <summary>Bestimmt den virtuellen Pfad der Feldvorlage für ein an.</summary>
        <returns>Der virtuelle Pfad der Feldvorlage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamische Data-Feld-Vorlagen werden in der DynamicData/FieldTemplates erstellt/Ordner, aber Sie können einen neuen Ordner für Ihre Feldvorlagen erstellen. Diese Methode bestimmt den virtuellen Pfad für den Ordner mit der Feldvorlage, die mit den angegebenen Parametern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">Gibt an, das Datenmodell zum Zuordnen der <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</param>
        <summary>Ordnet eine <see cref="T:System.Web.DynamicData.MetaModel" /> mit einem <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die <see cref="T:System.Web.DynamicData.MetaModel" /> zugeordneten der <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> Klasse</summary>
        <value>Das Modell, das zugeordnete der <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.DynamicData.MetaModel> Klasse ist eine abstrakte Klasse, die die Zuordnung zwischen einer Datenbank und die Domäne darstellt. Dynamic Data stellt einen Satz von Klassen (das Datenmodell), die das Modell darstellen. Die Klassen werden durch den Object Relational Designer (O/R-Designer) generiert. LINQ to SQL-Klassen-Vorlage können Sie um diese Klassen zu generieren. Diese Eigenschaft dient zum Abrufen und Festlegen der zugeordnete Datenmodell der <xref:System.Web.DynamicData.FieldTemplateFactory> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.DataBoundControlMode PreprocessMode(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column">Die Spalte, für die die Feldvorlage benötigt wird.</param>
        <param name="mode">Der Modus (Read Only, bearbeiten oder Insert) zu ändern.</param>
        <summary>Ändert den Modus der Datenspalte.</summary>
        <returns>Der Modus, den eine Spalte gerendert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamische Daten stellt Daten in den Read Only, einfügen, oder Bearbeiten von Modi. Diese Methode steuert, welcher Modus in der Spalte gerendert wird. Beispielsweise ändert eine Anforderung bearbeiten auf schreibgeschützt, wenn die Spalte eine Primärschlüsselspalte ist. Spalten, die automatisch generierte und Fremdschlüssel, die Teil des Primärschlüssels sind, können nicht bearbeitet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string TemplateFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Abrufen oder Festlegen des Ordners, in dem eine Feldvorlage zu erstellen.</summary>
        <value>Der Pfad zu dem Ordner, der das Feldvorlagen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Ordner, in dem Feldvorlagen erstellt werden, ist standardmäßig DynamicData/FieldTemplates /. Dieser Ordner enthält die Standardvorlagen-Feld und die benutzerdefinierten Vorlagen, die Sie erstellen. Wenn Sie zu erstellen, und geben Sie einen anderen Ordner für das Feldvorlagen, wird Dynamic Data Feldvorlagen im Ordner "" erstellt, die Sie angeben. Weitere Informationen zu Feldvorlagen finden Sie unter [ASP.NET Dynamic Data Scaffolding](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
