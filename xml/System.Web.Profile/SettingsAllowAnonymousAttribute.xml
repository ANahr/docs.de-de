<Type Name="SettingsAllowAnonymousAttribute" FullName="System.Web.Profile.SettingsAllowAnonymousAttribute">
  <TypeSignature Language="C#" Value="public sealed class SettingsAllowAnonymousAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SettingsAllowAnonymousAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.SettingsAllowAnonymousAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bestimmt, ob eine Profileigenschaft festgelegt oder für einen anonymen Benutzer zugegriffen werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> Klasse wird verwendet, um zu ermitteln, ob eine Eigenschaft der Implementierung eines benutzerdefinierten Profils zugegriffen werden kann, wenn der Benutzer einen anonymen Benutzer ist. Informationen zum Aktivieren der anonymen Identifizierung finden Sie in der Dokumentation für das Konfigurationselement.  
  
 Wenn kein <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> angegeben ist, für eine Profileigenschaft der Profileigenschaft anonymer Zugriff ist nicht zulässig.  
  
 Eine benutzerdefiniertes Profil Implementierung ist eine Klasse, die von erben die <xref:System.Web.Profile.ProfileBase> abstrakte Klasse und definiert die Eigenschaften für das Benutzerprofil, die nicht in das Konfigurationselement angegeben werden. Geben Sie einen benutzerdefinierten Benutzerprofil-Typ, in der Datei der Anwendung "Web.config" mit der `inherits` Attribut des Konfigurationselements an, wie im folgenden Beispiel gezeigt.  
  
 `<configuration>`  
  
 `<connectionStrings>`  
  
 `<add`  
  
 `name="SqlServices"`  
  
 `connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />`  
  
 `</connectionStrings>`  
  
 `<system.web>`  
  
 `<authentication mode="Forms" >`  
  
 `<forms`  
  
 `loginUrl="login.aspx"`  
  
 `name=".ASPXFORMSAUTH" />`  
  
 `</authentication>`  
  
 `<authorization>`  
  
 `<deny users="?" />`  
  
 `</authorization>`  
  
 `<profile inherits="Samples.AspNet.Profile.EmployeeProfile"`  
  
 `defaultProvider="SqlProvider">`  
  
 `<providers>`  
  
 `<clear />`  
  
 `<add`  
  
 `name="SqlProvider"`  
  
 `type="System.Web.Profile.SqlProfileProvider"`  
  
 `connectionStringName="SqlServices"`  
  
 `description="SQL Profile Provider for Sample"/>`  
  
 `<add`  
  
 `name="EmployeeInfoProvider"`  
  
 `type="System.Web.Profile.SqlProfileProvider"`  
  
 `connectionStringName="SqlServices"`  
  
 `description="SQL Profile Provider for Employee Info"/>`  
  
 `</providers>`  
  
 `<properties>`  
  
 `<add name="GarmentSize" />`  
  
 `</properties>`  
  
 `</profile>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
   
  
## Examples  
 Das folgende Codebeispiel definiert eine Klasse, die von erben die <xref:System.Web.Profile.ProfileBase> auf ein benutzerdefiniertes Profil erstellen. Der Typ des benutzerdefinierten Profils wird angegeben, der `inherits` Attribut des Konfigurationselements in der Datei "Web.config" für eine Anwendung.  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SettingsAllowAnonymousAttribute (bool allow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool allow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SettingsAllowAnonymousAttribute.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allow">
          <see langword="true" />Wenn anonyme Benutzer auf die zugeordnete Profileigenschaft; zugreifen können andernfalls <see langword="false" />.</param>
        <summary>Erstellt eine neue Instanz der dem <see cref="T:System.Web.Profile.SettingsAllowAnonymousAttribute" /> -Klasse und gibt an, ob anonymer Zugriff auf die zugeordnete Profileigenschaft erlaubt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> Klasse wird verwendet, um zu ermitteln, ob eine Eigenschaft der Implementierung eines benutzerdefinierten Profils zugegriffen werden kann, wenn der Benutzer einen anonymen Benutzer ist. Informationen zum Aktivieren der anonymen Identifikation finden Sie in das Konfigurationselement.  
  
 Wenn kein <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> angegeben ist, für eine Profileigenschaft anonymen Zugriff auf die Profileigenschaft ist nicht zulässig.  
  
 Eine benutzerdefiniertes Profil Implementierung ist eine Klasse, die von erben die <xref:System.Web.Profile.ProfileBase> abstrakte Klasse und definiert die Eigenschaften für das Benutzerprofil, die nicht in das Konfigurationselement angegeben werden.  
  
   
  
## Examples  
 Das folgende Beispiel definiert eine Klasse, die von erben die <xref:System.Web.Profile.ProfileBase> Klasse, um ein benutzerdefiniertes Profil erstellen. Der Typ des benutzerdefinierten Profils wird angegeben, der `inherits` Attribut des Konfigurationselements in der Datei "Web.config" für eine Anwendung. Ein Beispiel einer Konfigurationsdatei, der angibt, eine benutzerdefiniertes Profil Implementierung finden Sie unter der <xref:System.Web.Profile.SettingsAllowAnonymousAttribute> -Klassenübersicht.  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Allow">
      <MemberSignature Language="C#" Value="public bool Allow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Allow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die zugeordnete Eigenschaft Implementierung eines benutzerdefinierten Profils zugegriffen werden kann, wenn der Benutzer einen anonymen Benutzer ist.</summary>
        <value>
          <see langword="true" />Wenn anonyme Benutzer auf die zugeordnete Profileigenschaft; zugreifen können andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SettingsAllowAnonymousAttribute.IsDefaultAttribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow" /> Eigenschaft auf den Standardwert festgelegt ist.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="P:System.Web.Profile.SettingsAllowAnonymousAttribute.Allow" /> Eigenschaftensatz wird auf den Standardwert; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
