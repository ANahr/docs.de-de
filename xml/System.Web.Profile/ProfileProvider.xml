<Type Name="ProfileProvider" FullName="System.Web.Profile.ProfileProvider">
  <TypeSignature Language="C#" Value="public abstract class ProfileProvider : System.Configuration.SettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProfileProvider extends System.Configuration.SettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert den Vertrag, den ASP.NET implementiert, um Profildienste mit benutzerdefinierten Profilanbietern bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET-Profilen bieten persistent speichern und Abrufen von benutzerspezifischen Eigenschaften. Profileigenschaftswerte und Informationen werden gespeichert, in einer Datenquelle in einer Weise, die bestimmt, indem die <xref:System.Web.Profile.ProfileProvider> Implementierung. Können Sie die Profilanbieter, die mit .NET Framework enthalten sind (dargestellt durch die abgeleitete Klassen die <xref:System.Web.Profile.ProfileProvider> abstrakte Klasse), oder Sie können einen eigenen Anbieter implementieren, indem Sie erstellen eine neue Klasse, die abgeleitet <xref:System.Web.Profile.ProfileProvider>.  
  
 Es gibt zwei Hauptgründe für das Erstellen eines benutzerdefinierten Profils-Anbieters.  
  
-   Sie müssen Profilinformationen in einer Datenquelle zu speichern, die von der Profilanbieter, die in .NET Framework, z. B. einer FoxPro-Datenbank, einer Oracle-Datenbank oder anderen Datenspeichern nicht unterstützt wird.  
  
-   Sie müssen zum Verwalten von Profilinformationen mit einem Datenbankschema, die unterscheidet sich das Datenbankschema von dem Anbieter, die im Lieferumfang von .NET Framework verwendet. Ein allgemeines Beispiel hierfür wäre Benutzerdaten, die in einer SQL Server-Datenbank für ein Netzwerk des Unternehmens oder einer Website bereits vorhanden ist.  
  
 Die <xref:System.Web.Profile.ProfileProvider> abstrakte Klasse erbt von der <xref:System.Configuration.SettingsProvider> abstrakte Klasse, die von erbt die <xref:System.Configuration.Provider.ProviderBase> abstrakte Klasse. Klassen, in denen <xref:System.Web.Profile.ProfileProvider> müssen auch die erforderlichen Mitgliedern der implementieren die <xref:System.Configuration.SettingsProvider> und <xref:System.Configuration.Provider.ProviderBase> abstrakte Klassen. Weitere Informationen zum Implementieren eines Profilanbieters finden Sie unter [Implementieren eines Anbieters Profil](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
   
  
## Examples  
 Ein Beispiel für eine <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProfileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Profile.ProfileProvider" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind nicht erforderlich, einen Konstruktor für eine Klasse implementieren, erbt die <xref:System.Web.Profile.ProfileProvider> abstrakte Klasse. Initialisierung Werte für eine <xref:System.Web.Profile.ProfileProvider> Implementierung übergeben werden, um die <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> methodenimplementierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public abstract int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen werden gelöscht.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" /> , identifiziert, welche Benutzerprofile als inaktiv betrachtet werden. Wenn die <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> Wert eines Benutzerprofils tritt am oder vor diesem Datum und Uhrzeit, das Profil wird als inaktiv betrachtet.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse löscht alle Benutzerprofildaten für Profile, die in der das Datum der letzten Aktivität vor dem angegebenen Datum aufgetreten ist.</summary>
        <returns>Die Anzahl der Profile, die aus der Datenquelle gelöscht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> Methode wird verwendet, um nicht verwendete Profildaten aus der Datenquelle zu entfernen. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei wird entfernt. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden. Profile, bei denen die <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert werden gelöscht.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#3)]
 [!code-vb[System.Web.Profile.ProfileProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public abstract int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.DeleteProfiles(System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray mit Benutzernamen für Profile gelöscht werden soll.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Löscht Profileigenschaften und Informationen zu Profilen, die mit die angegebene Liste von Benutzernamen übereinstimmen.</summary>
        <returns>Die Anzahl der Profile, die aus der Datenquelle gelöscht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode löscht die Profile, die angegeben wurden, der `usernames` Parameter. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei wird entfernt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#2)]
 [!code-vb[System.Web.Profile.ProfileProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public abstract int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">Ein <see cref="T:System.Web.Profile.ProfileInfoCollection" /> von Informationen über Profile, die gelöscht werden sollen.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Löscht Profileigenschaften und Informationen für die angegebene Liste von Profilen.</summary>
        <returns>Die Anzahl der Profile, die aus der Datenquelle gelöscht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode löscht die Profile, die angegeben wurden, der `profiles` Parameter. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei wird entfernt.  
  
 Wenn Sie diese Methode in einer abgeleiteten Klasse zu implementieren, können Sie die `applicationName` Wert und die <xref:System.Web.Profile.ProfileInfo.UserName%2A> -Eigenschaft jedes <xref:System.Web.Profile.ProfileInfo> Objekt in der bereitgestellten <xref:System.Web.Profile.ProfileInfoCollection> um zu bestimmen, welche Profile aus der Datenquelle zu löschen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#1)]
 [!code-vb[System.Web.Profile.ProfileProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" /> , identifiziert, welche Benutzerprofile als inaktiv betrachtet werden. Wenn die <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> Wert eines Benutzerprofils tritt am oder vor diesem Datum und Uhrzeit, das Profil wird als inaktiv betrachtet.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Wenn diese Methode zurückgibt, enthält die Gesamtzahl der Profile.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Ruft Profilinformationen für Profile, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und dem Benutzernamen übereinstimmt, den angegebenen Benutzernamen, ab.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileInfoCollection" /> Benutzerprofilinformationen für inaktive Profile, die dem Benutzernamen, in dem die angegebene übereinstimmt enthält <paramref name="usernameToMatch" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> Methode wird verwendet, um die Profilinformationen für nicht verwendete Benutzerprofile für Profile abgerufen, in der die Benutzernamen, den angegebenen übereinstimmt `usernameToMatch` Parameter. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei zurückgegeben wird. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> Dies tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird zurückgegeben.  
  
 Wenn Ihre Datenquelle zusätzliche Suchfunktionen, z. B. Platzhalterzeichen unterstützt, können Sie eine erweiterte Suchfunktionen für Benutzernamen bereitstellen.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben würde das sechste bis der zehnte der inaktiven Profile enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#5)]
 [!code-vb[System.Web.Profile.ProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Wenn diese Methode zurückgibt, enthält die Gesamtzahl der Profile.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Ruft Profilinformationen für Profile, die in denen der Benutzername die angegebenen Benutzernamen übereinstimmt.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileInfoCollection" /> mit Informationen über Benutzerprofildaten für Profile, die dem Benutzernamen, in dem die angegebene übereinstimmt <paramref name="usernameToMatch" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> Methode gibt eine Liste von Profilinformationen für Profile, die in der die Benutzernamen, den angegebenen übereinstimmt `usernameToMatch` Parameter. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei zurückgegeben wird. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden.  
  
 Wenn Ihre Datenquelle zusätzliche Suchfunktionen, z. B. Platzhalterzeichen unterstützt, können Sie eine erweiterte Suchfunktionen für Benutzernamen bereitstellen.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben würde das sechste bis der zehnte der inaktiven Profile enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#4)]
 [!code-vb[System.Web.Profile.ProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public abstract System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" /> , identifiziert, welche Benutzerprofile als inaktiv betrachtet werden. Wenn die <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzers Profil tritt an oder vor diesem Datum und Uhrzeit, das Profil wird als inaktiv betrachtet.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Wenn diese Methode zurückgibt, enthält die Gesamtzahl der Profile.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse ruft Benutzerprofil Daten aus der Datenquelle für Profile, die in der das Datum der letzten Aktivität am oder vor dem angegebenen Datum aufgetreten ist.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileInfoCollection" /> mit Benutzerprofildaten Informationen über die inaktiven Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Methode wird verwendet, um die Profilinformationen für nicht verwendete Benutzerprofile abzurufen. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei zurückgegeben wird. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> Dies tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird zurückgegeben.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben würde das sechste bis der zehnte der inaktiven Profile enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#7)]
 [!code-vb[System.Web.Profile.ProfileProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public abstract System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen zurückgegeben werden.</param>
        <param name="pageIndex">Der Index der zurückzugebenden Ergebnisseite.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Wenn diese Methode zurückgibt, enthält die Gesamtzahl der Profile.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse ruft Benutzerprofildaten für alle Profile in der Datenquelle ab.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileInfoCollection" /> Benutzerprofil Informationen für alle Profile in der Datenquelle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Methode wird verwendet, um die Profilinformationen für alle Profile abzurufen. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei zurückgegeben wird. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der Ergebnisse zurückgegeben, wobei 0 die erste Seite bezeichnet. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben würde das sechste bis der zehnte der inaktiven Profile enthalten. Die `totalRecords` -Parameter würde auf 13 festgelegt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#6)]
 [!code-vb[System.Web.Profile.ProfileProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public abstract int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Eines der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> Werte, der angibt, ob anonyme, authentifizierte oder beide Typen von Profilen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" /> , identifiziert, welche Benutzerprofile als inaktiv betrachtet werden. Wenn die <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzers Profil tritt an oder vor diesem Datum und Uhrzeit, das Profil wird als inaktiv betrachtet.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt die Anzahl der Profile, die in der das Datum der letzten Aktivität am oder vor dem angegebenen Datum aufgetreten ist.</summary>
        <returns>Die Anzahl der Profile, die in der das Datum der letzten Aktivität am oder vor dem angegebenen Datum aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles%2A> Methode wird verwendet, um alle nicht verwendeten Benutzerprofile abrufen. Nur Daten für die `applicationName` in der Konfiguration angegebene Datei zurückgegeben wird. Die `authenticationOption` Parameter gibt an, ob nur anonyme Profile nur authentifizierte Profile oder alle Profile durchsucht werden. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> Dies tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird gezählt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Methodensignatur für eine Implementierung der <xref:System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles%2A> Methode. Ein Beispiel für eine vollständige <xref:System.Web.Profile.ProfileProvider> Implementierung finden Sie unter [Vorgehensweise: Erstellen und Ausführen des Beispiels Profil](http://msdn.microsoft.com/library/90f65aa9-82dd-4a86-97e6-911037bd6cfa).  
  
 [!code-csharp[System.Web.Profile.ProfileProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/CS/odbcprofileprovidersnippets.cs#8)]
 [!code-vb[System.Web.Profile.ProfileProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileProvider/VB/odbcprofileprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
