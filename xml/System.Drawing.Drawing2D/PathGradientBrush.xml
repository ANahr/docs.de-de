<Type Name="PathGradientBrush" FullName="System.Drawing.Drawing2D.PathGradientBrush">
  <TypeSignature Language="C#" Value="public sealed class PathGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PathGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.PathGradientBrush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Kapselt eine <see cref="T:System.Drawing.Brush" /> -Objekt, das füllt das Innere einer <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Objekt mit einem Farbverlauf. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Farbverlauf wird ein sanfter Übergang von Farben vom Mittelpunkt des Pfads an den äußeren Rand Rand des Pfads. Blend-Faktoren, die Positionen und Stil beeinflussen, in dem der Farbverlauf beginnt und endet, und wie schnell Schattierung ändert.  
  
 Farbverlaufspinsel Pfad ist nicht unterliegen die <xref:System.Drawing.Graphics.SmoothingMode%2A> Eigenschaft von der <xref:System.Drawing.Graphics> Objekt, mit dem gezeichnet. Gefüllt mit Bereichen eine <xref:System.Drawing.Drawing2D.PathGradientBrush> unabhängig von den Glättungsmodus Objekt die gleiche Weise (Alias) gerendert werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen einer <xref:System.Drawing.Drawing2D.PathGradientBrush>. In diesem Beispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert die <xref:System.Windows.Forms.PaintEventArgs> e, die ein Parameter ist der <xref:System.Windows.Forms.PaintEventHandler>.  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Die <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> , definiert der Fläche, die von diesem ausgefüllt <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> Klasse mit dem angegebenen Pfad.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">Ein Array von <see cref="T:System.Drawing.Point" /> Strukturen, die Punkte darstellt, die die Eckpunkte des Pfads bilden.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> -Klasse mit den angegebenen Punkten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">Ein Array von <see cref="T:System.Drawing.PointF" /> Strukturen, die Punkte darstellt, die die Eckpunkte des Pfads bilden.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> -Klasse mit den angegebenen Punkten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Ein Array von <see cref="T:System.Drawing.Point" /> Strukturen, die Punkte darstellt, die die Eckpunkte des Pfads bilden.</param>
        <param name="wrapMode">Ein <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , die angibt, wie mit diesem gezeichneten <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> nebeneinander angeordnet sind.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> -Klasse mit den angegebenen Punkten und Modus zu umschließen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Ein Array von <see cref="T:System.Drawing.PointF" /> Strukturen, die Punkte darstellt, die die Eckpunkte des Pfads bilden.</param>
        <param name="wrapMode">Ein <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , die angibt, wie mit diesem gezeichneten <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> nebeneinander angeordnet sind.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> -Klasse mit den angegebenen Punkten und Modus zu umschließen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Blend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen <see cref="T:System.Drawing.Drawing2D.Blend" /> Positionen und Faktoren, die eine benutzerdefinierte Farbverlaufs definieren, die angibt.</summary>
        <value>Ein <see cref="T:System.Drawing.Drawing2D.Blend" /> , eine benutzerdefinierte Farbverlaufs darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Drawing2D.Blend> enthält entsprechende Arrays von Blend-Faktoren und Positionen. Die Blend-Faktoren Geben Sie die Prozentsätze der Anfangsfarbe und Endfarbe an der entsprechenden Position verwenden. Die Positionen werden als Prozentsatz der Entfernung entlang des Pfadfarbverlaufs angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CenterColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CenterColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Farbe in der Mitte des Pfadfarbverlaufs fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" /> , die die Farbe in der Mitte des Pfadfarbverlaufs darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF CenterPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF CenterPoint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Mittelpunkt des Pfadfarbverlaufs.</summary>
        <value>Ein <see cref="T:System.Drawing.PointF" /> , die den Mittelpunkt des Pfadfarbverlaufs darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie von dieser <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <returns>Das von dieser Methode erstellte <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />, umgewandelt in ein Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusScales">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF FocusScales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF FocusScales" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Fokus auf des Farbverlaufs.</summary>
        <value>Ein <see cref="T:System.Drawing.PointF" /> , das den Fokuspunkt des Farbverlaufs darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> , ein lineares Farbverlaufs definiert.</summary>
        <value>Ein <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> , ein lineares Farbverlaufs definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Drawing.Drawing2D.ColorBlend> enthält entsprechende Arrays von Farben und Positionen. Die Positionen sind Werte von 0 bis 1, die den Prozentsatz der dem Abstand entlang der farbverlaufspfad angeben, wo sich die entsprechende Farbe befindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">Die <see cref="T:System.Drawing.Drawing2D.Matrix" /> , werden durch den Pinsel aktuellen Transformationsmatrix multipliziert.</param>
        <summary>Aktualisiert den Pinsel Transformationsmatrix mit dem Produkt Pinsels Transformationsmatrix multipliziert mit einer anderen Matrix.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">Die <see cref="T:System.Drawing.Drawing2D.Matrix" /> , werden durch den Pinsel aktuellen Transformationsmatrix multipliziert.</param>
        <param name="order">Ein <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> , der angibt, in welcher Reihenfolge die beiden Matrizen multipliziert.</param>
        <summary>Aktualisiert den Pinsel Transformationsmatrix mit dem Produkt des Pinsels Transformationsmatrix multipliziert mit einer anderen Matrix.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, einem <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt einen Grafikpfad und ein Rechteck hinzugefügt.  
  
-   Erstellt eine <xref:System.Drawing.Drawing2D.PathGradientBrush> aus der Pfad verweist (in diesem Beispiel bilden die Punkte eines Rechtecks, aber es kann sich die meisten jeder Form handeln).  
  
-   Legt die Farbe in der Mitte auf Rot und die umgebenden Farbe Blau fest.  
  
-   Zeichnet die <xref:System.Drawing.Drawing2D.PathGradientBrush> auf dem Bildschirm vor dem Anwenden der Transformation für die Multiply-Vorgang.  
  
-   Erstellt eine Matrix, die den Pinsel um 90 Grad gedreht und verschiebt es um 100 in beiden Achsen.  
  
-   Der Pinsel, der mit dieser Matrix betrifft die <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A> Methode.  
  
-   Zeichnet den Pinsel auf dem Bildschirm an.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein umschließendes Rechteck für <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Ein <see cref="T:System.Drawing.RectangleF" /> , die einen rechteckigen Bereich darstellt, die den Pfad umschließt diese <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> füllt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> Eigenschaft Identity.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel setzt die geometrische Transformation von `pgBrush` Identität. Es wird angenommen, dass `myPath` einen vorhandenen <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
```csharp  
PathGradientBrush pgBrush = new PathGradientBrush(myPath);  
 pgBrush.ResetTransform();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">Der Drehwinkel (Wertebereich).</param>
        <summary>Dreht die lokale geometrische Transformation um den angegebenen Betrag an. Diese Methode stellt der Transformation die Drehung voran.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">Der Drehwinkel (Wertebereich).</param>
        <param name="order">Eine <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />, die angibt, ob die Rotationsmatrix vorangestellt oder angefügt werden soll.</param>
        <summary>Dreht die lokale geometrische Transformation um den angegebenen Betrag in der angegebenen Reihenfolge an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, einem <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt einen Grafikpfad und ein Rechteck hinzugefügt.  
  
-   Erstellt eine <xref:System.Drawing.Drawing2D.PathGradientBrush> aus der Pfad verweist (in diesem Beispiel bilden die Punkte eines Rechtecks, aber es kann sich die meisten jeder Form handeln).  
  
-   Legt die Farbe in der Mitte auf Rot und die umgebenden Farbe Blau fest.  
  
-   Zeichnet die <xref:System.Drawing.Drawing2D.PathGradientBrush> auf dem Bildschirm vor dem Anwenden der drehen zu transformieren.  
  
-   Wendet die Rotationstransformation auf den Pinsel mithilfe seiner <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A> Methode.  
  
-   Zeichnet den gedrehten Pinsel (Rechteck) auf dem Bildschirm an.  
  
 Beachten Sie, dass das untere Rechteck im Vergleich zu vor der Übersetzung gezeichneten um 45 Grad gedreht wird.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">Der Skalierungsfaktor des Transformation in Richtung der x-Achse.</param>
        <param name="sy">Der Skalierungsfaktor des Transformation in Richtung der y-Achse.</param>
        <summary>Skaliert die lokale geometrische Transformation um die angegebenen Beträge. Diese Methode stellt der Transformation die Skalierungsmatrix voran.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">Der Skalierungsfaktor des Transformation in Richtung der x-Achse.</param>
        <param name="sy">Der Skalierungsfaktor des Transformation in Richtung der y-Achse.</param>
        <param name="order">Eine <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />, die angibt, ob die Skalierungsmatrix vorangestellt oder angefügt werden soll.</param>
        <summary>Skaliert die lokale geometrische Transformation die angegebenen Werte in der angegebenen Reihenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, einem <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt. Der code  
  
-   Erstellt einen Grafikpfad und ein Rechteck hinzugefügt.  
  
-   Erstellt eine <xref:System.Drawing.Drawing2D.PathGradientBrush> aus der Pfad verweist (in diesem Beispiel bilden die Punkte eines Rechtecks, aber es kann sich die meisten jeder Form handeln).  
  
-   Legt die Farbe in der Mitte auf Rot und die umgebenden Farbe Blau fest.  
  
-   Zeichnet die <xref:System.Drawing.Drawing2D.PathGradientBrush> auf dem Bildschirm vor dem Anwenden der Skalierungstransformation.  
  
-   Wendet die Skalierungstransformation für die auf den Pinsel mithilfe seiner <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A> Methode.  
  
-   Ruft die <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> -Methode das Pinselrechteck verschieben, dass er nicht zuvor auf dem Bildschirm gezeichnet diejenige überlagert.  
  
-   Zeichnet die übersetzte Pinselrechteck auf dem Bildschirm an.  
  
 Beachten Sie, dass das untere Rechteck doppelt so lange in der x-Achse als vor der Übersetzung gezeichnet wird.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Ein Wert zwischen 0 und 1, der angibt, wobei alle "Radial" aus der Mitte des Pfads mit dem Pfad Grenze, die Farbe in der Mitte auf ihre höchste Intensität werden wird. Der Wert 1 (Standard) platziert die höchste Intensität in der Mitte des Pfads an.</param>
        <summary>Erstellt einen Farbverlauf mit einer Farbe in der Mitte und einen linearen Übergang in eine Umgebungsfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist mehr als eine Farbe in der <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Array der ersten Farbe in das Array wird verwendet, für die Farbe am Ende. In diesem Array angegebenen Farben werden für diskrete Punkte auf den Pinsel Grenze Pfad verwendet.  
  
   
  
## Examples  
 Ein Beispiel finden Sie unter<xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Ein Wert zwischen 0 und 1, der angibt, wobei alle "Radial" aus der Mitte des Pfads mit dem Pfad Grenze, die Farbe in der Mitte auf ihre höchste Intensität werden wird. Der Wert 1 (Standard) platziert die höchste Intensität in der Mitte des Pfads an.</param>
        <param name="scale">Ein Wert zwischen 0 und 1, der die maximale Intensität der Farbe Center angibt, die mit der Farbe Begrenzung gemischt ruft. Der Wert 1 bewirkt, dass die größtmögliche Intensität der Farbe Center, und dies ist der Standardwert.</param>
        <summary>Erstellt einen Farbverlauf mit einer Farbe in der Mitte und einen linearen Übergang in jede Umgebungsfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist mehr als eine Farbe in der <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Array der ersten Farbe in das Array wird verwendet, für die Farbe am Ende. In diesem Array angegebenen Farben werden für separate Punkte auf den Pinsel Grenze Pfad verwendet.  
  
 Standardmäßig ändert Sie über die Begrenzung eines linearen Pfadfarbverlaufs für den Mittelpunkt sich die Farbe graduell aus der Farbe Grenze an die. Sie können die Positionierung und Mischung von Farben Grenze und Center durch Aufruf dieser Methode anpassen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, einem <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt einen Grafikpfad und ein Rechteck hinzugefügt.  
  
-   Erstellt eine <xref:System.Drawing.Drawing2D.PathGradientBrush> aus der Pfad verweist (in diesem Beispiel bilden die Punkte eines Rechtecks, aber es kann sich die meisten jeder Form handeln).  
  
-   Legt die Farbe in der Mitte auf Rot und die umgebenden Farbe Blau fest.  
  
-   Zeichnet die <xref:System.Drawing.Drawing2D.PathGradientBrush> auf dem Bildschirm vor dem Anwenden der Transformation für Blend.  
  
-   Wendet die Blend-Transformation auf den Pinsel mithilfe seiner <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A> Methode.  
  
-   Ruft die <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> -Methode das Pinselrechteck verschieben, dass er nicht zuvor auf dem Bildschirm gezeichnet diejenige überlagert.  
  
-   Zeichnet den transformiert Pinsel Rechteck wird auf dem Bildschirm gezeichnet.  
  
 Beachten Sie, dass die maximale Center Farbe (Rot) befindet halbem Weg von der Mitte des Pfads auf die Begrenzung des Pfads ist.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Ein Wert zwischen 0 und 1, der angibt, wobei alle "Radial" aus der Mitte des Pfads mit dem Pfad Grenze, die Farbe in der Mitte auf ihre höchste Intensität werden wird. Der Wert 1 (Standard) platziert die höchste Intensität in der Mitte des Pfads an.</param>
        <summary>Erstellt einen Pinsel mit Farbverlauf, der Farben von der Mitte des Pfads nach außen Grenze für den Pfad zu ändern. Der Übergang von einer Farbe in eine andere basiert auf einer Glockenkurve.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist mehr als eine Farbe in der <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Array der ersten Farbe in das Array wird verwendet, für die Farbe am Ende. In diesem Array angegebenen Farben werden für separate Punkte auf den Pinsel Grenze Pfad verwendet.  
  
 Standardmäßig ändert Sie über die Begrenzung eines linearen Pfadfarbverlaufs für den Mittelpunkt sich die Farbe graduell aus der Farbe Grenze an die. Sie können die Positionierung und Mischung von Farben Grenze und Center durch Aufruf dieser Methode anpassen.  
  
   
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Ein Wert zwischen 0 und 1, der angibt, wobei alle "Radial" aus der Mitte des Pfads mit dem Pfad Grenze, die Farbe in der Mitte auf ihre höchste Intensität werden wird. Der Wert 1 (Standard) platziert die höchste Intensität in der Mitte des Pfads an.</param>
        <param name="scale">Ein Wert zwischen 0 und 1, der die maximale Intensität der Farbe Center angibt, die mit der Farbe Begrenzung gemischt ruft. Der Wert 1 bewirkt, dass die größtmögliche Intensität der Farbe Center, und dies ist der Standardwert.</param>
        <summary>Erstellt einen Pinsel mit Farbverlauf, der Farben von der Mitte des Pfads nach außen Grenze für den Pfad zu ändern. Der Übergang von einer Farbe in eine andere basiert auf einer Glockenkurve.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist mehr als eine Farbe in der <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Array der ersten Farbe in das Array wird verwendet, für die Farbe am Ende. In diesem Array angegebenen Farben werden für separate Punkte auf den Pinsel Grenze Pfad verwendet.  
  
 Standardmäßig ändert Sie über die Begrenzung eines linearen Pfadfarbverlaufs für den Mittelpunkt sich die Farbe graduell aus der Farbe Grenze an die. Sie können die Positionierung und Mischung von Farben Grenze und Center durch Aufruf dieser Methode anpassen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, einem <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt einen Grafikpfad und ein Rechteck hinzugefügt.  
  
-   Erstellt eine <xref:System.Drawing.Drawing2D.PathGradientBrush> aus der Pfad verweist (in diesem Beispiel bilden die Punkte eines Rechtecks, aber es kann sich die meisten jeder Form handeln).  
  
-   Legt die Farbe in der Mitte auf Rot und die umgebenden Farbe Blau fest.  
  
-   Zeichnet die <xref:System.Drawing.Drawing2D.PathGradientBrush> auf dem Bildschirm vor dem Anwenden der Transformation für Blend.  
  
-   Wendet die Blend-Transformation auf den Pinsel mithilfe seiner <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A> Methode.  
  
-   Ruft die <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> -Methode das Pinselrechteck verschieben, dass er nicht zuvor auf dem Bildschirm gezeichnet diejenige überlagert.  
  
-   Zeichnet das Rechteck transformiert Pinsel auf dem Bildschirm an.  
  
 Beachten Sie, dass die maximale Center Farbe (Rot) befindet halbem Weg von der Mitte des Pfads auf die Begrenzung des Pfads ist.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurroundColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] SurroundColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] SurroundColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Array von Farben aus, die mit den Punkten im Pfad dieser entsprechen <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> füllt.</summary>
        <value>Ein Array von <see cref="T:System.Drawing.Color" /> Strukturen, die Farben für jede darstellt, zeigen Sie im Pfad dies <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> füllt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Drawing.Color> in die <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> Array entspricht einem Punkt im Pfad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Kopie der <see cref="T:System.Drawing.Drawing2D.Matrix" /> , definiert eine lokale geometrische Transformation für diesen <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Eine Kopie der <see cref="T:System.Drawing.Drawing2D.Matrix" /> , definiert eine geometrische Transformation, die gilt nur für mit diesem gezeichneten <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine geometrische Transformation kann zu übersetzen, zu skalieren, drehen oder neigen Verlaufsfläche verwendet werden. Da die Matrix zurückgegeben und durch die <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform%2A> Eigenschaft ist eine Kopie der geometrischen Transformation des Pinsels, sollten Sie die Matrix freigeben, wenn Sie nicht mehr benötigen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Der Wert der Verschiebung in x-Richtung.</param>
        <param name="dy">Der Wert der Verschiebung in y-Richtung.</param>
        <summary>Wendet die angegebene Übersetzung für die lokale geometrische Transformation an. Diese Methode stellt der Transformation die Verschiebung voran.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">Der Wert der Verschiebung in x-Richtung.</param>
        <param name="dy">Der Wert der Verschiebung in y-Richtung.</param>
        <param name="order">Die Reihenfolge (vorangestellt oder angefügt), in der die Schiebung angewendet wird.</param>
        <summary>Wendet die angegebene Übersetzung für die lokale geometrische Transformation in der angegebenen Reihenfolge an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , der den Umbruchmodus dafür angibt <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Ein <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , die angibt, wie mit diesem gezeichneten <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> nebeneinander angeordnet sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
