<Type Name="InvokeMethodOptions" FullName="System.Management.InvokeMethodOptions">
  <TypeSignature Language="C#" Value="public class InvokeMethodOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokeMethodOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.InvokeMethodOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt Optionen für das Aufrufen einer Verwaltungsmethode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die **Win32_Process** Methode, um einen neuen Prozess von Calc.exe zu starten. Die <xref:System.Management.InvokeMethodOptions> Klasse wird verwendet, um die Methode aufzurufen.  
  
 [!code-csharp[wminet_InvokeMethodOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions/cs/InvokeMethodOptions.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions/vb/InvokeMethodOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Management.InvokeMethodOptions" /> -Klasse für die <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> Vorgang, mit Standardwerten. Dies ist der Standardkonstruktor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die **Win32_Process** Methode, um einen neuen Prozess von Calc.exe zu starten. Der Standardkonstruktor, der die <xref:System.Management.InvokeMethodOptions> Klasse dient.  
  
 [!code-csharp[wminet_InvokeMethodOptions-1#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-1/cs/InvokeMethodOptions-1.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions-1#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-1/vb/InvokeMethodOptions-1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">Eine anbieterspezifische, mit dem Namen / Wert-Paare-Objekt, das über den Anbieter übergeben werden soll.</param>
        <param name="timeout">Die Zeitdauer, lassen den Vorgang durchzuführen, bevor ein Timeout eintritt. Der Standardwert ist <see cref="F:System.TimeSpan.MaxValue" />. Durch Festlegen dieses Parameters wird die Operation halbsynchron aufgerufen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Management.InvokeMethodOptions" /> Klasse für einen Invoke-Vorgang mit den angegebenen Werten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die **Win32_Process** Methode, um einen neuen Prozess von Calc.exe zu starten. Die <xref:System.Management.InvokeMethodOptions> Klasse wird verwendet, um die Methode aufzurufen.  
  
 [!code-csharp[wminet_InvokeMethodOptions-2#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-2/cs/InvokeMethodOptions-2.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions-2#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-2/vb/InvokeMethodOptions-2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Kopie des Objekts zurück.</summary>
        <returns>Das geklonte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>.NET Framework-Sicherheit  
 Volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann von nur teilweise vertrauenswürdigem Code nicht verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
