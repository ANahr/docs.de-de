<Type Name="ContractAdapter" FullName="System.AddIn.Pipeline.ContractAdapter">
  <TypeSignature Language="C#" Value="public static class ContractAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContractAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden zum Freigeben und Neuanpassen von-add-ins bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Klasse verwenden, um ein Add-in mit einem anderen Host gemeinsam nutzen, die nicht die gleiche Pipeline für das Add-in (insbesondere dann, einen anderen Host, die nicht die gleiche Hostansicht des Add-Ins).  
  
 Wenn Sie eine aktivierte add-in von der Hostansicht für den Vertrag angepasst werden kann, verwenden die <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> Methode.  
  
 Wenn Sie eine des Vertrags Instanz und in der Hostansicht zu konvertieren müssen, verwenden Sie die <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> Methode.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Der Typ, der die Hostansicht des Add-Ins definiert.</typeparam>
        <param name="contract">Ein Handle für den Vertrag, der durch das Add-in verwendet werden, um gemeinsam genutzt werden.</param>
        <param name="location">Anwendungsbasis des Hosts.</param>
        <summary>Ruft eine Hostansicht ein Add-in ab, falls ein entsprechender hostseitige Adapter durch einen Wert vom angegebenen Speicherort gefunden wird die <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" /> Enumeration.</summary>
        <returns>Der Hostansicht des Add-Ins, die gemeinsam verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Szenario wird eine Entität hat eine Instanz eines Vertrags, und Sie möchte, es zu einer bestimmten Ansicht anpassen. Verwenden Sie diese Methode, um Abfragen das System zum Suchen und zu instanziieren eines Adapters, in dieser Ansicht zu konvertieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="pipelineRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Der Typ, der die Hostansicht des Add-Ins definiert.</typeparam>
        <param name="contract">Ein Handle für den Vertrag, der durch das Add-in verwendet werden, um gemeinsam genutzt werden.</param>
        <param name="pipelineRoot">Ein Pfad zu den Add-in-Speicher.</param>
        <summary>Ruft eine Hostansicht ein Add-in ab, wenn ein entsprechender hostseitige Adapter an ein Pfad angegebenen Speicherort gefunden wird.</summary>
        <returns>Der Hostansicht des Add-Ins, die gemeinsam verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Szenario wird eine Entität hat eine Instanz eines Vertrags, und Sie möchte, es zu einer bestimmten Ansicht anpassen. Verwenden Sie diese Methode, um Abfragen das System zum Suchen und zu instanziieren eines Adapters, in dieser Ansicht zu konvertieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Pipeline.ContractHandle ViewToContractAdapter(object view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Pipeline.ContractHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="view">Der Hostansicht, der ein Add-in, das durch das System über die aktuelle Anwendungsdomäne aktiviert werden soll.</param>
        <summary>Ruft das Handle für den Vertrag für eine bereitgestellte Hostansicht ein Add-in.</summary>
        <returns>Ein Handle für den Vertrag.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Szenario weist der Quellentität (ein Host) ein Add-in, die eine Zielentität (einen anderen Host) freigegeben werden sollen.  
  
 Verwenden Sie diese Methode, um das Handle für den Vertrag zu erhalten, die vom Add-in-System für die Quellentität instanziiert wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="view" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
