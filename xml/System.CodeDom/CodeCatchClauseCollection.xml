<Type Name="CodeCatchClauseCollection" FullName="System.CodeDom.CodeCatchClauseCollection">
  <TypeSignature Language="C#" Value="public class CodeCatchClauseCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCatchClauseCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeCatchClauseCollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von<see cref="T:System.CodeDom.CodeCatchClause" />-Objekten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.CodeDom.CodeCatchClauseCollection>-Klasse stellt ein einfaches Auflistungsobjekt bereit, mit dem ein Satz von <xref:System.CodeDom.CodeCatchClause>-Objekten gespeichert werden kann.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung von der <xref:System.CodeDom.CodeCatchClauseCollection> -Klassenmethoden. Das Beispiel erstellt eine neue Instanz der Klasse und verwendet die Methoden Anweisungen auf die Auflistung, deren Index zurückzugeben und hinzufügen oder Entfernen von Attributen zu einem bestimmten Index.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeCatchClauseCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeCatchClauseCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeCatchClauseCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection (System.CodeDom.CodeCatchClause[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCatchClause[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array von <see cref="T:System.CodeDom.CodeCatchClause" /> Objekten, mit denen die Auflistung zu initialisieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> Klasse, die das angegebene Array von enthält <see cref="T:System.CodeDom.CodeCatchClause" /> Objekte.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder mehrere Objekte im Array sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClauseCollection (System.CodeDom.CodeCatchClauseCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeCatchClauseCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> mit dem die Auflistung zu initialisieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> Klasse, die die Elemente der Auflistung angegebenen Quelle enthält.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzuzufügende <see cref="T:System.CodeDom.CodeCatchClause" />-Objekt.</param>
        <summary>Fügt der Auflistung das angegebene <see cref="T:System.CodeDom.CodeCatchClause" />-Objekt hinzu.</summary>
        <returns>Der Index, an dem das neue Element eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht das Hinzufügen einer <xref:System.CodeDom.CodeCatchClause> -Objekt an die <xref:System.CodeDom.CodeCatchClauseCollection> Instanz.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeCatchClauseCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeCatchClauseCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeCatchClause[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeCatchClause[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.CodeDom.CodeCatchClause" /> , enthält die Objekte in der Auflistung hinzu.</param>
        <summary>Kopiert die Elemente des angegebenen <see cref="T:System.CodeDom.CodeCatchClause" /> Array an das Ende der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.CodeDom.CodeCatchClauseCollection.AddRange%28System.CodeDom.CodeCatchClause%5B%5D%29> -methodenüberladung, um die Elemente eines Arrays von hinzufügen <xref:System.CodeDom.CodeCatchClause> -Objekte und die <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeCatchClauseCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeCatchClauseCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeCatchClauseCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeCatchClauseCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClauseCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClauseCollection" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> , enthält die Objekte in der Auflistung hinzu.</param>
        <summary>Kopiert den Inhalt eines anderen <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> Objekt an das Ende der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.CodeDom.CodeCatchClauseCollection.AddRange%28System.CodeDom.CodeCatchClauseCollection%29> -methodenüberladung, um die Mitglieder einer hinzufügen <xref:System.CodeDom.CodeCatchClauseCollection> Objekt zu einem anderen <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeCatchClauseCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeCatchClauseCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.CodeDom.CodeCatchClause" /> in der Auflistung zu suchende Objekt.</param>
        <summary>Ruft einen Wert, der angibt, ob die Auflistung das angegebene <see cref="T:System.CodeDom.CodeCatchClause" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die Auflistung das angegebene Objekt enthält; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.CodeDom.CodeCatchClauseCollection.Contains%2A> Methode zum Suchen nach das Vorhandensein eines bestimmten <xref:System.CodeDom.CodeCatchClause> -Instanz und ruft den Indexwert ab, an dem sie gefunden wurde.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeCatchClauseCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeCatchClauseCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeCatchClause[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeCatchClause[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.CopyTo(System.CodeDom.CodeCatchClause[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeCatchClause[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das eindimensionale <see cref="T:System.Array" /> , die das Ziel der aus der Auflistung kopierten Werte ist.</param>
        <param name="index">Der Index des Arrays, bei dem eingefügt werden soll.</param>
        <summary>Kopiert die Auflistungsobjekte in ein eindimensionales <see cref="T:System.Array" /> Instanz, beginnend am angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie zum Kopieren der Inhalte von einer <xref:System.CodeDom.CodeCatchClauseCollection> auf eine <xref:System.CodeDom.CodeCatchClause> array, beginnend am Indexwert 0.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeCatchClauseCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeCatchClauseCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Zielarray ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der Elemente in der <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> ist größer als der verfügbare Platz zwischen dem Index des Zielarrays gemäß der <paramref name="index" /> Parameter und dem Ende des Zielarrays.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="array" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="index" /> -Parameter ist kleiner als der minimale Index im Zielarray.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.CodeDom.CodeCatchClause" /> in der Auflistung zu suchende Objekt.</param>
        <summary>Ruft den Index des angegebenen <see cref="T:System.CodeDom.CodeCatchClause" /> Objekt in der Auflistung, wenn sie in der Auflistung vorhanden ist.</summary>
        <returns>Der Index des angegebenen Objekts, wenn gefunden, in der Auflistung. andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel sucht das Vorhandensein eines bestimmten <xref:System.CodeDom.CodeCatchClause> -Objekt und verwendet die <xref:System.CodeDom.CodeCatchClauseCollection.IndexOf%2A> Methode, um den Indexwert abzurufen, bei dem es gefunden wurde.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeCatchClauseCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeCatchClauseCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Insert(System.Int32,System.CodeDom.CodeCatchClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, wobei das angegebene Objekt eingefügt werden soll.</param>
        <param name="value">Die <see cref="T:System.CodeDom.CodeCatchClause" /> einzufügende Objekt.</param>
        <summary>Fügt das angegebene <see cref="T:System.CodeDom.CodeCatchClause" /> Objekt am angegebenen Index in die Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.CodeDom.CodeCatchClauseCollection.Insert%2A> -Methode zum Hinzufügen einer <xref:System.CodeDom.CodeCatchClause> -Objekt an eine <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeCatchClauseCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeCatchClauseCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCatchClause this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCatchClause Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClauseCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCatchClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index der Auflistung zuzugreifen.</param>
        <summary>Ruft ab oder legt die <see cref="T:System.CodeDom.CodeCatchClause" /> Objekt am angegebenen Index in der Auflistung.</summary>
        <value>Ein <see cref="T:System.CodeDom.CodeCatchClause" /> Objekt an jedem gültigen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist ein Indexer, der zum Zugriff auf die Auflistung verwendet werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter liegt außerhalb des gültigen Bereichs von Indizes für die Auflistung.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeCatchClause value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeCatchClause value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClauseCollection.Remove(System.CodeDom.CodeCatchClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeCatchClause" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.CodeDom.CodeCatchClause" />-Objekt, das aus der Auflistung entfernt werden soll.</param>
        <summary>Entfernt das angegebene <see cref="T:System.CodeDom.CodeCatchClause" />-Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.CodeDom.CodeCatchClauseCollection.Remove%2A> Methode zum Löschen einer <xref:System.CodeDom.CodeCatchClause> -Objekt aus einer <xref:System.CodeDom.CodeCatchClauseCollection>.  
  
 [!code-cpp[CodeCatchClauseCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeCatchClauseCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeCatchClauseCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeCatchClauseCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeCatchClauseCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das angegebene Objekt ist nicht in der Auflistung gefunden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
