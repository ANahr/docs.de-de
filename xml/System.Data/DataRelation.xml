<Type Name="DataRelation" FullName="System.Data.DataRelation">
  <TypeSignature Language="C#" Value="public class DataRelation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRelation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRelation" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("RelationName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine über-/unterordnungsbeziehung zwischen zwei <see cref="T:System.Data.DataTable" /> Objekte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Data.DataRelation> wird verwendet, um zwei verknüpfen <xref:System.Data.DataTable> Objekte miteinander über <xref:System.Data.DataColumn> Objekte. In einer Customer/Orders-Beziehung, z. B. die Customers-Tabelle ist das übergeordnete Element und die Orders-Tabelle wird das untergeordnete Element der Beziehung. Dieser Vorgang ähnelt einem Primärschlüssel/Fremdschlüssel-Beziehung. Weitere Informationen finden Sie unter [Navigieren von "DataRelations"](~/docs/framework/data/adonet/dataset-datatable-dataview/navigating-datarelations.md).  
  
 Beziehungen werden zwischen den entsprechenden Spalten in den übergeordneten und untergeordneten Tabellen erstellt. D. h. die <xref:System.Data.DataColumn.DataType%2A> Wert für beide Spalten identisch sein müssen.  
  
 Beziehungen können auch kaskadiert werden verschiedene Änderungen aus dem übergeordneten <xref:System.Data.DataRow> zu seiner untergeordneten Zeilen. Um zu steuern, wie Werte in untergeordneten Zeilen geändert werden, Hinzufügen einer <xref:System.Data.ForeignKeyConstraint> auf die <xref:System.Data.ConstraintCollection> von der <xref:System.Data.DataTable> Objekt. Die <xref:System.Data.ConstraintCollection> bestimmt, welche Aktion bei einem Wert in einer übergeordneten Tabelle gelöscht oder aktualisiert wird.  
  
 Wenn eine <xref:System.Data.DataRelation> wird erstellt, überprüft er zuerst, ob die Beziehung hergestellt werden kann. Nachdem er hinzugefügt wurde die <xref:System.Data.DataRelationCollection>, bleibt die Beziehung von untersagen von Änderungen, die sie ungültig machen würde. Zwischen dem Zeitraum bei einer <xref:System.Data.DataRelation> erstellt und hinzugefügt wird die <xref:System.Data.DataRelationCollection>, es ist möglich, dass zusätzliche Änderungen an den übergeordneten oder untergeordneten Zeilen vorgenommen werden müssen. Eine Ausnahme wird ausgelöst, wenn dadurch eine Beziehung, die nicht mehr gültig ist.  
  
> [!NOTE]
>  Beschädigte Daten kann auftreten, wenn eine bidirektionale Beziehung zwischen zwei Tabellen definiert ist. Eine bidirektionale Beziehung besteht aus zwei `DataRelation` Objekte, die die gleichen Spalten mit den über-und untergeordneten Rollen gewechselt verwenden. Wird keine Ausnahme ausgelöst, wenn die `DataRelation` Objekte gespeichert werden; allerdings können Daten beschädigt.  
  
 <xref:System.Data.DataRelation>Objekte sind enthalten eine <xref:System.Data.DataRelationCollection>, die Sie über zugreifen können der <xref:System.Data.DataSet.Relations%2A> Eigenschaft der <xref:System.Data.DataSet>, und die <xref:System.Data.DataTable.ChildRelations%2A> und <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaften des der <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRelation> und fügt es der <xref:System.Data.DataRelationCollection> von einem <xref:System.Data.DataSet>.  
  
 [!code-csharp[Classic WebData DataRelation Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist für schreibgeschützte Vorgänge mit mehreren Threads sicher. Sie müssen alle Schreibvorgänge synchronisieren.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name des <see cref="T:System.Data.DataRelation" />. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumn">Das übergeordnete Element <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
        <param name="childColumn">Das untergeordnete Element <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.DataRelation" /> -Klasse mit dem angegebenen <see cref="T:System.Data.DataRelation" /> Namen, und die übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRelation> und fügt es der <xref:System.Data.DataRelationCollection> von einem <xref:System.Data.DataSet>.  
  
 [!code-csharp[Classic WebData DataRelation.DataRelation#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/CS/datarelation.cs#1)]
 [!code-vb[Classic WebData DataRelation.DataRelation#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/VB/datarelation.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Eine oder beide der <see cref="T:System.Data.DataColumn" /> sammlungsobjekten <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die Spalten aufweisen unterschiedliche Datentypen.  
  
 – oder –  
  
 Die Tabellen gehören nicht derselben <see cref="T:System.Data.DataSet" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name der Beziehung. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</param>
        <param name="childColumns">Ein Array des untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.DataRelation" /> -Klasse mit dem angegebenen <see cref="T:System.Data.DataRelation" /> Namen und übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRelation> und fügt es der <xref:System.Data.DataRelationCollection> von einem <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Eine oder beide der <see cref="T:System.Data.DataColumn" /> sammlungsobjekten <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die <see cref="T:System.Data.DataColumn" /> Objekte weisen verschiedene Datentypen  
  
 – oder –  
  
 Eine oder beide der Arrays nicht unterschiedliche Spalten aus derselben Tabelle bestehen.  
  
 – oder –  
  
 Die Tabellen gehören nicht derselben <see cref="T:System.Data.DataSet" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name der Beziehung. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumn">Das übergeordnete Element <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
        <param name="childColumn">Das untergeordnete Element <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
        <param name="createConstraints">Ein Wert, der angibt, ob Einschränkungen erstellt werden. <see langword="true" />, wenn Einschränkungen erstellt werden. Andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.DataRelation" /> -Klasse mit dem angegebenen Namen, die übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte und ein Wert, der angibt, ob zum Erstellen von Einschränkungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRelation> und fügt es der <xref:System.Data.DataRelationCollection> von einem <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Eine oder beide der <see cref="T:System.Data.DataColumn" /> sammlungsobjekten <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die Spalten aufweisen unterschiedliche Datentypen.  
  
 – oder –  
  
 Die Tabellen gehören nicht derselben <see cref="T:System.Data.DataSet" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name der Beziehung. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</param>
        <param name="childColumns">Ein Array des untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte.</param>
        <param name="createConstraints">Ein Wert, der angibt, ob zum Erstellen von Einschränkungen. <see langword="true" />, wenn Einschränkungen erstellt werden. Andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.DataRelation" /> -Klasse mit dem angegebenen Namen und übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte und der Wert, der angibt, ob zum Erstellen von Einschränkungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRelation> und fügt es der <xref:System.Data.DataRelationCollection> von einem <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Eine oder beide der <see cref="T:System.Data.DataColumn" /> Objekte <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die Spalten aufweisen unterschiedliche Datentypen.  
  
 – oder –  
  
 Die Tabellen gehören nicht derselben <see cref="T:System.Data.DataSet" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name der Beziehung. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentTableName">Der Name des der <see cref="T:System.Data.DataTable" /> , die die übergeordnete Tabelle der Beziehung.</param>
        <param name="childTableName">Der Name des der <see cref="T:System.Data.DataTable" /> , die die untergeordnete Tabelle der Beziehung.</param>
        <param name="parentColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" /> Objektnamen in der übergeordneten Tabelle <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
        <param name="childColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" /> Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
        <param name="nested">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
        <summary>Dieser Konstruktor wird für die entwurfszeitunterstützung in Visual Studio-Umgebung bereitgestellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle <xref:System.Data.DataRelation> Objekt erstellt, die die Verwendung dieses Konstruktors muss hinzugefügt werden, auf die Auflistung mit der <xref:System.Data.DataRelationCollection.AddRange%2A> Methode innerhalb eines eine <xref:System.Data.DataTable.BeginInit%2A> und <xref:System.Data.DataTable.EndInit%2A> Block. Wenn dieser Konstruktor nicht, zwischen aufgerufen wird <xref:System.Data.DataTable.BeginInit%2A> und <xref:System.Data.DataTable.EndInit%2A> eine <xref:System.NullReferenceException> erfolgt. Darüber hinaus müssen die Tabellen und Spalten mit den angegebenen Namen zu dem Zeitpunkt vorhanden sein, wenn, die der Konstruktor aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="parentTableNamespace" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="childTableNamespace" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Der Name des <see cref="T:System.Data.DataRelation" />. Wenn <see langword="null" /> oder eine leere Zeichenfolge (""), ein Standardnamen erhält das erstellte Objekt hinzugefügt wird die <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentTableName">Der Name des der <see cref="T:System.Data.DataTable" /> , die die übergeordnete Tabelle der Beziehung.</param>
        <param name="parentTableNamespace">Der Name des Namespaces der übergeordneten Tabelle.</param>
        <param name="childTableName">Der Name des der <see cref="T:System.Data.DataTable" /> , die die untergeordnete Tabelle der Beziehung.</param>
        <param name="childTableNamespace">Der Name des Namespaces der untergeordneten Tabelle.</param>
        <param name="parentColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" /> Objektnamen in der übergeordneten Tabelle <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
        <param name="childColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" /> Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
        <param name="nested">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
        <summary>Dieser Konstruktor wird für die entwurfszeitunterstützung in Visual Studio-Umgebung bereitgestellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle <xref:System.Data.DataRelation> Objekt erstellt, die die Verwendung dieses Konstruktors muss dann in der Auflistung hinzugefügt werden <xref:System.Data.DataRelationCollection.AddRange%2A>. Tabellen und Spalten mit den angegebenen Namen müssen vorhanden sein, die zum Zeitpunkt der-Methode aufgerufen wird, oder wenn <xref:System.Data.DataTable.BeginInit%2A> wurde aufgerufen, bevor der Aufruf dieses Konstruktors, die Tabellen und Spalten mit den angegebenen Namen zu dem Zeitpunkt vorhanden sein muss, <xref:System.Data.DataTable.EndInit%2A> aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckStateForProperty">
      <MemberSignature Language="C#" Value="protected void CheckStateForProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckStateForProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.CheckStateForProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.DataException">Die über- und untergeordneten Tabellen gehören zu verschiedenen <see cref="T:System.Data.DataSet" /> Objekte.  
  
 – oder –  
  
 Ein oder mehrere Paare von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte haben unterschiedliche Datentypen.  
  
 – oder –  
  
 Die über- und untergeordneten <see cref="T:System.Data.DataColumn" /> Objekte identisch sind.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ChildColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ChildColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das untergeordnete Element <see cref="T:System.Data.DataColumn" /> Objekte dieser Beziehung.</summary>
        <value>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird das untergeordnete Element <xref:System.Data.DataColumn> Objekte von einem <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ChildColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ForeignKeyConstraint ChildKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ForeignKeyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.ForeignKeyConstraint" /> für die Beziehung.</summary>
        <value>Ein <see langword="ForeignKeyConstraint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein zugeordnetes <xref:System.Data.ForeignKeyConstraint> vorhanden ist für diese Beziehung wird automatisch erstellt, und verweist, zu der `ChildKeyConstraint`, wenn die Beziehung zur Auflistung der Beziehungen hinzugefügt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die `UpdateRule`, `DeleteRule`, und `AcceptReject` Regel für die `ForeignKeyConstraint` zugeordneten der `DataRelation`.  
  
 [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die untergeordnete Tabelle dieser Beziehung ab.</summary>
        <value>Ein <see cref="T:System.Data.DataTable" /> , die die untergeordnete Tabelle der Beziehung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird das untergeordnete Element <xref:System.Data.DataTable> von einem <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ChildTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.DataSet" /> , der die <see cref="T:System.Data.DataRelation" /> gehört.</summary>
        <value>Ein <see cref="T:System.Data.DataSet" /> , der die <see cref="T:System.Data.DataRelation" /> gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataRelationCollection> zugeordnet eine <xref:System.Data.DataSet> erfolgt über die <xref:System.Data.DataSet.Relations%2A> Eigenschaft von der <xref:System.Data.DataSet> Objekt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataSet> von einem <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung, in der benutzerdefinierte Eigenschaften gespeichert.</summary>
        <value>Ein <see cref="T:System.Data.PropertyCollection" /> , benutzerdefinierte Eigenschaften enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Data.DataRelation.ExtendedProperties%2A> benutzerdefinierte Informationen zum Hinzufügen einer <xref:System.Data.DataRelation> Objekt. Fügen Sie Informationen, mit der Add-Methode. Abrufen von Informationen mit Item-Methode.  
  
 Erweiterte Eigenschaften muss vom Typ <xref:System.String>. Eigenschaften, die nicht vom Typ Zeichenfolge sind, werden nicht beibehalten. wenn die <xref:System.Data.DataRelation> als XML geschrieben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nested">
      <MemberSignature Language="C#" Value="public virtual bool Nested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Nested" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.Nested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob <see cref="T:System.Data.DataRelation" /> -Objekte geschachtelt sind.</summary>
        <value>
          <see langword="true" />, wenn <see cref="T:System.Data.DataRelation" /> Objekte sind geschachtelt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Data.DataRelation> Objekte, um hierarchische Beziehungen, z. B. die in XML zu definieren. Weitere Informationen finden Sie unter [Schachteln von "DataRelations"](~/docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).  
  
> [!NOTE]
>  Wenn die <xref:System.Data.DataTable.TableName%2A> der untergeordneten Tabelle in der Beziehung entspricht der <xref:System.Data.DataColumn.ColumnName%2A> einer Spalte in der übergeordneten Tabelle in der Beziehung der <xref:System.Data.DataRelation.Nested%2A> -Eigenschaft muss "false" sein. Dies war nicht mit .NET Framework, Version 1.0 erforderlich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">Parameterverweis.</param>
        <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ParentColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ParentColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von <see cref="T:System.Data.DataColumn" /> Objekte, die die übergeordneten dieser Spalten <see cref="T:System.Data.DataRelation" />.</summary>
        <value>Ein Array von <see cref="T:System.Data.DataColumn" /> Objekte, die die übergeordneten dieser Spalten <see cref="T:System.Data.DataRelation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird das Array von <xref:System.Data.DataColumn> Objekte, die Funktion als übergeordnete Spalten in der Beziehung.  
  
 [!code-vb[Classic WebData DataRelation.ParentColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.UniqueConstraint ParentKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.UniqueConstraint" /> sichergestellt, dass Werte in der übergeordneten Spalte von einem <see cref="T:System.Data.DataRelation" /> eindeutig sind.</summary>
        <value>Ein <see cref="T:System.Data.UniqueConstraint" /> , mit der sichergestellt, dass die Werte in einer übergeordneten Spalte eindeutig sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRelation.ParentKeyConstraint%2A> von einem <xref:System.Data.DataRelation> Objekt.  
  
 [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ParentTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ParentTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das übergeordnete <see cref="T:System.Data.DataTable" /> dieses <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <value>Ein <see cref="T:System.Data.DataTable" /> , die die übergeordnete Tabelle dieser Beziehung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird das übergeordnete Element <xref:System.Data.DataTable> von einem <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ParentTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Parameterverweis.</param>
        <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationName">
      <MemberSignature Language="C#" Value="public virtual string RelationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.RelationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen, die zum Abrufen von einem <see cref="T:System.Data.DataRelation" /> aus der <see cref="T:System.Data.DataRelationCollection" />.</summary>
        <value>Der Name der dem einer <see cref="T:System.Data.DataRelation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRelation.RelationName%2A> Eigenschaft zum Abrufen einer <xref:System.Data.DataRelation> aus der <xref:System.Data.DataRelationCollection>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRelation.RelationName%2A> Eigenschaft zum Abrufen einer <xref:System.Data.DataRelation> aus einer <xref:System.Data.DataRelationCollection>.  
  
 [!code-vb[Classic WebData DataRelation.RelationName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.RelationName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see langword="null" />oder eine leere Zeichenfolge ("") übergeben wurde, in einem <see cref="T:System.Data.DataColumn" /> also eine <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.DuplicateNameException">Die <see cref="T:System.Data.DataRelation" /> gehört zu einer Auflistung, die bereits enthält eine <see cref="T:System.Data.DataRelation" /> mit dem gleichen Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Data.DataRelation.RelationName" />, falls vorhanden.</summary>
        <returns>Der Wert der <see cref="P:System.Data.DataRelation.RelationName" />-Eigenschaft.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataColumn.ToString%2A> zum Zurückgeben des Namens der Eigenschaft der <xref:System.Data.DataRelation> Objekt.  
  
 [!code-csharp[Classic WebData DataRelation.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
