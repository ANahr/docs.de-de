<Type Name="CommandType" FullName="System.Data.CommandType">
  <TypeSignature Language="C#" Value="public enum CommandType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandType" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt an, wie eine Befehlszeichenfolge interpretiert wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Data.CommandType> Eigenschaftensatz StoredProcedure, ist die <xref:System.Data.IDbCommand.CommandText%2A> Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden, auf die zugegriffen werden. Der Benutzer möglicherweise erforderlich sein, um Escapezeichensyntax verwenden oder qualifizierende Zeichen einschließen, wenn der angegebenen benannte Tabellen keine Sonderzeichen enthalten. Rufen Sie eine der Execute-Methoden eines Befehlsobjekts werden alle Zeilen und Spalten der benannten Tabelle(n) zurückgegeben.  
  
 Wenn die <xref:System.Data.CommandType> Eigenschaftensatz TableDirect, ist die <xref:System.Data.IDbCommand.CommandText%2A> Eigenschaft sollte auf den Namen der Tabelle festgelegt werden, auf die zugegriffen werden. Der Benutzer möglicherweise erforderlich sein, um Escapezeichensyntax verwenden oder qualifizierende Zeichen einschließen, wenn eine der benannten Tabellen Sonderzeichen enthalten. Rufen Sie eine der Execute-Methoden werden alle Zeilen und Spalten der benannten Tabelle zurückgegeben.  
  
 Um mehrere Tabellen zuzugreifen, verwenden Sie eine durch Trennzeichen getrennte Liste ohne Leerzeichen oder Auffüllungen, die mit den Namen der Tabellen zugreifen. Wenn die `CommandText` -Eigenschaft mehrere Tabellen benennt, wird ein Join der angegebenen Tabellen zurückgegeben.  
  
> [!NOTE]
>  `TableDirect`wird nur von der .NET Framework-Datenanbieter für OLE DB unterstützt. Zugriff auf mehrere Tabellen wird nicht unterstützt, wenn <xref:System.Data.CommandType.TableDirect> festgelegt ist, um `TableDirect`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StoredProcedure">
      <MemberSignature Language="C#" Value="StoredProcedure" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType StoredProcedure = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.StoredProcedure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Name einer gespeicherten Prozedur.</summary>
      </Docs>
    </Member>
    <Member MemberName="TableDirect">
      <MemberSignature Language="C#" Value="TableDirect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType TableDirect = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.TableDirect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name der Tabelle</summary>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="Text" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandType Text = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandType.Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein SQL-Text-Befehl. (Standardeinstellung)</summary>
      </Docs>
    </Member>
  </Members>
</Type>
