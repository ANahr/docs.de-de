<Type Name="TraceSection" FullName="System.Web.Configuration.TraceSection">
  <TypeSignature Language="C#" Value="public sealed class TraceSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TraceSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.TraceSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguriert den ASP.NET Trace-Dienst. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.TraceSection> -Klasse bietet eine Möglichkeit zum programmgesteuerten Zugriff auf und ändern Sie den Inhalt der Konfigurationsdatei `trace` Abschnitt. Die Trace-Abschnitt konfiguriert ASP.NET Trace-Funktionalität und Steuerelemente, wie Ablaufverfolgungsergebnisse gesammelt, gespeichert und angezeigt werden.  
  
 Wenn die Ablaufverfolgung aktiviert ist, generiert jede Seitenanforderung Ablaufverfolgungsmeldungen, die die Seitenausgabe angefügt oder in einem Ablaufverfolgungsprotokoll Anwendung gespeichert werden können. Sie können ASP.NET Trace Viewer (Trace.axd) verwenden, zum Anzeigen des Inhalts des Ablaufverfolgungsprotokolls.  
  
> [!NOTE]
>  Das Element ist in der Hierarchie in der Datei "Machine.config" und die Dateien "Web.config" im Abschnitt zulässig. Es ist nicht in den Konfigurationsdateien der Unterverzeichnisse mit Web zulässig.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.Configuration.TraceSection> Typ.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#1)]
 [!code-vb[System.Web.Configuration.TraceSection2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.TraceSection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Configuration.TraceSection" />-Klasse mit Standardeinstellungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob der ASP.NET Trace-Dienst aktiviert ist.</summary>
        <value>
          <see langword="true" />Wenn die Ablaufverfolgung aktiviert ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.Enabled%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#7)]
 [!code-vb[System.Web.Configuration.TraceSection2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalOnly">
      <MemberSignature Language="C#" Value="public bool LocalOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LocalOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.LocalOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("localOnly", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob ASP.NET Trace Viewer (Trace.axd) nur auf Anforderungen vom Webserver Host verfügbar ist.</summary>
        <value>
          <see langword="true" />Wenn ASP.NET Trace Viewer (Trace.axd) verfügbar nur für Anforderungen aus dem Web-Hostserver ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.LocalOnly%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#6)]
 [!code-vb[System.Web.Configuration.TraceSection2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MostRecent">
      <MemberSignature Language="C#" Value="public bool MostRecent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MostRecent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.MostRecent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("mostRecent", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die neuesten Anforderungen immer auf dem Server gespeichert werden.</summary>
        <value>
          <see langword="true" />Wenn die letzten Anforderungen immer in das Ablaufverfolgungsprotokoll; gespeichert werden andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anforderungen werden in das Ablaufverfolgungsprotokoll in der Reihenfolge eintreffen, bis zur Anzahl der Anforderungen, die im angegebenen gespeichert die <xref:System.Web.Configuration.TraceSection.RequestLimit%2A> Eigenschaft. Wenn das Anforderungslimit erreicht ist und <xref:System.Web.Configuration.TraceSection.MostRecent%2A> ist `true`, ältere Anforderungen werden automatisch verworfen und neue Anforderungen werden weiterhin zum Protokoll hinzugefügt werden. Wenn das Anforderungslimit erreicht ist und <xref:System.Web.Configuration.TraceSection.MostRecent%2A> ist `false`, neue Anforderungen werden erst frühere Anforderungen aus dem Protokoll entfernt werden oder das Anforderungslimit erhöht wurde verworfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.MostRecent%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#4)]
 [!code-vb[System.Web.Configuration.TraceSection2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageOutput">
      <MemberSignature Language="C#" Value="public bool PageOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PageOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.PageOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pageOutput", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die ASP.NET-Ablaufverfolgungsinformationen an die Ausgabe jeder Seite angefügt wird.</summary>
        <value>
          <see langword="true" />Wenn die Ablaufverfolgungsinformationen auf jeder Seite angefügt wird; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.PageOutput%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#2)]
 [!code-vb[System.Web.Configuration.TraceSection2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLimit">
      <MemberSignature Language="C#" Value="public int RequestLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.RequestLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, der maximalen Anzahl von Anforderungen an die Anwendung, für die ASP.NET Ablaufverfolgungsinformationen speichert.</summary>
        <value>Die maximale Anzahl der Anforderungen, auf dem Server zu speichern. Der Standard ist 10.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Begrenzung beträgt 10.000. Wenn ein Wert größer als 10.000 angegeben wird, wird es im Hintergrund auf 10.000 von ASP.NET abgerundet.  
  
 Die <xref:System.Web.Configuration.TraceSection.MostRecent%2A> Eigenschaft ruft ab oder legt einen Wert, der bestimmt, ob die Anforderungen, die auf dem Server gespeichert sind, die neuesten Anforderungen oder der ersten Anforderungen eingehen.  
  
 **Hinweis** Wenn überschreitet die Anzahl der Anforderungen der Begrenzung, die durch diese Einstellung und <xref:System.Web.Configuration.TraceSection.MostRecent%2A> ist `false`, keine Anforderungen mehr in das Ablaufverfolgungsprotokoll gespeichert sind. Wenn <xref:System.Web.Configuration.TraceSection.MostRecent%2A> ist `true`, die aktuelle Anforderungen werden von gespeichert, damit der Begrenzung, die durch diese Einstellung und ältere Anforderungen werden verworfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.RequestLimit%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#5)]
 [!code-vb[System.Web.Configuration.TraceSection2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TraceDisplayMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.TraceDisplayMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.TraceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("traceMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TraceDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Reihenfolge, in welcher, die ASP.NET Ablaufverfolgungsinformationen angezeigt wird.</summary>
        <value>Eines der <see cref="T:System.Web.Configuration.TraceDisplayMode" /> Werte, der die Reihenfolge, in der Ablaufverfolgung Informationen angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.TraceMode%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#8)]
 [!code-vb[System.Web.Configuration.TraceSection2#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToDiagnosticsTrace">
      <MemberSignature Language="C#" Value="public bool WriteToDiagnosticsTrace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteToDiagnosticsTrace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.TraceSection.WriteToDiagnosticsTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("writeToDiagnosticsTrace", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Nachrichten über die Seite Ablaufverfolgung ausgegeben, mit einer Instanz von weitergeleitet werden die <see cref="T:System.Diagnostics.Trace" /> Klasse.</summary>
        <value>
          <see langword="true" />Wenn die Ablaufverfolgungsmeldungen, um gesendet werden die <see cref="T:System.Diagnostics.Trace" /> Klasse; anderenfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.TraceSection.WriteToDiagnosticsTrace%2A>-Eigenschaft veranschaulicht. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Configuration.TraceSection> Klasse.  
  
 [!code-csharp[System.Web.Configuration.TraceSection2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/CS/tracesection.cs#3)]
 [!code-vb[System.Web.Configuration.TraceSection2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.TraceSection2/VB/tracesection.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
