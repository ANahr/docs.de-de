<Type Name="HttpModuleAction" FullName="System.Web.Configuration.HttpModuleAction">
  <TypeSignature Language="C#" Value="public sealed class HttpModuleAction : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpModuleAction extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpModuleAction" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konfiguriert die <see cref="T:System.Web.Configuration.HttpModulesSection" /> Module. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Configuration.HttpModuleAction> -Klasse bietet eine Möglichkeit zum programmgesteuerten Zugriff auf und Ändern der `add` Element von der `httpModules` Abschnitt einer Konfigurationsdatei.  
  
 Die <xref:System.Web.Configuration.HttpModuleAction> Typ ist Teil einer Gruppe, umfasst die <xref:System.Web.Configuration.HttpModuleActionCollection>, Sammlung, und die <xref:System.Web.Configuration.HttpModulesSection> Typen.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Werte für verschiedene Attribute der deklarativ angeben der `add` Element von der `httpModules` Abschnitt, die auch als Member zugegriffen werden kann die <xref:System.Web.Configuration.HttpModuleAction> Klasse.  
  
 Im folgenden Konfigurationsbeispiel-Datei zeigt, wie Sie Werte für deklarativ angeben, die `httpModules` Abschnitt.  
  
 Finden Sie in der [NIB: Vorgehensweise: Erstellen und Konfigurieren eines HTTP-Moduls](http://msdn.microsoft.com/en-us/4174fd13-a9c4-4ff6-baa5-3f7d7fc73ef3) Informationen zum Erstellen und Konfigurieren eines HTTP-Moduls finden Sie unter.  
  
```  
<httpModules>  
    <add name="TimerModule"   
      type="Samples.Aspnet.Configuration.RequestTimeInterval, RequestTimeInterval Version=1.0.1557.23158, Culture=neutral,  
      PublicKeyToken=7bfb33146a87b52e, processorArchitecture=MSIL"/>  
</httpModules>  
```  
  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.HttpModuleAction>-Klasse veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#1)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpModuleAction (string name, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpModuleAction.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Modulname.</param>
        <param name="type">Eine durch Trennzeichen getrennte Liste, die den Namen des Moduls und die Assemblyinformationen enthält.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.Configuration.HttpModuleAction" /> -Klasse mit den übergebenen Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name des Moduls ist ein Alias, den Sie verwenden können, die Ereignisse für Modul Ereignishandler zugeordnet werden soll. ASP.NET sucht nach der Assembly-DLL zunächst im privaten \bin im Verzeichnis der Anwendung und dann in den globalen Assemblycache (GAC).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen einer <xref:System.Web.Configuration.HttpModuleAction> Objekt.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#3)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Namen des Moduls.</summary>
        <value>Der Modulname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name des Moduls wird zum Identifizieren dieses <xref:System.Web.Configuration.HttpModuleAction> Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Web.Configuration.HttpModuleAction.Name%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#4)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpModuleAction.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("type", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Modultyp.</summary>
        <value>Eine durch Trennzeichen getrennte Liste, die den Namen des Moduls und die Assemblyinformationen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Assembly, die definiert, indem Sie finden die <xref:System.Web.Configuration.HttpModuleAction.Type%2A>, ASP.NET für die Assembly-DLL zunächst im privaten \bin im Verzeichnis der Anwendung und klicken Sie dann im Systemcache Assembly sucht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zugriff auf die <xref:System.Web.Configuration.HttpModuleAction.Type%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Web.Configuration.HttpModuleAction#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/CS/httpmoduleaction.cs#5)]
 [!code-vb[System.Web.Configuration.HttpModuleAction#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpModuleAction/VB/httpmoduleaction.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
