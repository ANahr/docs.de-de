<Type Name="EncoderReplacementFallbackBuffer" FullName="System.Text.EncoderReplacementFallbackBuffer">
  <TypeSignature Language="C#" Value="public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderReplacementFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Eingabezeichenfolge ersetzen, die verwendet wird, wenn das ursprüngliche Eingabezeichen nicht codiert werden kann. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es kann nicht möglich, ein Zeichen in eine entsprechende codierte Bytesequenz zu konvertieren, wenn keine geeignete Codierung vorhanden ist. Eine häufige Ursache für das Fehlschlagen der Codierung ist, wenn der Konvertierungsvorgang eine Codepage verwendet, die das zu codierende Zeichen darstellen kann.  
  
 Wenn das eingegebene Zeichen in eine Ausgabebytefolge konvertiert werden, kann ein <xref:System.Text.EncoderReplacementFallback?displayProperty=nameWithType> Objekt stellt eine Ersatzzeichenfolge, die für den ursprünglichen Eingabezeichens eingesetzt wird. Die Ersatzzeichenfolge initialisiert den Wert des der <xref:System.Text.EncoderReplacementFallback> Objekts und der Wert von der <xref:System.Text.EncoderReplacementFallback> Objekt initialisiert den Wert des ein <xref:System.Text.EncoderReplacementFallbackBuffer> Objekt. Der Wert, der eine <xref:System.Text.EncoderReplacementFallbackBuffer> Objekts den Ersatzfallbackpuffer aufgerufen. Der Konvertierungsvorgang Ersatzfallbackpuffer statt des ursprünglichen Eingabezeichens codiert, und den Rest der Eingabe die Verarbeitung fortsetzt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.EncoderReplacementFallback fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallback" Type="System.Text.EncoderReplacementFallback" />
      </Parameters>
      <Docs>
        <param name="fallback">Ein <see cref="T:System.Text.EncoderReplacementFallback" />-Objekt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Text.EncoderReplacementFallbackBuffer" /> Klasse mit dem Wert des ein <see cref="T:System.Text.EncoderReplacementFallback" /> Objekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Ein eingegebenes Zeichen. Dieser Parameter wird bei diesem Vorgang ignoriert, es sei denn, eine Ausnahme ausgelöst wird.</param>
        <param name="index">Die Indexposition des Zeichens im Eingabepuffer. Dieser Parameter wird bei diesem Vorgang ignoriert.</param>
        <summary>Bereitet Fallbackpuffer ersetzen die aktuellen Ersatzzeichenfolge verwendet.</summary>
        <returns>
          <see langword="true" />Wenn die Ersatzzeichenfolge nicht leer ist; <see langword="false" /> , wenn die Ersatzzeichenfolge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> -Methode <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> treten ein unbekanntes Zeichen in der Eingabe. Wenn der Rückgabewert der <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> ist `true`, kann die aufrufende Methode aufrufen, die <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> Methode, um jedes Zeichen im Austausch Fallbackpuffer abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Diese Methode wird aufgerufen, bevor Sie erneut die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> -Methode alle Zeichen im Austausch Fallbackpuffer gelesen hat.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Das hohe Ersatzzeichen des Eingabe-Paars.</param>
        <param name="charUnknownLow">Das niedrige Ersatzzeichen des Eingabe-Paars.</param>
        <param name="index">Die Indexposition des Ersatzzeichenpaars im Eingabepuffer.</param>
        <summary>Gibt an, ob eine Ersatzzeichenfolge verwendet werden kann, wenn ein Ersatzzeichenpaar Paar nicht codiert werden kann, oder ob das Ersatzzeichenpaar ignoriert werden kann. Parameter geben die Ersatzzeichenpaar und die Indexposition des Paars in der Eingabe an.</summary>
        <returns>
          <see langword="true" />Wenn die Ersatzzeichenfolge nicht leer ist; <see langword="false" /> , wenn die Ersatzzeichenfolge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> -Methode <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> treten ein unbekanntes Zeichen in der Eingabe. Wenn der Rückgabewert der <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> ist `true`, kann die aufrufende Methode aufrufen, die <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> Methode, um jedes Zeichen im Austausch Fallbackpuffer abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Diese Methode wird aufgerufen, bevor Sie erneut die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> Methode alle Ersatz Zeichen der Zeichenfolge lesen.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert des <paramref name="charUnknownHigh" /> ist kleiner als U + D800 oder größer als U + D8FF.  
  
 - oder -   
  
 Der Wert des <paramref name="charUnknownLow" /> ist kleiner als U + DC00 oder größer als U + DFFF liegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das nächste Zeichen im Austausch Fallbackpuffer ab.</summary>
        <returns>Das nächste Unicode-Zeichen im Fallbackpuffer ersetzen, die die Anwendung codiert werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.Encoding.GetBytes%2A> und <xref:System.Text.Encoder.Convert%2A> -Methode <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> bei ein unbekanntes Ersatzzeichenpaar oder die Zeichen in der Eingabe auftretenden. Wenn der Rückgabewert der <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> ist `true`, Aufrufmethode aufrufen kann <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> um jedes Zeichen im Austausch Fallbackpuffer abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bewirkt, dass beim nächsten Aufruf von der <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> Methode, um die Zeichenposition im Austausch Fallbackpuffer vor der aktuellen Position des Zeichens.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" /> Vorgang war erfolgreich, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeichen im Austausch Fallbackpuffer, die noch verarbeitet werden.</summary>
        <value>Die Anzahl der Zeichen im Austausch Fallbackpuffer, die noch nicht verarbeitet wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> -Methode zurückkehrt `true` Wenn die <xref:System.Text.EncoderReplacementFallbackBuffer.Remaining%2A> Eigenschaft ungleich NULL ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert alle internen Zustandsinformationen und Daten in dieser Instanz von <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> -Methode verwirft alle beibehaltenen Zustandsinformationen und Daten, die Ausgabe einer Ersatzzeichenfolge steuern. Unvorhersehbare Ergebnisse treten nach der Codierung weiterhin die <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> Methode aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
