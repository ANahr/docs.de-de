<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Erweiterungsmethoden für die <see cref="T:System.IO.Compression.ZipArchive" /> und <see cref="T:System.IO.Compression.ZipArchiveEntry" /> Klassen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IO.Compression.ZipFileExtensions> Klasse enthält nur statische Methoden, mit denen erweitert die <xref:System.IO.Compression.ZipArchive> und <xref:System.IO.Compression.ZipArchiveEntry> Klassen. Sie erstellt eine Instanz der nicht der <xref:System.IO.Compression.ZipFileExtensions> -Klasse; stattdessen verwenden Sie diese Methoden von Instanzen von <xref:System.IO.Compression.ZipArchive> oder <xref:System.IO.Compression.ZipArchiveEntry>.  
  
 Um die Erweiterungsmethoden verwenden zu können, müssen Sie verweisen die `System.IO.Compression.FileSystem` Assembly im Projekt. Die `System.IO.Compression.FileSystem` Assembly ist nicht verfügbar in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps. Aus diesem Grund die <xref:System.IO.Compression.ZipFileExtensions> und <xref:System.IO.Compression.ZipFile> Klassen (beide sind der `System.IO.Compression.FileSystem` Assembly) sind nicht verfügbar in [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps, Sie arbeiten mit komprimierten Dateien mit den Methoden in <xref:System.IO.Compression.ZipArchive>, <xref:System.IO.Compression.ZipArchiveEntry>, <xref:System.IO.Compression.DeflateStream>, und <xref:System.IO.Compression.GZipStream>.  
  
 Die <xref:System.IO.Compression.ZipFileExtensions> Klasse enthält drei Methoden, mit denen erweitert <xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  
  
 Die <xref:System.IO.Compression.ZipFileExtensions> Klasse enthält zwei Methoden, mit denen erweitert <xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie einen neuen Eintrag im Zip-Archiv aus einer vorhandenen Datei erstellen und extrahieren Sie den Inhalt der Archivdatei in ein Verzeichnis.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 Das folgende Beispiel veranschaulicht den Inhalt der Zip-Archiv durchlaufen, und Extrahieren von Dateien mit der Erweiterung ".txt".  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">Die Zip-Archiv, zu der Datei hinzugefügt werden soll.</param>
        <param name="sourceFileName">Der Pfad zur Datei archiviert werden. Sie können einen relativen oder einen absoluten Pfad angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="entryName">Der Name des Eintrags im Zip-Archiv zu erstellen.</param>
        <summary>Archiviert eine Datei komprimiert und Zip-Archiv hinzugefügt.</summary>
        <returns>Ein Wrapper für den neuen Eintrag im Zip-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der neue Eintrag in das Archiv enthält den Inhalt der Datei angegeben `sourceFileName`. Wenn ein Eintrag mit dem angegebenen Namen (`entryName`) bereits im Archiv, ein zweiter Eintrag wird mit einem identischen Namen erstellt. Die <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> des Eintrags ist-Eigenschaftensatz auf der letzten Ausführung der Datei im Dateisystem wurde geändert.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie einen neuen Eintrag im Zip-Archiv aus einer vorhandenen Datei zu erstellen.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> ist gleich <see cref="F:System.String.Empty" />, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.  
  
 - oder -   
  
 <paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="entryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="sourceFileName" />, der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Beispielsweise darf ein Pfad auf einer Windows-basierten Plattform nicht mehr als 248 Zeichen und ein Dateiname nicht mehr als 260 Zeichen lang sein.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceFileName" />ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Die Datei <paramref name="sourceFileName" /> kann nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="sourceFileName" /> gibt ein Verzeichnis an.  
  
 - oder -   
  
 Der Aufrufer verfügt nicht über die erforderliche Berechtigung Zugriff auf die Datei, die vom angegebenen <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException">Die <paramref name="sourceFileName" /> Parameter weist ein ungültiges Format.  
  
 - oder -   
  
 Das Zip-Archiv werden Schreibvorgänge nicht unterstützt.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">Die Zip-Archiv, zu der Datei hinzugefügt werden soll.</param>
        <param name="sourceFileName">Der Pfad zur Datei archiviert werden. Sie können einen relativen oder einen absoluten Pfad angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="entryName">Der Name des Eintrags im Zip-Archiv zu erstellen.</param>
        <param name="compressionLevel">Einer der Enumerationswerte, der angibt, ob Geschwindigkeit oder Komprimierungseffektivität priorisiert wird, wenn der Eintrag erstellt.</param>
        <summary>Archiviert eine Datei mit die angegebene Komprimierungsebene und Hinzufügen zu der Zip-Archiv komprimieren.</summary>
        <returns>Ein Wrapper für den neuen Eintrag im Zip-Archiv.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der neue Eintrag in das Archiv enthält den Inhalt der Datei angegeben `sourceFileName`. Wenn ein Eintrag mit dem angegebenen Namen (`entryName`) bereits im Archiv, ein zweiter Eintrag wird mit einem identischen Namen erstellt. Die <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> des Eintrags ist-Eigenschaftensatz auf der letzten Ausführung der Datei im Dateisystem wurde geändert.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Erstellen eines neuen Eintrags in einer Zip-Archiv aus einer vorhandenen Datei, und geben den Komprimierungsgrad.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> ist gleich <see cref="F:System.String.Empty" />, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.  
  
 - oder -   
  
 <paramref name="entryName" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="entryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceFileName" />ist ungültig (z. B. befindet er sich auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.PathTooLongException">In <paramref name="sourceFileName" />, der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Beispielsweise darf ein Pfad auf einer Windows-basierten Plattform nicht mehr als 248 Zeichen und ein Dateiname nicht mehr als 260 Zeichen lang sein.</exception>
        <exception cref="T:System.IO.IOException">Die Datei <paramref name="sourceFileName" /> kann nicht geöffnet werden.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="sourceFileName" /> gibt ein Verzeichnis an.  
  
 - oder -   
  
 Der Aufrufer verfügt nicht über die erforderliche Berechtigung Zugriff auf die Datei, die vom angegebenen <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Die Datei <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.NotSupportedException">Die <paramref name="sourceFileName" /> Parameter weist ein ungültiges Format.  
  
 - oder -   
  
 Das Zip-Archiv werden Schreibvorgänge nicht unterstützt.</exception>
        <exception cref="T:System.ObjectDisposedException">Das Zip-Archiv wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Das ZIP-Archiv, aus dem Dateien extrahiert werden sollen.</param>
        <param name="destinationDirectoryName">Der Pfad zu dem Verzeichnis, in dem die extrahierten Dateien gespeichert werden soll. Sie können einen relativen oder einen absoluten Pfad angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Extrahiert alle Dateien im ZIP-Archiv in ein Verzeichnis im Dateisystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt das Verzeichnis, das vom angegebenen `destinationDirectoryName`. Wenn das Zielverzeichnis bereits vorhanden ist, werden Sie diese Methode nicht überschrieben; Löst ein <xref:System.IO.IOException> Ausnahme. Die Methode erstellt auch Unterverzeichnisse enthalten, die die Hierarchie im Zip-Archiv widerspiegeln. Wenn ein Fehler während der Extraktion auftritt, bleibt das Archiv teilweise extrahierten. Jede extrahierten Datei hat die gleichen relativen Pfad zum Verzeichnis, angegeben durch `destinationDirectoryName` als Updatequelle Eintrag vorhanden ist, auf den Stamm des Archivs.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie einen neuen Eintrag im Zip-Archiv aus einer vorhandenen Datei erstellen und extrahieren Sie das Archiv in ein neues Verzeichnis. In der Reihenfolge nach der Compiler dieses Codebeispiel müssen Sie auf verweisen die `System.IO.Compression` und `System.IO.Compression.FileSystem` Assemblys in Ihrem Projekt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationDirectoryName" /> ist gleich <see cref="F:System.String.Empty" />, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationDirectoryName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad überschreitet die für das System definierte maximale Länge. Beispielsweise darf ein Pfad auf einer Windows-basierten Plattform nicht mehr als 248 Zeichen und ein Dateiname nicht mehr als 260 Zeichen lang sein.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">Die durch <paramref name="destinationDirectoryName" /> angegebene Verzeichnis bereits vorhanden ist.  
  
 - oder -   
  
 Der Name eines Eintrags in diesem Archiv ist gleich <see cref="F:System.String.Empty" />, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.  
  
 - oder -   
  
 Extrahieren eines Eintrags aus dem Archiv würde Sie eine Datei erstellen, die sich außerhalb des Verzeichnisses befindet, das durch <paramref name="destinationDirectoryName" /> angegeben ist. (Dies kann beispielsweise passieren, wenn der Name des Eintrags Accessoren für übergeordnete Verzeichnisse enthält.)  
  
 - oder -   
  
 Mehrere Einträge im Archiv haben denselben Namen.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer hat nicht die erforderliche Berechtigung, um in das Zielverzeichnis zu schreiben.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationDirectoryName" /> enthält ein ungültiges Format.</exception>
        <exception cref="T:System.IO.InvalidDataException">Ein Archiveintrag wird nicht gefunden oder ist beschädigt.  
  
 - oder -   
  
 Ein Archiveintrag wurde mit einer Komprimierungsmethode komprimiert, die nicht unterstützt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Der ZIP-Archiveintrag, aus dem eine Datei extrahiert werden soll.</param>
        <param name="destinationFileName">Der Pfad der Datei, die aus den Inhalten des Eintrags erstellt werden soll. Sie können einen relativen oder einen absoluten Pfad angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <summary>Extrahiert einen Eintrag im Zip-Archiv in eine Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieldatei bereits vorhanden ist, werden Sie diese Methode nicht überschrieben; Löst ein <xref:System.IO.IOException> Ausnahme. Um eine vorhandene Datei zu überschreiben, verwenden die <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> -Überladungsmethode.  
  
 Zeitpunkt des letzte Schreibzugriffs auf die Datei wird zum Zeitpunkt letzten festgelegt, an der Eintrag im Zip-Archiv geändert wurde. Dieser Wert wird gespeichert, der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> Eigenschaft.  
  
 Diese Methode können um ein Verzeichnis zu extrahieren. Verwenden Sie die <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> Methode stattdessen.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Iteration durch den Inhalt der Zip-Archiv-Datei, und Extrahieren von Dateien mit der Erweiterung ".txt".  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
 - oder -   
  
 <paramref name="destinationFileName" /> gibt ein Verzeichnis an.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Beispielsweise darf ein Pfad auf einer Windows-basierten Plattform nicht mehr als 248 Zeichen und ein Dateiname nicht mehr als 260 Zeichen lang sein.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="destinationFileName" /> ist bereits vorhanden.  
  
 - oder -   
  
 E/A-Fehler  
  
 - oder -   
  
 Der Eintrag ist derzeit zum Schreiben geöffnet.  
  
 - oder -   
  
 Das Element wurde aus dem Archiv gelöscht.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung, um die neue Datei zu erstellen.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Eintrag aus dem Archiv fehlt oder ist beschädigt und kann nicht gelesen werden.  
  
 - oder -   
  
 Der Eintrag wurde mit einer Komprimierungsmethode komprimiert, die nicht unterstützt wird.</exception>
        <exception cref="T:System.ObjectDisposedException">Das ZIP-Archiv, zu dem dieser Eintrag gehört, wurde verworfen.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationFileName" /> weist ein ungültiges Format auf.  
  
 - oder -   
  
 Das ZIP-Archiv für diesen Eintrag wurde im <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />-Modus geöffnet, der das Abrufen von Einträgen nicht zulässt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Der ZIP-Archiveintrag, aus dem eine Datei extrahiert werden soll.</param>
        <param name="destinationFileName">Der Pfad der Datei, die aus den Inhalten des Eintrags erstellt werden soll. Sie können einen relativen oder einen absoluten Pfad angeben. Ein relativer Pfad wird relativ zum aktuellen Arbeitsverzeichnis interpretiert.</param>
        <param name="overwrite">
          <see langword="true" />, um eine vorhandene Datei zu überschreiben, die den gleichen Namen wie die Zieldatei aufweist, andernfalls <see langword="false" />.</param>
        <summary>Extrahiert einen Eintrag im ZIP-Archiv in eine Datei und überschreibt optional eine vorhandene Datei gleichen Namens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zeitpunkt des letzte Schreibzugriffs auf die Datei wird zum Zeitpunkt letzten festgelegt, an der Eintrag im Zip-Archiv geändert wurde. Dieser Wert wird gespeichert, der <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> Eigenschaft.  
  
 Diese Methode können um ein Verzeichnis zu extrahieren. Verwenden Sie die <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> Methode stattdessen.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Iteration durch den Inhalt der Zip-Archiv-Datei, und Extrahieren von Dateien mit der Erweiterung ".txt". Es überschreibt eine vorhandene Datei mit dem gleichen Namen im Zielordner. In der Reihenfolge nach der Compiler dieses Codebeispiel müssen Sie auf verweisen die `System.IO.Compression` und `System.IO.Compression.FileSystem` Assemblys in Ihrem Projekt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
 - oder -   
  
 <paramref name="destinationFileName" /> gibt ein Verzeichnis an.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Beispielsweise darf ein Pfad auf einer Windows-basierten Plattform nicht mehr als 248 Zeichen und ein Dateiname nicht mehr als 260 Zeichen lang sein.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="destinationFileName" /> ist bereits vorhanden, und <paramref name="overwrite" /> ist <see langword="false" />.  
  
 - oder -   
  
 E/A-Fehler  
  
 - oder -   
  
 Der Eintrag ist derzeit zum Schreiben geöffnet.  
  
 - oder -   
  
 Das Element wurde aus dem Archiv gelöscht.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung, um die neue Datei zu erstellen.</exception>
        <exception cref="T:System.IO.InvalidDataException">Der Eintrag fehlt im Archiv oder ist beschädigt und kann nicht gelesen werden.  
  
 - oder -   
  
 Der Eintrag wurde mit einer Komprimierungsmethode komprimiert, die nicht unterstützt wird.</exception>
        <exception cref="T:System.ObjectDisposedException">Das ZIP-Archiv, zu dem dieser Eintrag gehört, wurde verworfen.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationFileName" /> weist ein ungültiges Format auf.  
  
 - oder -   
  
 Das ZIP-Archiv für diesen Eintrag wurde im <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />-Modus geöffnet, der das Abrufen von Einträgen nicht zulässt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
