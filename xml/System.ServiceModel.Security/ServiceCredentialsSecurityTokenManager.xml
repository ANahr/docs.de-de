<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />-Implementierung dar, die Sicherheitstokenserialisierer basierend auf den für den Dienst konfigurierten <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> bereitstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse erstellt eine neue Instanz der <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>-Klasse. Es ist eine Instanz dieser Klasse für jeden Dienstchannellistener vorhanden.  
  
   
  
## Examples  
 Der folgende Code zeigt, wie diese Klasse überschrieben wird, um einen benutzerdefinierten Token-Manager für die Dienstanmeldeinformationen zu erstellen.  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent">Die Dienstanmeldeinformationen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> -Klasse auf Grundlage der <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> übergeben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement">Gibt für den Listener spezifische Anforderungen an Sicherheitseigenschaften an.</param>
        <param name="preserveBootstrapTokens">
          <see langword="true" />Wenn die bootstrap-Token beibehalten werden sollen; Andernfalls <see langword="false" />.</param>
        <param name="sctResolver">Ein Sicherheitstokenresolver-Objekt, das Sicherheitstoken oder Schlüssel abrufen kann, wenn ein Schlüsselbezeichner oder eine Schlüsselbezeichnerklausel vorliegt.</param>
        <summary>Erstellt einen sicheren Konversationstokenauthentifizierer auf Grundlage der übergebenen Eigenschaftenanforderungen.</summary>
        <returns>Ein Sicherheitstokenauthentifizierer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">Die Sicherheitstokenanforderung.</param>
        <param name="outOfBandTokenResolver">Wenn diese Methode zurückgegeben wird, ist <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> enthalten. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Erstellt einen Sicherheittokenauthentifizierer auf Grundlage von <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
        <returns>Der Sicherheitstokenauthentifizierer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein `outOfBand`-Tokenresolver kann optional von der Methode zurückgegeben werden, die vom [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Sicherheitsprozessor zum Auflösen von Tokens verwendet wird, die sich beim Verarbeiten der Sicherheitsfunktionen nicht in der SOAP-Nachricht befinden. Der <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>, der von dieser Methode zurückgegeben wird, überprüft Token und extrahiert Ansprüche. Ein <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> wird für jede Klasse erstellt, die sich von <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> ableitet.  
  
   
  
## Examples  
 Folgender Code zeigt eine Möglichkeit, wie diese Methode überschrieben werden kann.  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ein Sicherheitstokenauthentifizierer kann nicht erstellt werden, für die <paramref name="tokenRequirement" /> übergeben wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">Die Sicherheitstokenanforderung.</param>
        <summary>Erstellt einen Sicherheitstokenanbieter basierend auf <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</summary>
        <returns>Der Sicherheitstokenanbieter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse ist verantwortlich für das Abrufen von Token für eine gegebene <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optional können Tokenanbieter auch erneuernde und abbrechende Token unterstützen. Der Tokenanbieter kann Token zwischenspeichern, wenn er entsprechend konfiguriert ist.  
  
   
  
## Examples  
 Der folgende Code zeigt eine Möglichkeit, wie diese Methode überschrieben werden kann.  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requirement" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ein Sicherheitstokenanbieter kann nicht für die übergebene <paramref name="requirement" /> erstellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">Die Version des Sicherheitstokens.</param>
        <summary>Erstellt einen Sicherheitstokenserialisierer basierend auf der übergebenen Sicherheitstokenversion.</summary>
        <returns>Das Sicherheitstoken-Serialisierungsprogramm.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> wird zum Schreiben und Lesen von Sicherheitstoken und Sicherheitstokenverweisen verwendet. Beim Deserialisieren des Tokens aus XML muss das zurückgegebene Token in der Lage sein, kryptografische Vorgänge auszuführen. Der Tokenserialisierer muss in der Lange sein, Validierungen durchzuführen, um sicherzustellen, dass der Token kryptografische Vorgänge (Kerberos-Ticketverarbeitung, X.509-Decodierung, SAML-Decodierung usw.) durchführen kann, sollte aber Entscheidungen zur Vertrauenswürdigkeit der Anwendung an den Authentifizierer verweisen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ein Sicherheitstokenserialisierer kann nicht für die übergebene <paramref name="version" /> erstellt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">Die Sicherheitstokenanforderung.</param>
        <summary>Ruft die auf der Sicherheitsanforderung basierende <see cref="T:System.ServiceModel.EndpointIdentity" /> ab.</summary>
        <returns>Die Endpunktidentität, die der <paramref name="tokenRequirement" /> entspricht. <see langword="null" />wird zurückgegeben, wenn eine Identität aus erstellt werden, kann die <paramref name="tokenRequirement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Infrastruktur aufgerufen, um die <xref:System.ServiceModel.EndpointIdentity> abzurufen, die einem Dienstendpunkt entspricht.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">Die Sicherheitstokenanforderung.</param>
        <summary>Bestimmt, ob die Sicherheitstokenanforderung für ein ausgestelltes Token gilt.</summary>
        <returns>
          <see langword="true" />, wenn die Sicherheitstokenanforderung für ein ausgestelltes Token gilt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Dienstanmeldeinformationen ab, die zum Erstellen dieser Instanz der Klasse verwendet werden.</summary>
        <value>Die Dienstanmeldeinformationen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.ServiceModel.Description.ServiceCredentials>-Objekt ermöglicht das Konfigurieren von Dienstanmeldeinformationen sowie Dienstanmeldeinformationen-Authentifizierungseinstellungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
