<Type Name="MessagePartSpecification" FullName="System.ServiceModel.Security.MessagePartSpecification">
  <TypeSignature Language="C#" Value="public class MessagePartSpecification" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessagePartSpecification extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.MessagePartSpecification" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt an, welche Teile in einer Nachricht enthalten sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der Spezifikation wird angegeben, welche Nachrichtenteile signiert und welche verschlüsselt werden müssen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessagePartSpecification ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine leere <see cref="T:System.ServiceModel.Security.MessagePartSpecification" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessagePartSpecification (bool isBodyIncluded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isBodyIncluded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isBodyIncluded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isBodyIncluded">Initialisiert den Einschluss des Nachrichtentexts in die Spezifikation.</param>
        <summary>Initialisiert eine neue <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> und gibt an, ob der Nachrichtentext eingeschlossen wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessagePartSpecification (params System.Xml.XmlQualifiedName[] headerTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlQualifiedName[] headerTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="headerTypes" Type="System.Xml.XmlQualifiedName[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="headerTypes">Das Array von zu verwendenden Headertypen.</param>
        <summary>Initialisiert eine neue <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> mit einem Array von Nachrichtenheadern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Header wird mit seinem Namen und Namespace angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessagePartSpecification (bool isBodyIncluded, params System.Xml.XmlQualifiedName[] headerTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isBodyIncluded, class System.Xml.XmlQualifiedName[] headerTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isBodyIncluded" Type="System.Boolean" />
        <Parameter Name="headerTypes" Type="System.Xml.XmlQualifiedName[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="isBodyIncluded">Initialisiert den Einschluss des Nachrichtentexts in die Spezifikation.</param>
        <param name="headerTypes">Das Array von zu verwendenden Headertypen.</param>
        <summary>Initialisiert eine neue <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> mit einem Array von Nachrichtenheadern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Header wird mit seinem Namen und Namespace angegeben. Außerdem gibt der `isBodyIncluded`-Parameter an, ob der Nachrichtentext eingeschlossen werden soll oder nicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Liste von Headern in dieser Spezifikation.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="HeaderTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt; HeaderTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlQualifiedName&gt; HeaderTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.MessagePartSpecification.HeaderTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xml.XmlQualifiedName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Headertypen für diese Spezifikation ab.</summary>
        <value>Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Headertypen zu dieser Nachrichtenspezifikation enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBodyIncluded">
      <MemberSignature Language="C#" Value="public bool IsBodyIncluded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyIncluded" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtentext in dieser Spezifikation enthalten ist, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn der Nachrichtentext in dieser Spezifikation enthalten ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> ist schreibgeschützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.MessagePartSpecification.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Spezifikation schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />, wenn die Spezifikation schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A> verwenden, um diese Eigenschaft auf `true` festzulegen. <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A>Legt die Eigenschaft auf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt Schreibschutz für die Spezifikation fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> entfernt alle Header in der Spezifikation und legt Lese-/Schreibzugriff für die Auflistung fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoParts">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.MessagePartSpecification NoParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.MessagePartSpecification NoParts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.MessagePartSpecification.NoParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessagePartSpecification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine leere Instanz dieser Klasse ab.</summary>
        <value>Eine leere Instanz dieser Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft `null` lautet, wird eine neue leere Instanz dieser Klasse erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.ServiceModel.Security.MessagePartSpecification other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.ServiceModel.Security.MessagePartSpecification other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="specification" Type="System.ServiceModel.Security.MessagePartSpecification" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Führt zwei Spezifikationen für Nachrichtenteile zusammen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Aufruf der <xref:System.ServiceModel.Security.MessagePartSpecification.Union%2A>-Methode enthält die <xref:System.ServiceModel.Security.MessagePartSpecification> alle Headerinformationen von beiden Spezifikationen, und die <xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A>-Eigenschaft ist auf das logische ODER beider Spezifikationen festgelegt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Diese <see cref="T:System.ServiceModel.Security.MessagePartSpecification" /> ist schreibgeschützt.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="other" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
