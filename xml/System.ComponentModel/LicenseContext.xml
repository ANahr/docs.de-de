<Type Name="LicenseContext" FullName="System.ComponentModel.LicenseContext">
  <TypeSignature Language="C#" Value="public class LicenseContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicenseContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicenseContext" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Gibt an, wenn Sie ein lizenziertes Objekt verwenden können, und bietet eine Möglichkeit zum Abrufen von zusätzlichen Diensten zur Unterstützung von Lizenzen, die innerhalb der Domäne erforderlich sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt den Standardwert <xref:System.ComponentModel.LicenseContext>. Es implementiert die Unterstützung nur zur Laufzeit und Lizenzschlüssel nicht unterstützt, die gespeichert wird.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Wenn Sie während der Entwurfszeit-Lizenz-Unterstützung implementieren möchten, müssen Sie von dieser Klasse erben, und die folgenden Member überschreiben: <see cref="P:System.ComponentModel.LicenseContext.UsageMode" />, <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />, <see cref="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />, und <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />. Wenn Sie gespeicherte Lizenzschlüssel implementieren möchten, überschreiben die <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> und <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> Methoden.  
  
 Weitere Informationen zur Lizenzierung finden Sie unter [Vorgehensweise: Lizenz-Komponenten und Steuerelementen](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicenseContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseContext" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSavedLicenseKey(class System.Type type, class System.Reflection.Assembly resourceAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" /> , der den Typ der Komponente darstellt.</param>
        <param name="resourceAssembly">Ein <see cref="T:System.Reflection.Assembly" /> mit der Lizenzschlüssel.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt einen gespeicherten Lizenzschlüssel für den angegebenen Typ aus der Assembly angegebenen Ressource zurück.</summary>
        <returns>Die <see cref="P:System.ComponentModel.License.LicenseKey" /> für den angegebenen Typ. Diese Methode gibt <see langword="null" /> , sofern Sie nicht überschrieben.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Diese Methode überschreiben und die <see cref="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" /> Methode zum Implementieren eines gespeicherten Schlüssels. Wenn die <paramref name="resourceAssembly" /> Parameter ist <see langword="null" />, und klicken Sie dann die Ressource aus der primären ausgeführten abgerufen werden können <see cref="T:System.Reflection.Assembly" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ des abzurufenden Diensts.</param>
        <summary>Ruft den angeforderten Dienst ab, sofern dieser verfügbar ist.</summary>
        <returns>Eine Instanz des Diensts oder <see langword="null" /> , wenn der Dienst nicht gefunden werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavedLicenseKey">
      <MemberSignature Language="C#" Value="public virtual void SetSavedLicenseKey (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSavedLicenseKey(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" /> , die den Lizenzschlüssel zugeordnete Komponente darstellt.</param>
        <param name="key">Die <see cref="P:System.ComponentModel.License.LicenseKey" /> , die für den Typ der Komponente gespeichert.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse legt einen Lizenzschlüssel für den angegebenen Typ.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode in der Regel beim Festlegen der <xref:System.ComponentModel.LicenseUsageMode> zur Entwurfszeit. Müssen Sie überschreiben die <xref:System.ComponentModel.LicenseContext.UsageMode%2A> Eigenschaft zur Entwurfszeit Lizenz Unterstützung implementiert.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Diese Methode bietet keine Unterstützung für einen gespeicherten Lizenzschlüssel. Diese Methode überschreiben und die <see cref="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" /> Methode zum Implementieren eines Schlüssels.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UsageMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.LicenseUsageMode UsageMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.LicenseContext.UsageMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.LicenseUsageMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse ruft einen Wert, der angibt, wenn Sie eine Lizenz verwenden können.</summary>
        <value>Eines der <see cref="T:System.ComponentModel.LicenseUsageMode" /> Werte, der angibt, wenn Sie eine Lizenz verwenden können. Die Standardeinstellung ist <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Um Unterstützung während der Entwurfszeit zu implementieren, überschreiben Sie diese Eigenschaft in einer Klasse, die erbt.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>
