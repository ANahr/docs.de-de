<Type Name="DispatcherFrame" FullName="System.Windows.Threading.DispatcherFrame">
  <TypeSignature Language="C#" Value="public class DispatcherFrame : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherFrame extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherFrame" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Ausführungsschleife in der <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame>Objekte können in der Regel zwei Kategorien zugeordnet:  
  
-   Lang ausgeführte, allgemeine Zweck-Frames, die beendet werden, nur, wenn er dazu aufgefordert.  Diese Frames sollte beendet, wenn sie angefordert werden.  
  
-   Kurze ausgeführt wird, sehr speziellen frames, die beendet, wenn ein wichtiges Kriterium erfüllt ist.  Diese Frames eventuell um nicht zu beenden, wenn sie angefordert werden, warten Sie, bis die Beendigungskriterien erfüllt werden müssen.  Diese Frames sollte einen Timeout zugeordnet haben.  
  
<a name="xamlTextUsage_DispatcherFrame"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Sie können keine diese verwaltete Klasse in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie eine <xref:System.Windows.Threading.DispatcherFrame> als ähnliche Ergebnisse erzielen die [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> Methode.  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherFrame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherFrame.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Threading.DispatcherFrame" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherFrame (bool exitWhenRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool exitWhenRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exitWhenRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitWhenRequested">Gibt an, ob dieses Rahmens beendet wird, wenn alle Frames angefordert werden, um zu beenden.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Threading.DispatcherFrame" /> Klasse, unter Verwendung des angegebenen Anforderung Flag zu beenden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame>in der Regel in zwei Kategorien fallen:  
  
-   Lang ausgeführte, allgemeine Zweck Frames, die beendet werden, nur, wenn er dazu aufgefordert.  Diese Frames sollte beendet, wenn sie angefordert werden.  
  
-   Kurze ausgeführt wird, sehr speziellen frames, die beendet, wenn ein wichtiges Kriterium erfüllt ist.  Diese Frames sollten nicht beendet werden, wenn sie angefordert werden, warten Sie, bis die Beendigungskriterien erfüllt werden müssen.  Diese Frames sollte einen Timeout zugeordnet haben.  
  
-  
  
-   Beim Herunterfahren der Anwendung befinden sich alle Frames Anforderung zu beenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public bool Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Continue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherFrame.Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob dies <see cref="T:System.Windows.Threading.DispatcherFrame" /> fortgesetzt werden sollte.</summary>
        <value>
          <see langword="true" />Wenn der Frame fortgesetzt werden soll; andernfalls <see langword="false" />.  Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Threading.DispatcherFrame.Continue%2A>wird am oberen Rand jeder Schleife Dispatcher abgefragt werden.  
  
 Beim Herunterfahren der Anwendung befinden sich alle Frames Anforderung zu beenden.  
  
<a name="xamlTextUsage_Continue"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Member dieser Klasse werden üblicherweise nicht in verwendet [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], oder kann nicht verwendet werden, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie eine <xref:System.Windows.Threading.DispatcherFrame> als ähnliche Ergebnisse erzielen die [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] <xref:System.Windows.Forms.Application.DoEvents%2A> Methode.  
  
 [!code-csharp[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherSnippets/CSharp/Window1.xaml.cs#dispatcherdispatcherframedoevents)]
 [!code-vb[dispatchersnippets#DispatcherDispatcherFrameDoEvents](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherSnippets/visualbasic/window1.xaml.vb#dispatcherdispatcherframedoevents)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
