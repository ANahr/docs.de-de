<Type Name="ChangeInterceptorAttribute" FullName="System.Data.Services.ChangeInterceptorAttribute">
  <TypeSignature Language="C#" Value="public sealed class ChangeInterceptorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChangeInterceptorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ChangeInterceptorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die <see cref="T:System.Data.Services.ChangeInterceptorAttribute" /> für eine Methode wird verwendet, um Updates auf den angegebenen Entitätenmengennamen verarbeitet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcenebene Änderung Autorisierung und Überprüfung von Methoden auf implementiert ist die <xref:System.Data.Services.ChangeInterceptorAttribute>. [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]Stellt die erforderliche Infrastruktur für Dienstentwickler schreiben Sie pro-entitätsänderung Verarbeitungsregeln und Validierung bereit.  
  
 Zugriffssteuerung auf Entitätsebene und Überprüfung können über den Abfrage-Interceptors erzwungen werden. Weitere Informationen finden Sie unter <xref:System.Data.Services.QueryInterceptorAttribute>.  
  
-  
  
   
  
## Examples  
 Weitere Informationen finden Sie im Beispiel in der <xref:System.Data.Services.QueryInterceptorAttribute> Thema.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangeInterceptorAttribute (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Der Name der Entitätenmenge, die die Entität enthält, für die der Interceptor gilt.</param>
        <summary>Erstellt einen neuen Change-Interceptor für eine Entitätssammlung, die vom Parameter angegebenen <paramref name="entitySetName" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Entitätenmenge, die der Interceptor gilt.</summary>
        <value>Satzname für den String-Wert, der Entität darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
