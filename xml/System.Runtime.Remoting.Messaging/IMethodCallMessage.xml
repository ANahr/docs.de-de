<Type Name="IMethodCallMessage" FullName="System.Runtime.Remoting.Messaging.IMethodCallMessage">
  <TypeSignature Language="C#" Value="public interface IMethodCallMessage : System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMethodCallMessage implements class System.Runtime.Remoting.Messaging.IMessage, class System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMethodMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Methode Aufruf Message-Schnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> generiert als Ergebnis eine Methode auf einem remote-Objekt aufgerufen wird, und wird verwendet, um die Details des Methodenaufrufs an die Serverseite zu transportieren.  
  
   
  
## Examples  
 [!code-cpp[IMethodCallMessage_GetInArg#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#1)]
 [!code-csharp[IMethodCallMessage_GetInArg#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#1)]
 [!code-vb[IMethodCallMessage_GetInArg#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetInArg">
      <MemberSignature Language="C#" Value="public object GetInArg (int argNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInArg(int32 argNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argNum">Die Anzahl der angeforderten <see langword="in" /> Argument.</param>
        <summary>Gibt das angegebene Argument, das nicht als markiert ist ein <see langword="out" /> Parameter.</summary>
        <returns>Das angeforderte Argument, das nicht als markiert ist ein <see langword="out" /> Parameter.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit Infrastrukturcode. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInArgName">
      <MemberSignature Language="C#" Value="public string GetInArgName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetInArgName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Anzahl der angeforderten <see langword="in" /> Argument.</param>
        <summary>Gibt den Namen des angegebenen Arguments, das nicht als markiert ist ein <see langword="out" /> Parameter.</summary>
        <returns>Der Name eines bestimmten Arguments, das nicht als markiert ist ein <see langword="out" /> Parameter.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit Infrastrukturcode. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InArgCount">
      <MemberSignature Language="C#" Value="public int InArgCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InArgCount" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Argumente im Aufruf, der nicht als gekennzeichnet <see langword="out" /> Parameter.</summary>
        <value>Die Anzahl der Argumente im Aufruf, der nicht als gekennzeichnet <see langword="out" /> Parameter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Beispielcode zeigt einen benutzerdefinierten Proxy, der RealProxy.Invoke überschreibt, um die Aufrufinformationen für die Nachricht in die Konsole geschrieben.  
  
 [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]
 [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]
 [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit Infrastrukturcode. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InArgs">
      <MemberSignature Language="C#" Value="public object[] InArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] InArgs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Argumenten, die nicht als markiert sind <see langword="out" /> Parameter.</summary>
        <value>Ein Array von Argumenten, die nicht als markiert sind <see langword="out" /> Parameter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl die <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A> Eigenschaft ist redundant, da die gleiche Funktionalität mit erreicht werden kann die <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A> und <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A> Methoden möglicherweise zur Optimierung der Leistung verfügbar sind, wenn der Implementierer versteht, wenn alle Argumente werden abgerufen.  
  
   
  
## Examples  
 [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]
 [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]
 [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Der direkte Aufrufer führt den Aufruf über einen Verweis auf die Schnittstelle durch und hat keine Berechtigung für die Infrastruktur.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit Infrastrukturcode. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
