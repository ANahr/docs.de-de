<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ohne Escapezeichen XML-Daten für die Protokollierung von vom Benutzer bereitgestellte Ablaufverfolgungsdaten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird verwendet, durch die <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> Methoden. Kann auch zur Übergabe von XML-Daten verwendet werden die <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> Methoden.  
  
> [!NOTE]
>  Vom Benutzer bereitgestellten Daten werden nicht auf die schemagültigkeit überprüft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit <xref:System.Diagnostics.UnescapedXmlDiagnosticData> Klasse. Dieses Codebeispiel ist Teil eines größeren Beispiels, die aus Gründen der <xref:System.Diagnostics.EventSchemaTraceListener> Klasse.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">Die XML-Daten protokolliert werden, der <see langword="UserData" /> Knoten das Ereignisschema.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> -Klasse unter Verwendung der angegebenen XML-Datenzeichenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ihr Code als End-to-End-Schema kompatibel, die `xmlPayload` Parameter muss ein XML-Fragment, das für das End-to-End-Ereignisschema überprüft werden kann. Wenn `xmlPayload` ist `null`die <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> Eigenschaft ist eine leere Zeichenfolge.  
  
> [!NOTE]
>  `xmlPayload`wird nicht für XML-Gültigkeit überprüft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A> Konstruktor. Dieses Codebeispiel ist Teil eines größeren Beispiels, die aus Gründen der <xref:System.Diagnostics.EventSchemaTraceListener> Klasse.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung der <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> Objekt.</summary>
        <returns>Eine Zeichenfolgendarstellung der <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> Objekt. Wenn das Objekt <see langword="null" />, diese Methode eine leere Zeichenfolge zurückgegeben.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, oder legt ihn fest ohne Escapezeichen XML-Datenzeichenfolge.</summary>
        <value>Eine XML-Zeichenfolge ohne Escapezeichen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ihr Code als End-to-End-Schema kompatibel, die <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> Eigenschaftswert muss ein XML-Fragment, das für das End-to-End-Ereignisschema überprüft werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
