<Type Name="FileCodeGroup" FullName="System.Security.Policy.FileCodeGroup">
  <TypeSignature Language="C#" Value="public sealed class FileCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FileCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.FileCodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gewährt die Berechtigung zum Bearbeiten von Dateien im Code-Assemblys auf Codeassemblys, die die mitgliedschaftsbedingung entsprechen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Codegruppen sind die Bausteine von Codezugriff-Sicherheitsrichtlinie. Jede Richtlinienebene besteht aus einer Stammcodegruppe, die untergeordnete Codegruppen aufweisen können. Jede untergeordnete Codegruppe kann eigene untergeordnete Codegruppen verfügen; Dieses Verhalten Erweitert auf eine beliebige Anzahl von Ebenen, die eine Struktur bilden. Jede Codegruppe verfügt über eine mitgliedschaftsbedingung, die bestimmt, ob eine bestimmte Assembly, basierend auf den Beweis für diese Assembly gehört. Nur Codegruppen, deren mitgliedschaftsbedingungen eine bestimmte Assembly übereinstimmen, und deren untergeordnete Codegruppen anwenden Richtlinie.  
  
 <xref:System.Security.Policy.FileCodeGroup>besitzt die gleiche untergeordneten Abgleich Semantik wie <xref:System.Security.Policy.UnionCodeGroup>. Allerdings <xref:System.Security.Policy.FileCodeGroup> gibt einen Berechtigungssatz mit einer dynamisch berechneten <xref:System.Security.Permissions.FileIOPermission> , gewährt den Zugriff auf Dateien in das Verzeichnis, von dem der Code ausgeführt wird. <xref:System.Security.Policy.UnionCodeGroup> gibt nur einen statischen Berechtigungssatz zurück. Der Typ des Dateizugriffs erteilt wird als Parameter an den Konstruktor übergeben.  
  
 Dieser Codegruppe entspricht nur Assemblys, die über ein Dateiprotokoll, d. h. Assemblys mit URLs, die auf eine Datei oder ein UNC-Pfad verweisen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung von Membern der <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#1)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Permissions.FileIOPermissionAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, valuetype System.Security.Permissions.FileIOPermissionAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">Eine mitgliedschaftsbedingung, die testet Beweise, um zu bestimmen, ob dieser Codegruppe Richtlinie gilt.</param>
        <param name="access">Einer der <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />-Werte. Dieser Wert wird zum Erstellen der <see cref="T:System.Security.Permissions.FileIOPermission" /> , gewährt wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Policy.FileCodeGroup" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine grundlegende Codegruppe hinzu. Untergeordnete Codegruppen können hinzugefügt werden, mit der <xref:System.Security.Policy.CodeGroup.AddChild%2A> Methode.  
  
 <xref:System.Security.Policy.FileCodeGroup>Gibt einen Berechtigungssatz mit einer dynamisch berechneten <xref:System.Security.Permissions.FileIOPermission> , gewährt den Zugriff auf Dateien in das Verzeichnis, von dem der Code ausgeführt wird. Der Typ des gewährten Zugriffs richtet sich nach der `access` Parameter.  
  
   
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.%23ctor%2A> Konstruktor. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#2)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="membershipCondition" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der Typ des der <paramref name="membershipCondition" /> -Parameter ist ungültig.  
  
 - oder -   
  
 Der Typ des der <paramref name="access" /> -Parameter ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.AttributeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolgendarstellung der Attribute der Policy-Anweisung für die Codegruppe ab.</summary>
        <value>Immer <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.FileCodeGroup>verwendet keinen <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A>, deshalb ist diese Eigenschaft immer `null`.  
  
   
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.AttributeString%2A> Eigenschaft, um die Attribute für die Codegruppe abzurufen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#5)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt eine tiefe Kopie der aktuellen Codegruppe an.</summary>
        <returns>Eine entsprechende Kopie der aktuellen Codegruppe, einschließlich der zugehörigen mitgliedschaftsbedingungen und untergeordnete Codegruppen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist eine tiefe Kopie der Codegruppe, damit auch Kopien aller Objekte in die Codegruppe vorgenommen werden.  
  
   
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.Copy%2A> Methode, um eine tiefe Kopie der Codegruppe erstellen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#18)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#18)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Der Codegruppe für den Vergleich mit der aktuellen Codegruppe.</param>
        <summary>Bestimmt, ob die angegebene Codegruppe mit der aktuellen Codegruppe übereinstimmt.</summary>
        <returns>
          <see langword="true" />Wenn die angegebene Codegruppe mit der aktuellen Codegruppe ist. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.Equals%2A> Methode, um zu bestimmen, ob zwei Codegruppen gleich sind. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#20)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#20)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Hashcode der aktuellen Codegruppe ab.</summary>
        <returns>Der Hashcode der aktuellen Codegruppe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.GetHashCode%2A> Methode, um den Hashcode der aktuellen Codegruppe abzurufen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#14)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#14)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.MergeLogic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Merge-Logik ab.</summary>
        <value>Die Zeichenfolge "Union".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.MergeLogic%2A> Eigenschaft, um die Merge-Logik für diese Codegruppe abzurufen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#15)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#15)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.FileCodeGroup.PermissionSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der benannten Berechtigungssatz für die Codegruppe ab.</summary>
        <value>Die Verkettung der Zeichenfolge "Demselben Verzeichnis FileIO -" und der Zugriffstyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.PermissionSetName%2A> Eigenschaft, um den Namen der benannten Berechtigungssätze für die Codegruppe festgelegt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#13)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#13)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Der Beweis für die Assembly.</param>
        <summary>Löst die Richtlinien für die Codegruppe und seine Nachfolger für einen Satz von Beweisen.</summary>
        <returns>Eine Policy-Anweisung, bestehend aus der von der Codegruppe mit optionalen Attribute erteilten Berechtigungen oder <see langword="null" /> Wenn Codegruppe nicht anwendbar ist (die mitgliedschaftsbedingung stimmt nicht mit die angegebene Beweise überein).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet angegebene Beweis für eine Assembly geladen werden, den Codegruppe durch zunächst geprüft wird, der die mitgliedschaftsbedingung mit den angegebenen Beweisen. Wenn eine Übereinstimmung vorhanden ist, gibt diese Methode eine Policy-Anweisung für die Codegruppe, einschließlich der Evaluierung von untergeordnete Codegruppen an.  
  
 Verwendet das .NET Framework-Sicherheitssystem <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> auf die Richtlinienebenen, um zu bestimmen, welche Berechtigungen zum Erteilen der geladenen Code aus der resultierenden richtlinienanweisungen und den Code für die Assembly anfordern.  
  
 <xref:System.Security.Policy.FileCodeGroup>union-Semantik verwendet und bildet einen Berechtigungssatz, der auf der Grundlage der <xref:System.Security.Policy.Url> gemäß `evidence`.  
  
   
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.Resolve%2A> Methode zum Auflösen der Richtlinien für die Codegruppe an. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#19)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#19)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="evidence" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Policy.PolicyException">Die aktuelle Richtlinie ist <see langword="null" />.  
  
 - oder -   
  
 Mehr als eine Codegruppe (einschließlich der übergeordneten Codegruppe und alle untergeordneten Codegruppen) RuntimeCompatibility <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">Der Beweis für die Assembly.</param>
        <summary>Löst übereinstimmenden Codegruppen.</summary>
        <returns>Ein <see cref="T:System.Security.Policy.CodeGroup" /> also den Stamm der Struktur der übereinstimmenden Codegruppen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet angegebene Beweis für eine Assembly geladen werden, den Codegruppe durch zunächst geprüft wird, der die mitgliedschaftsbedingung mit den angegebenen Beweisen. Wenn eine Übereinstimmung vorhanden ist, gibt diese Methode eine Stammcodegruppe zurück. Codegruppe, die zurückgegeben wird, enthält untergeordnete Codegruppen, die untergeordnete Codegruppen nach Bedarf, um den vollständigen Satz von Codegruppen widerzuspiegeln, die von den bereitgestellten Beweisen abgeglichen wurden wiederum enthalten.  
  
 <xref:System.Security.Policy.FileCodeGroup>union-Semantik verwendet und bildet einen Berechtigungssatz, der auf der Grundlage der <xref:System.Security.Policy.Url> gemäß `evidence`.  
  
   
  
## Examples  
 Der folgende Code zeigt die Verwendung der <xref:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups%2A> Methode, um die übereinstimmenden Codegruppen zu beheben. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Policy.FileCodeGroup> Klasse.  
  
 [!code-cpp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/CS/members.cs#9)]
 [!code-vb[System.Security.Policy.FileCodeGroup_Evt#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.FileCodeGroup_Evt/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="evidence" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
