<Type Name="Hash" FullName="System.Security.Policy.Hash">
  <TypeSignature Language="C#" Value="public sealed class Hash : System.Security.Policy.EvidenceBase, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Hash extends System.Security.Policy.EvidenceBase implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.Hash" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet einen Nachweis über den Hashwert für eine Assembly. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Hashwert stellt einen eindeutigen Wert, der eine bestimmte Gruppe von Bytes entspricht. Anstatt in Bezug auf eine Assembly nach Name, Version oder andere Bezeichnung kennzeichnet einen Hashwert die Assembly ohne Mehrdeutigkeit. Namen unterliegen Konflikte in seltenen Fällen, in denen erhält denselben Namen in ganz anderen Code, ab. Verschiedene Variationen von Code können mit der gleichen Version versehentlich gekennzeichnet werden. Führt jedoch eine sehr unterschiedliche Hashwert auch ein einzelnes Bit ändern.  
  
 Hashwerte sind eine kryptografisch sichere Methode zum Verweisen auf bestimmte Assemblys in der Richtlinie, ohne die Verwendung digitaler Signaturen. Ein secure Hash-Algorithmus ist so gestaltet, dass es rechnerisch So erstellen Sie einer anderen Assembly mit demselben Hashwert entweder durch versehentlicher oder böswilliger versucht. Standardmäßig werden Beweise aus der <xref:System.Security.Cryptography.SHA1> und <xref:System.Security.Cryptography.MD5> -Hashalgorithmen unterstützt, obwohl über einen Hashalgorithmus verwendet werden kann <xref:System.Security.Policy.Hash.GenerateHash%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hash (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">Die Assembly, für die den Hashwert berechnet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Policy.Hash" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Hashwert wird nicht ausgeführt, bis eine der Eigenschaften oder Methoden aufgerufen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="assembly" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" />ist nicht-Laufzeit <see cref="T:System.Reflection.Assembly" /> Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
        <returns>Ein neues Objekt, das eine Kopie dieser Instanz ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMD5">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateMD5 (byte[] md5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateMD5(unsigned int8[] md5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="md5" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="md5">Ein Bytearray, enthält eine <see cref="T:System.Security.Cryptography.MD5" /> Hashwert.</param>
        <summary>Erstellt eine <see cref="T:System.Security.Policy.Hash" /> -Objekt, enthält eine <see cref="T:System.Security.Cryptography.MD5" /> Hashwert.</summary>
        <returns>Ein Objekt, das den Hashwert gebotenen enthält die <paramref name="md5" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene <xref:System.Security.Policy.Hash> Objekt enthält nur die <xref:System.Security.Policy.Hash.MD5%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="md5" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSHA1">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateSHA1 (byte[] sha1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateSHA1(unsigned int8[] sha1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sha1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sha1">Ein Bytearray, enthält eine <see cref="T:System.Security.Cryptography.SHA1" /> Hashwert.</param>
        <summary>Erstellt eine <see cref="T:System.Security.Policy.Hash" /> -Objekt, enthält eine <see cref="T:System.Security.Cryptography.SHA1" /> Hashwert.</summary>
        <returns>Ein Objekt, das den Hashwert gebotenen enthält die <paramref name="sha1" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene <xref:System.Security.Policy.Hash> Objekt enthält nur die <xref:System.Security.Policy.Hash.SHA1%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="sha1" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSHA256">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Hash CreateSHA256 (byte[] sha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Hash CreateSHA256(unsigned int8[] sha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Hash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sha256" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sha256">Ein Bytearray, enthält eine <see cref="T:System.Security.Cryptography.SHA256" /> Hashwert.</param>
        <summary>Erstellt eine <see cref="T:System.Security.Policy.Hash" /> -Objekt, enthält eine <see cref="T:System.Security.Cryptography.SHA256" /> Hashwert.</summary>
        <returns>Ein Hashobjekt, die den Hashwert von bereitgestellten enthält die <paramref name="sha256" /> Parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene <xref:System.Security.Policy.Hash> Objekt enthält nur die <xref:System.Security.Policy.Hash.SHA256%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="sha256" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateHash">
      <MemberSignature Language="C#" Value="public byte[] GenerateHash (System.Security.Cryptography.HashAlgorithm hashAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GenerateHash(class System.Security.Cryptography.HashAlgorithm hashAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlg" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hashAlg">Der Hashalgorithmus zu verwenden, um den Hashwert für die Assembly zu berechnen.</param>
        <summary>Berechnet den Hashwert für die Assembly unter Verwendung des angegebenen Hashalgorithmus.</summary>
        <returns>Ein Bytearray, das den Hashwert für die Assembly darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Klassenkonstruktor angegebene Assembly stellt die Bytes für den Hashwert zu berechnen. Die `hashAlg` Parameter ist ein Objekt, das von einer bestimmten abgeleiteten <xref:System.Security.Cryptography.HashAlgorithm>. Der zurückgegebene Hashwert wird vom Typ, der von `hashAlg`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="hashAlg" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Der Hashwert für die Assembly kann nicht generiert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
        <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
        <summary>Ruft die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Objekt mit dem Parameternamen und zusätzlichen Informationen zur Ausnahme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird bereitgestellt, um Vererbung unterstützen die <xref:System.Runtime.Serialization.ISerializable> Schnittstelle.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public byte[] MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.MD5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.Cryptography.MD5" /> der Hashwert für die Assembly.</summary>
        <value>Ein Bytearray, das stellt die <see cref="T:System.Security.Cryptography.MD5" /> der Hashwert für die Assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Klassenkonstruktor angegebene Assembly stellt die Bytes für die Berechnung des Hashs an.  
  
   
  
## Examples  
 Das folgende Beispiel berechnet den <xref:System.Security.Cryptography.MD5> -hash für `myAssembly` und speichert ihn in `hashcode`.  
  
 [!code-cpp[Classic Hash.MD5 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hash.MD5 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/CS/source.cs#1)]
 [!code-vb[Classic Hash.MD5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hash.MD5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="public byte[] SHA1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SHA1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.SHA1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.Cryptography.SHA1" /> der Hashwert für die Assembly.</summary>
        <value>Ein Bytearray, das stellt die <see cref="T:System.Security.Cryptography.SHA1" /> der Hashwert für die Assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Konstruktor angegebene Assembly stellt die Bytes für die Berechnung des Hashs an.  
  
   
  
## Examples  
 Das folgende Beispiel berechnet den <xref:System.Security.Cryptography.SHA1> -hash für `myAssembly` und speichert ihn in `hashcode`.  
  
 [!code-cpp[Classic Hash.SHA1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hash.SHA1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/CS/source.cs#1)]
 [!code-vb[Classic Hash.SHA1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hash.SHA1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="public byte[] SHA256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SHA256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.Hash.SHA256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.Cryptography.SHA256" /> der Hashwert für die Assembly.</summary>
        <value>Ein Bytearray, das stellt die <see cref="T:System.Security.Cryptography.SHA256" /> der Hashwert für die Assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Assembly, die im angegebenen der <xref:System.Security.Policy.Hash.%23ctor%2A> Konstruktor stellt die Bytes für die Berechnung des Hashs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.Hash.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung des aktuellen <see cref="T:System.Security.Policy.Hash" />.</summary>
        <returns>Eine Darstellung des aktuellen <see cref="T:System.Security.Policy.Hash" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode eignet sich während des Debuggens, um eine einfach zu lesende Darstellung des Objekts abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
