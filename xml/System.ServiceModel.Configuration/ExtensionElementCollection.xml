<Type Name="ExtensionElementCollection" FullName="System.ServiceModel.Configuration.ExtensionElementCollection">
  <TypeSignature Language="C#" Value="public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExtensionElementCollection extends System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1&lt;class System.ServiceModel.Configuration.ExtensionElement&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ExtensionElementCollection" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection&lt;System.ServiceModel.Configuration.ExtensionElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="ConfigurationElementType">System.ServiceModel.Configuration.ExtensionElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von <see cref="T:System.ServiceModel.Configuration.ExtensionElement" />-Instanzen dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExtensionElementCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseAdd">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> ein Konfigurationselement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Hinzufügen wird ein Element nur dann als Duplikat betrachtet, wenn die Schlüssel identisch sind, die Werte sich aber unterscheiden. Elemente mit gleichen Schlüsseln und Werten werden ohne Meldung akzeptiert, da die Elemente nicht in Konflikt miteinander stehen. Allerdings kann ein Element mit identischem Schlüssel, aber abweichendem Wert, nicht hinzugefügt werden, da keine Logik vorhanden ist, anhand derer bestimmt werden könnte, welcher der beiden in Konflikt stehenden Werte berücksichtigt werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">Das hinzuzufügende <see cref="T:System.Configuration.ConfigurationElement" />.</param>
        <summary>Fügt der <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> ein Konfigurationselement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Hinzufügen wird ein Element nur dann als Duplikat betrachtet, wenn die Schlüssel identisch sind, die Werte sich aber unterscheiden. Elemente mit gleichen Schlüsseln und Werten werden ohne Meldung akzeptiert, da die Elemente nicht in Konflikt miteinander stehen. Allerdings kann ein Element mit identischem Schlüssel, aber abweichendem Wert, nicht hinzugefügt werden, da keine Logik vorhanden ist, anhand derer bestimmt werden könnte, welcher der beiden in Konflikt stehenden Werte berücksichtigt werden soll.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Eine Erweiterung mit demselben Namen oder Typ wie <paramref name="element" /> bereits in der Auflistung vorhanden ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BaseAdd(int32 index, class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="index">Die Indexposition hinzuzufügende <c>Element</c>.</param>
        <param name="element">Das hinzuzufügende <see cref="T:System.Configuration.ConfigurationElement" />.</param>
        <summary>Fügt der <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> am angegebenen Speicherort ein Konfigurationselement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Hinzufügen wird ein Element nur dann als Duplikat betrachtet, wenn die Schlüssel identisch sind, die Werte sich aber unterscheiden. Elemente mit gleichen Schlüsseln und Werten werden ohne Meldung akzeptiert, da die Elemente nicht in Konflikt miteinander stehen. Allerdings kann ein Element mit identischem Schlüssel, aber abweichendem Wert, nicht hinzugefügt werden, da keine Logik vorhanden ist, anhand derer bestimmt werden könnte, welcher der beiden in Konflikt stehenden Werte berücksichtigt werden soll.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Eine Erweiterung mit demselben Namen oder Typ wie <paramref name="element" /> bereits in der Auflistung vorhanden ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementKey">
      <MemberSignature Language="C#" Value="protected override object GetElementKey (System.Configuration.ConfigurationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetElementKey(class System.Configuration.ConfigurationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Configuration.ConfigurationElement" />, für das der Schlüssel zurückzugeben ist.</param>
        <summary>Ruft den Elementschlüssel für das angegebene Konfigurationselement ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das als Schlüssel für das angegebene Konfigurationselement fungiert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> hat den Wert <see langword="null" /> oder ist leer.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOnDuplicate">
      <MemberSignature Language="C#" Value="protected override bool ThrowOnDuplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowOnDuplicate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Versuch, der <see cref="T:System.Configuration.ConfigurationElement" /> ein doppeltes <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> hinzuzufügen, eine Ausnahme auslöst.</summary>
        <value>
          <see langword="true" />, wenn der Versuch, der <see cref="T:System.Configuration.ConfigurationElement" /> ein doppeltes <see cref="T:System.ServiceModel.Configuration.ExtensionElementCollection" /> hinzuzufügen, eine Ausnahme auslöst, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
