<Type Name="RuntimeOps" FullName="System.Runtime.CompilerServices.RuntimeOps">
  <TypeSignature Language="C#" Value="public static class RuntimeOps" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeOps extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeOps" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält Hilfsmethoden, die von dynamisch generierten Methoden aufgerufen.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="CreateRuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.IRuntimeVariables</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Schnittstelle, die verwendet werden kann, ändern Sie geschlossene Variablen zur Laufzeit.</summary>
        <returns>Eine Schnittstelle zu Variablen zugreifen.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateRuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables (object[] data, long[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables(object[] data, int64[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.CreateRuntimeVariables(System.Object[],System.Int64[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.IRuntimeVariables</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object[]" />
        <Parameter Name="indexes" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="data">Der Closure-Array.</param>
        <param name="indexes">Ein Array von Indizes in der Closure-Array, in denen Variablen gefunden werden.</param>
        <summary>Erstellt eine Schnittstelle, die verwendet werden kann, ändern Sie geschlossene Variablen zur Laufzeit.</summary>
        <returns>Eine Schnittstelle zu Variablen zugreifen.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExpandoCheckVersion">
      <MemberSignature Language="C#" Value="public static bool ExpandoCheckVersion (System.Dynamic.ExpandoObject expando, object version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExpandoCheckVersion(class System.Dynamic.ExpandoObject expando, object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.ExpandoCheckVersion(System.Dynamic.ExpandoObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" />
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expando">Das Expando-Objekt.</param>
        <param name="version">Die Version zu überprüfen.</param>
        <summary>Überprüft die Version des Expando-Objekts.</summary>
        <returns>"Wahr" zurückgegeben, wenn die Version entspricht; andernfalls "false".</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExpandoPromoteClass">
      <MemberSignature Language="C#" Value="public static void ExpandoPromoteClass (System.Dynamic.ExpandoObject expando, object oldClass, object newClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExpandoPromoteClass(class System.Dynamic.ExpandoObject expando, object oldClass, object newClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.ExpandoPromoteClass(System.Dynamic.ExpandoObject,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" />
        <Parameter Name="oldClass" Type="System.Object" />
        <Parameter Name="newClass" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expando">Das Expando-Objekt.</param>
        <param name="oldClass">Die alte Klasse des Expando-Objekts.</param>
        <param name="newClass">Die neue Klasse des Expando-Objekts.</param>
        <summary>Stuft ein Expando-Objekt von einer Klasse zu einer neuen Klasse.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExpandoTryDeleteValue">
      <MemberSignature Language="C#" Value="public static bool ExpandoTryDeleteValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExpandoTryDeleteValue(class System.Dynamic.ExpandoObject expando, object indexClass, int32 index, string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.ExpandoTryDeleteValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expando">Das Expando-Objekt.</param>
        <param name="indexClass">Die Klasse des Expando-Objekts.</param>
        <param name="index">Der Index des Elements.</param>
        <param name="name">Der Name des Members.</param>
        <param name="ignoreCase">"true", wenn der Name zugewiesen werden soll, ignorieren Groß-/Kleinschreibung; "false" andernfalls.</param>
        <summary>Löscht den Wert eines Elements in einem Expando-Objekt.</summary>
        <returns>"true", wenn das Element erfolgreich entfernt wurde; andernfalls "false".</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExpandoTryGetValue">
      <MemberSignature Language="C#" Value="public static bool ExpandoTryGetValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, string name, bool ignoreCase, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExpandoTryGetValue(class System.Dynamic.ExpandoObject expando, object indexClass, int32 index, string name, bool ignoreCase, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.ExpandoTryGetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.String,System.Boolean,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expando">Das Expando-Objekt.</param>
        <param name="indexClass">Die Klasse des Expando-Objekts.</param>
        <param name="index">Der Index des Elements.</param>
        <param name="name">Der Name des Members.</param>
        <param name="ignoreCase">"true", wenn der Name zugewiesen werden soll, ignorieren Groß-/Kleinschreibung; "false" andernfalls.</param>
        <param name="value">Die Out-Parameter mit dem Wert des Elements.</param>
        <summary>Ruft den Wert eines Elements in einem Expando-Objekt ab.</summary>
        <returns>"True", wenn das Element in das Expando-Objekt, andernfalls "false" vorhanden ist.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExpandoTrySetValue">
      <MemberSignature Language="C#" Value="public static object ExpandoTrySetValue (System.Dynamic.ExpandoObject expando, object indexClass, int index, object value, string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ExpandoTrySetValue(class System.Dynamic.ExpandoObject expando, object indexClass, int32 index, object value, string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.ExpandoTrySetValue(System.Dynamic.ExpandoObject,System.Object,System.Int32,System.Object,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expando" Type="System.Dynamic.ExpandoObject" />
        <Parameter Name="indexClass" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expando">Das Expando-Objekt.</param>
        <param name="indexClass">Die Klasse des Expando-Objekts.</param>
        <param name="index">Der Index des Elements.</param>
        <param name="value">Der Wert des Members.</param>
        <param name="name">Der Name des Members.</param>
        <param name="ignoreCase">"true", wenn der Name zugewiesen werden soll, ignorieren Groß-/Kleinschreibung; "false" andernfalls.</param>
        <summary>Legt den Wert eines Elements in einem Expando-Objekt fest.</summary>
        <returns>Gibt den Index für das Element festlegen.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MergeRuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.IRuntimeVariables MergeRuntimeVariables (System.Runtime.CompilerServices.IRuntimeVariables first, System.Runtime.CompilerServices.IRuntimeVariables second, int[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.CompilerServices.IRuntimeVariables MergeRuntimeVariables(class System.Runtime.CompilerServices.IRuntimeVariables first, class System.Runtime.CompilerServices.IRuntimeVariables second, int32[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.MergeRuntimeVariables(System.Runtime.CompilerServices.IRuntimeVariables,System.Runtime.CompilerServices.IRuntimeVariables,System.Int32[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.IRuntimeVariables</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Runtime.CompilerServices.IRuntimeVariables" />
        <Parameter Name="second" Type="System.Runtime.CompilerServices.IRuntimeVariables" />
        <Parameter Name="indexes" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="first">Die erste Liste.</param>
        <param name="second">Die zweite Liste.</param>
        <param name="indexes">Die Indexarray, der angibt, welche Liste, um aus der Variablen abgerufen.</param>
        <summary>Kombiniert zwei Runtime variablenlisten und gibt eine neue Liste zurück.</summary>
        <returns>Die zusammengeführten Laufzeitvariablen.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression Quote (System.Linq.Expressions.Expression expression, object hoistedLocals, object[] locals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression Quote(class System.Linq.Expressions.Expression expression, object hoistedLocals, object[] locals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.RuntimeOps.Quote(System.Linq.Expressions.Expression,System.Object,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="hoistedLocals" Type="System.Object" />
        <Parameter Name="locals" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="expression">Der Ausdruck für das Angebot.</param>
        <param name="hoistedLocals">Der herausgehobenen lokalen Zustand, die vom Compiler bereitgestellt.</param>
        <param name="locals">Die tatsächlichen abgerufen lokalen Werte.</param>
        <summary>Die bereitgestellte Ausdrucksbaumstruktur in Anführungszeichen ein.</summary>
        <returns>Der Ausdruck wird in Anführungszeichen.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
