<Type Name="RuntimeHelpers+CleanupCode" FullName="System.Runtime.CompilerServices.RuntimeHelpers+CleanupCode">
  <TypeSignature Language="C#" Value="public delegate void RuntimeHelpers.CleanupCode(object userData, bool exceptionThrown);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed RuntimeHelpers/CleanupCode extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="userData" Type="System.Object" />
    <Parameter Name="exceptionThrown" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="userData">Daten, die an den Delegaten übergeben.</param>
    <param name="exceptionThrown">
      <see langword="true" />Um auszudrücken, dass eine Ausnahme ausgelöst wurde; andernfalls <see langword="false" />.</param>
    <summary>Stellt eine Methode ausgeführt wird, wenn eine Ausnahme auftritt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode> mit Delegieren der <xref:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup%2A> Methode.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
