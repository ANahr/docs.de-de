<Type Name="CustomAttributeExtensions" FullName="System.Reflection.CustomAttributeExtensions">
  <TypeSignature Language="C#" Value="public static class CustomAttributeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CustomAttributeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeExtensions" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält statische Methoden zum Abrufen von benutzerdefinierten Attributen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der in einer angegebenen Assembly angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der mit einem angegebenen Element angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der auf ein bestimmtes Modul angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der auf einen bestimmten Parameter angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, die mit einem angegebenen Element angewendet wird, und optional untersucht die Vorgänger dieses Elements ab.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, die auf einen bestimmten Parameter angewendet wird, und optional untersucht die Vorgänger dieses Parameters ab.</summary>
        <returns>Ein benutzerdefiniertes Attribut entsprechender <paramref name="attributeType" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der in einer angegebenen Assembly angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Element, um zu überprüfen.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der mit einem angegebenen Element angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der auf ein bestimmtes Modul angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, der auf einen bestimmten Parameter angewendet wird.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, die mit einem angegebenen Element angewendet wird, und optional untersucht die Vorgänger dieses Elements ab.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs, die auf einen bestimmten Parameter angewendet wird, und optional untersucht die Vorgänger dieses Parameters ab.</summary>
        <returns>Ein benutzerdefiniertes Attribut, das entspricht <paramref name="T" />, oder <see langword="null" /> Wenn kein solches Attribut gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> Erweiterungsmethode, wenn Sie davon ausgehen, mehrere Werte dass zurückgegeben werden, oder <xref:System.Reflection.AmbiguousMatchException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Mehr als eine der erforderlichen Attribute gefunden.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute, die in einer angegebenen Assembly angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute, die mit einem angegebenen Element angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute, die auf ein bestimmtes Modul angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute, die auf einen bestimmten Parameter angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die in einer angegebenen Assembly angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen, die mit einem angegebenen Element angewendet werden, und optional die Vorgänger dieses Elements untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> , die die angegebenen Kriterien entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die mit einem angegebenen Element angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die auf ein bestimmtes Modul angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen, die auf einen bestimmten Parameter angewendet werden, und der Vorgänger dieses Parameters optional untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die auf einen bestimmten Parameter angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen eines angegebenen Typs, die mit einem angegebenen Element angewendet werden, und optional die Vorgänger dieses Elements untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen eines angegebenen Typs, die auf einen bestimmten Parameter angewendet werden, und der Vorgänger dieses Parameters optional untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="attributeType" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die in einer angegebenen Assembly angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Element, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die mit einem angegebenen Element angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die auf ein bestimmtes Modul angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <summary>Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs, die auf einen bestimmten Parameter angewendet werden.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen eines angegebenen Typs, die mit einem angegebenen Element angewendet werden, und optional die Vorgänger dieses Elements untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zu suchenden Attributs.</typeparam>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft eine Auflistung von benutzerdefinierten Attributen eines angegebenen Typs, die auf einen bestimmten Parameter angewendet werden, und der Vorgänger dieses Parameters optional untersucht.</summary>
        <returns>Eine Auflistung der benutzerdefinierten Attribute, die angewendet werden <paramref name="element" /> und, bei denen <paramref name="T" />, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
        <exception cref="T:System.TypeLoadException">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Die Assembly, zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs in einer angegebenen Assembly angewendet werden.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs mit einem angegebenen Element angewendet werden.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Das Modul, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs zu einem bestimmten Modul angewendet werden.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines bestimmten Typs auf einen bestimmten Parameter angewendet werden.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs mit einem angegebenen Element angewendet, und, optional auf seiner übergeordneten Elemente angewendet.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />ist Sie nicht, einen Konstruktor, Methoden-, Eigenschafts-, Ereignis, Typ oder Feld.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Der Parameter, um zu überprüfen.</param>
        <param name="attributeType">Der Typ des zu suchenden Attributs.</param>
        <param name="inherit">
          <see langword="true" />Überprüfen Sie die Vorgänger des <c>Element</c>ist, andernfalls <see langword="false" />.</param>
        <summary>Gibt an, ob benutzerdefinierte Attribute eines bestimmten Typs auf einen bestimmten Parameter angewendet, und, optional auf seiner übergeordneten Elemente angewendet.</summary>
        <returns>
          <see langword="true" />Wenn ein Attribut des angegebenen Typs angewendet wird <paramref name="element" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />stammt nicht aus <see cref="T:System.Attribute" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
