<Type Name="ActiveDirectoryRole" FullName="System.Workflow.Activities.ActiveDirectoryRole">
  <TypeSignature Language="C#" Value="public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActiveDirectoryRole extends System.Workflow.Activities.WorkflowRole implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ActiveDirectoryRole" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.WorkflowRole</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Active Directory-Rolle in einer Windows Workflow Foundation-Hostingumgebung dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 In der Regel wird der Active Directory-Speicher zum Speichern von Organisationsinformationen für Personal verwendet. Die hauptsächliche Verwendung von <xref:System.Workflow.Activities.ActiveDirectoryRole> besteht darin, aus Geschäftsgründen Abfragen anhand derartiger Organisationsinformationen durchzuführen.  
  
 Active Directory-Rollen entsprechen üblicherweise einer Stellenfunktionen, einem Titel oder einer Kompetenz innerhalb des Unternehmenskontexts.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAllReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetAllReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zurück, die alle Rollen enthält, die direkt oder indirekt an die aktuelle Rolle berichten.</summary>
        <returns>Gibt eine <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zurück, die alle Rollen enthält, die direkt oder indirekt an die aktuelle Rolle berichten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A> gibt alle Knoten unter dem aktuellen Knoten zurück. Verwenden Sie <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>, um nur die Knoten zurückzugeben, die sich direkt unter dem aktuellen Knoten befinden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetDirectReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zurück, die alle Rollen enthält, die direkt an die aktuelle Rolle berichten.</summary>
        <returns>Eine <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, die alle Rollen enthält, die direkt an die aktuelle Rolle berichten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> gibt nur die Knoten zurück, die sich direkt unter dem aktuellen Knoten befinden. Verwenden Sie <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>, um alle Knoten unter dem aktuellen Knoten zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt; GetEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.DirectoryServices.DirectoryEntry&gt; GetEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die generische Sammlung zurück, die alle der aktuellen <see cref="T:System.DirectoryServices.DirectoryEntry" /> zugewiesenen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />-Objekte enthält.</summary>
        <returns>Die generische <see cref="T:System.DirectoryServices.DirectoryEntry" />-Auflistung, die der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesen ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Rolle kann eine allgemeine Sammlung von Sicherheitsobjekten sein. Daher kann eine Rolle mehrere Identitätn enthalten. Verwenden Sie beispielsweise <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> für die Rückgabe aller der Rolle zugewiesenen Verzeichnisobjekte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentities">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetIdentities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetIdentities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine generische Liste mit Windows NT-Konten ab, die <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugeordnet sind.</summary>
        <returns>Eine generische Liste mit Werten, die die der <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesenen Windows NT-Konten darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities%2A> ruft alle <xref:System.Security.Principal.SecurityIdentifier>-Objekt ab, die der <xref:System.Workflow.Activities.ActiveDirectoryRole> zugewiesen sind, und konvertiert diese einzeln in einen Zeichenfolgenwert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManager">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Active Directory-Rolle zurück, die Informationen über den Manager der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> enthält.</summary>
        <returns>Die <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, die Informationen zum Manager der aktuellen Rolle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A> gibt den direkten Manager für die aktuelle Rolle zurück. Verwenden Sie <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>, um alle Rollen über dem aktuellen Knoten zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagerialChain">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Active Directory-Rolle zurück, die Informationen über die der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesene Managerkette enthält.</summary>
        <returns>Die <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, die Informationen über die der aktuellen Rolle zugewiesene Managerkette enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A> gibt alle Knoten über der aktuellen Rolle zurück. Verwenden Sie <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>, um nur den direkten Manager für die aktuelle Rolle zurückzugeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeers">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetPeers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Active Directory-Rolle zurück, die Informationen über alle Verezichnisvorgänge enthält, die vom Manager der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> überwacht werden.</summary>
        <returns>Eine <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />, die Informationen über alle Verzeichnisvorgänge enthält, die vom Manager der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> überwacht werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene <xref:System.Workflow.Activities.ActiveDirectoryRole> enthält Informationen von allen vom Manager dieser Rolle verwalteten Objekte. Sie enthält diese Informationen jedoch nicht von der aktuellen Rolle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityIdentifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine generische Liste der <see cref="T:System.Security.Principal.SecurityIdentifier" />-Objekte zurück, die der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesen sind.</summary>
        <returns>Gibt eine generische Liste der <see cref="T:System.Security.Principal.SecurityIdentifier" />-Objekte zurück, die der aktuellen <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesen sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> prüft jede <xref:System.DirectoryServices.DirectoryEntry>, die von der <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A>-Methode zurückgegeben wird, um festzustellen, ob in der <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>-Sammlung ein Sicherheitsbezeichner enthalten ist. Enthält der <xref:System.DirectoryServices.DirectoryEntry> solch eine Eigenachaft, fügt <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> einen <xref:System.Security.Principal.SecurityIdentifier> zur zurückgegebenen Liste hinzu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludesIdentity">
      <MemberSignature Language="C#" Value="public override bool IncludesIdentity (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IncludesIdentity(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Die zu suchende Identität.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob die <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> die angegebene Identität enthält.</summary>
        <returns>
          <see langword="true" /> gibt an, dass <paramref name="identity" /> in der <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da eine Rolle eine Generalisierung eines oder mehrerer Objekte darstellt, können mehrere Identitäten von einer Rolle beschrieben werden. Verwenden Sie <xref:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity%2A>, um zu prüfen, dass eine angegebene Identität in dieser Rolle enthalten ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Active Directory-Rollennamen ab oder legt ihn fest.</summary>
        <value>Der Active Directory-Rollenname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den Namen zur Beschreibung der Rolle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry RootEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry RootEntry" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den der <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesenen Active Directory-Knoten ab.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.DirectoryEntry" />, der den der <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zugewiesenen Active Directory-Stammknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Stammeintrag ist die Rolle aufwärts in der Kette der Rollen, für die kein Manager zugewiesen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
        <param name="context">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Ziel für diese Serialisierung.</param>
        <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der Implementierung von <xref:System.Workflow.Activities.ActiveDirectoryRole.System%23Runtime%23Serialization%23ISerializable%23GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)> kann dieses Objekt serialisiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
