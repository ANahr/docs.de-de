<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiert eine Anmeldeinformationsrichtlinie für die Ressource Anforderungen verwendet werden soll, die mit ausgeführt werden <see cref="T:System.Net.WebRequest" /> und abgeleitete Klassen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Richtlinie lässt Anmeldeinformationen nur gesendet werden, wenn die angeforderte Ressource in der gleichen Domäne wie der Client ist, die die Anforderung stammt. Für viele Anwendungen ist Grund dafür die optimale Richtlinie verhindert, dass Netzwerkanmeldeinformationen für Ressourcen, die nicht im Intranet sind mit den Anforderungen gesendet werden.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>Richtlinien werden nur aufgerufen, wenn die <xref:System.Net.WebRequest> oder <xref:System.Net.WebProxy> , verknüpft ist mit der Anforderung hat Sie Anmeldeinformationen, die nicht `null`. Das Festlegen dieser Richtlinie hat keine Auswirkungen auf Anforderungen, die keine Anmeldeinformationen angeben.  
  
 Verwenden der <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> -Eigenschaft zum Festlegen der <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> Richtlinie. Die <xref:System.Net.IAuthenticationModule> , verarbeitet die Authentifizierung für die Anforderung wird aufgerufen, die <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> -Methode vor dem Ausführen der Authentifizierung. Wenn die angeforderte Ressource in einer anderen Domäne als der Client ist die <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> -Methode zurückkehrt `false`, und die Authentifizierung erfolgt nicht.  
  
 Diese Richtlinie wirkt sich auf alle Instanzen von <xref:System.Net.WebRequest> mit nicht-Null-Anmeldeinformationen in der aktuellen Anwendungsdomäne. Die Richtlinie kann nicht auf einzelne Anforderungen überschrieben werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen einer Instanz von <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> und verwenden, um die Anmeldeinformationsrichtlinie für die für die Anwendungsdomäne festgelegt.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen verwenden Sie diesen Konstruktor zum Erstellen von Objekten, die verwendet werden können, zum Festlegen der <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen einer Instanz dieser Klasse.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">Die <see cref="T:System.Uri" /> , die die Anforderung erhalten.</param>
        <param name="request">Die <see cref="T:System.Net.WebRequest" /> , die der angeforderten Ressource darstellt.</param>
        <param name="credential">Die <see cref="T:System.Net.NetworkCredential" /> , die mit der Anforderung gesendet wird, wenn diese Methode gibt <see langword="true" />.</param>
        <param name="authModule">Die <see cref="T:System.Net.IAuthenticationModule" /> wird, die die Authentifizierung durchführt, wenn eine Authentifizierung erforderlich ist.</param>
        <summary>Gibt eine <see cref="T:System.Boolean" /> , der angibt, ob die Anmeldeinformationen des Clients mit einer Anforderung für eine Ressource gesendet werden, die erstellt wurde, mithilfe von <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>
          <see langword="true" />Wenn die angeforderte Ressource in der gleichen Domäne wie der anfordernde Client ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen rufen diese Methode nicht direkt. wird aufgerufen, indem Sie die <xref:System.Net.IAuthenticationModule> , die zum Ausführen der Authentifizierung mit dem Server verantwortlich ist. Wenn diese Methode zurückgibt `false`, die <xref:System.Net.IAuthenticationModule> wird den Client mit dem Server nicht authentifiziert.  
  
 Diese Methode wird aufgerufen, nur für Anforderungen, die Anmeldeinformationen angeben, oder verwenden Sie eine <xref:System.Net.WebProxy> Objekt, das Anmeldeinformationen angibt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, ableiten von <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> an, dass Anmeldeinformationen für Anforderungen gesendet werden, die bei der Standardauthentifizierung Secure Hypertext Transfer Protocol (HTTPS) verwenden. Verwendung von HTTPS und Standardauthentifizierung, ist das Kennwort des Benutzers verschlüsselt, bevor Sie über das Netzwerk gesendet werden.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
