<Type Name="OracleType" FullName="System.Data.OracleClient.OracleType">
  <TypeSignature Language="C#" Value="public enum OracleType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OracleType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleType" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt den Datentyp eines Felds oder einer Eigenschaft für die Verwendung in einer <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die Zuordnungen zwischen <xref:System.Data.OracleClient.OracleType> -Datentypen, die Oracle-Datentypen und die .NET Framework-Typen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BFile">
      <MemberSignature Language="C#" Value="BFile" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType BFile = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.BFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="BFILE" /> -Datentyp, der einen Verweis auf Binärdaten mit einer maximalen Größe von 4 Gigabyte enthält, die in einer externen Datei gespeichert ist. Verwenden Sie den OracleClient <see cref="T:System.Data.OracleClient.OracleBFile" /> Datentyp mit der <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> Eigenschaft.</summary>
      </Docs>
    </Member>
    <Member MemberName="Blob">
      <MemberSignature Language="C#" Value="Blob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Blob = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Blob" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="BLOB" /> -Datentyp, der Binärdaten mit einer maximalen Größe von 4 Gigabyte enthält. Verwenden Sie den OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Byte">
      <MemberSignature Language="C#" Value="Byte" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Byte = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Byte" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ, der 8-Bit-Ganzzahlen ohne Vorzeichen mit Werten zwischen 0 und 255 darstellt. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Verwenden von .NET Framework <see cref="T:System.Byte" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="Char" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Char = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Char" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="CHAR" /> -Datentyp, der eine Zeichenfolge mit fester Länge mit einer maximalen Größe von 2.000 Bytes enthält. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Clob">
      <MemberSignature Language="C#" Value="Clob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Clob = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Clob" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="CLOB" /> -Datentyp, Zeichendaten, basierend auf den Standardzeichen enthält, die auf dem Server, mit einer maximalen Größe von 4 Gigabyte festgelegt. Verwenden Sie den OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="Cursor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Cursor = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Cursor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="REF CURSOR" />. Die <see cref="T:System.Data.OracleClient.OracleDataReader" /> Objekt ist nicht verfügbar.</summary>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="DateTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType DateTime = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.DateTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="DATE" /> -Datentyp, eine fester Länge, die Darstellung von Datum und Uhrzeit enthält, angefangen mit 1. Januar 4712 v. Chr. bis zum 31. Dezember n. Chr. 4712, mit dem Standardformat *Dd-mmm-Yy*. Für n. Chr. Datumsangaben, <see langword="DATE" /> ordnet <see cref="T:System.DateTime" />. So binden v. Chr. Verwenden von Datumsangaben, eine <see langword="String" /> Parameter und den Oracle TO_DATE oder TO_CHAR Konvertierungsfunktionen für Eingabe-bzw. Ausgabeparameter. Verwenden von .NET Framework <see cref="T:System.DateTime" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Double">
      <MemberSignature Language="C#" Value="Double" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Double = int32(30)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Double" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Gleitkommawert mit doppelter Genauigkeit. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Informationen zur Konvertierung von numerischen Werten Oracle in common Language Runtime (CLR)-Datentypen finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.Double" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Float">
      <MemberSignature Language="C#" Value="Float" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Float = int32(29)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Float" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Gleitkommawert mit einfacher Genauigkeit. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Weitere Informationen zur Konvertierung von numerischen Werten von Oracle Data Typen der common Language Runtime finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.Single" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Int16">
      <MemberSignature Language="C#" Value="Int16" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Int16 = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Int16" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ darstellt, signiert 16-Bit-Ganzzahlen mit Werten zwischen-32768 und 32767 liegen. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Informationen zur Konvertierung von numerischen Werten Oracle in common Language Runtime (CLR)-Datentypen finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.Int16" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Int32">
      <MemberSignature Language="C#" Value="Int32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Int32 = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Int32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ darstellt, signiert, 32-Bit-Ganzzahlen mit Werten zwischen-2147483648 und 2147483647. Dies ist keinen systemeigenen Datentyp von Oracle, jedoch wird die Leistung bereitgestellt werden, wenn Eingabeparameter gebunden. Weitere Informationen zur Konvertierung von numerischen Werten von Oracle Data Typen der common Language Runtime finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.Int32" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="IntervalDayToSecond">
      <MemberSignature Language="C#" Value="IntervalDayToSecond" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType IntervalDayToSecond = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.IntervalDayToSecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="INTERVAL DAY TO SECOND" /> -Datentyp (Oracle 9i oder höher), ein Intervall in Tagen, Stunden, Minuten und Sekunden, und enthält eine feste Größe von 11 Byte. Verwenden von .NET Framework <see cref="T:System.TimeSpan" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="IntervalYearToMonth">
      <MemberSignature Language="C#" Value="IntervalYearToMonth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType IntervalYearToMonth = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.IntervalYearToMonth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="INTERVAL YEAR TO MONTH" /> -Datentyp (Oracle 9i oder höher), ein Zeitintervall in Jahren und Monaten, und enthält eine feste Größe von 5 Bytes. Verwenden von .NET Framework <see cref="T:System.Int32" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="LongRaw">
      <MemberSignature Language="C#" Value="LongRaw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType LongRaw = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.LongRaw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="LONGRAW" /> -Datentyp, binäre Daten variabler Länge mit einer maximalen Größe von 2 Gigabytes enthält. Verwenden von .NET Framework <see langword="Byte[]" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Aktualisieren einer Spalteninhalts mit dem `LONG RAW` -Datentyp, eine Ausnahme wird ausgelöst, wenn Sie einen Wert eingeben `NULL` in der Spalte. Die Oracle `LONG RAW` -Datentyp ist ein veralteter Typ in Oracle, Version 8.0. Um diesen Fehler zu vermeiden, verwenden Sie die `BLOB` -Datentyp anstelle von `LONG RAW`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongVarChar">
      <MemberSignature Language="C#" Value="LongVarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType LongVarChar = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.LongVarChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="LONG" /> -Datentyp, der eine Zeichenfolge variabler Länge mit einer maximalen Größe von 2 Gigabytes enthält. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="NChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NChar = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.NChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="NCHAR" /> -Datentyp, enthält der fester Länge, die Zeichenfolge zu speichernden im nationalen Zeichensatz der Datenbank, mit einer maximalen, Größe von 2.000 Bytes (nicht Zeichen), wenn in der Datenbank gespeichert. Die Größe des Werts hängt von den nationalen Zeichensatz der Datenbank ab. Finden Sie weitere Informationen auf der Oracle-Dokumentation. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="NClob">
      <MemberSignature Language="C#" Value="NClob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NClob = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.NClob" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="NCLOB" /> -Datentyp, Zeichendaten enthält zu speichernde im nationalen Zeichensatz der Datenbank, mit einer maximalen, Größe von 4 Gigabyte (nicht Zeichen), wenn in der Datenbank gespeichert. Die Größe des Werts hängt von den nationalen Zeichensatz der Datenbank ab. Finden Sie weitere Informationen auf der Oracle-Dokumentation. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="Number" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Number = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Number" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="NUMBER" /> -Datentyp, numerische Daten variabler Länge mit einer maximalen Genauigkeit und festen Dezimalstellen von 38 enthält. Entspricht dem <see cref="T:System.Decimal" />. Binden einer Oracle- <see langword="NUMBER" /> , übersteigt, was <see cref="F:System.Decimal.MaxValue" /> enthalten kann, wird entweder ein <see cref="T:System.Data.OracleClient.OracleNumber" /> Datentyp aufweisen, oder verwenden eine <see langword="String" /> Parameter und den Oracle TO_NUMBER oder TO_CHAR Konvertierungsfunktionen für Eingabe-bzw. Ausgabeparameter. Verwenden von .NET Framework <see cref="T:System.Decimal" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="NVarChar">
      <MemberSignature Language="C#" Value="NVarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NVarChar = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.NVarChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="NVARCHAR2" /> -Datentyp, der ein variabler Länge, die Zeichenfolgen im nationalen Zeichensatz der Datenbank, mit einer maximalen Größe von 4.000 Byte (nicht-Zeichen), wenn in der Datenbank gespeichert. Die Größe des Werts hängt von den nationalen Zeichensatz der Datenbank ab. Finden Sie weitere Informationen auf der Oracle-Dokumentation. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Raw = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="RAW" /> -Datentyp, binäre Daten variabler Länge mit einer maximalen Größe von 2.000 Bytes enthält. Verwenden von .NET Framework <see langword="Byte[]" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="RowId">
      <MemberSignature Language="C#" Value="RowId" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType RowId = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.RowId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die base64-Zeichenfolgendarstellung für eine Oracle- <see langword="ROWID" /> -Datentyp. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="SByte">
      <MemberSignature Language="C#" Value="SByte" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType SByte = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.SByte" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ darstellt, signiert, 8-Bit-Ganzzahlen mit Werten zwischen-128 und 127. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Verwenden von .NET Framework <see cref="T:System.SByte" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="Timestamp" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Timestamp = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.Timestamp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="TIMESTAMP" /> (Oracle 9i oder höher), Datum und Uhrzeit (einschließlich Sekunden), und enthält zulässig sind Bereiche im Größe 7 bis 11 Bytes. Verwenden von .NET Framework <see cref="T:System.DateTime" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="TimestampLocal">
      <MemberSignature Language="C#" Value="TimestampLocal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType TimestampLocal = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.TimestampLocal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="TIMESTAMP WITH LOCAL TIMEZONE" /> (Oracle 9i oder höher), Datum, Uhrzeit und einen Verweis auf die ursprüngliche Zeitzone enthält, und dessen Größe 7 bis 11 Bytes. Verwenden von .NET Framework <see cref="T:System.DateTime" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="TimestampWithTZ">
      <MemberSignature Language="C#" Value="TimestampWithTZ" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType TimestampWithTZ = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.TimestampWithTZ" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="TIMESTAMP WITH TIMEZONE" /> (Oracle 9i oder höher), Datum, Uhrzeit und einer angegebenen Zeitzone, und enthält eine feste Größe von 13 Bytes. Verwenden von .NET Framework <see cref="T:System.DateTime" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UInt16">
      <MemberSignature Language="C#" Value="UInt16" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType UInt16 = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.UInt16" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ, der 16-Bit-Ganzzahlen ohne Vorzeichen mit Werten zwischen 0 und 65535 darstellt. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Informationen zur Konvertierung von numerischen Werten Oracle in common Language Runtime (CLR)-Datentypen finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.UInt16" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="UInt32">
      <MemberSignature Language="C#" Value="UInt32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType UInt32 = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.UInt32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein ganzzahliger Typ, der 32-Bit-Ganzzahlen ohne Vorzeichen mit Werten zwischen 0 und 4294967295 darstellt. Dies ist eine systemeigene Oracle-Datentyp, jedoch wird bereitgestellt, um die Leistung zu verbessern, wenn Eingabeparameter gebunden. Informationen zur Konvertierung von numerischen Werten Oracle in common Language Runtime (CLR)-Datentypen finden Sie unter <see cref="T:System.Data.OracleClient.OracleNumber" />. Verwenden von .NET Framework <see cref="T:System.UInt32" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="VarChar">
      <MemberSignature Language="C#" Value="VarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType VarChar = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleType.VarChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Oracle <see langword="VARCHAR2" /> -Datentyp, der eine Zeichenfolge variabler Länge mit einer maximalen Größe von 4.000 Byte enthält. Verwenden von .NET Framework <see cref="T:System.String" /> oder OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> -Datentyp im <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
