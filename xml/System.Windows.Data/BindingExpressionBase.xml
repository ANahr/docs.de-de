<Type Name="BindingExpressionBase" FullName="System.Windows.Data.BindingExpressionBase">
  <TypeSignature Language="C#" Value="public abstract class BindingExpressionBase : System.Windows.Expression, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingExpressionBase extends System.Windows.Expression implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Expression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt die Basisklasse für <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.PriorityBindingExpression" />, und <see cref="T:System.Windows.Data.MultiBindingExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informationen zu Bindungen und Bindungsausdrücke, finden Sie unter "Bindung und BindingExpression" in [Übersicht zur Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Data.BindingGroup" /> , zu der dieser Bindungsausdruck gehört.</summary>
        <value>Die <see cref="T:System.Windows.Data.BindingGroup" /> , zu der dieser Bindungsausdruck gehört. Diese Eigenschaft gibt <see langword="null" /> Wenn die <see cref="T:System.Windows.Data.BindingExpressionBase" /> ist nicht Teil einer <see cref="T:System.Windows.Data.BindingGroup" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="public virtual bool HasError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die übergeordnete Bindung eine Validierungsregel Fehler aufgetreten ist.</summary>
        <value>
          <see langword="true" />Wenn die übergeordnete Bindung eine fehlerhafte Validierungsregel besitzt; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist identisch mit der <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public virtual bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die übergeordnete Bindung eine Validierungsregel Fehler aufgetreten ist.</summary>
        <value>
          <see langword="true" />Wenn die übergeordnete Bindung eine fehlerhafte Validierungsregel besitzt; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist identisch mit der <xref:System.Windows.Data.BindingExpressionBase.HasValidationError%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob das Ziel der Bindung ist, die nicht in der Quelle geschrieben wurde.</summary>
        <value>
          <see langword="true" />Wenn das Ziel einen Wert, der nicht in der Quelle geschrieben wurde verfügt; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gilt nur, wenn <xref:System.Windows.Data.Binding.Mode%2A> Eigenschaft des übergeordneten Elements <xref:System.Windows.Data.Binding> festgelegt ist, um <xref:System.Windows.Data.BindingMode.TwoWay> oder <xref:System.Windows.Data.BindingMode.OneWayToSource>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBindingBase">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ParentBindingBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ParentBindingBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Data.BindingBase" /> Objekt aus der <see cref="T:System.Windows.Data.BindingExpressionBase" /> Objekt erstellt wird.</summary>
        <value>Die <see cref="T:System.Windows.Data.BindingBase" /> Objekt aus der <see cref="T:System.Windows.Data.BindingExpressionBase" /> Objekt erstellt wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Status des Bindungsausdrucks ab.</summary>
        <value>Ein <see cref="T:System.Windows.Data.BindingStatus" /> Wert, der den Status des Bindungsausdrucks beschreibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Der Typ des der <see cref="T:System.Windows.WeakEventManager" /> beim Aufrufen dieser Methode. Dies erkennt nur die Manager-Objekte des Typs <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
        <param name="sender">Objekt, das das Ereignis ausgelöst wurde.</param>
        <param name="e">Ereignisdaten.</param>
        <summary>Dieser Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <returns>
          <see langword="true" />Wenn der Listener das Ereignis behandelt wird. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element, das das Bindungszielobjekt dieses Ausdrucks Bindung ab.</summary>
        <value>Das Element, das Bindungszielobjekt dieses Ausdrucks Bindung ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bindungszieleigenschaft dieses Ausdrucks Bindung ab.</summary>
        <value>Die Bindungszieleigenschaft dieses Ausdrucks Bindung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public virtual void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet den aktuellen bindungszielwert an die Bindungsquelle in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> oder <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> Bindungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist keine Standardimplementierung in der Basisklasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public virtual void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.UpdateTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erzwingt eine Datenübertragung von der Bindungsquelle zum Bindungsziel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist keine Standardimplementierung in der Basisklasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt alle <see cref="T:System.Windows.Controls.ValidationRule" /> Objekte auf dem zugeordneten <see cref="T:System.Windows.Data.Binding" /> , auf denen die <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> -Eigenschaftensatz auf <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> oder <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />. Diese Methode wird nicht mit die Quelle aktualisiert.</summary>
        <returns>
          <see langword="true" />Wenn die Überprüfungsregeln erfolgreich ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> Methode können Sie Validierungsregeln auf eine Bindung ausgeführt werden, ohne die Quelle der Bindung zu aktualisieren. Dies ist hilfreich, wenn Sie Benutzereingaben überprüfen und aktualisieren die Quelle zu unterschiedlichen Zeiten in einer Anwendung möchten.  
  
 Angenommen Sie, Sie verfügen über ein Formular zum Aktualisieren einer Datenquelle, die eine Schaltfläche "Absenden" enthält. Bereitstellen von Feedback für den Benutzer, wenn ein ungültiger Wert eingegeben wird, bevor der Benutzer versucht, die Übermittlung des Formulars werden sollen. Können Sie die Gültigkeit eines Felds überprüfen, indem Sie der Bindung festlegen <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Eigenschaft <xref:System.Windows.Data.UpdateSourceTrigger.Explicit> und Aufrufen <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A> bei der <xref:System.Windows.Controls.TextBox> den Fokus verliert.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Szenario, das im Abschnitt "Hinweise" erläutert wird. Im Beispiel ermöglicht einem Benutzer zum Eingeben von Daten für ein Bibliothekselement und übermitteln der Daten. Die Bindung für die <xref:System.Windows.Controls.TextBox> mit dem Namen `callNum` verfügt über eine <xref:System.Windows.Controls.ValidationRule> zugeordnet. Wenn die <xref:System.Windows.Controls.TextBox> verliert den Fokus, das Beispiel ruft <xref:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate%2A>. Klickt der Benutzer auf die Schaltfläche "Absenden", um das Beispiel ruft <xref:System.Windows.Data.BindingExpressionBase.UpdateSource%2A> um die Änderungen zu übernehmen. Der folgende XAML-Code wird die Benutzeroberfläche für die Anwendung erstellt.  
  
 [!code-xaml[BindingExpressionBaseValidateWithoutUpdating#WindowXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml#windowxaml)]  
  
 Das folgende Beispiel zeigt die Logik für die Benutzeroberfläche.  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/window1.xaml.cs#windowlogic)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/window1.xaml.vb#windowlogic)]  
  
 Das folgende Beispiel zeigt das Datenobjekt und <xref:System.Windows.Controls.ValidationRule> für die Anwendung.  
  
 [!code-csharp[BindingExpressionBaseValidateWithoutUpdating#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/csharp/data.cs#data)]
 [!code-vb[BindingExpressionBaseValidateWithoutUpdating#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingexpressionbasevalidatewithoutupdating/visualbasic/data.vb#data)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationError">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationError ValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationError ValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Controls.ValidationError" /> , verursacht dieser Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" /> ungültig zu sein.</summary>
        <value>Die <see cref="T:System.Windows.Controls.ValidationError" /> , verursacht dieser Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" /> ungültig zu sein.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Controls.ValidationError" /> Objekte, die diese Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" /> ungültig zu sein.</summary>
        <value>Eine Auflistung von <see cref="T:System.Windows.Controls.ValidationError" /> Objekte, die diese Instanz von <see cref="T:System.Windows.Data.BindingExpressionBase" /> ungültig zu sein.  Der Wert ist <see langword="null" /> , wenn keine Fehler vorliegen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
