<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Enthält Informationen zu einer einzelnen Instanz einer <see cref="T:System.Windows.Data.Binding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Data.Binding> Klasse ist die übergeordnete Klasse für die Deklaration einer Bindung. Die <xref:System.Windows.Data.BindingExpression> Klasse ist das zugrunde liegende Objekt, das die Verbindung zwischen der Quelle der Bindung und das Bindungsziel verwaltet. Ein <xref:System.Windows.Data.Binding> enthält alle Informationen, die für mehrere freigegeben sein kann <xref:System.Windows.Data.BindingExpression> Objekte. Ein <xref:System.Windows.Data.BindingExpression> ist ein Instanzausdruck kann nicht freigegeben werden und enthält alle Instanzinformationen zu der <xref:System.Windows.Data.Binding>.  
  
 Angenommen, Sie haben die folgenden, in denen `myDataObject` ist eine Instanz von der `MyData` -Klasse, `myBinding` ist die Quelle <xref:System.Windows.Data.Binding> -Objekt, und `MyData` ist eine definierte Klasse, die eine Zeichenfolgeneigenschaft, die mit dem Namen enthält `MyDataProperty`. In diesem Beispiel bindet den Textinhalt des `mytext`, also in eine Instanz von <xref:System.Windows.Controls.TextBlock>in `MyDataProperty`.  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 Verwenden Sie dieselben `myBinding` zu anderen Bindungen zu erstellenden Objekts. Sie können z. B. Verwenden der `myBinding` den Textinhalt eines Kontrollkästchens zu bindende Objekt `MyDataProperty`. In diesem Szenario werden zwei Instanzen der <xref:System.Windows.Data.BindingExpression> dieser Freigabe der `myBinding` Objekt.  
  
 Erhalten Sie eine <xref:System.Windows.Data.BindingExpression> Objekt mithilfe der <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> Methode oder die <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> Methode auf einem datengebundenen-Objekt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bindungsquellobjekt ab, das von diesem <see cref="T:System.Windows.Data.BindingExpression" /> verwendet wird.</summary>
        <value>Das Bindungsquellobjekt, das von diesem <see cref="T:System.Windows.Data.BindingExpression" /> verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Implementierung von einer <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignishandler, der verwendet die <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> Methode zum Abrufen der <xref:System.Windows.Data.BindingExpression> und ruft dann die <xref:System.Windows.Data.BindingExpression.DataItem%2A> das Bindungsquellobjekt aufzurufende Eigenschaft.  
  
 Die <xref:System.Windows.Controls.TextBlock> `SavingsText` ist das Zielobjekt der Bindung und die zugehörige <xref:System.Windows.Controls.TextBlock.Text%2A> Eigenschaft ist für das Bindungsziel-Eigenschaft.  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die <see cref="T:System.Windows.Data.Binding" /> Objekt des aktuellen <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Die <see cref="T:System.Windows.Data.Binding" /> Objekt des aktuellen Bindungsausdrucks.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bindungsquellobjekt für <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Das Bindungsquellobjekt dafür <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Bindungsquelleigenschaft für <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Der Name der Bindungsquelleigenschaft dafür <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Der Typ des der <see cref="T:System.Windows.WeakEventManager" /> beim Aufrufen dieser Methode. Dies erkennt nur die Manager-Objekte des Typs <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
        <param name="sender">Objekt, das das Ereignis ausgelöst wurde.</param>
        <param name="e">Ereignisdaten.</param>
        <summary>Dieser Member unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
        <returns>
          <see langword="true" />Wenn der Listener das Ereignis behandelt wird. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet den aktuellen bindungszielwert an die Bindungsquelleigenschaft in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> oder <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> Bindungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bewirkt nichts, wenn die <xref:System.Windows.Data.Binding.Mode%2A> der Bindung ist nicht <xref:System.Windows.Data.BindingMode.TwoWay> oder <xref:System.Windows.Data.BindingMode.OneWayToSource>.  
  
 Wenn die <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> der Bindung festgelegt ist <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, rufen Sie die <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> -Methode oder die Änderungen nicht zurück an die Quelle weitergegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Bindung wurde von ihrem Ziel getrennt.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erzwingt eine Datenübertragung von der Bindungsquelleigenschaft zur Bindungszieleigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode können Sie eine Datenübertragung aus der Source-Eigenschaft auf die Zieleigenschaft zu erzwingen. Wenn das Quellobjekt einen ordnungsgemäßen durch geänderte Eigenschaften ausgelöste Benachrichtigungsmechanismus, wie z. B. implementiert <xref:System.ComponentModel.INotifyPropertyChanged>, Updates gezielt geschieht automatisch. Allerdings müssen Sie die Option aus, um diese Methode verwenden, um die Zieleigenschaft explizit in Fällen zu aktualisieren, in dem das Quellobjekt nicht ordnungsgemäßen Benachrichtigungen ausgegeben durch geänderte Eigenschaften ausgelöste eingeben. Sie können diese Methode auch verwenden, wenn Ihre Anwendung benötigt, um die Zieleigenschaften in regelmäßigen Abständen zu aktualisieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Bindung wurde von ihrem Ziel getrennt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
