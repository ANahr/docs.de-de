<Type Name="XmlDocumentSchema" FullName="System.Web.UI.Design.XmlDocumentSchema">
  <TypeSignature Language="C#" Value="public sealed class XmlDocumentSchema : System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlDocumentSchema extends System.Object implements class System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDocumentSchema" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceSchema</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Die Struktur bzw. das Schema darstellt, der eine <see cref="T:System.Xml.XmlDocument" />. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Design.XmlDocumentSchema> -Klasse wird von benutzerdefinierten Steuerelement-Designer-Komponenten verwendet, um strukturelle Elemente eines XML-Dokuments zur Entwurfszeit aufzulisten. Verwenden Sie die XmlDocumentSchema-Klasse, um Listen von Dokumentelementen ermöglichen Benutzern die Auswahl von Dokumentelementen in Features der Benutzeroberfläche zur Entwurfszeit aufzufüllen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Web.UI.Design.XmlDocumentSchema> Objekt zum Anzeigen der Struktur eines XML-Dokuments in ein <xref:System.Web.UI.WebControls.TreeView> Steuerelement.  
  
 [!code-csharp[XmlDocumentSchemaSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlDocumentSchemaSample/CS/XmlDocumentSchemaSample.cs#1)]
 [!code-vb[XmlDocumentSchemaSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlDocumentSchemaSample/VB/XmlDocumentSchemaSample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocumentSchema (System.Xml.XmlDocument xmlDocument, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument xmlDocument, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlDocument" Type="System.Xml.XmlDocument" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlDocument">Eine Instanz von einem <see cref="T:System.Xml.XmlDocument" /> Objekt.</param>
        <param name="xPath">Ein XPath-Zeichenfolge, die die untergeordneten Knoten des Basisverzeichnisses identifiziert.</param>
        <summary>Erstellt eine Instanz der <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> -Klasse mit einer angegebenen <see cref="T:System.Xml.XmlDocument" /> und eine XPath-Zeichenfolge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der `xPath` Parameter an einen bestimmten Knoten innerhalb des XML-Dokuments zu untersuchen, oder geben Sie die leere Zeichenfolge (""), die das vollständige Dokument zu überprüfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViews">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.IDataSourceViewSchema[] GetViews() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDocumentSchema.GetViews" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IDataSourceViewSchema[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Array mit Informationen zu jedem untergeordneten Knoten ab, auf dem identifizierten Knoten die <paramref name="xPath" /> Parameter im Konstruktor oder jeder untergeordnete Knoten auf der Stammebene des Dokuments ab, wenn die <paramref name="xPath" /> Parameter ist leer.</summary>
        <returns>Ein Array von <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />-Objekten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
