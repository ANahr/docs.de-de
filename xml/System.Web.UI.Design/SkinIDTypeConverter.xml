<Type Name="SkinIDTypeConverter" FullName="System.Web.UI.Design.SkinIDTypeConverter">
  <TypeSignature Language="C#" Value="public class SkinIDTypeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SkinIDTypeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.SkinIDTypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Liste der gültigen Skin-IDs für ein Steuerelement zur Entwurfszeit auf das derzeit gültige Design basiert.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SkinIDTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein t: System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt, für das Steuerelement entworfen wird.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" />.</param>
        <summary>Gibt einen Wert, der angibt, ob dieser Konverter konvertiert werden kann ein <see cref="P:System.Web.UI.Control.SkinID" /> Objekt in eine Zeichenfolge, die mit dem angegebenen Formatkontext und Typ.</summary>
        <returns>
          <see langword="true" />, wenn die Konvertierung nicht durchgeführt werden kann; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein t: System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt, für das Steuerelement entworfen wird.</param>
        <param name="destType">Ein t: System.Type, der den Zieltyp der Konvertierung darstellt.</param>
        <summary>Gibt einen Wert, der angibt, ob dieser Konverter konvertiert werden kann ein <see cref="P:System.Web.UI.Control.SkinID" /> Objekt in den angegebenen Typ, mit dem angegebenen Kontext.</summary>
        <returns>
          <see langword="true" />, wenn eine Konvertierung nicht durchgeführt werden kann; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein t: System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt, der das Steuerelement entworfen darstellt.</param>
        <param name="culture">T: System.Globalization.CultureInfo. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
        <param name="value">Die zu konvertierende Zeichenfolge.</param>
        <summary>Konvertiert die angegebene Zeichenfolge in eine <see cref="P:System.Web.UI.Control.SkinID" /> -Objekt unter Verwendung des angegebenen Kontexts und der Kultur entspricht.</summary>
        <returns>Ein Objekt, das als umgewandelt werden, kann eine <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> Objekt, wenn die Konvertierung erfolgt ist, andernfalls werden kann <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein t: System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt, der das Steuerelement entworfen darstellt.</param>
        <param name="culture">T: System.Globalization.CultureInfo. Wenn <see langword="null" />, wird die aktuelle Kultur angenommen.</param>
        <param name="value">Das zu konvertierende <see cref="P:System.Web.UI.Control.SkinID" />-Objekt.</param>
        <param name="destinationType">T: System.Type konvertieren <c>Wert</c> an (muss eine <see cref="T:System.String" />).</param>
        <summary>Konvertiert den angegebenen <see cref="P:System.Web.UI.Control.SkinID" /> Objekt in eine Zeichenfolge, die unter Verwendung des angegebenen Kontexts und der Kultur entspricht.</summary>
        <returns>Ein Objekt, das den konvertierten Wert darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein t: System.ComponentModel.ITypeDescriptorContext, der einen Formatierungskontext bereitstellt, der das Steuerelement entworfen darstellt. <c>Kontext</c> oder Eigenschaften des <c>Kontext</c> kann <see langword="null" />.</param>
        <summary>Gibt eine Menge von <see cref="P:System.Web.UI.Control.SkinID" /> Objekte, die auf das Steuerelement angewendet werden können, die nach dem Kontext des angegebenen Format dargestellt wird.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> , enthält eine Reihe von <see cref="P:System.Web.UI.Control.SkinID" /> Objekte; anderenfalls <see langword="null" />, wenn das Steuerelement Skins nicht unterstützt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> für das Steuerelement entworfen wird.</param>
        <summary>Gibt einen Wert, der angibt, ob das Steuerelement, das durch den angegebenen Kontext dargestellt wird, einen Satz von unterstützt <see cref="P:System.Web.UI.Control.SkinID" /> Objekte, die aus einer Liste ausgewählt werden können.</summary>
        <returns>
          <see langword="true" />, wenn <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> sollte aufgerufen werden, die vom Objekt unterstützte einen gemeinsamen Satz von Werten ermitteln, andernfalls, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
