<Type Name="SoapReflectionImporter" FullName="System.Xml.Serialization.SoapReflectionImporter">
  <TypeSignature Language="C#" Value="public class SoapReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zuordnungen für SOAP-codierte Nachrichten aus .NET Framework-Typen oder Webdienstinformationen Methode generiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapReflectionImporter> Klasse bietet datentypzuordnungen für Teile von SOAP-Nachricht, wie in einem Dokument Web Services Description Language (WSDL) definiert. Wird verwendet, nur wenn ein Web-Dienst oder Client SOAP-Codierung angibt, wie in Abschnitt 5 der SOAP 1.1-Spezifikation beschrieben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Klasse serialisiert `Group`. Die Serialisierung von der `GroupName` und `IgnoreThis` Felder und die Mitglieder der `GroupType` -Enumeration werden überschrieben. In der `CreateOverrideSerializer` -Methode, eine <xref:System.Xml.Serialization.SoapAttributeOverrides> erstellt, und für jeden überschriebenen Member oder eine Enumeration, ein <xref:System.Xml.Serialization.SoapAttributes> wird erstellt, mit der entsprechenden Eigenschaft festgelegt und hinzugefügt der <xref:System.Xml.Serialization.SoapAttributeOverrides>. Ein <xref:System.Xml.Serialization.XmlTypeMapping> erstellt, wobei die <xref:System.Xml.Serialization.SoapAttributeOverrides>, und dass <xref:System.Xml.Serialization.XmlTypeMapping> dient zum Erstellen der <xref:System.Xml.Serialization.XmlSerializer> die Standardserialisierung überschreibt.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">Der XML-Standardnamespace mit importiert datentypzuordnungen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> Klasse, die einen XML-Standardnamespace zum Zuordnen von importierten Typ angibt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (System.Xml.Serialization.SoapAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.SoapAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.SoapAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> -Objekt, das überschreibt wie die <see cref="T:System.Xml.Serialization.XmlSerializer" /> Klasse serialisiert zugeordnete Typen mit SOAP-Codierung.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> Klasse, die Außerkraftsetzungen für die XML-Serialisierung angibt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (System.Xml.Serialization.SoapAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.SoapAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.SoapAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> -Objekt, das überschreibt wie die <see cref="T:System.Xml.Serialization.XmlSerializer" /> Klasse serialisiert zugeordnete Typen mit SOAP-Codierung.</param>
        <param name="defaultNamespace">Der XML-Standardnamespace mit importiert datentypzuordnungen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> -Klasse unter Angabe des XML-Serialisierung überschreibt und eine XML-Standardnamespace.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von .NET Framework-Code-Entitäten, die an eine Webdienstmethode gehören.</param>
        <summary>Generiert interne Zuordnungen Informationen, die von einer Webdienstmethode gesammelt werden.</summary>
        <returns>Interner .NET Framework-datentypzuordnungen Element Teile der Definition eines WSDL-Nachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> Methode beim Initialisieren von einem Webdienst oder den Client oder ein Webdienst aufgerufen wird. Sie müssen nicht direkt aufgerufen.  
  
 Die folgende Liste beschreibt die möglichen Werte für die `members` Parameter:  
  
-   Web Service-Methode Eingabeparameter.  
  
-   Ausgabeparameter für Methoden von Web-Dienst und den Rückgabetyp, index Wenn nicht "void" beim 0 (null).  
  
-   Eingabe SOAP-Header.  
  
-   Header der SOAP-Ausgabe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von .NET Framework-Code-Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll. andernfalls <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" />um die dienstbindung eine RPC-Format angegeben werden. <see langword="false" /> eine Dokumentstil Web-Dienst-Bindung oder eines SOAP-Headers an.</param>
        <summary>Generiert interne Zuordnungen Informationen, die von einer Webdienstmethode gesammelt werden.</summary>
        <returns>Interner .NET Framework-datentypzuordnungen Element Teile der Definition eines WSDL-Nachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> Methode beim Initialisieren von einem Webdienst oder den Client oder ein Webdienst aufgerufen wird. Sie müssen nicht direkt aufgerufen.  
  
 Die folgende Liste beschreibt die möglichen Werte für die `members` Parameter:  
  
-   Web Service-Methode Eingabeparameter.  
  
-   Ausgabeparameter für Methoden von Web-Dienst und den Rückgabetyp, index Wenn nicht "void" beim 0 (null).  
  
-   Eingabe SOAP-Header.  
  
-   Header der SOAP-Ausgabe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von .NET Framework-Code-Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll. andernfalls <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" />um die dienstbindung eine RPC-Format angegeben werden. <see langword="false" /> eine Dokumentstil Web-Dienst-Bindung oder eines SOAP-Headers an.</param>
        <param name="validate">
          <see langword="true" />um anzugeben, dass eine generierte Deserialisierer für den erwarteten qualifizierten Namen des Wrapperelements überprüfen sollte. andernfalls <see langword="false" />. Der Wert dieses Parameters ist relevant nur, wenn die <c>HasWrapperElement</c> ist der Wert des Parameters <see langword="true" />.</param>
        <summary>Generiert interne Zuordnungen Informationen, die von einer Webdienstmethode gesammelt werden.</summary>
        <returns>Interner .NET Framework-datentypzuordnungen Element Teile der Definition eines WSDL-Nachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> Methode beim Initialisieren von einem Webdienst oder den Client oder ein Webdienst aufgerufen wird. Sie müssen nicht direkt aufgerufen.  
  
 Die folgende Liste beschreibt die möglichen Werte für die `members` Parameter:  
  
-   Web Service-Methode Eingabeparameter.  
  
-   Ausgabeparameter für Methoden von Web-Dienst und den Rückgabetyp, index Wenn nicht "void" beim 0 (null).  
  
-   Eingabe SOAP-Header.  
  
-   Header der SOAP-Ausgabe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
        <Parameter Name="validate" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von .NET Framework-Code-Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll. andernfalls <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" />um die dienstbindung eine RPC-Format angegeben werden. <see langword="false" /> eine Dokumentstil Web-Dienst-Bindung oder eines SOAP-Headers an.</param>
        <param name="validate">
          <see langword="true" />um anzugeben, dass eine generierte Deserialisierer für den erwarteten qualifizierten Namen des Wrapperelements überprüfen sollte. andernfalls <see langword="false" />. Der Wert dieses Parameters ist relevant nur, wenn die <c>HasWrapperElement</c> ist der Wert des Parameters <see langword="true" />.</param>
        <param name="access">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte.</param>
        <summary>Generiert interne Zuordnungen Informationen, die von einer Webdienstmethode gesammelt werden.</summary>
        <returns>Interner .NET Framework-datentypzuordnungen Element Teile der Definition eines WSDL-Nachricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> Methode beim Initialisieren von einem Webdienst oder den Client oder ein Webdienst aufgerufen wird. Sie müssen nicht direkt aufgerufen.  
  
 Die folgende Liste beschreibt die möglichen Werte für die `members` Parameter:  
  
-   Web Service-Methode Eingabeparameter.  
  
-   Ausgabeparameter für Methoden von Web-Dienst und den Rückgabetyp, index Wenn nicht "void" beim 0 (null).  
  
-   Eingabe SOAP-Header.  
  
-   Header der SOAP-Ausgabe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <summary>Generiert eine Zuordnung zu einer XML-Schema-Element für .NET Framework-Typ.</summary>
        <returns>Interner .NET Framework-Zuordnung eines Typs in ein XML-Schema-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das XML-Schema-Element serialisiert wird, mithilfe von SOAP-Codierung.  
  
 Sie müssen nicht zum Aufrufen der <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <param name="defaultNamespace">Der XML-Standardnamespace zu verwenden.</param>
        <summary>Generiert eine Zuordnung zu einer XML-Schema-Element für .NET Framework-Typ.</summary>
        <returns>Interner .NET Framework-Zuordnung eines Typs in ein XML-Schema-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das XML-Schema-Element serialisiert wird, mithilfe von SOAP-Codierung.  
  
 Sie müssen nicht zum Aufrufen der <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die Zuordnung von Typinformationen zu speichern.</param>
        <summary>Speichert die Zuordnungen für einen Typ in der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> instanzkontext für die spätere Verwendung bei der Importmethoden aufgerufen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen nicht zum Aufrufen der <xref:System.Xml.Serialization.SoapReflectionImporter.IncludeType%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" /> Reflektionsobjekt, das benutzerdefinierte Attribut enthält, das von abgeleitet sind die <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> Attribut.</param>
        <summary>Speichert die Zuordnungen für abgeleitete Typen in den <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> instanzkontext für die spätere Verwendung bei der Importmethoden aufgerufen werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
