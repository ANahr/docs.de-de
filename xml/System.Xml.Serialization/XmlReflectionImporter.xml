<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Generiert die Zuordnungen von XML-Schemaelementdeklarationen, einschließlich literal Nachrichtenteile von XML-Schemadefinition (XSD) in einem Dokument Web Services Description Language (WSDL) für .NET Framework-Typen oder Webdienstinformationen-Methode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlReflectionImporter> Klasse wird nicht direkt verwendet werden. Stattdessen wird es wie folgt verwendet:  
  
-   Durch die <xref:System.Web.Services.Description.ServiceDescriptionReflector> -Klasse während erstellt <xref:System.Web.Services.Description.ServiceDescription> Objekte von Klassen, die als Webdienste identifiziert werden.  
  
-   Von einem Webdienst oder der Client, einschließlich der während der Initialisierung.  
  
-   Initialisiert ein <xref:System.Xml.Serialization.XmlSerializer> Objekt.  
  
-   Durch das XML Schema Definition-Tool (Xsd.exe), während das Tool generiert XML-Schemas aus Typen in einer Laufzeit-Assemblydatei aus.  
  
-   Von der Web Services Description Language Tool (Wsdl.exe), während das Tool generiert Client-Webdienstproxy-Klassen oder abstrakten Klassen aus einem WSDL-Dokument ein.  
  
 Die <xref:System.Xml.Serialization.XmlReflectionImporter> Klasse dient für Webdienste, wenn ein Dienst oder Client angibt:  
  
-   Literal verwenden, gibt an, dass der Inhalt des SOAP-Nachricht Parameter und Rückgabewerte (oder Anforderung und Antwort Dokumente) als solcher mit XML-Schema-Definitionen angegeben werden.  
  
-   Nicht-SOAP-Implementierungen von Webdiensten, die mithilfe von HTTP-GET und HTTP-POST-Vorgängen.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen nicht zum Erstellen einer Instanz von einem <xref:System.Xml.Serialization.XmlReflectionImporter> -Objekts direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">Der XML-Standardnamespace mit importiert datentypzuordnungen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> -Klasse unter Verwendung des angegebenen XML-Standardnamespaces.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht erforderlich, zum Erstellen einer Instanz von der <xref:System.Xml.Serialization.XmlReflectionImporter> -Klasse direkt verwendet.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Ein Objekt, das überschreibt wie die <see cref="T:System.Xml.Serialization.XmlSerializer" /> Klasse serialisiert zugeordnete Typen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> -Klasse unter Verwendung der angegebenen XML-Serialisierungs überschreibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht erforderlich, zum Erstellen einer Instanz von der <xref:System.Xml.Serialization.XmlReflectionImporter> -Klasse direkt verwendet.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Ein Objekt, das überschreibt wie die <see cref="T:System.Xml.Serialization.XmlSerializer" /> Klasse serialisiert zugeordnete Typen.</param>
        <param name="defaultNamespace">Der XML-Standardnamespace mit importiert datentypzuordnungen.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> -Klasse unter Verwendung der angegebenen XML-Serialisierung Außerkraftsetzungen und XML-Standardnamespace.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht erforderlich, zum Erstellen einer Instanz von der <xref:System.Xml.Serialization.XmlReflectionImporter> -Klasse direkt verwendet.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> Objekten, die .NET Framework enthalten code, Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />Wenn Sie Elemente, die welche Teile der Nachricht Web Services Description Language (WSDL) entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll; andernfalls <see langword="false" />.</param>
        <summary>Generiert interne Zuordnungen Informationen von einer Webdienstmethode.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> mit Zuordnungen zu Element Bestandteile einer WSDL Nachricht Definition.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> Methode beim Initialisieren von einem Webdienst oder den Client oder ein Webdienst aufgerufen wird. Es ist nicht erforderlich, um sie direkt aufrufen.  
  
 Die <xref:System.Xml.Serialization.XmlReflectionMember> Arrayparameter kann eine der folgenden bestehen:  
  
-   Web Service-Methode Eingabeparameter.  
  
-   Ausgabeparameter sowie den Rückgabetyp, wenn dies nicht "void" angezeigt wird, am index 0.  
  
-   Eingabe SOAP-Header.  
  
-   Header der SOAP-Ausgabe.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> Objekten, die .NET Framework enthalten code, Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />Wenn Sie Elemente, die welche Teile der Nachricht Web Services Description Language (WSDL) entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll; andernfalls <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" />Wenn die Methode ein Remoteprozeduraufruf ist; andernfalls <see langword="false" />.</param>
        <summary>Gibt interne Zuordnungen unter Verwendung von Informationen aus einer Webdienstmethode und können Sie den Namen eines XML-Elements, XML-Namespace und andere Optionen angeben.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> , das die Zuordnungen enthält.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> Objekten, die .NET Framework enthalten code, Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />Wenn Sie Elemente, die welche Teile der Nachricht Web Services Description Language (WSDL) entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll; andernfalls <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" />Wenn die Methode ein Remoteprozeduraufruf ist; andernfalls <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" />um anzugeben, dass der generierte Schematyp mit markiert wird die <see langword="&lt;xs:anyAttribute&gt;" /> Element ist, andernfalls <see langword="false" />.</param>
        <summary>Gibt interne Zuordnungen unter Verwendung von Informationen aus einer Webdienstmethode und können Sie den Namen eines XML-Elements, XML-Namespace und andere Optionen angeben.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> , das die Zuordnungen enthält.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">Ein XML-Elementname nutzen, die aus der Webdienstmethode.</param>
        <param name="ns">Ein XML-Element-Namespace nutzen, die aus der Webdienstmethode.</param>
        <param name="members">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> Objekten, die .NET Framework enthalten code, Entitäten, die an eine Webdienstmethode gehören.</param>
        <param name="hasWrapperElement">
          <see langword="true" />Wenn Sie Elemente, die welche Teile der Nachricht Web Services Description Language (WSDL) entsprechen, die in ein zusätzliches Wrapperelement in einer SOAP-Nachricht eingeschlossen werden soll; andernfalls <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" />Wenn die Methode ein Remoteprozeduraufruf ist; andernfalls <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" />um anzugeben, dass der generierte Schematyp mit markiert wird die <see langword="&lt;xs:anyAttribute&gt;" /> Element ist, andernfalls <see langword="false" />.</param>
        <param name="access">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte. Die Standardeinstellung ist <see langword="None" />.</param>
        <summary>Generiert interne Zuordnungen Informationen von einer Webdienstmethode.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> , das die Zuordnungen enthält.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <summary>Generiert eine Zuordnung zu einem XML-Schema-Element für einen angegebenen .NET Framework-Typ.</summary>
        <returns>Interner .NET Framework-Zuordnung eines Typs in ein XML-Schema-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht notwendig, rufen Sie die <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <param name="defaultNamespace">Der XML-Standardnamespace zu verwenden.</param>
        <summary>Generiert eine Zuordnung zu einem XML-Schemaelement für .NET Framework-Typ, mit dem angegebenen Typnamen und Namespacenamen an.</summary>
        <returns>Interner .NET Framework-Zuordnung eines Typs in ein XML-Schema-Element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht notwendig, rufen Sie die <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> -Attribut, das auf den Typ angewendet wird.</param>
        <summary>Generiert eine Zuordnung zu einem XML-Schemaelement für .NET Framework-Typ, mit dem angegebenen Typ und das Attribut an.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> , das eine Zuordnung von .NET Framework-Typ eine XML-Schema-Element darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht notwendig, rufen Sie die <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die eine Zuordnung generiert werden soll.</param>
        <param name="root">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> -Attribut, das auf den Typ angewendet wird.</param>
        <param name="defaultNamespace">Der XML-Standardnamespace zu verwenden.</param>
        <summary>Generiert eine Zuordnung zu einem XML-Schemaelement für einen .NET Framework-Typ, der mithilfe des angegebenen Typs, die Attributs und den Namespace an.</summary>
        <returns>Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> , das die internen .NET Framework-Zuordnung eines Typs in ein XML-Schema-Element enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht notwendig, rufen Sie die <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der .NET Framework-Typ für die Zuordnung von Typinformationen zu speichern.</param>
        <summary>Enthält Zuordnungen für einen Typ für die spätere Verwendung an, wenn Importmethoden aufgerufen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht notwendig, rufen Sie die <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> -Methode direkt.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Eine Instanz von der <see cref="T:System.Reflection.ICustomAttributeProvider" /> abgeleitete Klasse, die benutzerdefinierten Attribute enthält, aus der <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> Attribut.</param>
        <summary>Enthält Zuordnungen für abgeleitete Typen für die spätere Verwendung an, wenn Importmethoden aufgerufen werden.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
