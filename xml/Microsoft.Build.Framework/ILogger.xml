<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert eine MSBuild-Protokollierung, die abonniert um Ereignisse im System zu erstellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Protokollierungsklassen müssen diese Schnittstelle in erkannt werden implementieren die [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] Modul.  
  
 Statt direkt implementieren dieser Schnittstelle können Sie auch Ihre Klasse ableiten, von der Hilfsklasse <xref:Microsoft.Build.Utilities.Logger>, stellt standardimplementierungen einiger <xref:Microsoft.Build.Framework.ILogger> Elemente.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine einfache Protokollierung geschrieben wird.  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">Die Ereignisse für Protokollierungen verfügbar.</param>
        <summary>Abonniert Protokollierungen auf bestimmte Ereignisse an. Diese Methode wird aufgerufen, wenn die Protokollierung für das Buildmodul registriert wird, bevor alle Ereignisse ausgelöst werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierten Parameter der Protokollierung ab oder legt sie fest.</summary>
        <value>Die Protokollierungsparameter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter können in dieser Eigenschaft in einem beliebigen Format dargestellt werden. Z. B. um zwei Parameter und Werte darstellen, können Sie die Zeichenfolge "parameter1 = Wert1; parameter2 = Wert2".  
  
 Diese Eigenschaft kann ein null-Verweis sein (`Nothing` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ressourcen, die der Protokollierung bei der Initialisierung oder während der Builderstellung zugeordnet. Diese Methode wird aufgerufen, wenn die Protokollierung ist das Modul aufgehoben, nachdem alle Ereignisse ausgelöst werden. Ein Host [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] hebt i. d. r. unmittelbar vor dem Beenden Protokollierungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Detailebene für das Ereignisprotokoll ab oder legt sie fest.</summary>
        <value>Einer der Enumerationswerte. Die Standardeinstellung ist <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während eine Protokollierung ist frei, um die Ereignisse auswählen, die protokolliert werden, wird basierend auf den Ausführlichkeitsgrad Richtlinien eine konsistente benutzerumgebung erstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
