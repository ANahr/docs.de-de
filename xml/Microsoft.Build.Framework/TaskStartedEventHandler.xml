<Type Name="TaskStartedEventHandler" FullName="Microsoft.Build.Framework.TaskStartedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void TaskStartedEventHandler(object sender, TaskStartedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TaskStartedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.TaskStartedEventHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="Microsoft.Build.Framework.TaskStartedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die Quelle des Ereignisses.</param>
    <param name="e">Ein <see cref="T:Microsoft.Build.Framework.TaskStartedEventArgs" />, das die Ereignisdaten enthält.</param>
    <summary>Stellt die Methode für die Behandlung der <see cref="E:Microsoft.Build.Framework.IEventSource.TaskStarted" /> Ereignis eines Builds.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie eine einfache Protokollierung zu schreiben, die antwortet, um Ereignisse zu erstellen.  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
