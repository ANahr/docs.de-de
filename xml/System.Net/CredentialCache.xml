<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Speicher für mehrere Anmeldeinformationen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.CredentialCache> -Klasse speichert Anmeldeinformationen für mehrere Ressourcen im Internet. Anwendungen, die auf mehrere Ressourcen zugreifen müssen, können die Anmeldeinformationen für diese Ressourcen in Speichern einer <xref:System.Net.CredentialCache> Instanz, klicken Sie dann den entsprechenden Satz von Anmeldeinformationen an die Internetressource im Bedarfsfall bereitstellt. Wenn die <xref:System.Net.CredentialCache.GetCredential%2A> Methode aufgerufen wird, vergleicht der Uniform Resource Identifier (URI) und Authentifizierungstyp bereitgestellt, mit denen im Cache gespeichert, und gibt den ersten Satz von Anmeldeinformationen, die mit übereinstimmen.  
  
 Die <xref:System.Net.CredentialCache.DefaultCredentials%2A> Eigenschaft enthält die Systemanmeldeinformationen des aktuellen Sicherheitskontexts. Bei Clientanwendungen stellen diese den Benutzernamen, Kennwort und Domäne des Benutzers, der aktuell angemeldet ist. Für ASP.NET-Anwendungen sind die standardmäßigen Anmeldeinformationen den Anmeldeinformationen des angemeldeten Benutzers oder der Benutzer, dessen Identität verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird initialisiert einen <xref:System.Net.CredentialCache> mit mehreren Sicherheitsanmeldeinformationen und verwendet diese Anmeldeinformationen verwenden, mit einem <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.CredentialCache" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Konstruktor erstellt eine <xref:System.Net.CredentialCache> Instanz.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird initialisiert einen <xref:System.Net.CredentialCache> mit mehreren Sicherheitsanmeldeinformationen und verwendet diese Anmeldeinformationen verwenden, mit einem <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Ein <see cref="T:System.Uri" /> , der das URI-Präfix, die die Anmeldeinformationen den Zugriff auf Ressourcen angibt.</param>
        <param name="authType">Das von der Ressource mit dem Namen im verwendete Authentifizierungsschema <c>UriPrefix</c>.</param>
        <param name="cred">Die <see cref="T:System.Net.NetworkCredential" /> der Anmeldeinformationscache hinzu.</param>
        <summary>Fügt eine <see cref="T:System.Net.NetworkCredential" /> -Instanz, auf der Anmeldeinformationscache für die Verwendung mit anderen Protokollen als SMTP und ordnet sie ein Protokoll Uniform Resource Identifier (URI), Präfix und Authentifizierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.CredentialCache.Add%2A> Methode stellen eine <xref:System.Net.NetworkCredential> Instanz für die Verwendung mit anderen Protokollen als SMTP in der <xref:System.Net.CredentialCache>. Der Cache speichert die Anmeldeinformationen in der Reihenfolge, in der sie hinzugefügt werden. Wenn die <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> -Methode aufgerufen wird, gibt die passende <xref:System.Net.NetworkCredential> Instanz.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird initialisiert einen <xref:System.Net.CredentialCache> mit mehreren Sicherheitsanmeldeinformationen und verwendet diese Anmeldeinformationen verwenden, mit einem <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="authType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die gleichen Anmeldeinformationen werden mehr als einmal hinzugefügt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="host">Ein <see cref="T:System.String" /> , die der Hostcomputer identifiziert.</param>
        <param name="port">Ein <see cref="T:System.Int32" /> , die angibt, dass des Ports für die Verbindung auf <c>Host</c>.</param>
        <param name="authenticationType">Ein <see cref="T:System.String" /> , das bei der Verbindung verwendete Authentifizierungsschema identifiziert <c>Host</c> mit <c>Cred</c>.</param>
        <param name="credential">Die <see cref="T:System.Net.NetworkCredential" /> der Anmeldeinformationscache hinzu.</param>
        <summary>Fügt eine <see cref="T:System.Net.NetworkCredential" /> zur Verwendung durch den Anmeldeinformationscache SMTP-Instanz und ordnet es einem Host-Protokoll für Computer, Port und Authentifizierung. Mit dieser Methode hinzugefügte Anmeldeinformationen sind nur gültig für SMTP. Diese Methode funktioniert nicht für HTTP oder FTP-Anforderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt eine <xref:System.Net.NetworkCredential> Instanz für die Verwendung mit SMTP in der <xref:System.Net.CredentialCache>. Der Cache speichert die Anmeldeinformationen in der Reihenfolge, in der sie hinzugefügt werden. Wenn die <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> -Methode aufgerufen wird, gibt es eine <xref:System.Net.NetworkCredential> -Instanz, die nach übereinstimmenden ausgewählt ist die `host`, `port`, und `authType`. Der Vergleich erfolgt Beachtung.  
  
 Die unterstützten Werte für `authType` sind "NTLM", "Digest", "Kerberos" und "Negotiate".  
  
 Mit dieser Methode hinzugefügte Anmeldeinformationen sind nur gültig für die Verwendung mit SMTP. Diese Methode funktioniert nicht für HTTP oder FTP-Protokolle.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird initialisiert einen <xref:System.Net.CredentialCache> mit mehreren Sicherheitsanmeldeinformationen für die Verwendung mit SMTP und verwendet diese Anmeldeinformationen verwenden, mit einem <xref:System.Net.Mail.SmtpClient>.  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="authType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" />kein zulässiger Wert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> ist kleiner als Null.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Systemanmeldeinformationen der Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Net.ICredentials" /> , die die Systemanmeldeinformationen der Anwendung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.CredentialCache.DefaultCredentials%2A> Eigenschaft gilt nur für NTLM, Negotiate- und Kerberos-Authentifizierung.  
  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A>Stellt die Systemanmeldeinformationen für den aktuellen Sicherheitskontext, in dem die Anwendung ausgeführt wird. Für eine clientseitige Anwendung werden diese in der Regel die Windows-Anmeldeinformationen (Benutzername, Kennwort und Domäne) des Benutzers, der die Anwendung ausführt. Für ASP.NET-Anwendungen sind die standardmäßigen Anmeldeinformationen den Anmeldeinformationen des angemeldeten Benutzers oder der Benutzer, dessen Identität verwendet.  
  
 Zum Abrufen der Anmeldeinformationen als eine <xref:System.Net.NetworkCredential> Instanz ist, verwenden Sie die <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> Eigenschaft.  
  
 Die unterstützten Werte für `authType` sind "NTLM", "Digest", "Kerberos" und "Negotiate". Diese Methode funktioniert nicht für HTTP oder FTP-Protokolle.  
  
> [!NOTE]
>  Die <xref:System.Net.ICredentials> zurückgegebene Instanz <xref:System.Net.CredentialCache.DefaultCredentials%2A> kann nicht verwendet werden, um den Benutzernamen, Kennwort oder die Domäne des aktuellen Sicherheitskontexts anzuzeigen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Net.CredentialCache.DefaultCredentials%2A> Eigenschaft, um die Systemanmeldeinformationen der Anwendung abzurufen.  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">zum Lesen der USERNAME-Umgebungsvariablen angegeben. Zugeordnete Enumeration:<see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Netzwerkanmeldeinformationen des aktuellen Sicherheitskontexts ab.</summary>
        <value>Eine <see cref="T:System.Net.NetworkCredential" /> , die Anmeldeinformationen für das Netzwerk des aktuellen Benutzers oder der Anwendung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anmeldeinformationen, die zurückgegeben werden, indem Sie die <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> Eigenschaft nur auf NTLM anwendbar ist, verhandelt werden können, und die Kerberos-Authentifizierung.  
  
 Die Anmeldeinformationen zurückgegebenes <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> stellt die Anmeldeinformationen für die Authentifizierung für den aktuellen Sicherheitskontext, in dem die Anwendung ausgeführt wird. Für eine clientseitige Anwendung werden diese in der Regel die Windows-Anmeldeinformationen (Benutzername, Kennwort und Domäne) des Benutzers, der die Anwendung ausführt. Für ASP.NET-Anwendungen werden die Standardanmeldeinformationen die Anmeldeinformationen des angemeldeten Benutzers oder der Benutzer, dessen Identität verwendet.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">zum Lesen der USERNAME-Umgebungsvariablen angegeben. Zugeordnete Enumeration:<see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Ein <see cref="T:System.Uri" /> , der das URI-Präfix, die die Anmeldeinformationen den Zugriff auf Ressourcen angibt.</param>
        <param name="authType">Das von der Ressource mit dem Namen im verwendete Authentifizierungsschema <c>UriPrefix</c>.</param>
        <summary>Gibt die <see cref="T:System.Net.NetworkCredential" /> Instanz mit der angegebenen Uniform Resource Identifier (URI) und die Authentifizierung verknüpft sind.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkCredential" /> oder, wenn keine übereinstimmenden Anmeldeinformationen im Cache <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> Methode sucht das <xref:System.Net.CredentialCache> und gibt die <xref:System.Net.NetworkCredential> Instanz für den angegebenen URI und Autorisierung. Wenn die <xref:System.Net.CredentialCache> enthält keine übereinstimmenden <xref:System.Net.NetworkCredential> Instanz `null` zurückgegeben wird.  
  
 <xref:System.Net.CredentialCache.GetCredential%2A>verwendet die längsten übereinstimmende URI-Präfix im Cache um zu bestimmen, welcher Satz von Anmeldeinformationen für eine Autorisierungstyp zurückgeben. Die folgende Tabelle enthält Beispiele.  
  
|URI-Präfix|Übereinstimmungen|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|Anforderungen für die bestimmte Webseite `news.htm`.|  
|`http://www.contoso.com/portal/`|Anforderungen für alle Inhalte in der `portal` Pfad, mit Ausnahme der Seite `news.htm`.|  
|`http://www.contoso.com/`|Anforderungen für alle Ressourcen an `www.contoso.com`, außer die `portal` Pfad.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> -Methode zur Rückgabe der <xref:System.Net.NetworkCredential> Instanz mit der angegebenen URI und Authentifizierung verknüpft sind.  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> oder <paramref name="authType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Ein <see cref="T:System.String" /> , die der Hostcomputer identifiziert.</param>
        <param name="port">Ein <see cref="T:System.Int32" /> , die angibt, dass des Ports für die Verbindung auf <c>Host</c>.</param>
        <param name="authenticationType">Ein <see cref="T:System.String" /> , das bei der Verbindung verwendete Authentifizierungsschema identifiziert <c>Host</c>.</param>
        <summary>Gibt die <see cref="T:System.Net.NetworkCredential" /> Instanz, die dem angegebenen Host, Port und Authentication-Protokoll zugeordnet.</summary>
        <returns>Ein <see cref="T:System.Net.NetworkCredential" /> oder, wenn keine übereinstimmenden Anmeldeinformationen im Cache <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sucht das <xref:System.Net.CredentialCache> und gibt die <xref:System.Net.NetworkCredential> -Instanz für den angegebenen Host, Port und Autorisierungstyp. Die `host`, `port`, und `authType` an diese Methode übergebenen Werte werden Groß-und Kleinschreibung nicht verglichen, auf die Werte angegeben werden, wenn die Anmeldeinformationen hinzugefügt wurde die <xref:System.Net.CredentialCache> mithilfe der <xref:System.Net.CredentialCache.Add%2A> Methoden.  
  
 Die unterstützten Werte für `authType` sind "NTLM", "Digest", "Kerberos" und "Negotiate".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="authType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" />kein zulässiger Wert.  
  
 - oder -   
  
 <paramref name="host" />entspricht die leere Zeichenfolge ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> ist kleiner als Null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Net.CredentialCache" />-Instanz durchlaufen kann.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Net.CredentialCache" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Net.CredentialCache.GetEnumerator%2A> Methode, um einen Enumerator zurück, der durchlaufen können die <xref:System.Net.CredentialCache> Instanz.  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">Ein <see cref="T:System.Uri" /> , der das URI-Präfix, der die Anmeldeinformationen für die verwendeten Ressourcen angibt.</param>
        <param name="authType">Das Authentifizierungsschema, das durch den Host mit dem Namen im <c>UriPrefix</c>.</param>
        <summary>Löscht eine <see cref="T:System.Net.NetworkCredential" /> Instanz aus dem Cache, wenn sie mit dem angegebenen Uniform Resource Identifier (URI)-Präfix und Authentication-Protokoll zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entfernt eine <xref:System.Net.NetworkCredential> -Instanz von der <xref:System.Net.CredentialCache> Wenn das angegebene URI-Präfix und Authentifizierung Protokoll den Anmeldeinformationen zugeordnet entsprechen. Mehrere Aufrufe der <xref:System.Net.CredentialCache.Remove%2A> Methode für das gleiche <xref:System.Net.NetworkCredential> haben keine Auswirkungen.  
  
 Wenn `authType` ist `null` oder `uriPrefix` ist `null`, oder keine übereinstimmenden Anmeldeinformationen im Cache gefunden wird diese Methode wird keine Aktion ausgeführt.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet diese Methode zum Löschen einer <xref:System.Net.NetworkCredential> Instanz aus dem Cache.  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Ein <see cref="T:System.String" /> , die der Hostcomputer identifiziert.</param>
        <param name="port">Ein <see cref="T:System.Int32" /> , die angibt, dass des Ports für die Verbindung auf <c>Host</c>.</param>
        <param name="authenticationType">Ein <see cref="T:System.String" /> , das bei der Verbindung verwendete Authentifizierungsschema identifiziert <c>Host</c>.</param>
        <summary>Löscht eine <see cref="T:System.Net.NetworkCredential" /> Instanz aus dem Cache, wenn sie mit dem angegebenen Host, Port und Authentication-Protokoll zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entfernt eine <xref:System.Net.NetworkCredential> -Instanz von der <xref:System.Net.CredentialCache> Wenn das angegebene Host, Port und Authentifizierung Protokoll den Anmeldeinformationen zugeordnet entsprechen. Mehrere Aufrufe der <xref:System.Net.CredentialCache.Remove%2A> Methode für das gleiche <xref:System.Net.NetworkCredential> haben keine Auswirkungen.  
  
 Wenn `authType` ist `null` oder `uriPrefix` ist `null`, oder keine übereinstimmenden Anmeldeinformationen im Cache gefunden wird diese Methode wird keine Aktion ausgeführt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
