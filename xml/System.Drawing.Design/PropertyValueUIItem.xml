<Type Name="PropertyValueUIItem" FullName="System.Drawing.Design.PropertyValueUIItem">
  <TypeSignature Language="C#" Value="public class PropertyValueUIItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyValueUIItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItem" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält Informationen zu einer Eigenschaft im Eigenschaftenfenster, einschließlich der zugeordneten Ereignishandler Popupinformationen Zeichenfolge und das Symbol für die Eigenschaft anzeigen angezeigt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel stellt eine <xref:System.Drawing.Design.PropertyValueUIItem> Objekt für alle Eigenschaften der Komponente mit dem Namen `HorizontalMargin` oder `VerticalMargin`. Die <xref:System.Drawing.Design.PropertyValueUIItem> für diese Eigenschaften stellt ein Bild, eine QuickInfo und einen Ereignishandler, die ein Meldungsfeld angezeigt, wenn das Bild für die Eigenschaft geklickt wird. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Drawing.Design.IPropertyValueUIService> Schnittstelle.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">für Vollzugriff auf Systemressourcen verfügbar sind. "Demand" Werte: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Zugeordneten Zustand:</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyValueUIItem (System.Drawing.Image uiItemImage, System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image uiItemImage, class System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiItemImage" Type="System.Drawing.Image" />
        <Parameter Name="handler" Type="System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
        <Parameter Name="tooltip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uiItemImage">Das Symbol angezeigt. Das Bild muss 8 x 8 Pixel sein.</param>
        <param name="handler">Der Handler aufgerufen, wenn das Bild doppelgeklickt wird.</param>
        <param name="tooltip">Die <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> für die Eigenschaft anzeigen, die von diesem <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> zugeordnet ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel stellt eine <xref:System.Drawing.Design.PropertyValueUIItem> Objekt für alle Eigenschaften der Komponente mit dem Namen `HorizontalMargin` oder `VerticalMargin`. Die <xref:System.Drawing.Design.PropertyValueUIItem> für diese Eigenschaften stellt ein Bild, eine QuickInfo und einen Ereignishandler, die ein Meldungsfeld angezeigt, wenn das Bild für die Eigenschaft geklickt wird. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Drawing.Design.IPropertyValueUIService> Schnittstelle.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uiItemImage" /> oder <paramref name="handler" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das 8 x 8-Pixel-Bild, das im Eigenschaftenfenster gezeichnet wird.</summary>
        <value>Das Bild für das Symbol "Eigenschaft" verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Bild muss 8 x 8-Pixel betragen. Es wird empfohlen, damit das Bild Transparenz unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeHandler">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItemInvokeHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Handler, der ausgelöst wird, wenn ein Benutzer auf dieses Element doppelklickt.</summary>
        <value>Ein <see cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" /> , der angibt, des ereignishandlers für diese Benutzer-Benutzeroberfläche (UI)-Element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die Benutzer-Benutzeroberfläche (UI)-Element.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen können diesen Member, um das Neuzeichnen der UI-Elements implementieren überschreiben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Informationszeichenfolge, die für dieses Element angezeigt.</summary>
        <value>Eine Zeichenfolge mit der Zeichenfolge, die für dieses Element angezeigt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
