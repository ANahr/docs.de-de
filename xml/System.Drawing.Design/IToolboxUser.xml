<Type Name="IToolboxUser" FullName="System.Drawing.Design.IToolboxUser">
  <TypeSignature Language="C#" Value="public interface IToolboxUser" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IToolboxUser" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IToolboxUser" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Schnittstelle für das aktuell ausgewählte Toolboxelement festlegen und, der angibt, ob ein Designer ein bestimmtes Toolboxelement unterstützt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle bietet Funktionen für Toolbox-Unterstützung für Designer. Die <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A> Methode gibt an, ob das angegebene <xref:System.Drawing.Design.ToolboxItem> können verwendet werden, wenn der aktuelle Designer aktiv ist. Die <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A> Methode markiert das angegebene <xref:System.Drawing.Design.ToolboxItem>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine Implementierung der <xref:System.Drawing.Design.IToolboxUser> -Schnittstelle, die Unterstützung für bestimmte Typen von einschränken kann <xref:System.Drawing.Design.ToolboxItem> Objekte.  
  
 [!code-cpp[IToolboxUserExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IToolboxUserExample/CPP/samplecontrol.cpp#1)]
 [!code-csharp[IToolboxUserExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IToolboxUserExample/CS/samplecontrol.cs#1)]
 [!code-vb[IToolboxUserExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IToolboxUserExample/VB/samplecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetToolSupported">
      <MemberSignature Language="C#" Value="public bool GetToolSupported (System.Drawing.Design.ToolboxItem tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetToolSupported(class System.Drawing.Design.ToolboxItem tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="tool">Die <see cref="T:System.Drawing.Design.ToolboxItem" /> für Toolbox-Unterstützung getestet werden.</param>
        <summary>Ruft einen Wert, der angibt, ob das angegebene Tool vom aktuellen Designer unterstützt wird.</summary>
        <returns>
          <see langword="true" />Wenn das Tool von der Toolbox unterstützt wird und aktiviert werden kann; <see langword="false" /> , wenn der Dokument-Designer nicht wissen, wie das Tool verwendet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene Tool, durch den Designer implementieren unterstützt wird die <xref:System.Drawing.Design.IToolboxUser> -Schnittstelle ein, und klicken Sie dann das Tool in der Toolbox aktiviert wird, wenn der Designer den Fokus besitzt. Andernfalls wird es deaktiviert. Sobald ein Tool als aktiviert gekennzeichnet ist oder deaktiviert, es kann nicht getestet werden für die Unterstützung für den Designer erneut aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine Implementierung der <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A> Methode.  
  
 [!code-cpp[IToolboxUserExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IToolboxUserExample/CPP/samplecontrol.cpp#2)]
 [!code-csharp[IToolboxUserExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IToolboxUserExample/CS/samplecontrol.cs#2)]
 [!code-vb[IToolboxUserExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IToolboxUserExample/VB/samplecontrol.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPicked">
      <MemberSignature Language="C#" Value="public void ToolPicked (System.Drawing.Design.ToolboxItem tool);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToolPicked(class System.Drawing.Design.ToolboxItem tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="tool">Die <see cref="T:System.Drawing.Design.ToolboxItem" /> auswählen.</param>
        <summary>Wählt das angegebene Tool an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>wird aufgerufen, wenn der Benutzer auf ein Toolboxelement doppelklickt. Der Dokument-Designer sollte eine Komponente für das angegebene Tool erstellen. Ruft die integrierte Entwicklungsumgebung von Visual Studio nur <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A> on-Tools, die in der Toolbox aktiviert sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
