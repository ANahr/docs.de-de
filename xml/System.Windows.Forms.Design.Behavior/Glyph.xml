<Type Name="Glyph" FullName="System.Windows.Forms.Design.Behavior.Glyph">
  <TypeSignature Language="C#" Value="public abstract class Glyph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Glyph extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.Glyph" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine einzelner Benutzer Benutzeroberfläche (UI)-Entität, die von verwaltet eine <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der einzige Zweck einer <xref:System.Windows.Forms.Design.Behavior.Glyph> besteht darin zu zeichnen und Treffertests. Ein <xref:System.Windows.Forms.Design.Behavior.Glyph> kein Fensterhandle (HWND), wie er auf das Adorner Window-Steuerelement von gerendert wird die <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. Jede <xref:System.Windows.Forms.Design.Behavior.Glyph> kann eine <xref:System.Windows.Forms.Design.Behavior.Behavior> zugeordnet. Ein erfolgreich Treffer überprüftes <xref:System.Windows.Forms.Design.Behavior.Glyph> hat die Möglichkeit, ein neues oder anderes push <xref:System.Windows.Forms.Design.Behavior.Behavior> im Stapel Verhalten von der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.  
  
 Weitere Informationen finden Sie unter [Verhaltensdienst – Übersicht](http://msdn.microsoft.com/library/7c60cc41-4324-46b5-b444-b39eda7cb33f).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Erstellen eigener <xref:System.Windows.Forms.Design.Behavior.Glyph> Klasse auf der Grundlage <xref:System.Windows.Forms.Design.Behavior.Behavior> zugeordnet. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Glyph (System.Windows.Forms.Design.Behavior.Behavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Design.Behavior.Behavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="behavior" Type="System.Windows.Forms.Design.Behavior.Behavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Der mit dem <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> verknüpfte <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Kann <see langword="null" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Initialisiert eine neue Instanz der dem <xref:System.Windows.Forms.Design.Behavior.Glyph> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Behavior">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.Behavior Behavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.Behavior Behavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.Behavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> ab, der dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist.</summary>
        <value>Die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zugeordneten der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, oder <see langword="null" /> , wenn kein Verhalten vorhanden ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Grenzen des dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" /> , die die Grenzen des dem <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Windows.Forms.Design.Behavior.Glyph.Bounds%2A> So erstellen Sie ein Symbol mit bestimmten Dimensionen und Position. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Forms.Cursor GetHitTest (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Cursor GetHitTest(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p">Ein Punkt, Treffertests.</param>
        <summary>Stellt die Logik des Treffertests.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.Cursor" /> Wenn die <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> zugeordnet ist <paramref name="p" />ist, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest%2A> Methode ist ein `abstract` -Methode, die erzwingt <xref:System.Windows.Forms.Design.Behavior.Glyph> Implementierungen Treffertestlogik angeben. Einem beliebigen Zeitpunkt ausgegeben, wenn die <xref:System.Windows.Forms.Design.Behavior.Glyph> hat sich entschieden, beteiligt ist, muss es wird ein gültiger zurückzugebenden <xref:System.Windows.Forms.Cursor>. Andernfalls Rückgabe `null` führt dazu, dass die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> , um den Speicherort zu ignorieren.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest%2A> um festzustellen, ob der Punkt innerhalb dieses Symbols ist. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public abstract void Paint (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paint(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt eine Zeichnungslogik bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Design.Behavior.Glyph.Paint%2A> Methode ist ein `abstract` -Methode, die erzwingt <xref:System.Windows.Forms.Design.Behavior.Glyph> Implementierungen Zeichnungslogik angeben. Die `pe` Parameter enthält die <xref:System.Drawing.Graphics> im Zusammenhang mit der des Gestaltungsfensters der <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Windows.Forms.Design.Behavior.Glyph.Paint%2A> ein Symbol gezeichnet werden soll. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.Design.Behavior.BehaviorService> Klasse.  
  
 [!code-cpp[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/cpp/Form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.Design.Behavior.BehaviorService#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBehavior">
      <MemberSignature Language="C#" Value="protected void SetBehavior (System.Windows.Forms.Design.Behavior.Behavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBehavior(class System.Windows.Forms.Design.Behavior.Behavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Windows.Forms.Design.Behavior.Behavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Ein <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zum Zuordnen der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
        <summary>Ändert die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zugeordneten der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)" /> Methode wird aufgerufen, durch Vererbung von Klassen so ändern Sie die <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> zugeordneten der <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>
