<Type Name="XamlLoadPermission" FullName="System.Xaml.Permissions.XamlLoadPermission">
  <TypeSignature Language="C#" Value="public sealed class XamlLoadPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit XamlLoadPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlLoadPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Deklariert die Berechtigungen für das Laden von Typen aus Assemblys, die von einem XAML-Reader oder Writer verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Permissions.XamlLoadPermission>ist relevant für Szenarien, z. B., ob die interne Typen zulässig sind, unter teilweiser Vertrauenswürdigkeit geladen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Ein zählbarer Satz von bestimmten <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Werte.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> -Klasse unter Verwendung einer zählbaren Reihe von bestimmten <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Werte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Aufruf an diesen Konstruktor initialisiert die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung mit den einzelnen `allowedAccess` Eintrag als Element und legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> zu `false` in die erstellte Instanz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="allowedAccess" />enthielt ungültige Informationen, z. B. ein null-Element.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Security.Permissions.PermissionState" />-Enumerationswert.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> -Klasse unter Verwendung der vorhandene Berechtigungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState.Unrestricted>Legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> auf `true` in die erstellte Instanz. Jedem Aufruf dieses Konstruktors legt die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung `null` , da er nicht relevant ist, wenn Berechtigungen gemeldet werden statt <xref:System.Xaml.Permissions.XamlAccessLevel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Xaml.Permissions.XamlAccessLevel allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.Permissions.XamlAccessLevel allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Das Definieren von <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Wert.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> -Klasse unter Verwendung einer einzelnes <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Aufruf an diesen Konstruktor initialisiert die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung mit `allowedAccess` als das einzige Element, und legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> auf `false` in die erstellte Instanz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedAccess">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste aller <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Werte, die von diesem <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> darstellt.</summary>
        <value>Eine schreibgeschützte Liste der <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> Werte oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> initialisiert wird, dass <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> ist `true`, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> möglicherweise `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt und gibt eine identische Kopie des aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
        <returns>Eine Kopie der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pro Schnittstellenvertrag von <xref:System.Security.IPermission> dieser Wert ist <xref:System.Security.IPermission> in der Signatur jedoch umgewandelt werden kann, um <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
        <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="elem" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="elem" />enthält nicht die XML-Codierung für eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
 - oder -   
  
 Das Versionsattribut innerhalb <paramref name="elem" /> wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public bool Includes (System.Xaml.Permissions.XamlAccessLevel requestedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Includes(class System.Xaml.Permissions.XamlAccessLevel requestedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="requestedAccess">Die spezifische <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> zu überprüfen.</param>
        <summary>Gibt zurück, ob dies <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> schließt ein angegebenes <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> in seiner <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> Liste.</summary>
        <returns>
          <see langword="true" />Wenn <paramref name="requestedAccess" /> vorhanden ist, als ein Element in der <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> Liste der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestedAccess" /> ist NULL.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Ein <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> für die Überschneidung mit den aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Kann <see langword="null" />.</param>
        <summary>Erstellt und gibt eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> also die Schnittmenge des aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und der angegebenen Berechtigung.</summary>
        <returns>Eine neue Berechtigung, die die Schnittmenge des aktuellen darstellt <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und dem angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Diese neue Berechtigung ist <see langword="null" /> , wenn die Schnittmenge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />ist kein <see langword="null" /> oder ist eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Kann <see langword="null" />.</param>
        <summary>Bestimmt, ob die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ist eine Teilmenge der angegebenen Berechtigung.</summary>
        <returns>
          <see langword="true" />Wenn die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> ist eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 Wenn `target` ist `null` und der aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> sowohl <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> `false` und hat einen leeren <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aufzulisten, gibt diese Methode `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />ist kein <see langword="null" /> oder ist eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob dies <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> uneingeschränkte Berechtigungen bezeichnet.</summary>
        <returns>
          <see langword="true" />Wenn diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> uneingeschränkte Berechtigungen bezeichnet. <see langword="false" />Wenn diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> verfügt über bestimmte Ebenen zugriffseinschränkungen in <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, oder verfügt über keine Berechtigungen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung dieses <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und ihres aktuellen Zustands.</summary>
        <returns>Eine XML-Codierung dieses <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, einschließlich aller Zustandsinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">Ein <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> kombiniert mit dem aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Kann <see langword="null" />.</param>
        <summary>Erstellt eine Berechtigung als Kombination der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und der angegebenen Berechtigung.</summary>
        <returns>Ein neues <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> , die die Kombination der aktuellen darstellt <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und dem angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 Wenn `other` ist `null`, das aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" />ist kein <see langword="null" /> oder ist eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
