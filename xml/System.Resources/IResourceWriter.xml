<Type Name="IResourceWriter" FullName="System.Resources.IResourceWriter">
  <TypeSignature Language="C#" Value="public interface IResourceWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IResourceWriter implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.IResourceWriter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.Writer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Basisfunktionalität für das Schreiben von Ressourcen in einer Ausgabedatei oder den Stream.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcenwriters werden verwendet, um Ressourcen in Dateien in einem bestimmten Dateiformat zu schreiben. Implementieren Sie diese Schnittstelle, wenn Sie möchten, um zu steuern, in dem eine Ressourcendatei (z. B. zum Speichern von Ressourcen in etwa als eine ".txt", .resx oder binäre RESOURCES-Datei) geschrieben wird. Verwenden Sie andernfalls die Standardoption <xref:System.Resources.ResourceWriter> -Klasse, die Ressourcen in eine binäre RESOURCES-Datei schreibt, oder die <xref:System.Resources.ResXResourceWriter> -Klasse, die Ressourcen in einer XML-Ressourcendatei (.resx) schreibt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Der Name einer Ressource.</param>
        <param name="value">Der Wert einer Ressource als Array von 8-Bit-Ganzzahl ohne Vorzeichen.</param>
        <summary>Die Liste der zu schreibenden Ressourcen hinzugefügt eine 8-Bit-Ganzzahl ohne Vorzeichen Array als eine benannte Ressource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressourcen werden nicht geschrieben, bis die <xref:System.Resources.IResourceWriter.Generate%2A> -Methode aufgerufen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Der Wert der Ressource.</param>
        <summary>Fügt eine benannte Ressource vom Typ <see cref="T:System.Object" /> zur Liste der zu schreibenden Ressourcen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressource wird nicht geschrieben werden, bis die <xref:System.Resources.IResourceWriter.Generate%2A> -Methode aufgerufen wird.  
  
> [!NOTE]
>  `value`Möglicherweise müssen Sie serialisierbar sein, daher müssen Sie ggf. einen Typkonverter bereitzustellen, je nachdem, den welche Ressourcenwriters verwendet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der Ressource.</param>
        <param name="value">Der Wert der Ressource.</param>
        <summary>Fügt eine benannte Ressource vom Typ <see cref="T:System.String" /> zur Liste der zu schreibenden Ressourcen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Ressource wird nicht geschrieben werden, bis die <xref:System.Resources.IResourceWriter.Generate%2A> -Methode aufgerufen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt den zugrunde liegenden Ressourcendatei oder den Stream unter Gewährleistung alles, was die Daten in die Datei geschrieben wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Bedarf <xref:System.Resources.IResourceWriter.Close%2A> aufrufen, wird die <xref:System.Resources.IResourceWriter.Generate%2A> Methode, um die Ressourcen in der zugrunde liegenden Datei oder den Stream ausgegeben wird, vor dem Schließen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.IResourceWriter.Generate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schreibt alle Ressourcen hinzugefügt, indem die <see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /> Methode, um die Ausgabedatei oder den Stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.IResourceWriter.Generate%2A>die Ausgabedatei oder den Ausgabestream wird nicht geschlossen werden. Rufen Sie stattdessen die <xref:System.Resources.IResourceWriter.Close%2A> Methode. <xref:System.Resources.IResourceWriter.Generate%2A>ist nützlich, wenn Sie eine Ressourcendatei erstellen möchten, aber Sie nicht, schließen Sie den Ausgabestream möchten. <xref:System.Resources.IResourceWriter.Generate%2A>kann nur einmal aufgerufen werden. Nach dem Aufruf <xref:System.Resources.IResourceWriter.Generate%2A>, dass alle <xref:System.Resources.IResourceWriter> Methoden außer <xref:System.Resources.IResourceWriter.Close%2A> wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
