<Type Name="TypeReflector" FullName="Microsoft.JScript.TypeReflector">
  <TypeSignature Language="C#" Value="public sealed class TypeReflector : Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeReflector extends Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypeReflector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Implementierung von <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> ist schneller als <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Elements.</param>
        <param name="bindingAttr">Eine bitweise Kombination der Enumerationswerte, die die Methode angeben, in der die Suche nach Membern und Typen vom Reflektionsvorgang durchgeführt wird.</param>
        <summary>Sucht den angegebenen Member unter Verwendung der angegebenen bindungseinschränkungen.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.MemberInfo" /> Objekte, die die öffentlichen Member darstellt, die den angegebenen Namen aufweisen, sofern gefunden, andernfalls, ein leeres Array.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Eine bitweise Kombination der Enumerationswerte, die die Methode angeben, in der die Suche nach Membern und Typen vom Reflektionsvorgang durchgeführt wird.</param>
        <summary>Löst in allen Fällen eine <see cref="T:Microsoft.JScript.JScriptException" />-Ausnahme aus.</summary>
        <returns>Löst in allen Fällen eine <see cref="T:Microsoft.JScript.JScriptException" />-Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
