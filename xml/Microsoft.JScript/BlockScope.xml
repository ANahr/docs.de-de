<Type Name="BlockScope" FullName="Microsoft.JScript.BlockScope">
  <TypeSignature Language="C#" Value="public class BlockScope : Microsoft.JScript.ActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockScope extends Microsoft.JScript.ActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.BlockScope" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ActivationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt den Rahmen eines Codeblocks, der Teil einer Bereichshierarchie dauert und, die im globalen Gültigkeitsbereich Stapel geschoben werden können. Diese Klasse kann z. B. den Rahmen darstellen einer <see langword="try" /> Block.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockScope (Microsoft.JScript.ScriptObject parent, string name, int scopeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.JScript.ScriptObject parent, string name, int32 scopeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.BlockScope.#ctor(Microsoft.JScript.ScriptObject,System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.JScript.ScriptObject" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">Das übergeordnete Element des Bereichs.</param>
        <param name="name">Der Name des Bereichs.</param>
        <param name="scopeId">Die ID des Bereichs.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.JScript.BlockScope" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override Microsoft.JScript.JSVariableField CreateField (string name, System.Reflection.FieldAttributes attributeFlags, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype System.Reflection.FieldAttributes attributeFlags, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.BlockScope.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.JSVariableField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributeFlags" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des Felds.</param>
        <param name="attributeFlags">Eine bitweise Kombination der Enumerationswerte, die die Attribute eines Felds beschreiben.</param>
        <param name="value">Der Wert des Felds.</param>
        <summary>Erstellt eine neue Bereichsvariable, mit dem angegebenen Namen, den Wert und die Attribute an.</summary>
        <returns>Eine Bereichsvariable, die dem angegebenen Namen, den Wert und die Attribute verfügt.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
