<Type Name="IContextAttribute" FullName="System.Runtime.Remoting.Contexts.IContextAttribute">
  <TypeSignature Language="C#" Value="public interface IContextAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContextAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Identifiziert einen Namenskontext-Attribut.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Remoting.Contexts.IContextAttribute> Klasse wird von allen Kontextattribute verfügbar gemacht. Die Attribute beitragen, eine Eigenschaft, die in einem Kontext befindet, und erzwingt eine bestimmte Richtlinie für die Objekte, die in diesem Kontext erstellt wird. Weitere Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetPropertiesForNewContext">
      <MemberSignature Language="C#" Value="public void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPropertiesForNewContext(class System.Runtime.Remoting.Activation.IConstructionCallMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="msg">Die <see cref="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" /> , der die Kontexteigenschaften hinzugefügt.</param>
        <summary>Kontexteigenschaften zurückgegeben an den Aufrufer in der angegebenen Meldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext%2A> Methode hinzufügen Kontexteigenschaften direkt an die <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> Eigenschaftenliste in die <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> Schnittstelle. Die standardmäßige Implementierung in der <xref:System.Runtime.Remoting.Contexts.ContextAttribute> Klasse wird dies die Kontext-Eigenschaftenliste hinzufügen. Außer Kraft setzen kann nach Belieben Kontextattribute <xref:System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext%2A> und können ihr eigenes Verhalten implementieren. Beispielsweise können sie der Liste eine neue Klasse hinzufügen, die die Kontexteigenschaft implementiert.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsContextOK">
      <MemberSignature Language="C#" Value="public bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContextOK(class System.Runtime.Remoting.Contexts.Context ctx, class System.Runtime.Remoting.Activation.IConstructionCallMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
      </Parameters>
      <Docs>
        <param name="ctx">Der Kontext, auf dem aktuellen Kontextattribut geprüft werden soll.</param>
        <param name="msg">Die Konstruktionsaufruf, Parameter, der auf den aktuellen Kontext überprüft werden müssen.</param>
        <summary>Gibt einen booleschen Wert, der angibt, ob der angegebene Kontext das Kontextattribut Anforderungen erfüllt.</summary>
        <returns>
          <see langword="true" />Wenn der übergebene Kontext zulässig ist. andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
