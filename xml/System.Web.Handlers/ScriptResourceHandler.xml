<Type Name="ScriptResourceHandler" FullName="System.Web.Handlers.ScriptResourceHandler">
  <TypeSignature Language="C#" Value="public class ScriptResourceHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptResourceHandler extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Handlers.ScriptResourceHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt einen HTTP-Handler für die Verarbeitung von Anforderungen für Skriptdateien bereit, die als Ressourcen in einer Assembly eingebettet sind. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Handlers.ScriptResourceHandler> Klasse verarbeitet alle Anforderungen für eingebettete Skriptdateien, die über referenziert werden die <xref:System.Web.UI.ScriptManager> Klasse. Die <xref:System.Web.Handlers.ScriptResourceHandler> Objekt abgerufen, die eingebettete Skript-Bibliothek und lokalisierten Ressourcen für die Skriptbibliothek. Wenn die <xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A> -Eigenschaftensatz auf `true`die <xref:System.Web.Handlers.ScriptResourceHandler> Objekt einen Aufruf an die Methode des Objekts am Ende der Skriptdatei hinzugefügt.  
  
 Wird standardmäßig die <xref:System.Web.Handlers.ScriptResourceHandler> Klasse komprimiert und Internet Explorer 7 eingebettete Skriptdateien zwischengespeichert. Können Sie aktivieren die Komprimierung und caching deaktiviert, bis die <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A> und <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> Eigenschaften der <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection> Klasse. Sie können diese Eigenschaften in der Datei "Web.config" festlegen.  
  
> [!NOTE]
>  Sie können die Komprimierung für frühere Versionen von Internet Explorer aktivieren durch Erstellen eines Alias für Internet Explorer 7 im Abschnitt der Datei "Web.config". Anschließend Sie programmgesteuert festlegen, den Wert von der <xref:System.Web.UI.Page.ClientTarget%2A> Eigenschaft auf diesen Alias. Wir wird dieser Ansatz jedoch nicht empfohlen, da ein erhöhtes Risiko von Fehlern führt und es dazu, eine Abnahme der Leistung dass führt.  
  
 Die Datei "Web.config" für ASP.NET-Webanwendungen ASP.NET-AJAX-fähige fügt die <xref:System.Web.Handlers.ScriptResourceHandler> als Handler. Sie können den Handler für Ihre Anwendung manuell hinzufügen, durch das folgende Element in der Datei "Web.config" einschließen:  
  
```  
<httpHandlers>  
  <add verb="GET,HEAD" path="ScriptResource.axd"   
    type="System.Web.Handlers.ScriptResourceHandler,   
    System.Web.Extensions, Version=1.0.61025.0, Culture=neutral,   
    PublicKeyToken=31bf3856ad364e35" validate="false" />  
</httpHandlers>  
```  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">für den Betrieb in einer gehosteten Umgebung. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Berechtigungswert:<see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptResourceHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Handlers.ScriptResourceHandler" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="protected virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Handlers.ScriptResourceHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse ruft einen Wert, der angibt, ob die Instanz der Klasse von einer anderen Anforderung verwendet werden kann.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" /> -Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, und <see langword="Server" />), HTTP-Anforderungen verwendet werden.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Anforderungen Prozesse HTTP-Web für eine Skriptdatei, die als Ressource in einer Assembly eingebettet ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob eine andere Anforderung verwenden, kann die <see cref="T:System.Web.IHttpHandler" /> Instanz.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Handlers.ScriptResourceHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" /> -Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, und <see langword="Server" />), HTTP-Anforderungen verwendet werden.</param>
        <summary>Verarbeitet HTTP-webanforderungen für eine Skriptdatei, die als Ressource in einer Assembly eingebettet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Handlers.ScriptResourceHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Den Typnamen für die Debug- und Release des eingebetteten Skripts stimmen nicht überein.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
