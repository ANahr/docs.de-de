<Type Name="ToolboxItemWrapper" FullName="System.Activities.Presentation.Toolbox.ToolboxItemWrapper">
  <TypeSignature Language="C#" Value="public sealed class ToolboxItemWrapper : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxItemWrapper extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt einen Wrapper dar, der verwendet wird, um eine Verknüpfung zwischen einer tatsächlichen <see cref="T:System.Drawing.Presentation.ToolboxItem" />-Instanz und der Tooldarstellung festzulegen, und fügt Unterstützung für die Kategorisierung von Toolboxelementen hinzu. Diese Klasse ist <see langword="sealed" /> und kann also nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Wrapperklasse unterstützt die Kategorisierung von Toolboxelementen, wenn [!INCLUDE[wfd1](~/includes/wfd1-md.md)] außerhalb von [!INCLUDE[vs2010](~/includes/vs2010-md.md)] neu gehostet wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardkonstruktor initialisiert die <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A>, <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A>, <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A>, und <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName%2A> Eigenschaften mit einem leeren `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="toolType">Der Typ des Tools.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Klasse mit dem Typ des Tools.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> und <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> können aus dem `toolType`-Parameter extrahiert werden. Die <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A> und <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName%2A> Eigenschaften werden jeweils mit einem leeren initialisiert `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolType">Der Typ des Tools.</param>
        <param name="displayName">Der Name der Anzeige.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Klasse mit dem Typ des Tools und einem angegebenen Anzeigenamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> und <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> können aus dem `toolType`-Parameter extrahiert werden. Die <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName%2A> -Eigenschaft wird mit einem leeren initialisiert `string`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (Type toolType, string bitmapName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type toolType, string bitmapName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.Type,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolType" Type="System.Type" />
        <Parameter Name="bitmapName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolType">Der Typ des Tools.</param>
        <param name="bitmapName">Ein <see langword="string" /> , der den Namen der Bitmap enthält.</param>
        <param name="displayName">Ein <see langword="string" /> , enthält den Namen der Anzeige.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Klasse mit dem Typ des Tools und angegebenen Namen für Bitmap und Anzeige.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName%2A> und <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName%2A> können aus dem `toolType`-Parameter extrahiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxItemWrapper (string toolName, string assemblyName, string bitmapName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string toolName, string assemblyName, string bitmapName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="bitmapName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">Der Name des Tools.</param>
        <param name="assemblyName">Der Name der Assembly.</param>
        <param name="bitmapName">Der Name der Bitmap.</param>
        <param name="displayName">Der Name der Anzeige.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Klasse mit angegebenen Namen für Tool, Assembly, Bitmap und Anzeige.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Assemblynamen für das Toolboxelement ab oder legt ihn fest.</summary>
        <value>Der Name der Assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Assemblyname geändert wird, wird ein Ereignis ausgelöst, um anzugeben, dass der Eigenschaftswert geändert wurde. Der set-Vorgang ist idempotent: wenn der Assemblyname auf einen Wert festgelegt wird, über den er bereits verfügt, erfolgt keine Änderung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Assemblyname wurde bereits angegeben und kann nicht geändert werden, nachdem das entsprechende <see cref="T:System.Drawing.Desigen.ToolboxItem" /> initialisiert wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Bitmap Bitmap" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bitmap ab, das dem <see cref="T:System.Drawing.Design.ToolboxItem" /> zugeordnet ist, das vom Objekt umschlossen ist.</summary>
        <value>Gibt eine <see cref="T:System.Drawing.Bitmap" /> zurück, die dem <see cref="T:System.Drawing.Design.ToolboxItem" /> zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapName">
      <MemberSignature Language="C#" Value="public string BitmapName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BitmapName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.BitmapName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bitmapnamen ab oder legt ihn fest.</summary>
        <value>Der Bitmapname.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Bitmapname geändert wird, wird ein Ereignis ausgelöst, um anzugeben, dass der Eigenschaftswert geändert wurde. Der set-Vorgang ist idempotent: wenn der Assemblyname auf einen Wert festgelegt wird, über den er bereits verfügt, erfolgt keine Änderung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anzeigenamen ab oder legt ihn fest.</summary>
        <value>Der Anzeigename.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Anzeigename geändert wird, wird ein Ereignis ausgelöst, um anzugeben, dass die Eigenschaft geändert wurde. Der set-Vorgang ist idempotent: wenn der Assemblyname auf einen Wert festgelegt wird, über den er bereits verfügt, erfolgt keine Änderung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Drawing.Design.ToolboxItem" /> gültig ist.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.Drawing.Design.ToolboxItem" /> gültig ist, andernfalls wird <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Design.ToolboxItem> ist gültig, wenn er nicht ist `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.PropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Ereignis, das auftritt, wenn eine Eigenschaft geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.PropertyChanged>-Eigenschaft wird von der <xref:System.ComponentModel.INotifyPropertyChanged>-Schnittstelle definiert, die von der <xref:System.Activities.Presentation.Toolbox.ToolboxItemWrapper>-Klasse implementiert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="public string ToolName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Tools ab oder legt ihn fest.</summary>
        <value>Der Name des Tools.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Name des Tools geändert wird, wird ein Ereignis ausgelöst, um anzugeben, dass der Eigenschaftswert geändert wurde. Der set-Vorgang ist idempotent: wenn der Assemblyname auf einen Wert festgelegt wird, über den er bereits verfügt, erfolgt keine Änderung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationException">Der Name des Tools kann nicht geändert werden, nachdem das entsprechende <see cref="T:System.Drawing.Desigen.ToolboxItem" /> initialisiert wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see langword="string" /> , die das aktuelle Objekt darstellt.</summary>
        <returns>Gibt den Wert der <see cref="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.ToolName" />-Eigenschaft für das aktuelle <see cref="T:System.Activities.Presentation.Toolbox.ToolboxItemWrapper" />-Objekt zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxItemWrapper.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des <see cref="T:System.Drawing.Design.ToolboxItem" /> ab.</summary>
        <value>Gibt <see cref="T:System.Type" />zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
