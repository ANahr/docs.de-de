<Type Name="WorkflowInstance+WorkflowInstanceControl" FullName="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl">
  <TypeSignature Language="C#" Value="protected struct WorkflowInstance.WorkflowInstanceControl" />
  <TypeSignature Language="ILAsm" Value=".class nested protected sequential ansi sealed beforefieldinit WorkflowInstance/WorkflowInstanceControl extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, mit denen <see cref="T:System.Activities.Hosting.WorkflowInstance" />-abgeleitete Klassen auf die Funktionalität der Workflowlaufzeit zugreifen können.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bricht den <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald ein <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> aufgerufen wird, geben die meisten <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-APIs mit Ausnahme von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> eine Ausnahme vom Typ <xref:System.InvalidOperationException> aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht den <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald ein <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> aufgerufen wird, geben die meisten <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-APIs mit Ausnahme von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> eine Ausnahme vom Typ <xref:System.InvalidOperationException> aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Die Ursache für den Abbruch einer <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</param>
        <summary>Bricht die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> mithilfe der angegebenen Ausnahme ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald ein <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> aufgerufen wird, geben die meisten <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>-APIs mit Ausnahme von <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> eine Ausnahme vom Typ <xref:System.InvalidOperationException> aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Versuch abgebrochen wird.</param>
        <param name="callback">Die Methode, die aufgerufen wird, wenn der Nachverfolgungsvorgang abgeschlossen ist.</param>
        <param name="state">Die Informationen über den asynchronen Vorgang.</param>
        <summary>Wird von der Workflowlaufzeit aufgerufen, um damit zu beginnen, ausstehende Nachverfolgungsdatensätze asynchron an Nachverfolgungsteilnehmer zu senden.</summary>
        <returns>Der Status des aktuellen Nachverfolgungsvorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="public void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Der Status des asynchronen Nachverfolgungsvorgangs.</param>
        <summary>Wird von der Workflowlaufzeit zum Beenden der Nachverfolgungsaktivität aufgerufen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu vergleichende Objekt.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der aktuelle <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> dem angegebenen Objekt entspricht.</summary>
        <returns>
          <see langword="true" />des Objekts gleich der aktuellen <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="public void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Versuch abgebrochen wird.</param>
        <summary>Wird von der Workflowlaufzeit aufgerufen, um ausstehende Nachverfolgungsdatensätze an Nachverfolgungsteilnehmer zu senden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbortReason">
      <MemberSignature Language="C#" Value="public Exception GetAbortReason ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetAbortReason() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ausnahme zurück, die dazu führt, dass die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> abgebrochen wird.</summary>
        <returns>Die Ausnahme, durch die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> abgebrochen, oder <see langword="null" /> Wenn die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> nicht abgebrochen wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Auflistung von verfügbaren Lesezeichen für die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zurück.</summary>
        <returns>Eine Auflistung von Lesezeichen für die <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="scope">Der zu überprüfende Lesezeichenbereich.</param>
        <summary>Gibt die Auflistung verfügbarer Lesezeichen für die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zurück, die im angegebenen <see cref="T:System.Activities.BookmarkScope" /> erstellt wurden.</summary>
        <returns>Die Auflistung von Lesezeichen, die im angegebenen <see cref="T:System.Activities.BookmarkScope" /> erstellt wurden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den endgültigen <see cref="T:System.Activities.ActivityInstanceState" /> der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zurück.</summary>
        <returns>Einer der Enumerationsmember, der den Zustand einer Aktivitätsinstanz beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState (out Exception terminationException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState([out] class System.Exception&amp; terminationException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="terminationException" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="terminationException">Bei der Rückgabe dieser Methode <c>TerminationException</c> enthält die Ausnahme, durch die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zu beenden, oder <see langword="null" /> Wenn die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> wurde nicht beendet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Gibt den endgültigen <see cref="T:System.Activities.ActivityInstanceState" /> der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zurück, einschließlich Beendigungsausnahme.</summary>
        <returns>Einer der Enumerationsmember, der den Zustand einer Aktivitätsinstanz beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletionState">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstanceState GetCompletionState (out System.Collections.Generic.IDictionary&lt;string,object&gt; outputs, out Exception terminationException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.ActivityInstanceState GetCompletionState([out] class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&amp; outputs, [out] class System.Exception&amp; terminationException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstanceState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&amp;" RefType="out" />
        <Parameter Name="terminationException" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="outputs">Bei der Rückgabe dieser Methode <c>gibt</c> enthält ein Wörterbuch mit <see cref="F:System.Activities.ArgumentDirection.Out" /> Argumente des Workflows, die nach Argumentnamen geordnet sind. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="terminationException">Bei der Rückgabe dieser Methode <c>TerminationException</c> enthält die Ausnahme, durch die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zu beenden, oder <see langword="null" /> Wenn die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> wurde nicht beendet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Gibt den endgültigen <see cref="T:System.Activities.ActivityInstanceState" /> der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> zurück, einschließlich Workflowausgaben und Beendigungsausnahme.</summary>
        <returns>Einer der Enumerationsmember, der den Zustand einer Aktivitätsinstanz beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diesen <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> zurück.</summary>
        <returns>Der Hashcode für diese <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappedVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Activities.Hosting.LocationInfo&gt; GetMappedVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Activities.Hosting.LocationInfo&gt; GetMappedVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Activities.Hosting.LocationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Wörterbuch von Variablen im aktuellen Bereich zurück, die mit <see cref="F:System.Activities.VariableModifiers.Mapped" /> angegeben wurden.</summary>
        <returns>Ein Wörterbuch zugeordneter Variablen, die sich derzeit im Bereich befinden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPendingTrackingRecords">
      <MemberSignature Language="C#" Value="public bool HasPendingTrackingRecords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPendingTrackingRecords" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird von der Workflowlaufzeit aufgerufen, um zu bestimmen, ob diese Workflowinstanz ausstehende Nachverfolgungsdatensätze und einen Nachverfolgungsteilnehmer aufweist.</summary>
        <value>
          <see langword="true" />Wenn diese Workflowinstanz ausstehende Nachverfolgungsdatensätze und einen Nachverfolgungsteilnehmer aufweist; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistable">
      <MemberSignature Language="C#" Value="public bool IsPersistable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistable" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> in einem Zustand befindet, in dem sie beibehalten werden kann.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> kann dauerhaft ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl left, valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
        <Parameter Name="right" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
      </Parameters>
      <Docs>
        <param name="left">Der erste zu vergleichende <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</param>
        <param name="right">Der zweite zu vergleichende <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />-Instanzen gleich sind.</summary>
        <returns>
          <see langword="true" />, wenn die beiden <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />-Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl left, valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
        <Parameter Name="right" Type="System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl" />
      </Parameters>
      <Docs>
        <param name="left">Der erste zu vergleichende <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</param>
        <param name="right">Der zweite zu vergleichende <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" />-Instanzen ungleich sind.</summary>
        <returns>
          <see langword="true" />Wenn die beiden <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> Instanzen sind nicht gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseWhenPersistable">
      <MemberSignature Language="C#" Value="public void PauseWhenPersistable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PauseWhenPersistable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fordert an, dass die Workflowlaufzeit die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> am nächsten Ausführungspunkt anhält, an dem sie beibehalten werden kann. Beachten Sie, dass die Planerwarteschlange möglicherweise an diesem Punkt nicht leer ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareForSerialization">
      <MemberSignature Language="C#" Value="public object PrepareForSerialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PrepareForSerialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bereitet den <see cref="T:System.Activities.Hosting.WorkflowInstance" />-Zustand für die Serialisierung vor.</summary>
        <returns>Der Zustand einer Workflowinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPause">
      <MemberSignature Language="C#" Value="public void RequestPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fordert an, dass der Planer beendet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weist die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> an, die Ausführung zu starten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleBookmarkResumption">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Das wiederaufzunehmende Lesezeichen.</param>
        <param name="value">Die Daten, die an die Aktivität weitergegeben werden sollen, mit der das <see cref="T:System.Activities.Bookmark" /> erstellt wurde.</param>
        <summary>Plant eine Lesezeichenwiederaufnahme mit dem angegebenen Wert.</summary>
        <returns>Einer der Enumerationswerte, der das Ergebnis einer <see cref="T:System.Activities.Bookmark" />-Planung anzeigt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleBookmarkResumption">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption(class System.Activities.Bookmark bookmark, object value, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="bookmark">Das wiederaufzunehmende Lesezeichen.</param>
        <param name="value">Die Daten, die an die Aktivität weitergegeben werden sollen, mit der das <see cref="T:System.Activities.Bookmark" /> erstellt wurde.</param>
        <param name="scope">Das <see cref="T:System.Activities.Bookmark" />, unter dem das <see cref="T:System.Activities.Bookmark" /> erstellt wurde.</param>
        <summary>Plant eine <see cref="T:System.Activities.Bookmark" />-Wiederaufnahme aus dem angegebenen <see cref="T:System.Activities.BookmarkScope" />.</summary>
        <returns>Einer der Enumerationswerte, der das Ergebnis einer <see cref="T:System.Activities.Bookmark" />-Planung anzeigt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleCancel">
      <MemberSignature Language="C#" Value="public void ScheduleCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plant den Abbruch der <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode plant eine Abbruchanforderung für die Stammaktivität der <xref:System.Activities.Hosting.WorkflowInstance>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstanceState State" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zustand der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> ab.</summary>
        <value>Einer der Enumerationswerte, der den Zustand einer <see cref="T:System.Activities.Hosting.WorkflowInstance" /> angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">Die Ausnahme, die die Ursache für das Beenden der <see cref="T:System.Activities.Hosting.WorkflowInstance" /> darstellt.</param>
        <summary>Versetzt die <see cref="T:System.Activities.Hosting.WorkflowInstance" /> in den Endstatus <see cref="F:System.Activities.ActivityInstanceState.Faulted" /> mithilfe der angegebenen Ausnahme.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public void Track (System.Activities.Tracking.WorkflowInstanceRecord instanceRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Track(class System.Activities.Tracking.WorkflowInstanceRecord instanceRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceRecord" Type="System.Activities.Tracking.WorkflowInstanceRecord" />
      </Parameters>
      <Docs>
        <param name="instanceRecord">Der hinzuzufügende Nachverfolgungsdatensatz.</param>
        <summary>Wird von der Workflowlaufzeit aufgerufen, um ausstehende Datensätze der Liste ausstehender Datensätze hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingEnabled">
      <MemberSignature Language="C#" Value="public bool TrackingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird von der Workflowlaufzeit aufgerufen, um zu bestimmen, ob die Nachverfolgung in dieser Workflowinstanz aktiviert ist.</summary>
        <value>
          <see langword="true" />Wenn die Überwachung in dieser Workflowinstanz aktiviert ist; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
