<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Berechnet die Formeln für statistische Berechnungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formeln können lose in folgenden Kategorien gruppiert: Verteilungen, einschließlich inverse Verteilungen; Tests; und grundlegende Formeln für statistische Berechnungen. Jede Gruppe verfügt über gemeinsame Merkmale in Bezug auf ihre Eingabe- und -Werte.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="inputSeriesNames">Eine durch Trennzeichen getrennte Liste der Eingabe Reihennamen angeben.</param>
        <summary>Führt einen ANOVA-Test, um zu bestimmen, ob es ein statistisch signifikanten Unterschied zwischen den Mittelwerten von zwei oder mehr Gruppen von Daten an.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein ANOVA-Test wird verwendet, um den Unterschied zwischen der bedeutet, dass von zwei oder mehr Gruppen von Daten zu testen.  
  
 Zwei oder mehr Gruppen von Reihendaten müssen angegeben werden, und jede Reihe muss die gleiche Anzahl von Datenpunkten aufweisen; Andernfalls wird eine Ausnahme ausgelöst werden.  
  
 Wenn eine angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">Der erste Wert für die Betafunktion.</param>
        <param name="n">Der zweite Wert für die Betafunktion.</param>
        <summary>Gibt den Wert des Beta-Funktion für die beiden angegebenen Werte.</summary>
        <returns>Ein <see langword="double" /> -Wert, der die Betafunktion für die beiden angegebenen Werte darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt die Beta-Funktionswert für zwei angegebene Werte, die vom angegebenen `m` und `n`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">Der erste Eingabereihe-Name.</param>
        <param name="secondInputSeriesName">Der zweite Eingabereihe-Name.</param>
        <summary>Gibt den Korrelationswert für zwei Datenreihen zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der die Korrelation zwischen zwei Datenreihen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korrelation misst die Beziehung zwischen zwei Datasets, die skaliert werden, um unabhängig von der Maßeinheit angegeben werden. Die <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> Methode gibt die Kovarianz von zwei Datasets, die durch das Produkt ihrer Standardabweichungen dividiert, und liegt immer zwischen-1 und 1.  
  
 Verwenden Sie Korrelation, um zu bestimmen, ob zwei Datenbereiche zusammen verschoben werden; d. h., ob große Werten für einen Satz mit großen Werten für andere (positive Korrelation) verknüpft sind, gibt an, ob der kleine Werten für einen Satz mit großen Werten für andere (negative Korrelation) verknüpft sind oder gibt an, ob Werte in beiden Gruppen werden nicht verknüpfte ( Korrelation nahe 0 (null)).  
  
 Wenn eine angegebene Eingabereihe in der reihenauflistung zum Zeitpunkt des Methodenaufrufs nicht vorhanden ist, wird eine Ausnahme ausgelöst. Eine Ausnahme wird auch ausgelöst werden, wenn die angegebenen Reihen nicht die gleiche Anzahl von Datenpunkten verfügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">Der erste Eingabereihe-Name.</param>
        <param name="secondInputSeriesName">Der zweite Eingabereihe-Name.</param>
        <summary>Gibt die Kovarianzwert für zwei Datenreihen zurück.</summary>
        <returns>Ein <see langword="double" /> -Wert, der die Kovarianz zwischen zwei Datenreihen darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Der F-Wert.</param>
        <param name="firstDegreeOfFreedom">Der erste Freiheitsgrad.</param>
        <param name="secondDegreeOfFreedom">Der zweite Freiheitsgrad.</param>
        <summary>Gibt die kumulierte F Verteilungsfunktion zurück.</summary>
        <returns>Ein <see langword="double" /> -Wert, der die kumulative Verteilungsfunktion für F darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Name der ersten Eingabe Reihe.</param>
        <param name="secondInputSeriesName">Name der zweiten Eingabe Reihe.</param>
        <summary>Führt einen zwei-Beispiel F Test mithilfe der F-Verteilungs. Dieser Test wird verwendet, um festzustellen, ob die Beispiele sind unterschiedliche Varianzen haben.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Die Eingabevariable.</param>
        <summary>Gibt den Gammawert für die Funktion für die angegebene Variable zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der Gammafunktion darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstDegreeOfFreedom">Der erste Freiheitsgrad.</param>
        <param name="secondDegreeOfFreedom">Der zweite Freiheitsgrad.</param>
        <summary>Gibt den Kehrwert der kumulativen F-Verteilung zurück.</summary>
        <returns>Ein <see langword="double" />-Wert aus dem Kehrwert der F-Verteilungsfunktion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Wert "F" für die angegebenen Wahrscheinlichkeit der F-Verteilung zurück.  
  
 Die F-Verteilung kann in einem F-Test verwendet werden, die den Grad der Variabilität in zwei Datasets vergleicht.  
  
 Diese Methode kann eine Ausnahme aus, abhängig von der Parameterwerte zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Bedingung: Die Berechnung kann aufgrund einer Beschränkung nicht mit dem angegebenen Parameter fortgesetzt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <summary>Gibt die Umkehrung der Poisson-Verteilung zurück.</summary>
        <returns>Ein <see langword="double" /> Wert aus der inverse standard normale kumulative Verteilungsfunktion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Wert "F" für die angegebenen Wahrscheinlichkeit der F-Verteilung zurück.  
  
 Es wird vorausgesetzt, dass die Verteilung den Mittelwert 0 (null) und die Standardabweichung eines verfügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="degreeOfFreedom">Der Freiheitsgrad.</param>
        <summary>Gibt die inversen t-Wert der Students t-Verteilung als Funktion der Wahrscheinlichkeit und Freiheitsgrad zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der die Inverse T-Verteilung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den t-Wert für die angegebenen Wahrscheinlichkeit der T-Verteilung zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Der Name der Eingabe Reihe.</param>
        <summary>Gibt den Durchschnitt aller Datenpunkte in die angegebene Reihe gespeichert.</summary>
        <returns>Ein <see langword="double" /> Wert, der den Durchschnitt aller Datenpunkte darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den Mittelwert (d. h. den Mittelwert) der in einer Reihe gespeicherten Punkte zu berechnen.  
  
 Wenn die angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Der Name der Eingabe Reihe.</param>
        <summary>Gibt den Median aller Datenpunkte in die angegebene Reihe zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der den Median darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den Median in einer Reihe gespeicherten Punkte zu berechnen.  
  
 Der Median wird der Mittelwert einer Beispiel-Menge, wobei die Hälfte der Mitglieder in größer werden und die Hälfte der Mitglieder sind kleinere Größe.  
  
 Wenn die angegebene Eingabereihe nicht, in vorhanden ist der <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> zum Zeitpunkt des Methodenaufrufs, wird eine Ausnahme ausgelöst werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">Der Z-Wert für den die Wahrscheinlichkeit erforderlich ist.</param>
        <summary>Gibt die Wahrscheinlichkeit für die Funktion Poisson-Verteilung zurück.</summary>
        <returns>Ein <see langword="double" /> Wert aus der Funktion Poisson-Verteilung.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Der T-Wert</param>
        <param name="degreeOfFreedom">Freiheitsgrad</param>
        <param name="oneTail">Wenn <see langword="true" />, eine einseitige Verteilung verwendet wird; andernfalls, eine zweiseitige Verteilung verwendet wird.</param>
        <summary>Gibt die Wahrscheinlichkeit für die T-Verteilung (Student Verteilung) zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der eine T-Verteilung kumulative Funktion darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Differenz der Mittelwerte.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Name der ersten Eingabe Reihe.</param>
        <param name="secondInputSeriesName">Name der zweiten Eingabe Reihe.</param>
        <summary>Führt einen T-Test mit Student Verteilung (T-Verteilung) mit gleichen Varianzen.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Differenz der Mittelwerte.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Name der ersten Eingabe Reihe.</param>
        <param name="secondInputSeriesName">Name der zweiten Eingabe Reihe.</param>
        <summary>Führt einen paarweisen Stichproben Student Verteilung (T-Verteilung) mit T-Test. Dies ist hilfreich, wenn es ist eine natürliche Kopplung Stichproben.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Differenz der Mittelwerte.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Name der ersten Eingabe Reihe.</param>
        <param name="secondInputSeriesName">Name der zweiten Eingabe Reihe.</param>
        <summary>Führt einen T-Test mit Student Verteilung (T-Verteilung) mit ungleichen Varianzen.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">Der Name des Eingabereihe.</param>
        <param name="sampleVariance">
          <see langword="True" />Wenn die Daten eine Stichprobe der Population; <see langword="false" /> , wenn die Daten die gesamte Population ist.</param>
        <summary>Gibt die Varianz für eine Reihe zurück.</summary>
        <returns>Ein <see langword="double" /> Wert, der die Varianz repräsentiert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">Differenz der Mittelwerte.</param>
        <param name="varianceFirstGroup">Die Varianz der ersten Gruppe.</param>
        <param name="varianceSecondGroup">Die Varianz der zweiten Gruppe.</param>
        <param name="probability">Der Alphawert, der die Wahrscheinlichkeit angibt, mit der die Hypothese abgelehnt wird. Der zulässige Bereich ist 0–1.</param>
        <param name="firstInputSeriesName">Name der ersten Eingabe Reihe.</param>
        <param name="secondInputSeriesName">Name der zweiten Eingabe Reihe.</param>
        <summary>Führt einen Z-Test mithilfe der normalverteilung.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
