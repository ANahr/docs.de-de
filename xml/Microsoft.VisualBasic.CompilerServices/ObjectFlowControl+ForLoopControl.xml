<Type Name="ObjectFlowControl+ForLoopControl" FullName="Microsoft.VisualBasic.CompilerServices.ObjectFlowControl+ForLoopControl">
  <TypeSignature Language="C#" Value="public sealed class ObjectFlowControl.ForLoopControl" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ObjectFlowControl/ForLoopControl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Dienste für den Visual Basic-Compiler zum Kompilieren von <see langword="For...Next" /> Schleifen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ForLoopInitObj">
      <MemberSignature Language="C#" Value="public static bool ForLoopInitObj (object Counter, object Start, object Limit, object StepValue, ref object LoopForResult, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForLoopInitObj(object Counter, object Start, object Limit, object StepValue, object&amp; LoopForResult, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Limit" Type="System.Object" />
        <Parameter Name="StepValue" Type="System.Object" />
        <Parameter Name="LoopForResult" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CounterResult" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter">Die Indikatorvariable "Schleife".</param>
        <param name="Start">Der Anfangswert des Schleifenzählers.</param>
        <param name="Limit">Der Wert, der die <see langword="To" /> Option.</param>
        <param name="StepValue">Der Wert, der die <see langword="Step" /> Option.</param>
        <param name="LoopForResult">Ein Objekt, das enthält überprüft die Werte für Schleife.</param>
        <param name="CounterResult">Der Wert dieses Indikators für die nächste Schleifeniteration.</param>
        <summary>Initialisiert eine <see langword="For...Next" /> Schleife.</summary>
        <returns>
          <see langword="False" />Wenn die Schleife beendet wurde. andernfalls <see langword="True" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckDec">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckDec (decimal count, decimal limit, decimal StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckDec(valuetype System.Decimal count, valuetype System.Decimal limit, valuetype System.Decimal StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Decimal" />
        <Parameter Name="limit" Type="System.Decimal" />
        <Parameter Name="StepValue" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="count">Erforderlich. Ein <see langword="Decimal" /> Wert, der den ersten Wert darstellt, für die Indikatorvariable Schleife übergeben.</param>
        <param name="limit">Erforderlich. Ein <see langword="Decimal" /> -Wert, der den Wert übergeben, indem die <see langword="To" /> Schlüsselwort.</param>
        <param name="StepValue">Erforderlich. Ein <see langword="Decimal" /> -Wert, der den Wert übergeben, indem die <see langword="Step" /> Schlüsselwort.</param>
        <summary>Überprüft auf gültige Werte für den Schleifenzähler <see langword="Step" />, und <see langword="To" /> Werte.</summary>
        <returns>
          <see langword="True" />Wenn <paramref name="StepValue" /> ist größer als 0 (null) und <paramref name="count" /> ist kleiner als oder gleich <paramref name="limit" /> oder <paramref name="StepValue" /> ist kleiner oder gleich 0 (null) und <paramref name="count" /> ist größer als oder gleich <paramref name="limit" />ist, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckObj">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckObj (object Counter, object LoopObj, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckObj(object Counter, object LoopObj, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="LoopObj" Type="System.Object" />
        <Parameter Name="CounterResult" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter">Die Indikatorvariable "Schleife".</param>
        <param name="LoopObj">Ein Objekt, das enthält überprüft die Werte für Schleife.</param>
        <param name="CounterResult">Der Wert dieses Indikators für die nächste Schleifeniteration.</param>
        <summary>Inkrementiert eine <see langword="For...Next" /> Schleife.</summary>
        <returns>
          <see langword="False" />Wenn die Schleife beendet wurde. andernfalls <see langword="True" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR4">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR4 (float count, float limit, float StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR4(float32 count, float32 limit, float32 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Single" />
        <Parameter Name="limit" Type="System.Single" />
        <Parameter Name="StepValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="count">Erforderlich. Ein <see langword="Single" /> Wert, der den ersten Wert darstellt, für die Indikatorvariable Schleife übergeben.</param>
        <param name="limit">Erforderlich. Ein <see langword="Single" /> -Wert, der den Wert übergeben, indem die <see langword="To" /> Schlüsselwort.</param>
        <param name="StepValue">Erforderlich. Ein <see langword="Single" /> -Wert, der den Wert übergeben, indem die <see langword="Step" /> Schlüsselwort.</param>
        <summary>Überprüft auf gültige Werte für den Schleifenzähler <see langword="Step" />, und <see langword="To" /> Werte.</summary>
        <returns>
          <see langword="True" />Wenn <paramref name="StepValue" /> ist größer als 0 (null) und <paramref name="count" /> ist kleiner als oder gleich <paramref name="limit" />, oder wenn <paramref name="StepValue" /> ist kleiner oder gleich 0 (null) und <paramref name="count" /> ist größer als oder gleich <paramref name="limit" />ist, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR8">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR8 (double count, double limit, double StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR8(float64 count, float64 limit, float64 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Double" />
        <Parameter Name="limit" Type="System.Double" />
        <Parameter Name="StepValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="count">Erforderlich. Ein <see langword="Double" /> Wert, der den ersten Wert darstellt, für die Indikatorvariable Schleife übergeben.</param>
        <param name="limit">Erforderlich. Ein <see langword="Double" /> -Wert, der den Wert übergeben, indem die <see langword="To" /> Schlüsselwort.</param>
        <param name="StepValue">Erforderlich. Ein <see langword="Double" /> -Wert, der den Wert übergeben, indem die <see langword="Step" /> Schlüsselwort.</param>
        <summary>Überprüft auf gültige Werte für den Schleifenzähler <see langword="Step" />, und <see langword="To" /> Werte.</summary>
        <returns>
          <see langword="True" />Wenn <paramref name="StepValue" /> ist größer als 0 (null) und <paramref name="count" /> ist kleiner als oder gleich <paramref name="limit" />, oder wenn <paramref name="StepValue" /> ist kleiner oder gleich 0 (null) und <paramref name="count" /> ist größer als oder gleich <paramref name="limit" />ist, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
