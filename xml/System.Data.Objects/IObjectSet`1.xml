<Type Name="IObjectSet&lt;TEntity&gt;" FullName="System.Data.Objects.IObjectSet&lt;TEntity&gt;">
  <TypeSignature Language="C#" Value="public interface IObjectSet&lt;TEntity&gt; : System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Linq.IQueryable&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectSet`1&lt;class TEntity&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TEntity&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.IObjectSet`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">Der Typ eines von der Abfrage zurückgegebenen Entitätsobjekts.</typeparam>
    <summary>Stellt Funktionen bereit, die es ermöglichen, Änderungen an einem Satz von Datenobjekten vorzunehmen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.IObjectSet`1.AddObject(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Das neue Objekt, das den Satz hinzugefügt werden soll.</param>
        <summary>Benachrichtigt den Satz, dass ein Objekt, das eine neue Entität darstellt, auf die Gruppe hinzugefügt werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen auf die Gruppe kann möglicherweise nicht in eine Enumeration des Satzes angezeigt werden, bis Änderungen an diesem Satz auf eine Weise persistent gespeichert wurden. Dieses Verhalten hängt von der spezifischen Implementierung der <xref:System.Data.Objects.IObjectSet%601>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.IObjectSet`1.Attach(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Das vorhandene Objekt, das den Satz hinzugefügt werden soll.</param>
        <summary>Benachrichtigt den Satz, dass ein Objekt, das eine vorhandene Entität darstellt, auf die Gruppe hinzugefügt werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen auf die Gruppe kann möglicherweise nicht in eine Enumeration des Satzes angezeigt werden, bis Änderungen an diesem Satz auf eine Weise persistent gespeichert wurden. Dieses Verhalten hängt von der spezifischen Implementierung der <xref:System.Data.Objects.IObjectSet%601>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.IObjectSet`1.DeleteObject(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Das vorhandene Objekt aus der Gruppe zu löschen.</param>
        <summary>Benachrichtigt den Satz, dass ein Objekt, das eine vorhandene Entität darstellt, aus der Gruppe gelöscht werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen auf die Gruppe kann möglicherweise nicht in eine Enumeration des Satzes angezeigt werden, bis Änderungen an diesem Satz auf eine Weise persistent gespeichert wurden. Dieses Verhalten hängt von der spezifischen Implementierung der <xref:System.Data.Objects.IObjectSet%601>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.IObjectSet`1.Detach(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Das Objekt, aus dem Satz zu trennen.</param>
        <summary>Benachrichtigt den Satz, dass ein Objekt, das eine vorhandene Entität darstellt, aus dem Satz getrennt werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen auf die Gruppe kann möglicherweise nicht in eine Enumeration des Satzes angezeigt werden, bis Änderungen an diesem Satz auf eine Weise persistent gespeichert wurden. Dieses Verhalten hängt von der spezifischen Implementierung der <xref:System.Data.Objects.IObjectSet%601>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
