<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert statische Methoden zum Erstellen von verbundmetadatendokumenten und zum Aktualisieren der Konfiguration der Anwendung basierend auf den verbundmetadatendokumenten an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu den verbundmetadatendokumenten, finden Sie in Abschnitt 3 der folgenden Spezifikation: [Web Services Federation Language (WS-Federation) Version 1.2](http://go.microsoft.com/fwlink/?LinkID=210152) (http://go.microsoft.com/fwlink/?LinkID=210152).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">Die Anwendungs-URI.</param>
        <param name="certificate">Das x. 509-Zertifikat zum Signieren der Metadaten.</param>
        <param name="claimsRequired">Die Ansprüche, die von der Anwendung erforderlich sind.</param>
        <param name="applicationType">Eines der <see cref="T:System.IdentityModel.Services.ApplicationType" /> Werte, die den Typ der Anwendung angibt, die die Metadaten beschreibt. Dies wird verwendet, um zu bestimmen, die Endpunkte zu erstellen.</param>
        <param name="audienceUris">Die Auflistung der zulässigen URIs, die für diese Anwendung verwendet werden kann.</param>
        <summary>Erstellt eine XML-Dokument mit Verbundmetadaten.</summary>
        <returns>Ein XmlReader, der das Metadatendokument enthält, das mit den Parametern erstellt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XmlReader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XmlReader, der die Konfiguration enthält.</param>
        <param name="claimsOfferedUpdate">
          <see langword="true" />Wenn die Ansprüche angeboten werden, dass die Liste aktualisiert werden sollen; andernfalls <see langword="false" />.</param>
        <summary>Die angegebene Anwendungskonfiguration aktualisiert, wenn erforderlich, basierend auf den angegebenen Verbundmetadaten-Dokument und ein Wert, der angibt, ob die Ansprüche bereitgestellt werden, dass die Liste aktualisiert werden sollen.</summary>
        <returns>Ein XML-Reader, die die aktualisierte Konfiguration enthält oder <see langword="null" /> , wenn die Konfiguration konnte nicht aktualisiert werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XmlReader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XmlReader, der die Konfiguration enthält.</param>
        <param name="claimsOfferedUpdate">
          <see langword="true" />Wenn die Ansprüche angeboten werden, dass die Liste aktualisiert werden sollen; andernfalls <see langword="false" />.</param>
        <param name="metadataSerializer">Das Serialisierungsprogramm, mit denen die STS-Metadaten zu lesen.</param>
        <summary>Die angegebene Anwendungskonfiguration aktualisiert, wenn erforderlich, basierend auf den angegebenen Verbundmetadaten-Dokument und ein Wert, der angibt, ob die Ansprüche bereitgestellt werden, dass die Liste aktualisiert werden sollen. Das Serialisierungsprogramm zum Lesen der Metadaten der Security token Service (STS) wird ebenfalls angegeben.</summary>
        <returns>Ein XML-Reader, die die aktualisierte Konfiguration enthält oder <see langword="null" /> , wenn die Konfiguration konnte nicht aktualisiert werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="metadataSerializer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader&amp;" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XmlReader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XmlReader, der die Konfiguration enthält.</param>
        <param name="newIssuerNameRegistry">Bei der Rückgabe dieser Methode enthält einen XML-Knoten-Leser, der die Elemente enthält, die der ausstellernamenregistration angeben. <see langword="null" />Wenn es keine ausstellernamenregistration angegeben wird sind. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="claimTypesOffered">Wenn diese Methode zurückgegeben wird, wenn die Liste der angebotenen Anspruchstypen geändert wurde, enthält einen XML-Knoten-Leser, der Elemente enthält, die neue Liste angeben. Gibt zurück, wenn die Liste nicht geändert wurde, <see langword="null" />. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <summary>Die angegebenen Anwendungskonfiguration aktualisiert, wenn erforderlich, basierend auf den angegebenen Verbundmetadaten-Dokument. Gibt Angeboten der Konfigurationselemente für die ausstellernamenregistration sowie der Konfigurationselemente für die aktualisierte Liste der Typen von Ansprüchen, wenn Daten aktualisiert wurden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="inputConfiguration" /><paramref name="metadataReader" />ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader&amp;" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader&amp;" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Ein XmlReader, der das Metadatendokument enthält.</param>
        <param name="inputConfiguration">Ein XmlReader, der die Konfiguration enthält.</param>
        <param name="newIssuerNameRegistry">Bei der Rückgabe dieser Methode enthält einen XML-Knoten-Leser, der die Elemente enthält, die der ausstellernamenregistration angeben. <see langword="null" />Wenn es keine ausstellernamenregistration angegeben wird sind. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="claimTypesOffered">Wenn diese Methode zurückgegeben wird, wenn die Liste der angebotenen Anspruchstypen geändert wurde, enthält einen XML-Knoten-Leser, der Elemente enthält, die neue Liste angeben. Gibt zurück, wenn die Liste nicht geändert wurde, <see langword="null" />. Dieser Parameter wird nicht initialisiert behandelt.</param>
        <param name="metadataSerializer">Das Serialisierungsprogramm, mit denen die STS-Metadaten zu lesen.</param>
        <summary>Die angegebenen Anwendungskonfiguration aktualisiert, wenn erforderlich, basierend auf den angegebenen Verbundmetadaten-Dokument. Gibt Konfigurationselemente für die ausstellernamenregistration sowie der Konfigurationselemente für die aktualisierte Liste von Anspruchstypen bereitgestellt, wenn Daten aktualisiert wurden. Das Serialisierungsprogramm zum Lesen der Metadaten der Security token Service (STS) wird ebenfalls angegeben.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="inputConfiguration" /> ist <see langword="null" />.  
  
 - oder -   
  
 <paramref name="metadataSerializer" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
