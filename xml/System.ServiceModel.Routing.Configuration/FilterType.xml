<Type Name="FilterType" FullName="System.ServiceModel.Routing.Configuration.FilterType">
  <TypeSignature Language="C#" Value="public enum FilterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FilterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Routing.Configuration.FilterType" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt den Typ des Filters an, der zum Weiterleiten von Meldungen verwendet werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crabout](~/includes/crabout-md.md)] mithilfe von <xref:System.ServiceModel.Routing.Configuration.FilterType>, siehe <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="Action" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Action = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />, um nach einer Aktion zu filtern.</summary>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="And" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType And = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />, um mit zwei Meldungsfiltern zu filtern, die über AND verknüpft sind.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType Custom = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie einen benutzerdefinierten Filter.</summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="EndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointAddress = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwendung <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> mit <see cref="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" /> festgelegt **"false"** , nach der Adresse zu filtern.</summary>
      </Docs>
    </Member>
    <Member MemberName="EndpointName">
      <MemberSignature Language="C#" Value="EndpointName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType EndpointName = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />, um nach dem Namen des Dienstendpunkts zu filtern.</summary>
      </Docs>
    </Member>
    <Member MemberName="MatchAll">
      <MemberSignature Language="C#" Value="MatchAll" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType MatchAll = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />, um eine Entsprechung für alle Meldungen zu finden.</summary>
      </Docs>
    </Member>
    <Member MemberName="PrefixEndpointAddress">
      <MemberSignature Language="C#" Value="PrefixEndpointAddress" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType PrefixEndpointAddress = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwendung <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> mit <see cref="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" /> festgelegt **"false"** auf die Adresse, die unter Verwendung der längsten präfixübereinstimmung gefiltert.</summary>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="XPath" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Routing.Configuration.FilterType XPath = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Routing.Configuration.FilterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Verwenden Sie den <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />, um nach einem XPath-Ausdruck zu filtern.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
