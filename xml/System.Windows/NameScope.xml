<Type Name="NameScope" FullName="System.Windows.NameScope">
  <TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementiert basieren WPF-Unterstützung für die <see cref="T:System.Windows.Markup.INameScope" /> -Methoden zum Speichern oder Abrufen von Name-Objekt-Zuordnungen in einem bestimmten XAML-Namensbereich. Fügt Unterstützung für angefügte Eigenschaften hinzu, damit Namen im XAML-Namensbereich auf Elementebene leichter dynamisch abgerufen oder festgelegt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse implementiert die integrierten Unterstützung von XAML-Namensbereich für WPF-Behandlung von XAML. <xref:System.Windows.NameScope>unterstützt die Erstellung der ursprünglichen XAML-Namescopes basierend auf der Analyse von XAML, wie z. B. beim Instanziieren von Stilen und Vorlagen. Es unterstützt auch die Erstellung von XAML-Namescopes von Prozessen, die außerhalb der normalen Verwendung von XAML-Laden von Elementen, durch die die WPF-XAML-Prozessor-Implementierung auftreten.  
  
 <xref:System.Windows.NameScope>ist im Allgemeinen mehr Ressourcenmenge zum Bereitstellen der Infrastruktur als allgemeine Code Szenarien, die Arbeit mit einem XAML-Namensbereich umfassen. In den meisten Szenarien die <xref:System.Windows.FrameworkElement.FindName%2A> auf verfügbar gemachten Methoden <xref:System.Windows.FrameworkElement> und <xref:System.Windows.FrameworkContentElement> sind besser geeignete Methoden zum Aufrufen des für die Suche nach Elementen von XAML-definierte Name. Die <xref:System.Windows.FrameworkElement.Name%2A> Eigenschaften verfügbar gemacht werden, indem <xref:System.Windows.FrameworkElement> und <xref:System.Windows.FrameworkContentElement> sind besser geeignet zu verwenden, um den ursprünglichen Namen als Markupattribut festzulegen.  
  
 Die verschiedenen Methoden <xref:System.Windows.NameScope> durch Basiselemente und anderen Klassen, die XAML-Namescopes verwalten, um Unterstützung dienen <xref:System.Windows.Markup.INameScope.RegisterName%2A> und <xref:System.Windows.Markup.INameScope.FindName%2A>. Im Allgemeinen verwenden Sie die API in der <xref:System.Windows.NameScope> -Klasse nur dann, wenn Sie ersetzen oder erweitern das Verhalten Basiselement dafür, wie XAML-Namescopes für Stammelemente einer XAML-Seite, und als Teil von Vorlagen verarbeitet (die verwenden, die eines separaten XAML-Namensbereich auf die restliche der Seite ").  
  
 In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> bietet Auflistung schnittstellenimplementierungen, dass Sie die Auflistungen von Namen zugreifen können, die von einem XAML-Namensbereich, einschließlich des Hinzufügens von ihm über Aufrufe von gehalten werden ein <xref:System.Windows.NameScope.Add%2A> Methode.  
  
 Weitere Informationen zu XAML-Namensbereich Konzepte, finden Sie unter [WPF-XAML-Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  
  
 Namen in einem XAML-Namensbereich müssen eine bestimmte Grammatik, die die Zeichenfolgen einschränkt, die für Eingaben vom verwenden <xref:System.Windows.NameScope> API. Finden Sie unter [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
<a name="xamlTextUsage_NameScope"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.NameScope" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">Ein <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (Schlüssel ist <see cref="T:System.String" />, ist der Wert <see cref="T:System.Object" />), die die Zuordnung der XAML-Namensbereich hinzuzufügende darstellt.</param>
        <summary>Fügt der Auflistung ein Element hinzu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Eine oder beide Komponenten von <paramref name="item" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Die Zeichenfolgenschlüssel den Namen der XAML-Namensbereich Zuordnung hinzufügen.</param>
        <param name="value">Der Objektwert, also den Objektverweis für die Verwendung von XAML-Namensbereich Zuordnung hinzufügen.</param>
        <summary>Fügt der Auflistung ein Element hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode umschließt, vor allem <xref:System.Windows.NameScope.Add%2A> , sodass es nicht notwendig ist die <xref:System.Collections.Generic.KeyValuePair%602> Geben Sie Ihre Nutzung.  
  
 Namen in einem XAML-Namensbereich müssen eine bestimmte Grammatik, die die Zeichenfolgen einschränkt, die für Eingaben vom verwenden <xref:System.Windows.NameScope> API. Finden Sie unter [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">Das Element, das in der Auflistung, angegeben als finden eine <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (Schlüssel ist <see cref="T:System.String" />, ist der Wert <see cref="T:System.Object" />).</param>
        <summary>Bestimmt, ob die Auflistung ein angegebenes Element enthält.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifiziert eine vorhandene Zuordnung in dieser <see cref="T:System.Windows.NameScope" /> . <see langword="false" />Wenn das angegebene <see cref="T:System.Collections.Generic.KeyValuePair`2" /> existiert nicht in der aktuellen <see cref="T:System.Windows.NameScope" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind im Allgemeinen nur, ob ein Name bereits in der XAML-Namensbereich definiert ist, und welche Objektverweiswert er zugeordnet ist unerheblich ist interessiert. In diesem Szenario rufen Sie <xref:System.Windows.NameScope.ContainsKey%2A> stattdessen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Die zu suchende Zeichenfolgenschlüssel.</param>
        <summary>Gibt zurück, ob ein angegebene Name in diesem bereits <see cref="T:System.Windows.NameScope" />.</summary>
        <returns>
          <see langword="true" />Wenn das angegebene <paramref name="key" /> identifiziert einen Namen für eine vorhandene Zuordnung in dieser <see cref="T:System.Windows.NameScope" />. <see langword="false" />Wenn das angegebene <paramref name="key" /> existiert nicht in der aktuellen <see cref="T:System.Windows.NameScope" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Namen in einem XAML-Namensbereich müssen eine bestimmte Grammatik, die die Zeichenfolgen einschränkt, die für Eingaben vom verwenden <xref:System.Windows.NameScope> API. Finden Sie unter [XamlName-Grammatik](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das eindimensionale Array, das das Ziel der Elemente aus der Auflistung kopiert muss eine nullbasierte Indizierung.</param>
        <param name="arrayIndex">Der nullbasierte Index im <c>Array</c> an dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Elemente in der Auflistung zugeordneter Namen in diesem <see cref="T:System.Windows.NameScope" />.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Namensteil einer vorhandenen Zuordnung, für den der Objektteil abgerufen werden soll.</param>
        <summary>Gibt das entsprechende Objekt in der XAML-Namensbereich von diesem verwaltet <see cref="T:System.Windows.NameScope" />basierend auf einer angegebenen Namenszeichenfolge.</summary>
        <returns>Das angeforderte Objekt, das zugeordnet ist <paramref name="name" />. Zurückgeben können <see langword="null" /> Wenn <paramref name="name" /> bereitgestellt wurde, als <see langword="null" /> oder leere Zeichenfolge ein, oder wenn kein übereinstimmendes Objekt gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mehrere Basiselemente (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) auch verfügbar machen eine `FindName` Methode mit identischen Funktionen. Die Basiselementversionen führen Sie eine XAML-Namensbereich Suche innerhalb der konventionellen logischen Struktur, die für das Stammelement arbeiten. Nachdem die Verwendung von XAML-Namensbereich ermittelt wird, wird diese Verwendung von XAML-Namensbereich für den angeforderten Namen abgefragt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Das Objekt, aus dem der XAML-Namensbereich abgerufen werden soll.</param>
        <summary>Stellt den Get-Accessor für die <see cref="P:System.Windows.NameScope.NameScope" /> -Eigenschaft.</summary>
        <returns>Ein XAML-Namensbereich als ein <see cref="T:System.Windows.Markup.INameScope" /> Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird sowohl zum Implementieren der `get` Accessor für die Verwendung von <xref:System.Windows.NameScope.NameScope%2A> als angefügte Eigenschaft in XAML-Verwendung und den Accessor für das Durchführen von des entsprechenden Vorgangs im Code bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>Gibt immer <see langword="false" /> zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Benennen Sie der Zeichenfolgennamen für den XAML-Zuordnung zum Abrufen oder festlegen.</param>
        <summary>Ruft ab oder legt das Element mit dem angegebenen Schlüssel.</summary>
        <value>Der Wert des Objekts, durch die Verwendung von XAML-Namen als bereitgestellt zugeordnet <paramref name="key" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" />Dient als <see langword="null" />.  
  
 - oder -   
  
 <paramref name="value" />Dient als <see langword="null" /> für einen Set-Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Schlüssel in der <see cref="T:System.Windows.NameScope" /> Wörterbuch.</summary>
        <value>Eine Auflistung der Schlüssel in der <see cref="T:System.Windows.NameScope" /> Wörterbuch.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.NameScope.NameScope" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Der Name, der zum Zuordnen des angegebenen Objekts verwendet werden soll.</param>
        <param name="scopedElement">Das Objekt, das dem angegebenen Namen zugeordnet werden soll.</param>
        <summary>Registriert ein neues Name/Objekt-Paar beim aktuellen XAML-Namensbereich.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />oder <paramref name="scopedElement" /> bereitgestellt wurde, als <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />wurde als leere Zeichenfolge angegeben.  
  
 \- oder –  
  
 <paramref name="name" />bereitgestellt wurde vom Parser abgelehnt, da er Zeichen enthält, die für einen XAML-Namen ungültig sind  
  
 \- oder –  
  
 <paramref name="name" />bereitgestellt in einer doppelten namensregistrierung führen würde.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item">Das Objekt, das aus der Auflistung, angegeben als entfernt eine <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (Schlüssel ist <see cref="T:System.String" />, ist der Wert <see cref="T:System.Object" />).</param>
        <summary>Entfernt das Objekt aus der Auflistung.</summary>
        <returns>
          <see langword="true" />Wenn das Element erfolgreich aus der Auflistung entfernt wurde andernfalls <see langword="false" />. Außerdem gibt <see langword="false" /> , wenn das Element nicht in der Auflistung gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da <xref:System.Windows.NameScope> ist ein Wörterbuch, das es kein Konzept des ersten Vorkommens; jedes <xref:System.Collections.Generic.KeyValuePair%602> ist garantiert eindeutig.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Die Zeichenfolgenschlüssel den Namen des zu entfernenden Zuordnung von XAML-Namensbereich.</param>
        <summary>Entfernt eine Zuordnung für einen angegebenen Namen aus der Auflistung.</summary>
        <returns>
          <see langword="true" />Wenn das Element erfolgreich aus der Auflistung entfernt wurde andernfalls <see langword="false" />. Außerdem gibt <see langword="false" /> , wenn das Element nicht in der Auflistung gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode umschließt, vor allem <xref:System.Windows.NameScope.UnregisterName%2A>, zurückgebenden `false` in Fällen, die andernfalls Ausnahmen ausgelöst hätten <xref:System.Windows.NameScope.UnregisterName%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Objekt, für das der XAML-Namensbereich geändert werden soll.</param>
        <param name="value">Der neue XAML-Namensbereich über eine Schnittstellenumwandlung.</param>
        <summary>Stellt die angefügte Eigenschaft Set-Accessor für die <see cref="P:System.Windows.NameScope.NameScope" /> -Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient sowohl als fungieren die `set` Accessor für die Verwendung von <xref:System.Windows.NameScope.NameScope%2A> als angefügte Eigenschaft in XAML-Verwendung und den Accessor für das Durchführen von des entsprechenden Vorgangs im Code bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
        <returns>Ein Enumerator, der eine Auflistung durchläuft.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des abzurufenden Werts.</param>
        <param name="value">Wenn diese Methode zurückgibt, enthält den Wert mit dem angegebenen Schlüssel zugeordnet ist, wenn der Schlüssel gefunden wird; andernfalls ein null-Objekt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft den dem angegebenen Schlüssel zugeordneten Wert ab.</summary>
        <returns>True, wenn die <see cref="T:System.Windows.NameScope" /> enthält eine Zuordnung für den Namen des Kapitels <paramref name="key" />. Andernfalls "false".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu entfernenden Zuordnung.</param>
        <summary>Entfernt eine Name-Objekt-Zuordnung aus dem XAML-Namensbereich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vor dem Aufrufen dieser Methode können Sie <xref:System.Windows.NameScope.FindName%2A> um zu bestimmen, ob eine bestimmte Zuordnung von Name-Objekt vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />wurde als leere Zeichenfolge angegeben werden.  
  
 \- oder –  
  
 <paramref name="name" />bereitgestellt wurde nicht registriert.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Werte in der <see cref="T:System.Windows.NameScope" /> Wörterbuch.</summary>
        <value>Eine Auflistung der Werte in der <see cref="T:System.Windows.NameScope" /> Wörterbuch.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
