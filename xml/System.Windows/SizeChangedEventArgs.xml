<Type Name="SizeChangedEventArgs" FullName="System.Windows.SizeChangedEventArgs">
  <TypeSignature Language="C#" Value="public class SizeChangedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SizeChangedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SizeChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten im Zusammenhang mit der <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> Ereignis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HeightChanged">
      <MemberSignature Language="C#" Value="public bool HeightChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeightChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SizeChangedEventArgs.HeightChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="P:System.Windows.FrameworkElement.Height" /> -Komponente der Größe geändert wurde.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="P:System.Windows.FrameworkElement.Height" /> -Komponente von der Größe geändert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da <xref:System.Double> Genauigkeit Prozess mit Zahlen, diese Eigenschaft gibt den Wert möglicherweise `false` , auch wenn <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> und <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> ungleich sind.  
  
 Das Layoutsystem verringerten gelegentlich dieser Status aufgrund kleinere schwankungen in den Eingabeparametern; Allerdings gilt die allgemeine gerenderte Szene identisch sein; aus diesem Grund werden keine sichtbaren Änderungen erkannt. Der Handler für das <xref:System.Windows.FrameworkElement.SizeChanged> Ereignis sollte für diesen Zustand überprüfen, um Ungültigkeit des Layouts zu vermeiden, wenn die Dimension nicht tatsächlich geändert haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Der generische Handler auf eine Weise typspezifische aufrufen.</param>
        <param name="genericTarget">Das Ziel den Handler aufgerufen werden.</param>
        <summary>-Ereignishandler aufgerufen werden typspezifische versehen, Ereignis-System-Effizienz steigern können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung wandelt den generischen Handler als eine <xref:System.Windows.SizeChangedEventHandler> und ruft ihn dann auf. Ausführliche Informationen zu diesem Implementierungsmuster und die Gründe dafür, finden Sie unter <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> und [Ereignisübersicht weitergeleitet](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size NewSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size NewSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SizeChangedEventArgs.NewSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die neue <see cref="T:System.Windows.Size" /> des Objekts.</summary>
        <value>Die neue <see cref="T:System.Windows.Size" /> des Objekts.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size PreviousSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PreviousSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SizeChangedEventArgs.PreviousSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vorherigen <see cref="T:System.Windows.Size" /> des Objekts.</summary>
        <value>Der vorherige <see cref="T:System.Windows.Size" /> des Objekts.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthChanged">
      <MemberSignature Language="C#" Value="public bool WidthChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WidthChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.SizeChangedEventArgs.WidthChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="P:System.Windows.FrameworkElement.Width" /> -Komponente der Größe geändert wurde.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="P:System.Windows.FrameworkElement.Width" /> -Komponente von der Größe geändert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da <xref:System.Double> Genauigkeit Prozess mit Zahlen, diese Eigenschaft gibt den Wert möglicherweise `false` , auch wenn <xref:System.Windows.SizeChangedEventArgs.PreviousSize%2A> und <xref:System.Windows.SizeChangedEventArgs.NewSize%2A> ungleich sind.  
  
 Das Layoutsystem verringerten gelegentlich dieser Status aufgrund kleinere schwankungen in den Eingabeparametern; Allerdings gilt die allgemeine gerenderte Szene identisch sein; aus diesem Grund werden keine sichtbaren Änderungen erkannt. Der Handler für das <xref:System.Windows.FrameworkElement.SizeChanged> Ereignis sollte für diesen Zustand überprüfen, um Ungültigkeit des Layouts zu vermeiden, wenn die Dimension nicht tatsächlich geändert haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
