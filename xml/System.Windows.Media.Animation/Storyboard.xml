<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ein Containerzeitachse, die Zielinformationen zu Objekten und Eigenschaften für die untergeordneten Animationen bereitstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a>Interaktiv steuern des Storyboards  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard im Markup steuerbar, geben Sie die <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> Eigenschaft von der <xref:System.Windows.Media.Animation.BeginStoryboard> -Objekt wird erstellt, ein Beispiel finden Sie unter [Vorgehensweise: Ereignistriggern verwenden, um ein Storyboard nach dem Start zu steuern](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
## <a name="data-binding-and-animating-timelines"></a>Datenbindung und Animieren von Zeitplänen  
 Die meisten Zeitachse Eigenschaften können Daten gebunden oder animiert werden; Allerdings wird aufgrund der Art und Weise die Zeitsteuerungssystems funktioniert, ein datengebundenen oder animierte Zeitachsen keine anderen Daten verhalten sich wie gebunden oder animierte Objekte. Um ihr Verhalten zu verstehen, sollten sie wissen, worum es sich dabei um einen Zeitplan zu aktivieren.  
  
 Wenn eine Zeitachse aktiviert ist, werden Kopien der Zeitachse und deren untergeordnete Zeitachsen erstellt. Diese Kopien werden gesperrt (schreibgeschützt) und <xref:System.Windows.Media.Animation.Clock> Objekte daraus erstellt werden. Das eigentliche Animieren der Zieleigenschaften erfolgt durch diese Uhren. Wenn eine Zeitachse ist datengebunden oder animiert wird, eine Momentaufnahme der aktuellen Werte wird ausgelöst, wenn die Uhr erstellt wird. Obwohl möglicherweise so ändern Sie die ursprünglichen Zeitplan fortgesetzt, nicht die Uhr.  
  
 Eine Zeitachse Daten Bindung oder Animation widerzuspiegeln muss die Uhr neu erstellt werden. Uhren werden nicht für Sie automatisch neu erstellt. Im Folgenden werden verschiedene Methoden beschrieben, wie Änderungen der Zeitachse übernommen werden können:  
  
-   Wenn die Zeitachse oder gehört zu einer <xref:System.Windows.Media.Animation.Storyboard>, haben, damit es die Änderungen zu berücksichtigen, durch die erneute Anwendung der Storyboard mit einer <xref:System.Windows.Media.Animation.BeginStoryboard> oder <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode. Dies hat den Nebeneffekt, dass auch die Animation neu gestartet wird. Im Code können Sie die <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> Methode, um das Storyboard zu wechseln zur vorherigen Position zurück.  
  
-   Wenn Sie eine Animation direkt an eine Eigenschaft mit der <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> -Methode, rufen die <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> -Methode erneut auf und übergeben sie die Animation, die geändert wurde.  
  
-   Wenn Sie direkt auf der Uhrebene arbeiten, erstellen Sie und wenden Sie einen neuen Satz von Uhren an, und verwenden Sie, um den früheren Satz von erstellten Uhren ersetzen.  
  
 Ein Beispiel einer Animation gebunden ist, finden Sie unter [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Media.Animation.Storyboard" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initiiert den Satz von zugeordneten Animationen <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Storyboards gestartet, die mit dieser Methode können nicht angehalten, fortgesetzt werden, oder andernfalls interaktiv gesteuert werden, nachdem sie gestartet wurden. Um ein Storyboard steuerbar festzulegen, verwenden Sie die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> oder <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Storyboards gestartet, die mit dieser Methode können nicht angehalten, fortgesetzt werden, oder andernfalls interaktiv gesteuert werden, nachdem sie gestartet wurden. Um ein Storyboard steuerbar festzulegen, verwenden Sie die <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> oder <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> Methode.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="isControllable">
          <see langword="true" />, wenn das Storyboard interaktiv steuerbar sein soll, andernfalls <see langword="false" />.</param>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie angeben, die gleiche `containingObject` beim Aufruf der interaktiven Methoden verwenden, die das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele und initialisiert sie mit dem angegebenen <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> weiterhin diese Eigenschaft zuvor zugewiesenen Objekte an Systemressourcen beanspruchen, die Zeitsteuerungssystems aber nicht Entfernen Sie diese Uhren automatisch.  
  
 Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen. Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.  
  
-   Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts. Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite. Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.  
  
-   Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>. Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr. Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`. Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen, wenn die effektive Dauer der Uhr endlos ist.  In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.  Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.  
  
 Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> animieren, wenn der Benutzer klicken, und die <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> Wenn der Benutzer klickt.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="isControllable">
          <see langword="true" />, wenn das Storyboard interaktiv steuerbar sein soll, andernfalls <see langword="false" />.</param>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das Objekt, mit dem angegebenen <c>FrameworkTemplate</c> angewendet wurde. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="frameworkTemplate">Die Vorlage, die animiert werden soll.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele innerhalb der angegebenen Vorlage und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen angegebenen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele und initialisiert sie mit dem angegebenen <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> animieren, wenn der Benutzer klicken, und die <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> Wenn der Benutzer klickt.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen angegebenen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <param name="isControllable">Bestimmt, ob die Animation steuerbar ist (angehalten werden kann) gestartet.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele und initialisiert sie mit dem angegebenen <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der angegebenen-Übergabeverhalten.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie angeben, die gleiche `containingObject` beim Aufruf der interaktiven Methoden verwenden, die das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
## <a name="using-the-compose-handoffbehavior"></a>Mit dem Verfassen HandoffBehavior  
 Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> weiterhin diese Eigenschaft zuvor zugewiesenen Objekte an Systemressourcen beanspruchen, die Zeitsteuerungssystems aber nicht Entfernen Sie diese Uhren automatisch.  
  
 Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen. Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.  
  
-   Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts. Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite. Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.  
  
-   Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>. Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr. Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`. Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen, wenn die effektive Dauer der Uhr endlos ist.  In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.  Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.  
  
 Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 Im nächste Beispiel wird die <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> animieren, wenn der Benutzer klicken, und die <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> Wenn der Benutzer klickt.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das Objekt, mit dem angegebenen <c>FrameworkTemplate</c> angewendet wurde.  Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="frameworkTemplate">Die Vorlage, die animiert werden soll.</param>
        <param name="isControllable">
          <see langword="true" />, wenn das Storyboard interaktiv steuerbar sein soll, andernfalls <see langword="false" />.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele innerhalb der angegebenen Vorlage und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zieleigenschaften bereits animiert werden, werden sie ersetzt, mit der <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> -Übergabeverhalten.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie angeben, die gleiche `containingObject` beim Aufruf der interaktiven Methoden verwenden, die das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das Objekt, mit dem angegebenen <c>FrameworkTemplate</c> angewendet wurde. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="frameworkTemplate">Die Vorlage, die animiert werden soll.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele innerhalb der angegebenen Vorlage und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
## <a name="using-the-compose-handoffbehavior"></a>Mit dem Verfassen HandoffBehavior  
 Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> weiterhin diese Eigenschaft zuvor zugewiesenen Objekte an Systemressourcen beanspruchen, die Zeitsteuerungssystems aber nicht Entfernen Sie diese Uhren automatisch.  
  
 Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen. Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.  
  
-   Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts. Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite. Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.  
  
-   Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>. Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr. Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`. Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen, wenn die effektive Dauer der Uhr endlos ist.  In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.  Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.  
  
 Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Ein Objekt, das im selben Namensbereich wie die Ziele der Animationen dieses Storyboards enthalten ist. Animationen ohne einen angegebenen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <param name="isControllable">Bestimmt, ob die Animation steuerbar ist (angehalten werden kann) gestartet.</param>
        <summary>Wendet die Animationen, die diesem <see cref="T:System.Windows.Media.Animation.Storyboard" /> zugeordnet sind, auf ihre Ziele an und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
## <a name="using-the-compose-handoffbehavior"></a>Mit dem Verfassen HandoffBehavior  
 Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> weiterhin diese Eigenschaft zuvor zugewiesenen Objekte an Systemressourcen beanspruchen, die Zeitsteuerungssystems aber nicht Entfernen Sie diese Uhren automatisch.  
  
 Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen. Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.  
  
-   Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts. Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite. Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.  
  
-   Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>. Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr. Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`. Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen, wenn die effektive Dauer der Uhr endlos ist.  In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.  Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.  
  
 Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 Im folgende Beispiel wird das Erstellen eines steuerbaren Storyboards veranschaulicht.  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 Im nächste Beispiel wird die <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> animieren, wenn der Benutzer klicken, und die <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> Wenn der Benutzer klickt.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das Objekt, mit dem angegebenen <c>FrameworkTemplate</c> angewendet wurde. Animationen ohne einen <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> gelten für <c>ContainingObject</c>.</param>
        <param name="frameworkTemplate">Die Vorlage, die animiert werden soll.</param>
        <param name="handoffBehavior">Das Verhalten der neuen Animation sollten für die Interaktion mit der alle aktuellen Animationen verwenden.</param>
        <param name="isControllable">
          <see langword="true" />, wenn das Storyboard interaktiv steuerbar sein soll, andernfalls <see langword="false" />.</param>
        <summary>Wendet die Animationen zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" /> auf ihre Ziele innerhalb der angegebenen Vorlage und initiiert sie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie angeben, die gleiche `containingObject` beim Aufruf der interaktiven Methoden verwenden, die das Storyboard beginnen  
  
 Wenn diese Methode aufgerufen wird, <xref:System.Windows.Media.Animation.Clock> Objekte werden erstellt, für das Storyboard und ggf. Zeitachsen, die es enthält. Diese Uhren aufbewahrten `containingObject`.  
  
 Ein Trigger Storyboard ab dem <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignisse.  
  
## <a name="using-the-compose-handoffbehavior"></a>Mit dem Verfassen HandoffBehavior  
 Beim Anwenden einer <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, oder <xref:System.Windows.Media.Animation.AnimationClock> mit einer Eigenschaft mithilfe der <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, stellen alle <xref:System.Windows.Media.Animation.Clock> weiterhin diese Eigenschaft zuvor zugewiesenen Objekte an Systemressourcen beanspruchen, die Zeitsteuerungssystems aber nicht Entfernen Sie diese Uhren automatisch.  
  
 Um Leistungsprobleme zu vermeiden, wenn Sie eine große Anzahl von Uhren mit anwenden <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, Sie sollten zusammengesetzte Uhren aus der animierten Eigenschaft nach dem Abschluss entfernen. Es gibt mehrere Möglichkeiten, eine Uhr zu entfernen.  
  
-   Verwenden Sie zum Entfernen aller Uhren aus einer Eigenschaft der <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> oder <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> -Methode des animierten Objekts. Geben Sie die Eigenschaft als erster Parameter animierten und `null` als das zweite. Dadurch werden alle Animationsuhren aus der Eigenschaft entfernt.  
  
-   Zum Entfernen einer bestimmten <xref:System.Windows.Media.Animation.AnimationClock> , aus einer Liste von Uhren verwenden die <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft der <xref:System.Windows.Media.Animation.AnimationClock> abgerufen eine <xref:System.Windows.Media.Animation.ClockController>, rufen Sie anschließend die <xref:System.Windows.Media.Animation.ClockController.Remove%2A> Methode der <xref:System.Windows.Media.Animation.ClockController>. Dies erfolgt in der Regel in der <xref:System.Windows.Media.Animation.Clock.Completed> -Ereignishandler für eine Uhr. Beachten Sie, dass nur Stammuhren von gesteuert werden, können eine <xref:System.Windows.Media.Animation.ClockController>; das <xref:System.Windows.Media.Animation.Clock.Controller%2A> Eigenschaft einer untergeordneten Uhr gibt `null`. Beachten Sie auch, dass die <xref:System.Windows.Media.Animation.Clock.Completed> Ereignis wird nicht aufgerufen, wenn die effektive Dauer der Uhr endlos ist.  In diesem Fall muss der Benutzer bestimmen beim Aufrufen <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 Dies betrifft hauptsächlich Animationen für Objekte, die eine lange Lebensdauer haben.  Wenn ein Objekt Garbage Collection durchgeführt wird, wird die Uhren werden auch getrennt, und Sammlung veralteter Objekte aufgenommen.  
  
 Weitere Informationen zu Uhr Objekten finden Sie unter [Animationen und zeitlichen Steuerung Systemübersicht](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen änderbaren Klon dieser <see cref="T:System.Windows.Media.Animation.Storyboard" />, indem tiefe Kopien der Werte dieses Objekts erzeugt werden. Beim Kopieren von Abhängigkeitseigenschaften kopiert diese Methode Ressourcenverweise und Datenbindungen (die aber möglicherweise nicht mehr aufgelöst werden können), jedoch keine Animationen oder ihre aktuellen Werte.</summary>
        <returns>Ein änderbarer Klon des aktuellen Objekts. Die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft des geklonten Objekts ist <see langword="false" />, auch wenn die <see cref="P:System.Windows.Freezable.IsFrozen" />-Eigenschaft der Quelle <see langword="true." /> ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte (oder eine beliebige <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version mit einer Implementierung mit starker Typisierung.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz der <see cref="T:System.Windows.Media.Animation.Storyboard" />-Klasse.</summary>
        <returns>Eine neue <see cref="T:System.Windows.Media.Animation.Storyboard" />-Instanz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird intern von aufgerufen <xref:System.Windows.Freezable.CreateInstance%2A> für die Erstellung neue Instanzen der <xref:System.Windows.Media.Animation.Storyboard> Klasse für die verschiedenen Methoden zum Klonen (z. B. <xref:System.Windows.Freezable.Clone%2A> und <xref:System.Windows.Freezable.CloneCurrentValue%2A>).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine typische Implementierung der <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jede <see cref="T:System.Windows.Media.Animation.Storyboard" /> Unterklasse muss diese Methode implementieren. Typische Implementierung ist einfach den Standardkonstruktor der Klasse aufrufen und das Ergebnis zurückgeben.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Uhr <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> Geschwindigkeit ist die Rate, mit der Zeit gegenwärtig fortschreitet wird, im Verhältnis zur tatsächlichen Zeit.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Die aktuelle globale Geschwindigkeit oder 0, wenn die Uhr angehalten wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Die aktuelle globale Geschwindigkeit oder <see langword="null" /> , wenn die Uhr angehalten wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Uhr <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> Geschwindigkeit ist die Rate, mit der Zeit gegenwärtig fortschreitet wird, im Verhältnis zur tatsächlichen Zeit.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Die aktuelle globale Geschwindigkeit oder <see langword="null" /> , wenn die Uhr angehalten wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einer Uhr <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> Geschwindigkeit ist die Rate, mit der Zeit gegenwärtig fortschreitet wird, im Verhältnis zur tatsächlichen Zeit.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Diese Uhr aktuelle Iteration in der aktuellen aktiven Zeitraum oder <see langword="null" /> , wenn diese Uhr angehalten wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erste Iteration einer Uhr hat den Wert 1.  
  
 Wenn das Storyboard verfügt eine <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> Festlegen von `true`, eine vollständige Iteration besteht aus einem Vorwärts-Rückwärts-Paar, nicht nur eines dieser Segmente.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Diese Uhr aktuelle Iteration in der aktuellen aktiven Zeitraum oder <see langword="null" /> , wenn diese Uhr angehalten wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erste Iteration einer Uhr hat den Wert 1.  
  
 Wenn das Storyboard verfügt eine <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> Festlegen von `true`, eine vollständige Iteration besteht aus einem Vorwärts-Rückwärts-Paar, nicht nur eines dieser Segmente.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Diese Uhr aktuelle Iteration in der aktuellen aktiven Zeitraum oder <see langword="null" /> , wenn diese Uhr angehalten wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erste Iteration einer Uhr hat den Wert 1.  
  
 Wenn diese Uhr Zeitachse verfügt ein <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> Festlegen von `true`, eine vollständige Iteration besteht aus einem Vorwärts-Rückwärts-Paar, nicht nur eines dieser Segmente.  
  
 Unabhängig von der aktuellen Iteration Gibt beim Durchsuchen einer Uhr die aktuellen Iteration 1 zurück. Beim Neustarten einer Uhr gibt auch die aktuelle Iteration 1 zurück.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn die Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, oder 0,0, wenn die Uhr aktiv ist und die zugehörige <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> verfügt über eine <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> von <see cref="P:System.Windows.Duration.Forever" />ist, andernfalls einen Wert zwischen 0,0 und 1,0, der den aktuellen Status dieser Uhr innerhalb der aktuellen Iteration angibt. Der Wert 0,0 zeigt an, keinen Status und ein Wert von 1,0 gibt an, dass die Uhr am Ende der aktuellen Iteration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn die Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, oder 0,0, wenn die Uhr aktiv ist und die zugehörige <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> verfügt über eine <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> von <see cref="P:System.Windows.Duration.Forever" />ist, andernfalls einen Wert zwischen 0,0 und 1,0, der den aktuellen Status dieser Uhr innerhalb der aktuellen Iteration angibt. Der Wert 0,0 zeigt an, keinen Status und ein Wert von 1,0 gibt an, dass die Uhr am Ende der aktuellen Iteration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn die Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, oder 0,0, wenn die Uhr aktiv ist und die zugehörige <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> verfügt über eine <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> von <see cref="P:System.Windows.Duration.Forever" />ist, andernfalls einen Wert zwischen 0,0 und 1,0, der den aktuellen Status dieser Uhr innerhalb der aktuellen Iteration angibt. Der Wert 0,0 zeigt an, keinen Status und ein Wert von 1,0 gibt an, dass die Uhr am Ende der aktuellen Iteration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Der aktuelle Zustand der Uhr für dieses Storyboard erstellt: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, oder <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann nicht ermittelt werden, ob ein Storyboard angehalten wurde. Um zu bestimmen, ob ein Storyboard angehalten wurde, verwenden Sie die <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> Methode.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Der aktuelle Zustand der Uhr für dieses Storyboard erstellt: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, oder <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann nicht ermittelt werden, ob ein Storyboard angehalten wurde. Um zu bestimmen, ob ein Storyboard angehalten wurde, verwenden Sie die <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> Methode.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Der aktuelle Zustand der Uhr für dieses Storyboard erstellt: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, oder <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann nicht ermittelt werden, ob ein Storyboard angehalten wurde. Um zu bestimmen, ob ein Storyboard angehalten wurde, verwenden Sie die <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> Methode.  
  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn das Storyboard Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />ist, andernfalls die aktuelle Zeit des Uhr des Storyboards.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn das Storyboard Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />ist, andernfalls die aktuelle Zeit des Uhr des Storyboards.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> von der <see cref="T:System.Windows.Media.Animation.Clock" /> , die für diese erstellt wurde <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          <see langword="null" />Wenn das Storyboard Uhr <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />ist, andernfalls die aktuelle Zeit des Uhr des Storyboards.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" /> wurde angehalten.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellt <see cref="T:System.Windows.Media.Animation.Storyboard" /> angehalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" /> wurde angehalten.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellt <see cref="T:System.Windows.Media.Animation.Storyboard" /> angehalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" /> wurde angehalten.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellt <see cref="T:System.Windows.Media.Animation.Storyboard" /> angehalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Methode zum Abrufen von Informationen über ein Storyboard-Format verwenden, muss das Storyboard steuerbar sein. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Der Zeitachse aus dem Abrufen der <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> Wert des angegebenen <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Das Ziel des Dependency-Objekts <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Media.Animation.Storyboard.Target%2A> angefügte Eigenschaft mit Animationszeitachsen, um das Objekt anzugeben, die sie abzielen. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Der Zeitachse aus dem Abrufen der <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> Wert des angegebenen <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Der Name der Dependency-Objekt, das Ziel <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> -Eigenschaft für das angegebene Objekt. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Das Abhängigkeitsobjekt, aus dem abgerufen der <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</param>
        <summary>Ruft die <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> Wert des angegebenen <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Die Eigenschaft, die das Ziel <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> -Eigenschaft für das angegebene Objekt. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> -Eigenschaft. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 Beachten Sie, dass bei der <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> festgelegt wurde im Markup, gibt diese Methode ein leeres <xref:System.Windows.PropertyPath> weil der Eigenschaftsverweis aufgelöst und intern gespeichert wird, wenn er aufgelöst ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hält die <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode hält das Storyboard, aber keine messbaren Auswirkungen hat, ist er nicht aktiv ist oder derzeit angehalten. Als Nebeneffekt werden alle zugehörigen untergeordneten Elemente auch angehalten.  
  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
## <a name="beginning-a-paused-storyboard"></a>Starten eines angehaltenen Storyboards  
 Wenn Sie <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> fortgesetzt und neu starten eines Storyboards, die angehalten wurde, wird angezeigt. Allerdings ist, die nicht was tatsächlich geschieht. Die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode tatsächlich ersetzt den angehaltenen <xref:System.Windows.Media.Animation.Storyboard> mit einer neuen nicht angehaltene Version. Jedes Mal die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> -Methode aufgerufen wird, Uhrobjekte werden für das Storyboard erstellt. Diese Uhren verteilt werden an den Eigenschaften, die sie dem animiert werden soll. In diesem Fall bei der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode wird aufgerufen, erneut, es seine Uhren nicht neu gestartet; es durch neue Uhren ersetzt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Hält die <see cref="T:System.Windows.Media.Animation.Clock" /> des angegebenen <see cref="T:System.Windows.FrameworkContentElement" /> zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode hält das Storyboard, aber keine messbaren Auswirkungen hat, ist er nicht aktiv ist oder derzeit angehalten. Als Nebeneffekt werden alle zugehörigen untergeordneten Elemente auch angehalten.  
  
 Durch das Durchsuchen einer angehaltenen Storyboards wird es nicht fortgesetzt. Die einzige Möglichkeit, eine angehaltene Storyboards ist die Verwendung der <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> Methode. Aufrufen der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> -Methode ersetzt erneut angehaltene Storyboard mit einer neuen, besitzt die Darstellung der fortgesetzt wird.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Für ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Anhalten der Uhr eines Storyboards wird die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
## <a name="beginning-a-paused-storyboard"></a>Starten eines angehaltenen Storyboards  
 Wenn Sie <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> fortgesetzt und neu starten eines Storyboards, die angehalten wurde, wird angezeigt. Allerdings ist, die nicht was tatsächlich geschieht. Die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode ersetzt selbst tatsächlich mit einer Version an. Jedes Mal die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> -Methode aufgerufen wird, Uhrobjekte werden für das Storyboard erstellt. Diese Uhren verteilt werden an den Eigenschaften, die sie dem animiert werden soll. In diesem Fall bei der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode wird aufgerufen, erneut, es seine Uhren nicht neu gestartet; es durch neue Uhren ersetzt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Hält die <see cref="T:System.Windows.Media.Animation.Clock" /> des angegebenen <see cref="T:System.Windows.FrameworkElement" /> zugeordnete <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode hält das Storyboard, aber keine messbaren Auswirkungen hat, ist er nicht aktiv ist oder derzeit angehalten. Als Nebeneffekt werden alle zugehörigen untergeordneten Elemente auch angehalten.  
  
 Durch das Durchsuchen einer angehaltenen Storyboards wird es nicht fortgesetzt. Die einzige Möglichkeit, eine angehaltene Storyboards ist die Verwendung der <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> Methode. Aufrufen der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> -Methode ersetzt erneut angehaltene Storyboard mit einer neuen, besitzt die Darstellung der fortgesetzt wird.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Anhalten der Uhr eines Storyboards wird die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
## <a name="beginning-a-paused-storyboard"></a>Starten eines angehaltenen Storyboards  
 Wenn Sie <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> fortgesetzt und neu starten eines Storyboards, die angehalten wurde, wird angezeigt. Allerdings ist, die nicht was tatsächlich geschieht. Die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode ersetzt selbst tatsächlich mit einer Version an. Jedes Mal die <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> -Methode aufgerufen wird, Uhrobjekte werden für das Storyboard erstellt. Diese Uhren verteilt werden an den Eigenschaften, die sie dem animiert werden soll. In diesem Fall bei der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode wird aufgerufen, erneut, es seine Uhren nicht neu gestartet; es durch neue Uhren ersetzt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animationen, die zu diesem gehören <see cref="T:System.Windows.Media.Animation.Storyboard" /> nicht mehr Auswirkungen auf die Eigenschaften, die sie ehemals animiert haben, unabhängig von deren <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> Einstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Alle interaktiven Aktionen auf einer <xref:System.Windows.Media.Animation.Clock>, und daher auch auf eine <xref:System.Windows.Media.Animation.Storyboard>, auf das nächste Ticken des Moduls die kurz vor dem nächsten Rendern ausgeführt wird, ein Timeout auftreten. Dies bedeutet, dass die <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> Methode noch wirkt sich auf der animierten Eigenschaften bis zu diesem Zeitpunkt. Das heißt, wird das nächste Mal, das Frames angezeigt wird, das Storyboard entfernt. Wenn Sie eine Animation aus einer Eigenschaft vor diesem Zeitpunkt aufheben müssen, verwenden Sie die <xref:System.Windows.UIElement.BeginAnimation%2A> Methode mit einer `animation` -Parameterwert `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Entfernt die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animationen, die zu diesem gehören <see cref="T:System.Windows.Media.Animation.Storyboard" /> nicht mehr Auswirkungen auf die Eigenschaften, die sie ehemals animiert haben, unabhängig von deren <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> Einstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Entfernen die Uhr eines Storyboards wird die <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Entfernt die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />. Animationen, die zu diesem gehören <see cref="T:System.Windows.Media.Animation.Storyboard" /> nicht mehr Auswirkungen auf die Eigenschaften, die sie ehemals animiert haben, unabhängig von deren <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> Einstellung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Entfernen die Uhr eines Storyboards wird die <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Setzt die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fortsetzen eines Storyboards, das nicht angehalten wurde, hat keine Auswirkungen.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Durch das Durchsuchen einer angehaltenen Storyboards wird es nicht fortgesetzt. Die einzige Möglichkeit, eine angehaltene Storyboards ist die Verwendung der <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> Methode. Aufrufen der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode nach dem Start des Storyboards ersetzt die alte Storyboard besitzt die Darstellung der fortgesetzt wird.  
  
 Fortsetzen einer angehaltenen Uhr eines Storyboards löst die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Setzt die <see cref="T:System.Windows.Media.Animation.Clock" /> dafür erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fortsetzen eines Storyboards, das nicht angehalten wurde, hat keine Auswirkungen.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Durch das Durchsuchen einer angehaltenen Storyboards wird es nicht fortgesetzt. Die einzige Möglichkeit, eine angehaltene Storyboards ist die Verwendung der <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> Methode. Aufrufen der <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode nach dem Start des Storyboards ersetzt die alte Storyboard besitzt die Darstellung der fortgesetzt wird.  
  
 Fortsetzen einer angehaltenen Uhr eines Storyboards löst die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem der Zeitachse vorwärts oder rückwärts verschoben werden soll.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> an die angegebene Position. Die <see cref="T:System.Windows.Media.Animation.Storyboard" /> führt die angeforderte Suche bei der nächsten Zeiteinheit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> an die angegebene Position. Die <see cref="T:System.Windows.Media.Animation.Storyboard" /> führt die angeforderte Suche bei der nächsten Zeiteinheit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> an die angegebene Position. Die <see cref="T:System.Windows.Media.Animation.Storyboard" /> führt die angeforderte Suche bei der nächsten Zeiteinheit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Diese Methode ändert der Storyboarduhr <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> auf <xref:System.Windows.Media.Animation.ClockState.Active>. Diese Methode hat keine Auswirkungen auf die Zeitstruktur, bis das nächste Mal, das ein Takt verarbeitet wird. Als Nebeneffekt werden die entsprechenden Ereignisse auch nicht erst dann ausgelöst.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Suchen eines Storyboards werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt sowohl den <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> und <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Methoden.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> an die angegebene Position. Die <see cref="T:System.Windows.Media.Animation.Storyboard" /> führt die angeforderte Suche bei der nächsten Zeiteinheit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Diese Methode ändert der Storyboarduhr <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> auf <xref:System.Windows.Media.Animation.ClockState.Active>. Diese Methode hat keine Auswirkungen auf die Zeitstruktur, bis das nächste Mal, das ein Takt verarbeitet wird. Als Nebeneffekt werden die entsprechenden Ereignisse auch nicht erst dann ausgelöst.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden, wenn sie nicht steuerbar festgelegt ist. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Suchen eines Storyboards werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie eine Minute, nachdem ein Storyboard beginnt suchen (überspringen).  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 Das nächste Beispiel zeigt sowohl den <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> und <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Methoden.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem der Zeitachse vorwärts oder rückwärts verschoben werden soll.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> zu einer neuen Position sofort (synchron).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>Fehlerzeitpunkt Ticken richtet die <xref:System.Windows.Media.Animation.Storyboard> mit dem letzten Ticken. Werte werden sofort aktualisiert, um die Änderungen wider <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, auch wenn der Bildschirm nicht über diese Änderungen bis die Updates Bildschirm wiedergibt.  
  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> zu einer neuen Position sofort (synchron).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>Fehlerzeitpunkt Ticken richtet die <xref:System.Windows.Media.Animation.Storyboard> mit dem letzten Ticken. Werte werden sofort aktualisiert, um die Änderungen wider <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, auch wenn der Bildschirm nicht über diese Änderungen bis die Updates Bildschirm wiedergibt.  
  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> zu einer neuen Position sofort (synchron).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>Fehlerzeitpunkt Ticken richtet die <xref:System.Windows.Media.Animation.Storyboard> mit dem letzten Ticken. Werte werden sofort aktualisiert, um die Änderungen wider <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, auch wenn der Bildschirm nicht über diese Änderungen bis die Updates Bildschirm wiedergibt.  
  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Diese Methode ändert der Storyboarduhr <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> an  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Suchen eines Storyboards werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt sowohl den <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> und <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Methoden.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="offset">Ein positiver oder negativer Wert, der den Betrag, mit dem die Zeitachse sollten vorwärts oder rückwärts aus dem angegebenen verschoben <c>Ursprung</c>.</param>
        <param name="origin">Die Position, ab der <c>Offset</c> angewendet wird.</param>
        <summary>Durchsucht dieses <see cref="T:System.Windows.Media.Animation.Storyboard" /> zu einer neuen Position sofort (synchron).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>Fehlerzeitpunkt Ticken richtet die <xref:System.Windows.Media.Animation.Storyboard> mit dem letzten Ticken. Werte werden sofort aktualisiert, um die Änderungen wider <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, auch wenn der Bildschirm nicht über diese Änderungen bis die Updates Bildschirm wiedergibt.  
  
 Beachten Sie, dass Vorgänge nehmen nicht des Storyboards <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> oder <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> Einstellungen berücksichtigt. Das Storyboard wird behandelt, als wären es wurde eine <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 und Nein <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Diese Methode ändert der Storyboarduhr <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> an  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Suchen eines Storyboards werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt sowohl den <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> und <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Methoden.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">Ein endlicher Wert größer 0 (null), der das neue interaktive Geschwindigkeitsverhältnis des Storyboards darstellt. Dieser Wert wird anhand des Storyboards multipliziert <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> um tatsächliche Geschwindigkeit des Storyboards zu bestimmen. Dieser Wert überschreibt des Storyboards nicht <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> Eigenschaft. Z. B. beim Aufrufen dieser Methode und die Angabe eines interaktiven geschwindigkeitsverhältnisses von 3 für ein Storyboard mit einem <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> von 0,5 ergibt für das Storyboard eine tatsächliche Geschwindigkeit von 1,5.</param>
        <summary>Legt das interaktive Geschwindigkeitsverhältnis für die <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="speedRatio">Ein endlicher Wert größer 0 (null), der das neue interaktive Geschwindigkeitsverhältnis des Storyboards darstellt. Dieser Wert wird anhand des Storyboards multipliziert <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> um tatsächliche Geschwindigkeit des Storyboards zu bestimmen. Dieser Wert überschreibt des Storyboards nicht <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> Eigenschaft. Z. B. beim Aufrufen dieser Methode und die Angabe eines interaktiven geschwindigkeitsverhältnisses von 3 für ein Storyboard mit einem <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> von 0,5 ergibt für das Storyboard eine tatsächliche Geschwindigkeit von 1,5.</param>
        <summary>Legt das interaktive Geschwindigkeitsverhältnis des der <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Löst beim Aufrufen dieser Methode die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <param name="speedRatio">Ein endlicher Wert größer 0 (null), der das neue interaktive Geschwindigkeitsverhältnis des Storyboards darstellt. Dieser Wert wird anhand des Storyboards multipliziert <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> um tatsächliche Geschwindigkeit des Storyboards zu bestimmen. Dieser Wert überschreibt des Storyboards nicht <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> Eigenschaft. Z. B. beim Aufrufen dieser Methode und die Angabe eines interaktiven geschwindigkeitsverhältnisses von 3 für ein Storyboard mit einem <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> von 0,5 ergibt für das Storyboard eine tatsächliche Geschwindigkeit von 1,5.</param>
        <summary>Legt das interaktive Geschwindigkeitsverhältnis des der <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Löst beim Aufrufen dieser Methode die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Die <see cref="T:System.Windows.Media.Animation.Timeline" /> , deren Ziel das angegebene Abhängigkeitsobjekt.</param>
        <param name="value">Das Abhängigkeitsobjekt zum Ziel.</param>
        <summary>Legt das angegebene <see cref="T:System.Windows.Media.Animation.Timeline" /> -Ziel als Abhängigkeitsobjekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt die <xref:System.Windows.Media.Animation.Storyboard.Target%2A> -Eigenschaft für das angegebene Objekt. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
> [!NOTE]
>  Die <xref:System.Windows.Media.Animation.Storyboard.Target%2A> Eigenschaft ist nicht serialisierbar, da es auf einen festgelegt werden kann <xref:System.Windows.DependencyObject>. Es ist nicht sichergestellt, dass dieses Objekt ordnungsgemäß aus XAML verwiesen werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">Die <see cref="T:System.Windows.Media.Animation.Timeline" /> , deren Ziel das angegebene Abhängigkeitsobjekt.</param>
        <param name="name">Der Name des als Ziel zu verwendenden Abhängigkeitsobjekts.</param>
        <summary>Legt das angegebene <see cref="T:System.Windows.Media.Animation.Timeline" /> -Ziel als Abhängigkeitsobjekt mit dem angegebenen Namen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt die <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> -Eigenschaft für das angegebene Objekt. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">Die <see cref="T:System.Windows.Media.Animation.Timeline" /> mit dem die angegebene Abhängigkeitseigenschaft zugeordnet werden soll.</param>
        <param name="path">Ein Pfad, der die zu animierende Abhängigkeitseigenschaft beschreibt.</param>
        <summary>Legt das angegebene <see cref="T:System.Windows.Media.Animation.Timeline" /> die angegebene Abhängigkeitseigenschaft als Ziel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode legt die <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> -Eigenschaft für das angegebene Objekt. Weitere Informationen zur Funktionsweise von Storyboard abzielen, finden Sie unter <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>. Weitere Informationen zur Funktionsweise von angefügten Eigenschaften finden Sie unter [Eigenschaftenübersicht angefügt](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die aktuelle Uhrzeit des Storyboards <see cref="T:System.Windows.Media.Animation.Clock" /> an das Ende seines Aktivitätszeitraums fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Setzt die aktuelle Uhrzeit des Storyboards <see cref="T:System.Windows.Media.Animation.Clock" /> an das Ende seines Aktivitätszeitraums fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode setzt des Storyboards schon an das Ende seines Aktivitätszeitraums fest; das Verhalten des Storyboards zu diesem Zeitpunkt wird angegeben, indem seine <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> Einstellung. Wenn <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> festgelegt ist, um <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, füllt; Wenn die Eigenschaft, um festgelegt ist das Storyboard <xref:System.Windows.Media.Animation.FillBehavior.Stop>, das Storyboard beendet wird.  
  
 Eine unbegrenzte Anzahl von Wiederholungen ist beim Aufrufen dieser Methode für ein Storyboard mit eine unbegrenzte Dauer, hat keine Auswirkungen. Beim Aufrufen dieser Methode auf eine inaktive Storyboard hat keine Auswirkungen.  
  
 Vorlauf einer Uhr auf die Füllung Zeitraum Trigger die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Setzt die aktuelle Uhrzeit des Storyboards <see cref="T:System.Windows.Media.Animation.Clock" /> an das Ende seines Aktivitätszeitraums fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode setzt des Storyboards schon an das Ende seines Aktivitätszeitraums fest; das Verhalten des Storyboards zu diesem Zeitpunkt wird angegeben, indem seine <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> Einstellung. Wenn <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> festgelegt ist, um <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, füllt; Wenn die Eigenschaft, um festgelegt ist das Storyboard <xref:System.Windows.Media.Animation.FillBehavior.Stop>, das Storyboard beendet wird.  
  
 Eine unbegrenzte Anzahl von Wiederholungen ist beim Aufrufen dieser Methode für ein Storyboard mit eine unbegrenzte Dauer, hat keine Auswirkungen. Beim Aufrufen dieser Methode auf eine inaktive Storyboard hat keine Auswirkungen.  
  
 Vorlauf einer Uhr auf die Füllung Zeitraum Trigger die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, das Beenden eines Drehbuchs nicht ausgelöst wird, die <xref:System.Windows.Media.Animation.Timeline.Completed> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Beendet die <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Media.Animation.ClockState.Stopped> Storyboard wirkt sich nicht mehr auf die Zieleigenschaften: Eigenschaften, die animiert wurden auf ihren vorherigen Wert zurückgesetzt.  
  
 Beenden einer Uhr werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse, aber nicht die <xref:System.Windows.Media.Animation.Timeline.Completed> Ereignis.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Storyboard steuerbares zum Animieren einer <xref:System.Windows.Media.TextEffect>. Die <xref:System.Windows.Media.TextEffect> befindet sich innerhalb einer <xref:System.Windows.FrameworkContentElement>Namensbereich.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Das angegebene Objekt bei der <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> -Methode wurde aufgerufen. Dieses Objekt enthält die <see cref="T:System.Windows.Media.Animation.Clock" /> Objekte, die für dieses Storyboard und seine untergeordneten Elemente erstellt wurden.</param>
        <summary>Beendet die <see cref="T:System.Windows.Media.Animation.Clock" /> für diesen erstellten <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Media.Animation.ClockState.Stopped> Storyboard wirkt sich nicht mehr auf die Zieleigenschaften: Eigenschaften, die animiert wurden auf ihren vorherigen Wert zurückgesetzt.  
  
 Beenden einer Uhr werden die <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> und <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> Ereignisse, aber nicht die <xref:System.Windows.Media.Animation.Timeline.Completed> Ereignis.  
  
 Um das Storyboard interaktiv steuern zu können, müssen Sie verwenden die gleiche `containingObject` Parameter beim Aufrufen der interaktiven Methoden, mit denen Sie das Storyboard beginnen. Storyboard steuerbares kann anhalten, fortsetzen, suchen, beenden, und entfernt werden. Um ein Storyboard steuerbar im Code festzulegen, müssen Sie die entsprechende Überladung der Drehbuchs verwenden <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Methode, und geben Sie `true` steuerbar machen. Ein Beispiel finden Sie unter [wie: Steuern ein Storyboard nach Beginn](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Media.Animation.Storyboard.Target" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die angefügte <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />-Eigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
