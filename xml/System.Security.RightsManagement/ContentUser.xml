<Type Name="ContentUser" FullName="System.Security.RightsManagement.ContentUser">
  <TypeSignature Language="C#" Value="public class ContentUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentUser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.ContentUser" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Benutzer oder eine Benutzergruppe dar, dem bzw. der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie bei anderen <xref:System.Security.RightsManagement> Typen <xref:System.Security.RightsManagement.ContentUser> kann nur in Anwendungen mit voller Vertrauenswürdigkeit verwendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> Eigenschaft, um eine Variable dieses Typs zuzuweisen.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubunpublic)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubunpublic)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.RightsManagement.AuthenticationType authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.Security.RightsManagement.AuthenticationType" />
      </Parameters>
      <Docs>
        <param name="name">Der Benutzer- oder Gruppennamen ein.</param>
        <param name="authenticationType">Die Methode für die Authentifizierung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.ContentUser" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Benutzer- oder Gruppenberechtigungen `name` ist häufig in Form einer einzelnen e-Mail-Adresse (z. B. johndoe@contoso.com) oder eine e-Mail-Verteilerliste (z. B. marketing@contoso.com).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung dieses Konstruktors zum Erstellen einer sicheren Umgebung.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyoneUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser AnyoneUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AnyoneUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz von "Jeder" <see cref="T:System.Security.RightsManagement.ContentUser" /> Rolle.</summary>
        <value>Eine Instanz von "Jeder" <see cref="T:System.Security.RightsManagement.ContentUser" /> Rolle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.ContentUser.AnyoneUser%2A>hat <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" und <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Jeder".  
  
 Wenn <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" mit <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Jeder" während der Veröffentlichung Rechte gewährt, die der Authentifizierungsserver ausstellt eine <xref:System.Security.RightsManagement.UseLicense> an ein beliebiges anfordern, und fügen Sie die Lizenz wird an den anfordernden Benutzer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.RightsManagement.AuthenticationType AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.AuthenticationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.RightsManagement.AuthenticationType" /> angegebene, zu der <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> Konstruktor.</summary>
        <value>Die <see cref="T:System.Security.RightsManagement.AuthenticationType" /> angegebene, zu der <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> Konstruktor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Die Benutzerinstanz auf Gleichheit verglichen werden soll.</param>
        <summary>Gibt einen Wert, der angibt, ob dies <see cref="T:System.Security.RightsManagement.ContentUser" /> ist äquivalent zu einer anderen Instanz angegeben.</summary>
        <returns>
          <see langword="true" />Wenn <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> für diesen Benutzer und den angegebenen Benutzer identisch sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein berechneten Hashcode auf des Benutzers Grundlage <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
        <returns>Ein Hashcode berechnet wird, vom Benutzer <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> und <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthenticated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.ContentUser.IsAuthenticated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert, der angibt, ob der Benutzer derzeit authentifiziert ist.</summary>
        <returns>
          <see langword="true" />Wenn der Benutzer derzeit authentifiziert ist. andernfalls <see langword="false" />.  Die Standardeinstellung ist <see langword="false" /> bis authentifiziert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der angegebene Benutzer <xref:System.Security.RightsManagement.ContentUser.Name%2A> authentifiziert wird, basierend auf den angegebenen <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.  
  
 Nachdem ein Benutzer authentifiziert wurde und <xref:System.Security.RightsManagement.ContentUser.IsAuthenticated%2A> ist `true`, den Benutzer (Dialogfeld) und zur Bestätigung der Authentifizierung wird nicht mehr angezeigt, für die Erstellung einer <xref:System.Security.RightsManagement.SecureEnvironment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzer- oder Gruppennamen ein angegeben, um die <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> Konstruktor.</summary>
        <value>Der Benutzer- oder Gruppennamen ein angegeben, um die <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> Konstruktor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerUser">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.ContentUser OwnerUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.RightsManagement.ContentUser OwnerUser" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.ContentUser.OwnerUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Instanz von der "Besitzer" <see cref="T:System.Security.RightsManagement.ContentUser" /> Rolle.</summary>
        <value>Eine Instanz von der "Besitzer" <see cref="T:System.Security.RightsManagement.ContentUser" /> Rolle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A>hat <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> "Internal" und <xref:System.Security.RightsManagement.ContentUser.Name%2A> "Owner".  
  
 <xref:System.Security.RightsManagement.ContentUser.OwnerUser%2A>wird von den serverseitigen Vorlagen verwendet, um spezielle Rechte für den Autor oder Herausgeber Inhalts zu erteilen, wenn das geschützte Dokument erstellt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
