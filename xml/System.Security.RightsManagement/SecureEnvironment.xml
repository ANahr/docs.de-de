<Type Name="SecureEnvironment" FullName="System.Security.RightsManagement.SecureEnvironment">
  <TypeSignature Language="C#" Value="public class SecureEnvironment : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecureEnvironment extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.SecureEnvironment" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine sichere Clientsitzung für die Benutzeraktivierung, Lizenzbindung und andere Rights Management-Vorgänge dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie bei anderen <xref:System.Security.RightsManagement> Typen <xref:System.Security.RightsManagement.SecureEnvironment> kann nur in Anwendungen mit voller Vertrauenswürdigkeit verwendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Security.RightsManagement.SecureEnvironment> Klasse  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifest">
      <MemberSignature Language="C#" Value="public string ApplicationManifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationManifest" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> angegeben, wann die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> erstellt wurde.</summary>
        <value>Das Anwendungsmanifest angegeben, um die <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> Methode bei der <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> wird erstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest%2A> Methode.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine sichere Clientsitzung für Rights Management-Vorgänge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode verwendet, um eine sichere Umgebung zu erstellen.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">Das Anwendungsrechtemanifest.</param>
        <param name="user">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
        <summary>Erstellt eine sichere Clientsitzung für einen angegebenen Benutzer mit einem angegebenen Rechtemanifest.</summary>
        <returns>Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> Methode dient zur Verwendung mit Benutzern, die bereits aktiviert sind, z. B. in der Liste Merry bereitgestellt <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  Verwenden Sie die alternative <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> Methode für Benutzer, die noch nicht aktiviert werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode verwendet, um eine sichere Umgebung zu erstellen.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, valuetype System.Security.RightsManagement.AuthenticationType authentication, valuetype System.Security.RightsManagement.UserActivationMode userActivationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="authentication" Type="System.Security.RightsManagement.AuthenticationType" />
        <Parameter Name="userActivationMode" Type="System.Security.RightsManagement.UserActivationMode" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">Das Anwendungsrechtemanifest.</param>
        <param name="authentication">Die Authentifizierungsmethode.</param>
        <param name="userActivationMode">Der Typ des Benutzer-Rechtekontozertifikats.</param>
        <summary>Erstellt eine sichere Clientsitzung unter Angabe von Anwendungsrechtemanifest, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> und <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
        <returns>Eine sichere Clientsitzung für die Aktivierung, Lizenzbindung und andere Rechteverwaltungsvorgänge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> Methode richtet sich neue Benutzer, die noch nicht aktiviert werden.  
  
 Aktivieren eines neuen Benutzers umfasst eine Roundtrip-Server-Transaktion, um das Benutzerzertifikat und Clientzertifikat-Lizenz zu erhalten.  
  
 Die alternative <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> Methode kann verwendet werden, wenn ein Benutzer bereits aktiviert ist, z. B. in der Liste Merry bereitgestellt <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie diese Methode verwendet, um eine sichere Umgebung zu erstellen.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anwendung sollte Aufrufen <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> abschließend mit der <xref:System.Security.RightsManagement.SecureEnvironment>.  Nach dem <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> aufgerufen wird, werden Ressourcen zugeordnet sind die <xref:System.Security.RightsManagement.SecureEnvironment> durch den Garbage Collector wieder zugänglich gemacht werden.  Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> vor den letzten Verweis auf die <xref:System.Security.RightsManagement.SecureEnvironment> freigegeben wird.  Wenn <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> nicht aufgerufen wird, zugeordnete Ressourcen der <xref:System.Security.RightsManagement.SecureEnvironment> nicht reserviert, bis die Garbage Collection der Instanz aufruft <xref:System.Object.Finalize%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, der öffentlich <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> Methode und die <xref:System.Object.Finalize%2A> Methode. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose>Ruft die geschützte <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> Methode mit dem `disposing` Parametersatz auf `true`. <xref:System.Object.Finalize%2A>Ruft `Dispose` mit `disposing` festgelegt `false`.  
  
 Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Security.RightsManagement.SecureEnvironment> verweist. Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden. Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetActivatedUsers">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste der aktivierten Benutzer zurück.</summary>
        <returns>Eine Liste der aktivierten Benutzer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserActivated">
      <MemberSignature Language="C#" Value="public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserActivated(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">Der Benutzer oder die Benutzergruppe, dem oder der Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wird.</param>
        <summary>Gibt an, ob einem bestimmten Benutzer Zugriff auf durch die Rechteverwaltung geschützte Inhalte gewährt wurde.</summary>
        <returns>
          <see langword="true" />Wenn der angegebene <paramref name="user" /> wurde aktiviert wurde, Zugriff auf durch Rechte geschützte Inhalte ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Security.RightsManagement.SecureEnvironment.IsUserActivated%2A> Methode, um zu bestimmen, ob der angegebene Benutzer autorisiert wurde, um die rechteverwaltung geschützte Inhalte zugreifen.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivatedUser">
      <MemberSignature Language="C#" Value="public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivatedUser(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">Der Benutzer, für den die Lizenzaktivierung entfernt werden soll.</param>
        <summary>Entfernt die Lizenzaktivierung für einen angegebenen Benutzer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Benutzerauthentifizierung muss entweder mithilfe der Windows-Authentifizierung oder Passport-Authentifizierung ausgeführt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="user" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene <paramref name="user" /> ist nicht mit Windows-Authentifizierung oder Passport-Authentifizierung authentifiziert hat.</exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.ContentUser User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.ContentUser User" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzer oder eine Benutzergruppe angegeben, wenn die <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> erstellt wurde.</summary>
        <value>Der Benutzer oder eine Benutzergruppe angegeben, um die <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> Methode bei der <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> erstellt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Security.RightsManagement.SecureEnvironment.User%2A> Eigenschaft  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewsecenv)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
