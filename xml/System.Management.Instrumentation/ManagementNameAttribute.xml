<Type Name="ManagementNameAttribute" FullName="System.Management.Instrumentation.ManagementNameAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementNameAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementNameAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementNameAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das ManagementName-Attribut wird verwendet, um Namen zu überschreiben, die durch eine WMI-Klasse verfügbar gemacht werden.  
  
 Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen. Die [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) für alle neuen Entwicklungen verwendet werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es kann unpraktisch, benennen Sie die Parameter der Methode zum WMI-Clients mit benutzerfreundlicheren Namen vorhanden sein. Dieses Attribut können Sie die WMI-Anzeigenamen und Beibehalten der vorhandenen internen Namenskonventionen zuweisen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Integer-Parameter i intern bleibt jedoch wird als "The Value" für WMI-Clients verfügbar gemacht werden.  
  
```  
[ManagementTask]  
static public int PrintValue([ManagementName("The Value")]int i)  
{  
   Console.WriteLine("The Value is {0:x}", i);  
   return i;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementNameAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Der benutzerfreundliche Name für das Objekt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Management.ManagementNameAttribute" /> Klasse, der angibt, einen Wert für die <see cref="P:System.Management.ManagementNameAttribute.Name" /> Eigenschaft der Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementNameAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den benutzerfreundlichen Namen für ein Objekt fest. Das Objekt kann einen Methodenparameter oder Eigenschaften, der mit der ManagementProbe ManagementKey bzw. ManagementConfiguration Attribute gekennzeichnet.</summary>
        <value>Ein <see cref="T:System.String" /> Wert, der den benutzerfreundlichen Namen für ein Objekt angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
