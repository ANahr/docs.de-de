<Type Name="ManagementBindAttribute" FullName="System.Management.Instrumentation.ManagementBindAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementBindAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementBindAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementBindAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das ManagementBind-Attribut gibt an, dass eine Methode verwendet wird, um die Instanz einer WMI-Klasse zurückzugeben, die einem bestimmten Schlüsselwert zugeordnet ist.  
  
 Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen. Die [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) für alle neuen Entwicklungen verwendet werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Attribut kennzeichnet die Methode, die die Infrastruktur verwendet, um den WMI-Get-Vorgang auszuführen. Die Methode muss die Schlüsselwerte der entsprechenden WMI-Klasse als Parameter und die zugeordnete Instanz der WMI-Klasse zurück.  
  
 **Wichtige** die Methodenparameter müssen genau dem gleichen Namen und Typ wie die Schlüsselparameter der Klasse haben. Die Schlüsselparameter werden identifiziert, indem die. <xref:System.Management.Instrumentation.ManagementKeyAttribute> Attribut  
  
 Die Methode muss alle instrumentierten Eigenschaften der Klasse Werte zuweisen.  
  
 Wenn der WMI-Anbieter-Erweiterungen-Infrastruktur diese Bindungsfunktionalität benötigt wird, sucht zuerst nach einem Konstruktor mit diesem Attribut. Wenn keiner gefunden wird, durchsucht er für eine statische Methode, die den WMI-Klassentyp zurückgibt.  
  
 Das Ziel dieses Attributs muss eine Methode oder eine statische Methode.  
  
   
  
## Examples  
 Im folgende Beispiel veranschaulicht das ManagementBind-Attribut verwenden, um den Konstruktor einer Klasse zu markieren.  
  
```csharp  
// Use the ManagementBind attribute to specify that this constructor  
// is used to attach a class instance to a specific WMI  
// instance. The constructor should set the values of the  
// key properties of the WMI instance.  
[ManagementBind]  
public ClassConstructor(int Id)  
{  
     // Set this class instance to a specific instance  
     // by assigning property values and   
     // giving unique values to the key properties.   
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementBindAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.ManagementBindAttribute" />-Klasse. Dies ist der Standardkonstruktor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der den Typ der Ausgabe definiert, die die Methode, die mit dem ManagementEnumerator-Attribut markiert ist, ausgegeben wird.</summary>
        <value>Ein <see cref="T:System.Type" /> Wert, der den Typ der Ausgabe, die angibt mit die Methode markiert das <see cref="ManagementBind" /> Attribut ausgegeben wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der zurückgegebene Typ wird <xref:System.Object?displayProperty=nameWithType>, und klicken Sie dann die Ausgabe als ein Wert vom Typ behandelt werden sollen <xref:System.Object?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
