<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt die Typsemantik an, mit der die Funktionsüberladungen aufgelöst werden. Jeder Speicheranbieter muss diese Enumerationsflags in der Anbietermanifestdatei für jede Funktionsdefinition verwenden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> Klasse gibt die Typsemantik für Erweiterbarkeit, implizite Konvertierung und explizite Konvertierung für die primitiven Typen des Anbieters. [!INCLUDE[vstecado](~/includes/vstecado-md.md)]Diese Informationen aus dem Speicher für die Anbietermanifestdatei in liest die <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> Klasse. [!INCLUDE[vstecado](~/includes/vstecado-md.md)] bestimmt anschließend mit der <xref:System.Data.Metadata.Edm.ParameterTypeSemantics>-Klasse anhand der Parametertypen die entsprechenden Funktionsdefinitionen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Flag, das die implizite Konvertierung zwischen den angegebenen und den formalen Argumenttypen angibt. Dies ist der Standard-Konvertierungstyp.</summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Flag, das die Typhöherstufung zwischen den angegebenen und den formalen Argumenttypen angibt.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ein Flag, das die ausschließliche Verwendung strenger Äquivalenz angibt.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
