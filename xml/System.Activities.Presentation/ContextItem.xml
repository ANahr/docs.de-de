<Type Name="ContextItem" FullName="System.Activities.Presentation.ContextItem">
  <TypeSignature Language="C#" Value="public abstract class ContextItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItem" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse dar, von der alle Kontextelemente abgeleitet werden müssen. Diese Klasse ist abstrakt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Kontextelement ist ein Teil eines flüchtigen Zustands in einem Designer. Kontextelemente werden von einem <xref:System.Activities.Presentation.ContextItemManager> verwaltet, der Teil von <xref:System.Activities.Presentation.EditingContext> ist, der von einem <xref:System.Activities.Presentation.WorkflowDesigner> beim grafischen Darstellen des Workflowmodells verwendet wird. Der <xref:System.Activities.Presentation.ContextItemManager> wird von der <xref:System.Activities.Presentation.EditingContext.Items%2A>-Eigenschaft zurückgegeben, die die Daten enthält, die zwischen einem Host und dem Designer freigegeben sind.  Diese Daten stellen den Mechanismus bereit, der erforderlich ist, um die Abonnement- und Änderungsbenachrichtigung zu verknüpfen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.ContextItem" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.ContextItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei der Implementierung in einer abgeleiteten Klasse wird der von der Bearbeitungskontextklasse abgeleitete Elementtyp abgerufen.</summary>
        <value>Der <see cref="T:System.Type" /> des Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies wird nicht für die <xref:System.Activities.Presentation.ContextItem>-Basisklasse implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.Activities.Presentation.EditingContext" />, in dem die Änderung vorgenommen wird.</param>
        <param name="previousItem">Das zuvor aktive <see cref="T:System.Activities.Presentation.ContextItem" />.</param>
        <summary>Stellt eine Methode dar, die für das Kontextelement aufgerufen wird, bevor dieses im Kontextelement-Manager gespeichert wird. Das vorherige Element im Kontextelement-Manager wird als Parameter übergeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da Elemente über Standardkonstruktoren verfügen müssen, wird ein Standardelement erstellt, wenn ein Element zum ersten Mal in den Kontext übergeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
