<Type Name="ConfigurationPermission" FullName="System.Configuration.ConfigurationPermission">
  <TypeSignature Language="C#" Value="public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConfigurationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine Berechtigungsstruktur, die Methoden oder Klassen auf Konfigurationsdateien zugreifen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ConfigurationPermission> -Klasse stellt eine Berechtigungsstruktur, die Methoden oder Klassen auf Konfigurationsdateien zugreifen kann. Darüber hinaus <xref:System.Configuration.ConfigurationPermission> bietet Möglichkeiten zum Auflösen von mehrere Berechtigungen Werte über Methoden wie <xref:System.Configuration.ConfigurationPermission.Union%2A> und <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Die Berechtigungsebene zu gewähren.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Configuration.ConfigurationPermission" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der Wert der <paramref name="state" /> ist weder <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> noch <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine neue <see cref="T:System.Configuration.ConfigurationPermission" /> Objekt mit der gleichen Berechtigungsstufe.</summary>
        <returns>Ein neues <see cref="T:System.Configuration.ConfigurationPermission" /> mit der gleichen Berechtigungsstufe.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Das Konfigurationselement, aus dem der Berechtigungsstatus gelesen wird.</param>
        <summary>Liest den Wert des Berechtigungsstatus von XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die <see langword="unrestricted" /> -Attribut für den angegebenen <paramref name="securityElement" /> ist weder <see langword="true" /> noch <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Das Objekt, das die Berechtigungen zum Ausführen der Schnittmenge mit enthält.</param>
        <summary>Gibt den logischen Schnittpunkt zwischen der <see cref="T:System.Configuration.ConfigurationPermission" /> -Objekt und ein angegebenes Objekt, das implementiert die <see cref="T:System.Security.IPermission" /> Schnittstelle.</summary>
        <returns>Die logische Schnittmenge zwischen der <see cref="T:System.Configuration.ConfigurationPermission" /> und ein angegebenes Objekt, das implementiert <see cref="T:System.Security.IPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl die Methodensignatur jedes Objekt akzeptiert, die implementiert die <xref:System.Security.IPermission> -Schnittstelle, ein <xref:System.ArgumentException> Ausnahme wird ausgelöst, wenn der Aufruf der <xref:System.Object.GetType%2A> Methode für das Objekt verweist die `target` Parameter keinen zurückgibt<xref:System.Configuration.ConfigurationPermission?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />nicht typisiert ist, als <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Das Objekt verglichen werden soll.</param>
        <summary>Vergleicht die <see cref="T:System.Configuration.ConfigurationPermission" /> Objekt mit der ein Objekt, durch die <see cref="T:System.Security.IPermission" /> Schnittstelle.</summary>
        <returns>
          <see langword="true" />Wenn Sie der Berechtigungsstatus gleich ist. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl die Methodensignatur jedes Objekt akzeptiert, die implementiert die <xref:System.Security.IPermission> -Schnittstelle, ein <xref:System.ArgumentException> Ausnahme wird ausgelöst, wenn der Aufruf der <xref:System.Object.GetType%2A> Methode für das Objekt verweist die `target` Parameter keinen zurückgibt<xref:System.Configuration.ConfigurationPermission?displayProperty=nameWithType>.  
  
 Wenn das Objekt verweist die `target` Parameter ist `null`, erfolgt der Vergleich zwischen den Berechtigungsstatus des der <xref:System.Configuration.ConfigurationPermission> Objekt und die <xref:System.Security.Permissions.PermissionState.None> Wert, der die <xref:System.Security.Permissions.PermissionState> Enumeration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />nicht typisiert ist, als <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob den Berechtigungsstatus für die <see cref="T:System.Configuration.ConfigurationPermission" /> Objekt ist die <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> Wert, der die <see cref="T:System.Security.Permissions.PermissionState" /> Enumeration.</summary>
        <returns>
          <see langword="true" />Wenn der Berechtigungszustand für die <see cref="T:System.Configuration.ConfigurationPermission" /> ist die <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> Wert <see cref="T:System.Security.Permissions.PermissionState" />ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.Security.SecurityElement" /> Objekt mit Attributwerten basierend auf dem aktuellen <see cref="T:System.Configuration.ConfigurationPermission" /> Objekt.</summary>
        <returns>Ein <see cref="T:System.Security.SecurityElement" /> mit Attributwerten basierend auf dem aktuellen <see cref="T:System.Configuration.ConfigurationPermission" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Das Objekt, das die Vereinigung mit ausführen.</param>
        <summary>Gibt die logische Vereinigung aus der <see cref="T:System.Configuration.ConfigurationPermission" /> -Objekt und ein Objekt, implementiert die <see cref="T:System.Security.IPermission" /> Schnittstelle.</summary>
        <returns>Die logische Vereinigung aus der <see cref="T:System.Configuration.ConfigurationPermission" /> und ein Objekt, das implementiert <see cref="T:System.Security.IPermission" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" />nicht typisiert ist, als <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
