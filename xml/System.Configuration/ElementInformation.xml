<Type Name="ElementInformation" FullName="System.Configuration.ElementInformation">
  <TypeSignature Language="C#" Value="public sealed class ElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ElementInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ElementInformation" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält die Metainformationen über ein einzelnes Element innerhalb der Konfiguration. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ElementInformation> Objekt enthält die Metainformationen über ein einzelnes Element innerhalb der Konfiguration. Dieses Objekt kann verwendet werden, wenn überprüfen und Ändern der Eigenschaften eines einzelnen Elements.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Abrufen der <xref:System.Configuration.ElementInformation> zugeordneten ein <xref:System.Configuration.ConfigurationElement> Objekt.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#80](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#80)]
 [!code-vb[System.Configuration.ConfigurationElement#80](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#80)]  
  
 Der folgende Ausschnitt zeigt die Konfiguration von dem vorherigen Codebeispiel verwendet.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Fehler für das zugeordnete Element und die Unterelemente ab.</summary>
        <value>Die Auflistung mit den Fehlern für das zugeordnete Element und die untergeordneten Elemente</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die <xref:System.Configuration.ElementInformation.Errors%2A> Auflistung.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#89](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#89)]
 [!code-vb[System.Configuration.ConfigurationElement#89](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#89)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt ist eine <see cref="T:System.Configuration.ConfigurationElementCollection" /> Auflistung.</summary>
        <value>
          <see langword="true" />Wenn die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt ist ein <see cref="T:System.Configuration.ConfigurationElementCollection" /> Auflistung ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.IsCollection%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#81](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#81)]
 [!code-vb[System.Configuration.ConfigurationElement#81](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#81)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt kann nicht geändert werden.</summary>
        <value>
          <see langword="true" />Wenn die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> -Objekt kann nicht geändert wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.ElementInformation.IsLocked%2A> -Eigenschaft gibt `true` Wenn das zugehörige Element gesperrt ist, durch die <xref:System.Configuration.SectionInformation.AllowOverride%2A>, <xref:System.Configuration.SectionInformation.AllowDefinition%2A>, oder <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.IsLocked%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#82](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#82)]
 [!code-vb[System.Configuration.ConfigurationElement#82](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#82)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public bool IsPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPresent" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt befindet sich in der Konfigurationsdatei.</summary>
        <value>
          <see langword="true" />Wenn die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt befindet sich in der Konfigurationsdatei; anderenfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.IsPresent%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#83](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#83)]
 [!code-vb[System.Configuration.ConfigurationElement#83](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeilennummer in der Konfigurationsdatei, in dem die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> Objekt definiert ist.</summary>
        <value>Die Zeilennummer in der Konfiguration-Datei, in der zugeordneten <see cref="T:System.Configuration.ConfigurationElement" /> Objekt definiert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.LineNumber%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#84](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#84)]
 [!code-vb[System.Configuration.ConfigurationElement#84](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#84)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Configuration.PropertyInformationCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.PropertyInformationCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.PropertyInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Configuration.PropertyInformationCollection" /> Auflistung der Eigenschaften in der zugeordneten <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</summary>
        <value>Ein <see cref="T:System.Configuration.PropertyInformationCollection" /> Auflistung der Eigenschaften in der zugeordneten <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften einer <xref:System.Configuration.ConfigurationElement> Objekt sind die Attribute und untergeordneten Elemente, die in der Konfigurationsdatei mit diesem Konfigurationselement verknüpft ist.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Abrufen der <xref:System.Configuration.ElementInformation.Properties%2A> Auflistung.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#85](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#85)]
 [!code-vb[System.Configuration.ConfigurationElement#85](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#85)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Quelldatei, in dem die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> -Objekt stammt.</summary>
        <value>Die Quelldatei, die zugeordnete <see cref="T:System.Configuration.ConfigurationElement" /> -Objekt stammt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Configuration.ConfigurationElement> Objekt kann erstellt werden, in einem Standardstatus in diesem Fall gibt diese Eigenschaft zurück `null`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.Source%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#86](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#86)]
 [!code-vb[System.Configuration.ConfigurationElement#86](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der zugeordneten <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</summary>
        <value>Der Typ der zugeordneten <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.Type%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#87](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#87)]
 [!code-vb[System.Configuration.ConfigurationElement#87](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#87)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validator">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationValidatorBase Validator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase Validator" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Validator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt, mit der zugeordneten überprüfen <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</summary>
        <value>So überprüfen Sie die zugeordnete verwendet jedoch stattdessen das <see cref="T:System.Configuration.ConfigurationElement" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Validator-Objekt ist nicht erforderlich, und diese Eigenschaft kann zurückgeben `null`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Configuration.ElementInformation.Validator%2A>-Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#88](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#88)]
 [!code-vb[System.Configuration.ConfigurationElement#88](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
