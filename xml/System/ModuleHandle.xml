<Type Name="ModuleHandle" FullName="System.ModuleHandle">
  <TypeSignature Language="C#" Value="public struct ModuleHandle" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ModuleHandle extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ModuleHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Common Language Runtime-Handle für ein Modul dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ModuleHandle.ResolveFieldHandle%2A>, <xref:System.ModuleHandle.ResolveMethodHandle%2A>, und <xref:System.ModuleHandle.ResolveTypeHandle%2A> Methoden bieten effiziente Auflösung von Metadatentoken zur Laufzeithandles für Felder, Methoden und Typen im aktuellen Modul.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EmptyHandle">
      <MemberSignature Language="C#" Value="public static readonly ModuleHandle EmptyHandle;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.ModuleHandle EmptyHandle" />
      <MemberSignature Language="DocId" Value="F:System.ModuleHandle.EmptyHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ModuleHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt ein leeres Modulhandle dar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ModuleHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ModuleHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.Equals(System.ModuleHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="handle">Die <see cref="T:System.ModuleHandle" /> Struktur mit den aktuellen zu vergleichende <see cref="T:System.ModuleHandle" />.</param>
        <summary>Gibt eine <see cref="T:System.Boolean" /> Wert, der angibt, ob das angegebene <see cref="T:System.ModuleHandle" /> Struktur ist gleich dem aktuellen <see cref="T:System.ModuleHandle" />.</summary>
        <returns>
          <see langword="true" />Wenn <paramref name="handle" /> ist gleich dem aktuellen <see cref="T:System.ModuleHandle" /> Struktur; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Mit dem aktuellen zu vergleichende Objekt <see cref="T:System.ModuleHandle" /> Struktur.</param>
        <summary>Gibt eine <see cref="T:System.Boolean" /> Wert, der angibt, ob das angegebene Objekt eine <see cref="T:System.ModuleHandle" /> -Struktur und gleich der aktuellen <see cref="T:System.ModuleHandle" />.</summary>
        <returns>
          <see langword="true" />Wenn <paramref name="obj" /> ist ein <see cref="T:System.ModuleHandle" /> -Struktur und gleich der aktuellen <see cref="T:System.ModuleHandle" /> Struktur; anderenfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFieldHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken (int fieldToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken(int32 fieldToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Ein Metadatentoken, das ein Feld im Modul identifiziert.</param>
        <summary>Gibt ein Common Language Runtime-Handle für das Feld, das durch das angegebene Metadatentoken identifiziert.</summary>
        <returns>Ein <see cref="T:System.RuntimeFieldHandle" /> für das Feld identifizierten <paramref name="fieldToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethodHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken (int methodToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken(int32 methodToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodToken">Ein Metadatentoken, das eine Methode oder ein Konstruktor im Modul identifiziert.</param>
        <summary>Gibt die Laufzeithandles-Methode für die Methode oder der Konstruktor, der durch das angegebene Metadatentoken identifiziert.</summary>
        <returns>Ein <see cref="T:System.RuntimeMethodHandle" /> für die Methode oder der Konstruktor identifizierten <paramref name="methodToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeTypeHandleFromMetadataToken">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken (int typeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken(int32 typeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeToken">Ein Metadatentoken, das einen Typ im Modul identifiziert.</param>
        <summary>Gibt eine Common Language Runtime-Handle für den durch das angegebene Metadatentoken identifizierten Typ zurück.</summary>
        <returns>Ein <see cref="T:System.RuntimeTypeHandle" /> für den identifizierten Typ <paramref name="typeToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.ModuleHandle.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des Metadatenstreams ab.</summary>
        <value>Eine 32-Bit-Ganzzahl, die Version des Metadatenstreams darstellt. Die zwei höherwertigen Bytes die Hauptversionsnummer und die zwei niederwertigen Bytes darstellen die Nebenversionsnummer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Weitere Informationen zu den Metadatenheader, finden Sie in der Partition II: Metadata Definition and Semantics-Dokumentation. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ModuleHandle left, valuetype System.ModuleHandle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ModuleHandle" />
        <Parameter Name="right" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="left">Die <see cref="T:System.ModuleHandle" />-Struktur auf der linken Seite des Gleichheitsoperators.</param>
        <param name="right">Die <see cref="T:System.ModuleHandle" />-Struktur auf der rechten Seite des Gleichheitsoperators.</param>
        <summary>Überprüft, ob zwei <see cref="T:System.ModuleHandle" /> -Strukturen gleich sind.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.ModuleHandle" /> Strukturen gleich sind; andernfalls, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator ist <xref:System.ModuleHandle.Equals%28System.ModuleHandle%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ModuleHandle left, ModuleHandle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ModuleHandle left, valuetype System.ModuleHandle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ModuleHandle" />
        <Parameter Name="right" Type="System.ModuleHandle" />
      </Parameters>
      <Docs>
        <param name="left">Die <see cref="T:System.ModuleHandle" />-Struktur auf der linken Seite des Ungleichheitsoperators.</param>
        <param name="right">Die <see cref="T:System.ModuleHandle" />-Struktur auf der rechten Seite des Ungleichheitsoperators.</param>
        <summary>Überprüft, ob zwei <see cref="T:System.ModuleHandle" /> -Strukturen ungleich sind.</summary>
        <returns>
          <see langword="true" />Wenn die <see cref="T:System.ModuleHandle" /> Strukturen ungleich sind, und andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator ist <xref:System.ModuleHandle.Equals%28System.ModuleHandle%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveFieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle ResolveFieldHandle (int fieldToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle ResolveFieldHandle(int32 fieldToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveFieldHandle(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Ein Metadatentoken, das ein Feld im Modul identifiziert.</param>
        <summary>Gibt ein Common Language Runtime-Handle für das Feld, das durch das angegebene Metadatentoken identifiziert.</summary>
        <returns>Ein <see cref="T:System.RuntimeFieldHandle" /> für das Feld identifizierten <paramref name="fieldToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auflösen ein Metadatentoken, das einen Feld identifiziert, dessen übergeordnetes Objekt `TypeSpec` verfügt über eine Signatur, die mit dem Elementtyp `var` oder `mvar`, verwenden Sie die <xref:System.ModuleHandle.ResolveFieldHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> methodenüberladung, die Ihnen ermöglicht, den erforderlichen Kontext bereitzustellen.  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="metadataToken" />ist kein gültiges Token im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für ein Feld im Bereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />Gibt ein Feld, dessen übergeordnetes Objekt <see langword="TypeSpec" /> verfügt über eine Signatur mit Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode wird auf ein leeres Feldhandle aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveFieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle ResolveFieldHandle (int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeFieldHandle ResolveFieldHandle(int32 fieldToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="fieldToken">Ein Metadatentoken, das ein Feld im Modul identifiziert.</param>
        <param name="typeInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen, die die generischen Typargumente des Typs, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn dieses Typs nicht generisch ist.</param>
        <param name="methodInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen, die die generischen Typargumente der Methode, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn diese Methode nicht generisch ist.</param>
        <summary>Gibt ein Feld Laufzeithandles für das Feld identifiziert, die vom angegebenen Metadatentoken, mit dem Typ und die Methode, in dem das Token im Bereich ist, die generischen Typargumente angeben.</summary>
        <returns>Ein <see cref="T:System.RuntimeFieldHandle" /> für das Feld identifizierten <paramref name="fieldToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="metadataToken" />ist kein gültiges Token im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für ein Feld im Bereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />Gibt ein Feld, dessen übergeordnetes Objekt <see langword="TypeSpec" /> verfügt über eine Signatur mit Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode wird auf ein leeres Feldhandle aufgerufen.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="fieldToken" />ist kein gültiges Token.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle ResolveMethodHandle (int methodToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle ResolveMethodHandle(int32 methodToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveMethodHandle(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodToken">Ein Metadatentoken, das eine Methode oder ein Konstruktor im Modul identifiziert.</param>
        <summary>Gibt die Laufzeithandles-Methode für die Methode oder der Konstruktor, der durch das angegebene Metadatentoken identifiziert.</summary>
        <returns>Ein <see cref="T:System.RuntimeMethodHandle" /> für die Methode oder der Konstruktor identifizierten <paramref name="methodToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Metadatentoken für Auflösen einer `MethodSpec` , dessen Signatur enthält Elementtyp `var` oder `mvar`, verwenden die <xref:System.ModuleHandle.ResolveMethodHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> methodenüberladung, die Ihnen ermöglicht, den erforderlichen Kontext bereitzustellen.  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="methodToken" />ist kein gültiges Metadatentoken für eine Methode im aktuellen Modul.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für eine Methode oder ein Konstruktor im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist eine <see langword="MethodSpec" /> , dessen Signatur enthält Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode wird auf ein Handle empty-Methode aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle ResolveMethodHandle (int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeMethodHandle ResolveMethodHandle(int32 methodToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="methodToken">Ein Metadatentoken, das eine Methode oder ein Konstruktor im Modul identifiziert.</param>
        <param name="typeInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen, die die generischen Typargumente des Typs, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn dieses Typs nicht generisch ist.</param>
        <param name="methodInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen, die die generischen Typargumente der Methode, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn diese Methode nicht generisch ist.</param>
        <summary>Gibt die Laufzeithandles-Methode für die Methode oder der Konstruktor, identifiziert durch das angegebene Metadatentoken, das mit dem Typ und die Methode, in dem das Token im Bereich ist, die generischen Typargumente angeben.</summary>
        <returns>Ein <see cref="T:System.RuntimeMethodHandle" /> für die Methode oder der Konstruktor identifizierten <paramref name="methodToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="methodToken" />ist kein gültiges Metadatentoken für eine Methode im aktuellen Modul.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für eine Methode oder ein Konstruktor im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist eine <see langword="MethodSpec" /> , dessen Signatur enthält Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode wird auf ein Handle empty-Methode aufgerufen.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="methodToken" />ist kein gültiges Token.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle ResolveTypeHandle (int typeToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle ResolveTypeHandle(int32 typeToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveTypeHandle(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeToken">Ein Metadatentoken, das einen Typ im Modul identifiziert.</param>
        <summary>Gibt eine Common Language Runtime-Handle für den durch das angegebene Metadatentoken identifizierten Typ zurück.</summary>
        <returns>Ein <see cref="T:System.RuntimeTypeHandle" /> für den identifizierten Typ <paramref name="typeToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Metadatentoken für Auflösen einer `TypeSpec` , dessen Signatur enthält Elementtyp `var` oder `mvar`, verwenden die <xref:System.ModuleHandle.ResolveTypeHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29> methodenüberladung, die Ihnen ermöglicht, den erforderlichen Kontext bereitzustellen.  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="typeToken" />ist kein gültiges Metadatentoken für einen Typ im aktuellen Modul.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für einen Typ im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist eine <see langword="TypeSpec" /> , dessen Signatur enthält Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode ist für ein leeres Typhandle aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle ResolveTypeHandle (int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle ResolveTypeHandle(int32 typeToken, valuetype System.RuntimeTypeHandle[] typeInstantiationContext, valuetype System.RuntimeTypeHandle[] methodInstantiationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeToken" Type="System.Int32" />
        <Parameter Name="typeInstantiationContext" Type="System.RuntimeTypeHandle[]" />
        <Parameter Name="methodInstantiationContext" Type="System.RuntimeTypeHandle[]" />
      </Parameters>
      <Docs>
        <param name="typeToken">Ein Metadatentoken, das einen Typ im Modul identifiziert.</param>
        <param name="typeInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen, die die generischen Typargumente des Typs, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn dieses Typs nicht generisch ist.</param>
        <param name="methodInstantiationContext">Ein Array von <see cref="T:System.RuntimeTypeHandle" /> Strukturen von Objekten, die die generischen Typargumente der Methode, in dem das Token im Gültigkeitsbereich ist, darstellen oder <see langword="null" /> Wenn diese Methode nicht generisch ist.</param>
        <summary>Gibt eine Common Language Runtime-Handle für den Typ durch das angegebene Metadatentoken identifiziert, die mit dem Typ und die Methode, in dem das Token im Bereich ist, die generischen Typargumente angeben.</summary>
        <returns>Ein <see cref="T:System.RuntimeTypeHandle" /> für den identifizierten Typ <paramref name="typeToken" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Informationen zum Metadatentoken kann in der Dokumentation der Common Language Infrastructure (CLI), insbesondere in "Partition II: Metadata Definition and Semantics" gefunden werden. Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](http://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](http://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="typeToken" />ist kein gültiges Metadatentoken für einen Typ im aktuellen Modul.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist kein Token für einen Typ im Gültigkeitsbereich des aktuellen Moduls.  
  
 - oder -   
  
 <paramref name="metadataToken" />ist eine <see langword="TypeSpec" /> , dessen Signatur enthält Elementtyp <see langword="var" /> oder <see langword="mvar" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Methode ist für ein leeres Typhandle aufgerufen.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="typeToken" />ist kein gültiges Token.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
