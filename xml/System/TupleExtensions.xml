<Type Name="TupleExtensions" FullName="System.TupleExtensions">
  <TypeSignature Language="C#" Value="public static class TupleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TupleExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TupleExtensions" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Erweiterungsmethoden für Tupel für die Zusammenarbeit mit Sprachunterstützung für Tupel in C# bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl diese Methoden direkt aufgerufen werden können, werden sie vom C#-Compiler erstellen und Zerlegen von Tupeln in erster Linie für die Verwendung gedacht.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Deconstruct&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1&gt; (this Tuple&lt;T1&gt; value, out T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value, [out] !!T1&amp; item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des einzelnen Elements.</typeparam>
        <param name="value">Das Tupel mit einem Element, das in eine separate Variable dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des einzelnen Elements.</param>
        <summary>Dekonstruiert ein Tupel mit einem Element in eine separate Variable.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2&gt; (this Tuple&lt;T1,T2&gt; value, out T1 item1, out T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <param name="value">Das Tupel mit zwei Elementen, das in zwei separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <summary>Dekonstruiert ein Tupel mit zwei Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3&gt; (this Tuple&lt;T1,T2,T3&gt; value, out T1 item1, out T2 item2, out T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <param name="value">Das Tupel mit drei Elementen, das in drei separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <summary>Dekonstruiert ein Tupel mit drei Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4&gt; (this Tuple&lt;T1,T2,T3,T4&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <param name="value">Das Tupel mit vier Elementen, das in vier separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <summary>Dekonstruiert ein Tupel mit vier Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5&gt; (this Tuple&lt;T1,T2,T3,T4,T5&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <param name="value">Das Tupel mit fünf Elementen, das in fünf separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <summary>Dekonstruiert ein Tupel mit fünf Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <param name="value">Das Tupel mit sechs Elementen, das in sechs separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <summary>Dekonstruiert ein Tupel mit sechs Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <param name="value">Das Tupel mit sieben Elementen, das in sieben separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <summary>Dekonstruiert ein Tupel mit sieben Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <param name="value">Das Tupel mit acht Elementen, das in acht separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <summary>Dekonstruiert ein Tupel mit acht Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` ist ein Element in einem geschachtelten Tupel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <param name="value">Das Tupel mit neun Elementen, das in neun separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <summary>Dekonstruiert ein Tupel mit neun Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` und `item9` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <param name="value">Das Tupel mit zehn Elementen, das in zehn separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <summary>Dekonstruiert ein Tupel mit zehn Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item10` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <param name="value">Das Tupel mit elf Elementen, das in elf separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <summary>Dekonstruiert ein Tupel mit elf Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item11` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <param name="value">Das Tupel mit zwölf Elementen, das in zwölf separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <summary>Dekonstruiert ein Tupel mit zwölf Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item12` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <param name="value">Das Tupel mit 13 Elementen, das in 13 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <summary>Dekonstruiert ein Tupel mit 13 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item13` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <param name="value">Das Tupel mit 14 Elementen, das in 14 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <summary>Dekonstruiert ein Tupel mit 14 Elementen in separate Variablen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <param name="value">Das Tupel mit 15 Elementen, das in 15 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <summary>Dekonstruiert ein Tupel mit 15 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item15` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <param name="value">Das Tupel mit 16 Elementen, das in 16 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <summary>Dekonstruiert ein Tupel mit 16 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item16` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <typeparam name="T17">Der Typ des 17. Elements.</typeparam>
        <param name="value">Das Tupel mit 17 Elementen, das in 17 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Der Wert des Elements siebzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</param>
        <summary>Dekonstruiert ein Tupel mit 17 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item17` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <typeparam name="T17">Der Typ des 17. Elements.</typeparam>
        <typeparam name="T18">Der Typ des 18. Elements.</typeparam>
        <param name="value">Das Tupel mit 18 Elementen, das in 18 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Der Wert des Elements siebzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Der Wert des Elements achtzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</param>
        <summary>Dekonstruiert ein Tupel mit 18 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item18` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <typeparam name="T17">Der Typ des 17. Elements.</typeparam>
        <typeparam name="T18">Der Typ des 18. Elements.</typeparam>
        <typeparam name="T19">Der Typ des 19. Elements.</typeparam>
        <param name="value">Das Tupel mit 19 Elementen, das in 19 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Der Wert des Elements siebzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Der Wert des Elements achtzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Der Wert des Elements neunzehnten oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</param>
        <summary>Dekonstruiert ein Tupel mit 19 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item19` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
        <Parameter Name="item20" Type="T20&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <typeparam name="T17">Der Typ des 17. Elements.</typeparam>
        <typeparam name="T18">Der Typ des 18. Elements.</typeparam>
        <typeparam name="T19">Der Typ des 19. Elements.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements.</typeparam>
        <param name="value">Das Tupel mit 20 Elementen, das in 20 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Der Wert des Elements siebzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Der Wert des Elements achtzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Der Wert des Elements neunzehnten oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</param>
        <param name="item20">Der Wert des Elements zwanzigsten oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</param>
        <summary>Dekonstruiert ein Tupel mit 20 Elementen in separate Variablen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20, out T21 item21);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20, [out] !!T21&amp; item21) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1&amp;" RefType="out" />
        <Parameter Name="item2" Type="T2&amp;" RefType="out" />
        <Parameter Name="item3" Type="T3&amp;" RefType="out" />
        <Parameter Name="item4" Type="T4&amp;" RefType="out" />
        <Parameter Name="item5" Type="T5&amp;" RefType="out" />
        <Parameter Name="item6" Type="T6&amp;" RefType="out" />
        <Parameter Name="item7" Type="T7&amp;" RefType="out" />
        <Parameter Name="item8" Type="T8&amp;" RefType="out" />
        <Parameter Name="item9" Type="T9&amp;" RefType="out" />
        <Parameter Name="item10" Type="T10&amp;" RefType="out" />
        <Parameter Name="item11" Type="T11&amp;" RefType="out" />
        <Parameter Name="item12" Type="T12&amp;" RefType="out" />
        <Parameter Name="item13" Type="T13&amp;" RefType="out" />
        <Parameter Name="item14" Type="T14&amp;" RefType="out" />
        <Parameter Name="item15" Type="T15&amp;" RefType="out" />
        <Parameter Name="item16" Type="T16&amp;" RefType="out" />
        <Parameter Name="item17" Type="T17&amp;" RefType="out" />
        <Parameter Name="item18" Type="T18&amp;" RefType="out" />
        <Parameter Name="item19" Type="T19&amp;" RefType="out" />
        <Parameter Name="item20" Type="T20&amp;" RefType="out" />
        <Parameter Name="item21" Type="T21&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements.</typeparam>
        <typeparam name="T13">Der Typ des 13. Elements.</typeparam>
        <typeparam name="T14">Der Typ des 14. Elements.</typeparam>
        <typeparam name="T15">Der Typ des 15. Elements.</typeparam>
        <typeparam name="T16">Der Typ des 16. Elements.</typeparam>
        <typeparam name="T17">Der Typ des 17. Elements.</typeparam>
        <typeparam name="T18">Der Typ des 18. Elements.</typeparam>
        <typeparam name="T19">Der Typ des 19. Elements.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements.</typeparam>
        <typeparam name="T21">Der Typ des 21. Elements.</typeparam>
        <param name="value">Das Tupel mit 21 Elementen, das in 21 separate Variablen dekonstruiert werden soll.</param>
        <param name="item1">Der Wert des ersten Elements.</param>
        <param name="item2">Der Wert des zweiten Elements.</param>
        <param name="item3">Der Wert des dritten Elements.</param>
        <param name="item4">Der Wert der vierten Elements.</param>
        <param name="item5">Der Wert des fünften Elements.</param>
        <param name="item6">Der Wert des sechsten Elements.</param>
        <param name="item7">Der Wert des siebten Elements.</param>
        <param name="item8">Der Wert des Elements achte oder <c>Wert</c><see langword=".Rest.Item1" />.</param>
        <param name="item9">Der Wert des Elements neunte oder <c>Wert</c><see langword=".Rest.Item2" />.</param>
        <param name="item10">Der Wert des Elements zehnte oder <c>Wert</c><see langword=".Rest.Item3" />.</param>
        <param name="item11">Der Wert des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</param>
        <param name="item12">Der Wert des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</param>
        <param name="item13">Der Wert des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</param>
        <param name="item14">Der Wert des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</param>
        <param name="item15">Der Wert des fünfzehnten Elements oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</param>
        <param name="item16">Der Wert des Elements sechzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</param>
        <param name="item17">Der Wert des Elements siebzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</param>
        <param name="item18">Der Wert des Elements achtzehnte oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</param>
        <param name="item19">Der Wert des Elements neunzehnten oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</param>
        <param name="item20">Der Wert des Elements zwanzigsten oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</param>
        <param name="item21">Der Wert des Elements einundzwanzigsten oder <c>Wert</c><see langword=".Rest.Rest.Item7" />.</param>
        <summary>Dekonstruiert ein Tupel mit 21 Elementen in separate Variablen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird in erster Linie zum unterstützen der Tupel-Sprachfunktionen in c# implementiert.  
  
 Da der .NET Framework-Tupeltypen Tupeln mit mehr als 7 Elemente implementieren, durch das Schachteln von ein Tupel in <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType>, `item8` über `item21` sind Elemente von geschachtelten Tupeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1&gt; ToTuple&lt;T1&gt; (this ValueTuple&lt;T1&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`1&lt;!!T1&gt; ToTuple&lt;T1&gt;(valuetype System.ValueTuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2&gt; ToTuple&lt;T1,T2&gt; (this ValueTuple&lt;T1,T2&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`2&lt;!!T1, !!T2&gt; ToTuple&lt;T1, T2&gt;(valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3&gt; ToTuple&lt;T1,T2,T3&gt; (this ValueTuple&lt;T1,T2,T3&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; ToTuple&lt;T1, T2, T3&gt;(valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4&gt; ToTuple&lt;T1,T2,T3,T4&gt; (this ValueTuple&lt;T1,T2,T3,T4&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToTuple&lt;T1, T2, T3, T4&gt;(valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5&gt; ToTuple&lt;T1,T2,T3,T4,T5&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToTuple&lt;T1, T2, T3, T4, T5&gt;(valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6&gt;(valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <typeparam name="T21">Der Typ des 21.-Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item7" />.</typeparam>
        <param name="value">Die Werttupelinstanz, die in ein Tupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="ValueTuple" />-Struktur in eine Instanz der <see langword="Tuple" />-Klasse.</summary>
        <returns>Das konvertierte Tupel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1&gt; ToValueTuple&lt;T1&gt; (this Tuple&lt;T1&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`1&lt;!!T1&gt; ToValueTuple&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2&gt; ToValueTuple&lt;T1,T2&gt; (this Tuple&lt;T1,T2&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; ToValueTuple&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3&gt; ToValueTuple&lt;T1,T2,T3&gt; (this Tuple&lt;T1,T2,T3&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; ToValueTuple&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4&gt; ToValueTuple&lt;T1,T2,T3,T4&gt; (this Tuple&lt;T1,T2,T3,T4&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToValueTuple&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5&gt; ToValueTuple&lt;T1,T2,T3,T4,T5&gt; (this Tuple&lt;T1,T2,T3,T4,T5&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToValueTuple&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Der Typ des ersten Elements.</typeparam>
        <typeparam name="T2">Der Typ des zweiten Elements.</typeparam>
        <typeparam name="T3">Der Typ des dritten Elements.</typeparam>
        <typeparam name="T4">Der Typ des vierten Elements.</typeparam>
        <typeparam name="T5">Der Typ des fünften Elements.</typeparam>
        <typeparam name="T6">Der Typ des sechsten Elements.</typeparam>
        <typeparam name="T7">Der Typ des siebten Elements.</typeparam>
        <typeparam name="T8">Der Typ des achten Elements oder <c>Wert</c><see langword=".Rest.Item1" />.</typeparam>
        <typeparam name="T9">Der Typ des neunten Elements oder <c>Wert</c><see langword=".Rest.Item2" />.</typeparam>
        <typeparam name="T10">Der Typ des zehnten Elements oder <c>Wert</c><see langword=".Rest.Item3" />.</typeparam>
        <typeparam name="T11">Der Typ des elften Elements oder <c>Wert</c><see langword=".Rest.Item4" />.</typeparam>
        <typeparam name="T12">Der Typ des zwölften Elements oder <c>Wert</c><see langword=".Rest.Item5" />.</typeparam>
        <typeparam name="T13">Der Typ des dreizehnten Elements oder <c>Wert</c><see langword=".Rest.Item6" />.</typeparam>
        <typeparam name="T14">Der Typ des vierzehnten Elements oder <c>Wert</c><see langword=".Rest.Item7" />.</typeparam>
        <typeparam name="T15">Der Typ des fünfzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item1" />.</typeparam>
        <typeparam name="T16">Der Typ des sechzehnten-Elements,., oder <c>Wert</c><see langword=".Rest.Rest.Item2" />.</typeparam>
        <typeparam name="T17">Der Typ des siebzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item3" />.</typeparam>
        <typeparam name="T18">Der Typ des achtzehnte Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item4" />.</typeparam>
        <typeparam name="T19">Der Typ des neunzehnten Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item5" />.</typeparam>
        <typeparam name="T20">Der Typ des 20. Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item6" />.</typeparam>
        <typeparam name="T21">Der Typ des 21.-Elements, oder <c>Wert</c><see langword=".Rest.Rest.Item7" />.</typeparam>
        <param name="value">Das Tupelobjekt, das in ein Werttupel konvertiert werden soll.</param>
        <summary>Konvertiert eine Instanz der <see langword="Tuple" />-Klasse in eine Instanz der <see langword="ValueTuple" />-Struktur.</summary>
        <returns>Die konvertierte Werttupelinstanz.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
