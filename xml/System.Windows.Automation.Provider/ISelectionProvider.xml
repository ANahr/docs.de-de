<Type Name="ISelectionProvider" FullName="System.Windows.Automation.Provider.ISelectionProvider">
  <TypeSignature Language="C#" Value="public interface ISelectionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISelectionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISelectionProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("fb8b03af-3bdf-48d4-bd36-1a65793be168")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht Methoden und Eigenschaften verfügbar, um dem Benutzeroberflächenautomatisierungs-Client den Zugriff auf Steuerelemente zu ermöglichen, die als Container für eine Auflistung einzelner auswählbarer untergeordneter Elemente dienen. Die untergeordneten Elemente dieses Steuerelements müssen implementieren <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementiert ein Benutzeroberflächenautomatisierungs-Anbieter, die unterstützen, muss die <xref:System.Windows.Automation.SelectionPattern> -Steuerelementmuster.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzeroberflächenautomatisierungs-Anbieter erlaubt, dass mehrere untergeordnete Elemente gleichzeitig ausgewählt werden.</summary>
        <value>
          <see langword="true" />, wenn die Mehrfachauswahl zulässig ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann dynamisch sein. Beispielsweise kann in seltenen Fällen ein Steuerelement können mehrere Elemente ausgewählt werden, während der Initialisierung, aber nur einzelne Auswahl erfolgen Einfachauswahl zulässig.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Implementierung dieser Methode eine Liste, die Auswahl von mehr als ein Element zu einem Zeitpunkt nicht zulässt.  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#canselectmultiple)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#canselectmultiple)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Benutzeroberflächenautomatisierungs-Anbieter für jedes untergeordnete Element ab, das ausgewählt ist.</summary>
        <returns>Eine Auflistung von Benutzeroberflächenautomatisierungs-Anbietern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein standardmäßig leeres-Array wird durch UIAutoCore.dll zurückgegeben, wenn der Anbieter einen Wert angeben, nicht.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine mögliche Implementierung dieser Methode für ein Listenfeld, das nur eine einzelne Auswahl unterstützt.  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#getselection)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#getselection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzeroberflächenautomatisierungs-Anbieter die Auswahl mindestens eines untergeordneten Elements erfordert.</summary>
        <value>
          <see langword="true" />Wenn die Auswahl erforderlich ist. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann dynamisch sein. Der anfängliche Zustand eines Steuerelements kann z. B. keinen Elemente, die standardmäßig aktiviert, was bedeutet, dass <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> ist `false`. Nach dem Auswählen eines Elements muss für das Steuerelement jedoch immer mindestens ein Element ausgewählt sein.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Implementierung dieser Methode für eine Liste, die ein Element aus, um jederzeit ausgewählt werden muss.  
  
 [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#isselectionrequired)]
 [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#isselectionrequired)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
