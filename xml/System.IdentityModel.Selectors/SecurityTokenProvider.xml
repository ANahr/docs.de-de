<Type Name="SecurityTokenProvider" FullName="System.IdentityModel.Selectors.SecurityTokenProvider">
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenProvider" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Anbieter von Sicherheitstoken dar, der Sicherheitstoken für einen SOAP-Nachrichten-Absender bereitstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse, wenn benutzerdefinierte Sicherheitstoken benötigt werden. Die Rolle des Anbieters von Sicherheitstoken besteht darin, ein Sicherheitstoken abzurufen, wenn eine SOAP-Nachricht vom Client gesendet wird und ein Sicherheitstoken zum Authentifizieren des Clients oder zum Schutz der SOAP-Nachricht verwendet wird. Insbesondere wird die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>-Methode aufgerufen, um ein Sicherheitstoken abzurufen. Der Anbieter von Sicherheitstoken kann auch aufgerufen werden, um eine Sicherheit mit der <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>-Methode und der <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>-Methode abzubrechen oder zu erneuern.  
  
 Klassen, die von der <xref:System.IdentityModel.Selectors.SecurityTokenManager>-Klasse abgeleitet werden, implementieren die <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>-Methode, um den für ein bestimmtes Sicherheitstoken erforderlichen Anbieter von Sicherheitstoken zu bestimmen.  
  
 Die <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>-Klasse und die <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>-Klasse stellen die Standardimplementierungen für Sicherheitstoken bereit. Für Szenarien mit benutzerdefinierten Sicherheitstoken muss eine Klasse von der <xref:System.IdentityModel.Selectors.SecurityTokenManager>-Klasse, der <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>-Klasse oder der <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>-Klasse abgeleitet und die Funktion zum Erstellen des Sicherheitstokenanbieters, des Sicherheitstokenauthentifizierers und des Sicherheitstokenserialisierers für das benutzerdefinierte Sicherheitstoken bereitgestellt werden. [!INCLUDE[crabout](~/includes/crabout-md.md)]Erstellen eines benutzerdefinierten Tokens finden Sie unter [Vorgehensweise: Erstellen eines benutzerdefinierten Tokens](~/docs/framework/wcf/extending/how-to-create-a-custom-token.md).  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#0)]
 [!code-vb[SecurityTokenProvider#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abbricht.</param>
        <param name="token">Die <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> auf "Abbrechen".</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, um ein Sicherheitstoken abzubrechen.</summary>
        <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Abbruchvorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode wird von der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode aufgerufen.  
  
 Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginCancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abbricht.</param>
        <param name="token">Die <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> auf "Abbrechen".</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, um ein Sicherheitstoken abzubrechen.</summary>
        <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Abbruchvorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher müssen Sie die <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode nur überschreiben, wenn Sie eine eigene asynchrone Implementierung bereitstellen möchten.  
  
 Die <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode wird von der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode aufgerufen.  
  
 Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetToken(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abruft.</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, um ein Sicherheitstoken abzurufen.</summary>
        <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Schließvorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetTokenCore(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abruft.</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, um ein Sicherheitstoken abzurufen.</summary>
        <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher muss die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>-Methode nur überschrieben werden, wenn Sie eine eigene asynchrone Implementierung bereitstellen müssen.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken erneuert.</param>
        <param name="token">To be added.</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, der ein Sicherheitstoken erneuert.</summary>
        <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken erneuert.</param>
        <param name="token">To be added.</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs empfängt.</param>
        <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Schließvorgang zugeordnete Statusinformationen enthält.</param>
        <summary>Startet einen asynchronen Vorgang, der ein Sicherheitstoken erneuert.</summary>
        <returns>Die <see cref="T:System.IAsyncResult" />-Einstellung, die auf den asynchronen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher muss die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>-Methode nur überschrieben werden, wenn Sie eine eigene asynchrone Implementierung bereitstellen müssen.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelToken">
      <MemberSignature Language="C#" Value="public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abbricht.</param>
        <param name="token">Die <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> auf "Abbrechen".</param>
        <summary>Bricht ein Sicherheitstoken ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abbricht.</param>
        <param name="token">Die <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> auf "Abbrechen".</param>
        <summary>Bricht ein Sicherheitstoken ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>-Methode auf.  
  
 Wenn die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>-Methode überschrieben wird und das an den Tokenparameter übergebene Sicherheitstoken nicht abgebrochen werden kann, wird die <xref:System.IdentityModel.Tokens.SecurityTokenException>-Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancelToken">
      <MemberSignature Language="C#" Value="public void EndCancelToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancelToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um ein Sicherheitstoken abzubrechen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die asynchronen Methoden mit den Präfixen "Begin" und "End" müssen in abgleiteten Klassen nicht überschrieben werden. Die <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />-Basisklasse stellt eine asynchrone Implementierung bereit, die auf den synchronen Methoden basiert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void EndCancelTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndCancelTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um ein Sicherheitstoken abzubrechen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 Wenn Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher muss die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>-Methode nur überschrieben werden, wenn Sie eine eigene asynchrone Implementierung bereitstellen müssen.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndGetToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um ein Sicherheitstoken abzurufen.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndGetTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um ein Sicherheitstoken abzurufen.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher muss die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>-Methode nur überschrieben werden, wenn Sie eine eigene asynchrone Implementierung bereitstellen müssen.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndRenewToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um ein Sicherheitstoken zu erneuern.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt, das erneuert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
        <summary>Schließt einen asynchronen Vorgang ab, um das Sicherheitstoken zu erneuern.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt, das erneuert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Klasse vererben, müssen Sie die asynchronen Methoden nicht überschreiben, da die <xref:System.IdentityModel.Selectors.SecurityTokenProvider>-Basisklasse asynchronen Support auf Grundlage der synchronen Methoden bereitstellt. Daher muss die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>-Methode nur überschrieben werden, wenn Sie eine eigene asynchrone Implementierung bereitstellen müssen.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken GetToken(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abruft.</param>
        <summary>Ruft ein Sicherheitstoken ab.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das abzurufende Sicherheitstoken darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>-Methode wird von der <xref:System.ServiceModel.Description.ClientCredentials>-Klasse aufgerufen, wenn ein Client eine SOAP-Nachricht sendet und ein Sicherheitstoken erforderlich ist.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>-Methode auf.  
  
 In den meisten Fällen wird der `timeout`-Parameter nicht von abgeleiteten Klassen von <xref:System.IdentityModel.Selectors.SecurityTokenProvider> wie z. B. <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> verwendet. Manchmal beinhaltet jedoch das Abrufen eines Sicherheitstokens ein verteiltes Messaging. Ein Beispiel ist ein in einem Verbunddienst verwendeter <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>. In diesen Fällen wird der `timeout`-Parameter zur Vermeidung von Ausnahmen verwendet, die durch Netzwerkfehler, Verlust von Nachrichten und andere Fehlerbedingungen verursacht wurden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken abruft.</param>
        <summary>Ruft ein Sicherheitstoken ab.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das abzurufende Sicherheitstoken darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>-Methode überschrieben wird und das an den Tokenparameter übergebene Sicherheitstoken nicht abgerufen werden kann, wird die <xref:System.IdentityModel.Tokens.SecurityTokenException>-Ausnahme ausgelöst.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>-Methode wird von der <xref:System.ServiceModel.Description.ClientCredentials>-Klasse aufgerufen, wenn ein Client eine SOAP-Nachricht sendet und ein Sicherheitstoken erforderlich ist.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>-Methode auf.  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#1)]
 [!code-vb[SecurityTokenProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken erneuert.</param>
        <param name="token">To be added.</param>
        <summary>Erneuert ein Sicherheitstoken.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt, das erneuert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein ausgestelltes Sicherheitstoken, das erneuerbar ist, erlaubt einem Client, es zu erneuern, sobald das Sicherheitstoken abläuft oder abgelaufen ist.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein <see cref="T:System.TimeSpan" />, der den Timeoutwert für die Meldung angibt, die das Sicherheitstoken erneuert.</param>
        <param name="token">To be added.</param>
        <summary>Erneuert ein Sicherheitstoken.</summary>
        <returns>Das <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Sicherheitstoken darstellt, das erneuert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein ausgestelltes Sicherheitstoken, das erneuerbar ist, erlaubt einem Client, es zu erneuern, sobald das Sicherheitstoken abläuft oder abgelaufen ist.  
  
 Wenn die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>-Methode überschrieben wird und das an den Tokenparameter übergebene Sicherheitstoken nicht erneuert werden kann, wird die <xref:System.IdentityModel.Tokens.SecurityTokenException>-Ausnahme ausgelöst.  
  
 Die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>-Methode ruft die <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>-Methode auf.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenCancellation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenCancellation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenCancellation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Sicherheitstoken storniert werden kann.</summary>
        <value>
          <see langword="true" />, wenn das Sicherheitstoken abgebrochen werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Sicherheitstoken, das abgebrochen werden kann, wie beispielsweise ein ausgestelltes Token, erlaubt einem Client, der ein Sicherheitstoken angefordert hat, es abzubrechen, sobald es nicht mehr benötigt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenRenewal">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenRenewal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Sicherheitstoken erneuerbar ist.</summary>
        <value>
          <see langword="true" />, wenn das Sicherheitstoken erneuert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein ausgestelltes Sicherheitstoken, das erneuerbar ist, erlaubt einem Client, es zu erneuern, sobald das Sicherheitstoken abläuft oder abgelaufen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
