<Type Name="InstancePersistenceCommand" FullName="System.Runtime.DurableInstancing.InstancePersistenceCommand">
  <TypeSignature Language="C#" Value="public abstract class InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstancePersistenceCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Basisklasse für alle Befehle mit Dauerhaftigkeitsbezug. Befehle werden anhand ihres Namens unterschieden. In der Regel können Befehle auch anhand ihres abgeleiteten Typs unterschieden werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstancePersistenceCommand (System.Xml.Linq.XName name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.#ctor(System.Xml.Linq.XName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
      </Parameters>
      <Docs>
        <param name="name">Der XName (Kombination aus Namespace und Name) des Befehls.</param>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceCommand" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected virtual bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.AutomaticallyAcquiringLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob es bei dem Befehl die Möglichkeit gibt, die Instanz zu sperren.</summary>
        <value>
          <see langword="true" />Wenn der Befehl eine Sperre für die Instanz abruft, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Befehlsklassen, die von dieser Klasse ableiten können diese Eigenschaft festgelegt ist, dass überschreiben `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected virtual bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.IsTransactionEnlistmentOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen Wert zurück, der angibt, ob der Dauerhaftigkeitsanbieter bei Ausführung dieses Befehls die Möglichkeit hat, sich gegen die Eintragung in die Ambient-Transaktion (Transaction.Currnet) zu entscheiden.</summary>
        <value>
          <see langword="True" />Wenn das Eintragen in die Transaktion für diesen Befehl optional, andernfalls ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Befehlsklassen, die von dieser Klasse ableiten können diese Eigenschaft festgelegt ist, dass überschreiben `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Dauerhaftigkeitsbefehls ab.</summary>
        <value>Ein XName (Kombination aus Namespace und Name).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected virtual void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view">Ein <see cref="T:System.Runtime.DurableInstancing.InstanceView" />-Objekt, das den aktuellen Zustand des Instanzhandles darstellt.</param>
        <summary>Validiert den Befehl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Befehle überschreiben "Validate", um sicherzustellen, dass ein Befehl zum jetzigen Zeitpunkt ausgeführt werden darf. Implementierungen sollten eine "InvalidOperationException" auslösen, wenn es nicht zulässig ist, dass der Befehl für die "InstanceView" ausgeführt wird, die als Parameter übergeben wurde.  Die Validate-Methode wird von "InstanceStore" aufgerufen, bevor der Befehl an "InstanceStore.TryCommand" übergeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
