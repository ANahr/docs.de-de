<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Kapselt eine Arbeitseinheit, die ein Benutzer rückgängig machen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Klasse ist eine geschachtelte Klasse innerhalb <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> , kapselt eine Aktion, die ein Benutzer rückgängig machen kann. Die Standardeinstellung <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Implementierung änderungsbenachrichtigungen überwacht und eine Liste der Ereignisse für jede Änderung aufgebaut. Er speichert diese Ereignisse mit <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>. Ein <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> ereignisbenachrichtigungen für die Änderungen direkt vom empfängt <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> durch mehrere `public virtual` Methoden. Sie können aus ableiten <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> und keine zusätzliche Logik ausführen. Falls gewünscht, können Sie die Standardeinstellung vollständig umgehen <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Implementierung.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine">Der Rückgängigmodul, das Besitzer dieser Rückgängig-Komponente ist.</param>
        <param name="name">Der Name dieser Rückgängig-Komponente.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="engine" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Empfängt einen Aufruf aus dem Rückgängigmodul um diese Einheit zu schließen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Einheit geschlossen wird, können keine weiteren Ereignisse in seine verschiedenen Ereignismethoden stammen. Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> selbst möglicherweise hier Aktion ausführen, um zu gewährleisten, dass alle Ereignisse, die momentan geöffneten geschlossen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Empfängt einen Aufruf aus der <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf eine <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des abzurufenden Diensts.</param>
        <summary>Ruft eine Instanz von den angeforderten Dienst ab.</summary>
        <returns>Eine Instanz des angegebenen Diensts oder <see langword="null" /> , wenn der Dienst nicht aufgelöst werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> enthält keine Ereignisse.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> keine Ereignisse enthält, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgängigmodul kann es sich um leere Einheiten verwerfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ab.</summary>
        <value>Der Name des <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.String" /> , die den aktuellen Namen der Einheit darstellt.</summary>
        <returns>Ein <see cref="T:System.String" /> , der den aktuellen Namen der Einheit darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt eine Aktion rückgängig machen oder wiederholen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rückgängig-Aktionen Wechseln zwischen rückgängig und wiederholen Sie Status, deshalb wird beim Aufrufen <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> zweimal legt das Objekt wieder in seinen ursprünglichen Zustand fest.  
  
 Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Klasse anfänglich wird davon ausgegangen, dass die Arbeitsschritt bereits durchgeführt hat, damit der erste Aufruf von <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> macht die Arbeit. Der nächste Aufruf macht die vorherige Rückgängig-Vorgang, ein Rollforward ausführen.  
  
 Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methodenaufrufe der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> Methode, um ein Rückgängig-Vorgang auszuführen. Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methode selbst funktioniert, zum Verwalten von konsistenten Status innerhalb der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, selbst im Fall einer ausgelöste Ausnahme <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Rufen Sie nicht die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> Methode direkt; überschreiben, wenn Sie möchten, aber rufen Sie immer die <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode, um die rückgängig-Aufgaben ausführen. Die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> -Methode benachrichtigt das Modul zum Rückgängigmachen anhalten rückgängig Datensammlung bis der aktuelle Rückgängig-Vorgang abgeschlossen ist. Dadurch wird verhindert, dass neue Rückgängigeinheiten, die als Antwort auf die Arbeit dieser Einheit erstellt werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird aufgerufen, indem Sie <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> zum Ausführen einer Rückgängigaktion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methodenaufrufe der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> Methode, um ein Rückgängig-Vorgang auszuführen. Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methode selbst funktioniert, zum Verwalten von konsistenten Status innerhalb der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, selbst im Fall einer ausgelöste Ausnahme <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Rufen Sie nicht die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> Methode direkt; überschreiben, wenn Sie möchten, aber rufen Sie immer die <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode, um die rückgängig-Aufgaben ausführen. Die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> -Methode benachrichtigt das Modul zum Rückgängigmachen zum Anhalten der Rückgängig-Vorgang Daten sammeln, bis der aktuelle Rückgängig-Vorgang abgeschlossen ist. Dadurch wird verhindert, dass neue Rückgängigeinheiten, die als Antwort auf die Arbeit dieser Einheit erstellt werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das übergeordnete Element <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
        <value>Das <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />, an das <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> angefügt ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
