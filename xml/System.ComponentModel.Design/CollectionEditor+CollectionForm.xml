<Type Name="CollectionEditor+CollectionForm" FullName="System.ComponentModel.Design.CollectionEditor+CollectionForm">
  <TypeSignature Language="C#" Value="protected abstract class CollectionEditor.CollectionForm : System.Windows.Forms.Form" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi abstract beforefieldinit CollectionEditor/CollectionForm extends System.Windows.Forms.Form" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Form</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein modales Dialogfeld zum Bearbeiten des Inhalts von einer Sammlung mit einem <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides">
      <para>Sie können die Implementierungen für die abstrakten Methoden in diesem Formular zusammen mit Ihren eigenen Benutzeroberfläche bereitstellen.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionForm (System.ComponentModel.Design.CollectionEditor editor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.CollectionEditor editor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="editor" Type="System.ComponentModel.Design.CollectionEditor" />
      </Parameters>
      <Docs>
        <param name="editor">Die <see cref="T:System.ComponentModel.Design.CollectionEditor" /> zum Bearbeiten der Auflistung verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveInstance">
      <MemberSignature Language="C#" Value="protected bool CanRemoveInstance (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool CanRemoveInstance(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der zu entfernende Wert.</param>
        <summary>Gibt an, ob die ursprünglichen Elemente der Auflistung entfernt werden können.</summary>
        <returns>
          <see langword="true" />Wenn es zulässig, die diesen Wert aus der Auflistung entfernt wird; andernfalls <see langword="false" />. Standardmäßig gibt diese Methode den Wert von <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> von der <see cref="T:System.ComponentModel.Design.CollectionEditor" /> für dieses Formular.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Implementieren in einer abgeleiteten Klasse gibt diese Methode an, ob der angegebene Wert aus der Auflistung entfernt werden kann. Standardmäßig gibt dies den Wert von <xref:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance%2A> von der <xref:System.ComponentModel.Design.CollectionEditor> für dieses Formular.  
  
 Diese Methode wird aufgerufen, wenn der Benutzer versucht, ein Element aus der Auflistung zu entfernen, die eine ursprüngliche Member der Auflistung ist. Diese Methode wird nicht aufgerufen, wenn Elemente entfernt werden, die in dieser Sitzung wurden, hinzugefügt da sie noch nicht Teil der Auflistung sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleInstances">
      <MemberSignature Language="C#" Value="protected virtual bool CanSelectMultipleInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanSelectMultipleInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob mehrere Elemente der Auflistung gleichzeitig ausgewählt werden können.</summary>
        <returns>
          <see langword="true" />Wenn es mehrere Member der Auflistung sein können gleichzeitig; ausgewählt andernfalls <see langword="false" />. Standardmäßig gibt diese Methode den Wert von <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> von der <see cref="T:System.ComponentModel.Design.CollectionEditor" /> für dieses Formular.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt an, ob mehrere Member der Auflistung innerhalb der Auflistung-Editor-Dialogfeld ausgewählt werden können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionItemType">
      <MemberSignature Language="C#" Value="protected Type CollectionItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionItemType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp jedes Elements in der Auflistung ab.</summary>
        <value>Der Datentyp der Elemente der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt den Datentyp der Elemente der Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionType">
      <MemberSignature Language="C#" Value="protected Type CollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CollectionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp des Auflistungsobjekts ab.</summary>
        <value>Der Datentyp des Auflistungsobjekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt den Datentyp des Auflistungsobjekts dar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.ITypeDescriptorContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ITypeDescriptorContext Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ITypeDescriptorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Typdeskriptor, der den aktuellen Kontext angibt.</summary>
        <value>Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> , der den Kontext aktuell in Verwendung angibt oder <see langword="null" /> , wenn kein Kontext verfügbar ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">Der Typ des zu erstellenden Elements.</param>
        <summary>Erstellt eine neue Instanz des angegebenen Elements Sammlungstyps.</summary>
        <returns>Eine neue Instanz des angegebenen Objekts oder <see langword="null" /> , wenn der Benutzer die Erstellung dieser Instanz abbrechen möchte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löst eine Ausnahme aus, wenn eine neue Instanz erstellt werden kann. Wenn der Benutzer entscheidet, die die Erstellung dieser Instanz "Abbrechen", gibt diese Methode `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyInstance">
      <MemberSignature Language="C#" Value="protected void DestroyInstance (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DestroyInstance(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt zu zerstören.</param>
        <summary>Zerstört die angegebene Instanz des Objekts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected virtual void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Die Ausnahme angezeigt.</param>
        <summary>Zeigt die angegebene Ausnahme an den Benutzer an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public object EditValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das zu bearbeitende Sammlungsobjekt.</summary>
        <value>Das Sammlungsobjekt zu bearbeiten.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des abzurufenden Diensts.</param>
        <summary>Ruft den angeforderten Dienst ab, sofern dieser verfügbar ist.</summary>
        <returns>Eine Instanz des Diensts oder <see langword="null" /> , wenn der Dienst nicht gefunden werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected object[] Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] Items" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Array von Elementen für dieses Formular angezeigt.</summary>
        <value>Ein Array von Objekten für das Formular angezeigt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung Ruft den aktuellen Satz von Elementen aus der `Item` -Eigenschaft der Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemTypes">
      <MemberSignature Language="C#" Value="protected Type[] NewItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] NewItemTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die verfügbaren Elementtypen, die erstellt werden, können für diese Auflistung ab.</summary>
        <value>Die Typen von Elementen, die erstellt werden können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt an, die Datentypen, die der Auflistung hinzugefügt werden können. Standardmäßig gibt dies nur ein <xref:System.ComponentModel.Design.CollectionEditor.CollectionItemType%2A>. Wenn mehr als einem Typ zurückgegeben wird, stellt der Auflistungseditor UI eine Möglichkeit zum Auswählen der richtige Elementtyp erstellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditValueChanged">
      <MemberSignature Language="C#" Value="protected abstract void OnEditValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bietet die Möglichkeit zum Ausführen der Verarbeitung, wenn ein Auflistungswert geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird immer dann ausgelöst, wenn der Wert eines Elements der Auflistung geändert wurde.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Aktualisieren Sie bei dieser Methode wird Ihre Benutzeroberfläche entsprechend den aktuellen Wert aus.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShowEditorDialog">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DialogResult ShowEditorDialog (System.Windows.Forms.Design.IWindowsFormsEditorService edSvc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Windows.Forms.DialogResult ShowEditorDialog(class System.Windows.Forms.Design.IWindowsFormsEditorService edSvc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edSvc" Type="System.Windows.Forms.Design.IWindowsFormsEditorService" />
      </Parameters>
      <Docs>
        <param name="edSvc">Eine <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> , die verwendet werden kann, um das Dialogfeld anzuzeigen.</param>
        <summary>Zeigt das Dialogfeld für die Auflistung unter Verwendung des angegebenen Editor <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> Objekt.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DialogResult" /> , der angibt, der Ergebniscode zurückgegeben wird, über das Dialogfeld.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
