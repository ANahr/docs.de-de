<Type Name="DesignerActionMethodItem" FullName="System.ComponentModel.Design.DesignerActionMethodItem">
  <TypeSignature Language="C#" Value="public class DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionMethodItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionMethodItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Element der Smarttag-Bereich, der eine Methode in einer abgeleiteten Klasse zugeordnet ist <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem> Klasse stellt einzelne Elemente in einen Smarttagbereich dar. Ein Element dieses Typs wird als aktives Benutzeroberflächenelement, z. B. einen Hyperlink, der eine Programmierer bereitgestellte Methode in einer abgeleiteten Klasse aufruft angezeigt <xref:System.ComponentModel.Design.DesignerActionList>. Die Zuordnung zwischen dem Element und die Methode wird über den Wert von beibehalten der <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> Eigenschaft. Die Methode, die dieses Element ruft darf weder Parameter annehmen noch einen Wert zurückgeben.  
  
 Einzelne Systemsteuerungselemente gehören zusammen, um einen Bereich durch einen Aufruf bilden die <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode der <xref:System.ComponentModel.Design.DesignerActionList> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Sammlung von <xref:System.ComponentModel.Design.DesignerActionItem> Objekte.  
  
 Ein vollständiges Beispiel Smarttags implementieren, finden Sie unter [wie: Anfügen von Smarttags auf eine Komponente in Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> Klasse, mit der angegebenen Methode und den Anzeigenamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> und <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaften `null`, und die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> Eigenschaft `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="includeAsDesignerVerb">Ein Flag, das angibt, ob die zugeordnete Methode auch als ein Designerverb zu behandeln.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> Klasse, mit der angegebenen Methode und die Anzeigenamen und ein Flag, das angibt, ob das Element in anderen Schnittstelle Benutzerkontexten angezeigt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `includeAsDesignerVerb` Parameter auf festgelegt ist `true`, wird dieses Element auch als betrachtet eine <xref:System.ComponentModel.Design.DesignerVerb>; daher wird die Komponente zur Entwurfszeit Kontextmenü hinzugefügt. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], ein Befehl werden auch hinzugefügt werden, um die **Attribute** Bereich des Fensters Eigenschaften. Eine Liste von Designerverben zugegriffen werden kann, durch des Designers <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Auflistungseigenschaft.  
  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> und <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaften `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Die Groß-/Kleinschreibung <see cref="T:System.String" /> verwendet, um ähnliche Elemente im Bereich zu gruppieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> -Klasse, mit der angegebenen Methode, anzeigen und Kategorie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Standardkonstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaft `null` und die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> Eigenschaft `false`.  
  
 Weitere Informationen darüber, wie die `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Die Groß-/Kleinschreibung <see cref="T:System.String" /> verwendet, um ähnliche Elemente im Bereich zu gruppieren.</param>
        <param name="includeAsDesignerVerb">Ein Flag, das angibt, ob die zugeordnete Methode auch als ein Designerverb für die zugeordnete Komponente behandelt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> -Klasse, mit der angegebenen Methode, anzeigen und Kategorie Namen und ein Flag, das angibt, ob das Element in anderen Schnittstelle Benutzerkontexten angezeigt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `includeAsDesignerVerb` Parameter auf festgelegt ist `true`, wird das Element als auch betrachtet eine <xref:System.ComponentModel.Design.DesignerVerb>; daher wird die Komponente zur Entwurfszeit Kontextmenü hinzugefügt. Eine Liste von Designerverben zugegriffen werden kann, durch des Designers <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Auflistungseigenschaft.  
  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaft `null`.  
  
 Weitere Informationen darüber, wie der `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Die Groß-/Kleinschreibung <see cref="T:System.String" /> verwendet, um ähnliche Elemente im Bereich zu gruppieren.</param>
        <param name="description">Ergänzender Text für dieses Element, das in QuickInfos oder in der Statusleiste verwendet.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> -Klasse, mit der angegebenen Methode und Kategorie, und Anzeigetext und Beschreibung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.%23ctor%2A> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> Eigenschaft `false`.  
  
 Weitere Informationen darüber, wie der `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="includeAsDesignerVerb" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" /> , enthält die Methode, die dieses Element zugeordnet ist.</param>
        <param name="memberName">Der Name der Methode in der Klasse abgeleitet <see cref="T:System.ComponentModel.Design.DesignerActionList" /> aufzurufenden über das Panel-Element.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Die Groß-/Kleinschreibung <see cref="T:System.String" /> verwendet, um ähnliche Elemente im Bereich zu gruppieren.</param>
        <param name="description">Ergänzender Text für dieses Element, das in QuickInfos oder in der Statusleiste verwendet.</param>
        <param name="includeAsDesignerVerb">Ein Flag, das angibt, ob die zugeordnete Methode auch als ein Designerverb für die zugeordnete Komponente behandelt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> -Klasse, mit dem angegebenen Methode und Kategorie-Servernamen, Anzeigetext und Beschreibung und ein Flag, das angibt, ob das Element in anderen Schnittstelle Benutzerkontexten angezeigt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `includeAsDesignerVerb` Parameter auf festgelegt ist `true`, wird dieses Element auch als betrachtet eine <xref:System.ComponentModel.Design.DesignerVerb>; daher wird die Komponente zur Entwurfszeit Kontextmenü hinzugefügt. Eine Liste von Designerverben zugegriffen werden kann, durch des Designers <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Auflistungseigenschaft.  
  
 Weitere Informationen darüber, wie die `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Sammlung von <xref:System.ComponentModel.Design.DesignerActionItem> Objekte.  
  
 Ein vollständiges Beispiel Smarttags implementieren, finden Sie unter [wie: Anfügen von Smarttags auf eine Komponente in Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAsDesignerVerb">
      <MemberSignature Language="C#" Value="public virtual bool IncludeAsDesignerVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAsDesignerVerb" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert an die <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> sollte angezeigt werden, in anderen Benutzerkontexten-Schnittstelle.</summary>
        <value>
          <see langword="true" />Wenn das Element in Kontextmenüs verwendet werden soll; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> -Eigenschaftensatz auf `true`, wird das Element als auch betrachtet eine <xref:System.ComponentModel.Design.DesignerVerb>; daher wird die Komponente zur Entwurfszeit Kontextmenü hinzugefügt. Eine Liste von Designerverben zugegriffen werden kann, durch des Designers <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Auflistungseigenschaft.  
  
 Der Wert, der die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> Eigenschaft wird im Konstruktor für diese Klasse festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die zugeordnete Methode programmgesteuert aus dem <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> -Eigenschaft wird mit initialisiert `true`, die zugeordnete Methode kann auch über das entsprechende Designerverbereignis aufgerufen werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Methode, mit dem Namen <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> kann nicht gefunden werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public virtual string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode ab, die dies <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> zugeordnet ist.</summary>
        <value>Ein <see cref="T:System.String" /> , der den Namen der zugeordneten Methode enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> Eigenschaft gibt die Eigenschaft in der abgeleiteten Klasse die <xref:System.ComponentModel.Design.DesignerActionList> Klasse bereit, die das Element gebunden werden soll. Wenn der Programmierer mit der Systemsteuerungselement über die Benutzeroberfläche (UI) interagiert, wird diese zugeordnete Eigenschaft festgelegt werden.  
  
 Die gebundene Methode sollte weder Parameter noch einen Wert zurückgeben.  
  
 Diese Eigenschaft wird im Konstruktor festgelegt. Es wird die Groß-/Kleinschreibung beachtet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt eine Komponente, die trägt seine <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> Objekte, wenn der aktuelle Bereich.</summary>
        <value>Beitragende Komponente, die einen Designer verknüpft haben soll, der Elemente bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> -Eigenschaft ermöglicht einer anderen Komponente der Smarttag Systemsteuerungselemente der aktuellen Liste zu verleihen. Ein Benutzersteuerelement könnte z. B. die Elemente von einem seiner Standardsteuerelemente zusammenfassen.  
  
 Diese Eigenschaft funktioniert in Verbindung mit der <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
