<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zum Steuerelement wie <see cref="T:System.Net.NetworkInformation.Ping" /> Datenpakete übertragen werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.NetworkInformation.PingOptions> -Klasse stellt die <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> und <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Eigenschaften zu steuern, wie Internet Control Message Protocol (ICMP)-Echoanforderungspakete übertragen werden.  
  
 Die <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Eigenschaft gibt an, die Time to Live für Pakete, die durch die <xref:System.Net.NetworkInformation.Ping> Klasse. Dieser Wert gibt die Anzahl der routing-Knoten, die Weiterleitung von einem <xref:System.Net.NetworkInformation.Ping> Paket, bevor sie verworfen wird. Festlegen dieser Option ist nützlich, wenn Sie die Anzahl der Weiterleitungen testen möchten, auch bekannt als hops, sind erforderlich, um ein Paket von einem Quellcomputer auf einen Zielcomputer zu senden.  
  
 Die <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Eigenschaft steuert, ob Daten an einen Remotehost gesendet können werden mehrere Pakete aufgeteilt.  Diese Option ist nützlich, wenn Sie die Router und Gateways, die zum Übertragen des Pakets die maximum Transmission Unit (MTU) testen möchten.  
  
 Instanzen der <xref:System.Net.NetworkInformation.PingOptions> Klasse zu übergeben sind die <xref:System.Net.NetworkInformation.Ping.Send%2A> und <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Methoden, und die <xref:System.Net.NetworkInformation.PingReply> Klasse gibt Instanzen von <xref:System.Net.NetworkInformation.PingOptions> über die <xref:System.Net.NetworkInformation.PingReply.Options%2A> Eigenschaft.  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz von <xref:System.Net.NetworkInformation.PingOptions>, finden Sie unter der <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Net.NetworkInformation.Ping>, <xref:System.Net.NetworkInformation.PingOptions> und <xref:System.Net.NetworkInformation.PingReply> Klassen zum Senden einer ICMP-Echoanfrage an den Host in der Befehlszeile angegeben.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.PingOptions" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <xref:System.Net.NetworkInformation.PingOptions>.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 Sie können die Eigenschaften festlegen, um neue Werte vor dem Aufruf <xref:System.Net.NetworkInformation.Ping.Send%2A> oder <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel veranschaulicht das Aufrufen dieses Konstruktors.  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">Ein <see cref="T:System.Int32" /> Wert größer als 0 (null), die die Anzahl der gibt an, wie oft das dem <see cref="T:System.Net.NetworkInformation.Ping" /> Datenpakete weitergeleitet werden können.</param>
        <param name="dontFragment">
          <see langword="true" />um zu verhindern, dass Daten, die mit dem Remotehost fragmentieren gesendet; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Net.NetworkInformation.PingOptions" /> -Klasse und legt die Zeit auf Live und Fragmentierung Werte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `ttl` Typparameter schränkt die Anzahl der Router und Gateways, die die Daten weitergeleitet werden können. Dies ist hilfreich zum Testen der Länge der Route zwischen den lokalen Computern und Remotecomputern. Die `dontFragment` Parameter können Sie die maximum Transmission Unit (MTU) zu testen, den Router und Gateways, die zum Übertragen des Pakets verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht das Aufrufen dieses Konstruktors und die neuen instanzeigenschaftswerte anzeigen.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="ttl" /> ist kleiner gleich 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen <see cref="T:System.Boolean" /> -Wert, der Fragmentierung der mit dem Remotehost gesendeten Daten steuert.</summary>
        <value>
          <see langword="true" />Wenn die Daten in mehrere Pakete gesendet werden können; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen verwenden diese Eigenschaft, um zu steuern, ob Daten an einen Remotehost mithilfe des gesendet die <xref:System.Net.NetworkInformation.Ping> Klasse kann mehrere Pakete aufgeteilt werden.  Diese Option ist nützlich, wenn Sie die Router und Gateways, die zum Übertragen des Pakets die maximum Transmission Unit (MTU) testen möchten. Wenn diese Eigenschaft ist `true` mit dem Remotehost gesendeten Daten ist größer, und die maximale Übertragungseinheit eines Gateways oder Router zwischen dem Absender und dem Remotehost, der Pingvorgang fehlschlägt, mit dem Status <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen des Wert dieser Eigenschaft mit einem <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> Konstruktor, und klicken Sie dann den Wert anzeigen.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Anzahl der routing-Knoten, die weitergeleitet werden können die <see cref="T:System.Net.NetworkInformation.Ping" /> Daten, bevor sie verworfen wird.</summary>
        <value>Ein <see cref="T:System.Int32" /> Wert, der angibt, wie oft die <see cref="T:System.Net.NetworkInformation.Ping" /> Datenpakete weitergeleitet werden können. Der Standard ist 128.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie Gateways und Router Pakete über ein Netzwerk übertragen, verringern sie den aktuellen Time-to-Live (TTL) Wert, der im Paket-Header gefunden. Wenn der TTL-Wert 0 (null) erreicht, wird das Paket wird als unzustellbar eingestuft und wird verworfen. Diese Option ist nützlich, wenn Sie die Anzahl der zum Übertragen von Daten verwendeten Router und Gateways testen möchten.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen des Wert dieser Eigenschaft mit einem <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> Konstruktor, und klicken Sie dann den Wert anzeigen.  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Für einen Set-Vorgang angegebene Wert ist kleiner als oder gleich 0 (null).</exception>
      </Docs>
    </Member>
  </Members>
</Type>
