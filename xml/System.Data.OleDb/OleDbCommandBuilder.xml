<Type Name="OleDbCommandBuilder" FullName="System.Data.OleDb.OleDbCommandBuilder">
  <TypeSignature Language="C#" Value="public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Generiert automatisch Befehle für einzelne Tabellen, die verwendet werden, zum Abstimmen von Änderungen an einer <see cref="T:System.Data.DataSet" /> mit der zugeordneten Datenbank. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbDataAdapter> generiert die SQL-Anweisungen zum Abstimmen von Änderungen an nicht automatisch eine <xref:System.Data.DataSet> mit der zugeordneten Datenquelle. Allerdings können Sie erstellen ein <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt, das SQL-Anweisungen für einzelne Tabellen Updates automatisch zu generieren, wenn Sie festlegen, die <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Eigenschaft der <xref:System.Data.OleDb.OleDbDataAdapter>. Alle zusätzlichen SQL-Anweisungen, die Sie nicht festlegen, werden dann generiert, indem die <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 Die <xref:System.Data.OleDb.OleDbCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> -Ereignisse, wenn Sie festlegen, die <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> Eigenschaft. Sie können einem nur zuordnen <xref:System.Data.OleDb.OleDbDataAdapter> oder <xref:System.Data.OleDb.OleDbCommandBuilder> Objekt gleichzeitig miteinander.  
  
 Zum Generieren von INSERT-, Update- oder DELETE-Anweisungen, die <xref:System.Data.OleDb.OleDbCommandBuilder> verwendet die <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Eigenschaft, um einen erforderlichen Satz von Metadaten automatisch abzurufen. Wenn Sie ändern die <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> nach dem Abrufen der Metadaten, wie z. B. nach dem ersten Update, das Sie aufrufen sollten die <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Methode, um die Metadaten zu aktualisieren.  
  
 Die <xref:System.Data.OleDb.OleDbCommandBuilder> verwendet auch die <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, und <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> Eigenschaften verweist die <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>. Der Benutzer sollte Aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn mindestens eine dieser Eigenschaften geändert werden, oder wenn die <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> selbst ersetzt wird. Andernfalls die <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, und <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> Eigenschaften behalten ihre vorherigen Werte.  
  
 Beim Aufrufen <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.OleDb.OleDbCommandBuilder> aufgehoben ist die <xref:System.Data.OleDb.OleDbDataAdapter>, und die generierten Befehle sind nicht mehr verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.OleDb.OleDbCommand>gemeinsam <xref:System.Data.OleDb.OleDbDataAdapter> und <xref:System.Data.OleDb.OleDbConnection>, um Zeilen aus einer Datenquelle auszuwählen. Im Beispiel wird eine initialisierte übergeben <xref:System.Data.DataSet>, eine Verbindungszeichenfolge, eine Abfragezeichenfolge, die eine SQL SELECT-Anweisung und eine Zeichenfolge, die den Namen der Tabelle in der Datenquelle ist. Klicken Sie dann das Beispiel erstellt eine <xref:System.Data.OleDb.OleDbCommandBuilder>.  
  
 [!code-csharp[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OleDbCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OleDb.OleDbCommandBuilder" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OleDb.OleDbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Eine <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> Klasse mit dem zugeordneten <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> Ereignisse, die generiert werden, indem Sie die <xref:System.Data.OleDb.OleDbDataAdapter> in dieser Eigenschaft angegeben.  
  
 Beim Erstellen einer neuen Instanz <xref:System.Data.OleDb.OleDbCommandBuilder>, alle vorhandenen <xref:System.Data.OleDb.OleDbCommandBuilder> zugeordnete <xref:System.Data.OleDb.OleDbDataAdapter> freigegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> Objekt, für welche SQL Statements werden automatisch generiert.</summary>
        <value>Ein <see cref="T:System.Data.OleDb.OleDbDataAdapter" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OleDb.OleDbCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> Ereignisse, die generiert werden, indem Sie die <xref:System.Data.OleDb.OleDbDataAdapter> in dieser Eigenschaft angegeben.  
  
 Beim Erstellen einer neuen Instanz <xref:System.Data.OleDb.OleDbCommandBuilder>, alle vorhandenen <xref:System.Data.OleDb.OleDbCommandBuilder> zugeordnete <xref:System.Data.OleDb.OleDbDataAdapter> freigegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OleDb.OleDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">Die <see cref="T:System.Data.OleDb.OleDbCommand" /> verweisen auf die gespeicherte Prozedur, von dem die Parameterinformationen abgeleitet werden. Die abgeleiteten Parameter hinzugefügt werden die <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> Auflistung von der <see cref="T:System.Data.OleDb.OleDbCommand" />.</param>
        <summary>Ruft Parameterinformationen aus der gespeicherten Prozedur angegeben, der <see cref="T:System.Data.OleDb.OleDbCommand" /> und füllt die <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> Auflistung des angegebenen <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A>überschreibt alle vorhandenen Parameterinformationen für die <xref:System.Data.OleDb.OleDbCommand>.  
  
 <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A>erfordert einen zusätzlichen Aufruf an die Datenquelle, um Informationen zu erhalten. Wenn die Parameterinformationen im Voraus bekannt ist, ist es effizienter, die Parameters-Auflistung auffüllen, indem Sie die Informationen explizit festlegen.  
  
 Sie können nur <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> mit gespeicherten Prozeduren. Sie können keine <xref:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters%2A> zum Auffüllen der <xref:System.Data.OleDb.OleDbParameterCollection> mit beliebigen Transact-SQL-Anweisungen, wie z. B. eine parametrisierte SELECT-Anweisung.  
  
 Weitere Informationen finden Sie unter [Konfigurieren von Parametern und Parameterdatentypen](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegenden OLE DB-Anbieter unterstützt keine Parameterinformationen der gespeicherten Prozedur zurückgeben, des Befehlstexts keinem gültigen gespeicherten Prozedurnamen oder <see cref="P:System.Data.OleDb.OleDbCommand.CommandType" /> angegeben wurde, nicht <see langword="StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Löschvorgängen an der Datenquelle erforderlich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Löschvorgängen an der Datenquelle erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Löschvorgängen erforderlich.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Wenn <see langword="true" />, Parameternamen, die Zuordnung von Spaltennamen, generieren, wenn es möglich ist. Wenn <see langword="false" />, generieren @p1, @p2und so weiter.</param>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Löschvorgängen an der Datenquelle erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Löschvorgängen erforderlich.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.OleDb.OleDbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Testzwecken, weil sie den Text der zurückgibt der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Einfügevorgängen erforderlich.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Testzwecken, weil sie den Text der zurückgibt der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Wenn <see langword="true" />, Parameternamen, die Zuordnung von Spaltennamen, generieren, wenn es möglich ist. Wenn <see langword="false" />, generieren @p1, @p2und so weiter.</param>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Ausführen von Einfügevorgängen erforderlich.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Testzwecken, weil sie den Text der zurückgibt der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.OleDb.OleDbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Durchführen von Aktualisierungen an der Datenquelle erforderlich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Durchführen von Aktualisierungen an der Datenquelle erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt erforderlich, um die Updates ausführen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Wenn <see langword="true" />, Parameternamen, die Zuordnung von Spaltennamen, generieren, wenn es möglich ist. Wenn <see langword="false" />, generieren @p1, @p2und so weiter.</param>
        <summary>Ruft ab, die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt, das zum Durchführen von Aktualisierungen an der Datenquelle, optional mit Spalten für Parameternamen erforderlich.</summary>
        <returns>Die automatisch generierte <see cref="T:System.Data.OleDb.OleDbCommand" /> Objekt erforderlich, um die Updates ausführen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung kann mithilfe der <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OleDb.OleDbCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OleDb.OleDbDataAdapter>.  
  
 Nachdem die SQL-Anweisung generiert wird, wird die Anwendung muss explizit aufrufen <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Wenn die Anweisung in keiner Weise geändert wird. Andernfalls die <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> werden Informationen aus der vorherigen Anweisung wurde möglicherweise nicht korrekt. Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand*> oder <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.OleDb.OleDbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Der ursprüngliche Bezeichner ohne Anführungszeichen.</param>
        <summary>Gibt bei Angabe von einem Bezeichner ohne Anführungszeichen in der richtigen den richtigen Form des dieses Bezeichners. Dies schließt die ordnungsgemäß mit Escapezeichen versehen eingebetteten Anführungszeichen im Bezeichner.</summary>
        <returns>Die angegebene Version des Bezeichners. Eingebettete Anführungszeichen im Bezeichner werden ordnungsgemäß mit Escapezeichen versehen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Der Bezeichner ohne Anführungszeichen in einem Format mit Anführungszeichen zurückgegeben werden sollen.</param>
        <param name="connection">Wenn eine Verbindung übergeben wird, bewirkt, dass die von verwalteten Wrappern für das Anführungszeichen vom OLE DB-Anbieter abzurufen. Wenn keine Verbindung übergeben wird, die Zeichenfolge wird in Anführungszeichen mit Werten vom <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> und <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</param>
        <summary>Gibt bei Angabe von einem Bezeichner ohne Anführungszeichen in der richtigen den richtigen Form des dieses Bezeichners. Dies schließt die ordnungsgemäß mit Escapezeichen versehen eingebetteten Anführungszeichen im Bezeichner.</summary>
        <returns>Die angegebene Version des Bezeichners. Eingebettete Anführungszeichen im Bezeichner werden ordnungsgemäß mit Escapezeichen versehen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Der Bezeichner, dessen eingebetteten Anführungszeichen entfernt wird.</param>
        <summary>Gibt für einen Bezeichner in Anführungszeichen die richtige Form dieses Bezeichners zurück. Dies schließt ordnungsgemäß ohne Escapezeichen eingebettete Anführungszeichen im Bezeichner.</summary>
        <returns>Der Bezeichner ohne Anführungszeichen, mit eingebetteten Anführungszeichen ordnungsgemäß ohne Escapezeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.OleDb.OleDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Der Bezeichner, dessen eingebetteten Anführungszeichen entfernt wird.</param>
        <param name="connection">Die <see cref="T:System.Data.OleDb.OleDbConnection" />.</param>
        <summary>Gibt für einen Bezeichner in Anführungszeichen die richtige Form dieses Bezeichners zurück. Dies schließt ordnungsgemäß ohne Escapezeichen eingebettete Anführungszeichen im Bezeichner.</summary>
        <returns>Der Bezeichner ohne Anführungszeichen, mit eingebetteten Anführungszeichen ordnungsgemäß ohne Escapezeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
