<Type Name="ServerWebConfig" FullName="System.EnterpriseServices.Internal.ServerWebConfig">
  <TypeSignature Language="C#" Value="public class ServerWebConfig : System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerWebConfig extends System.Object implements class System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ServerWebConfig" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IServerWebConfig</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Erstellt eine Datei "Web.config" für eine SOAP-aktivierten COM+-Anwendung. Die Datei für COM-Schnittstellen, die veröffentlicht wird, die in der Anwendung können auch Komponenteneinträge hinzugefügt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.EnterpriseServices.Internal.ServerWebConfig> Klasse wird verwendet, um eine Datei "Web.config" beim Erstellen eines virtuellen Stammverzeichnisses in IIS 6.0 (Internetinformationsdienste) für eine SOAP-aktivierten COM+-Anwendung zu erstellen. Sie können auch XML-Elemente in die Datei "Web.config" für Komponentenschnittstellen hinzugefügt wird, um die Anwendung hinzufügen.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig>wird intern von .NET Framework verwendet werden. Sie müssen nicht direkt im Code verwenden.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerWebConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string WkoMode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="WkoMode" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Der Pfad der vorhandenen Datei "Web.config".</param>
        <param name="AssemblyName">Der Name der Assembly mit dem Typ hinzugefügt werden.</param>
        <param name="TypeName">Der Name des Typs hinzugefügt wird.</param>
        <param name="ProgId">Der programmgesteuerte Bezeichner für den Typ, der hinzugefügt wird.</param>
        <param name="WkoMode">Eine Zeichenfolgenkonstante, die den Namen eines Members entspricht der <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> Enumeration, der angibt, wie ein bekanntes Objekt aktiviert ist.</param>
        <param name="Error">Eine Zeichenfolge, in die eine Fehlermeldung geschrieben werden kann.</param>
        <summary>Fügt XML-Elemente in einer Datei "Web.config" für eine COM-Schnittstelle, die in einer SOAP-aktivierten COM+-Anwendung veröffentlicht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für den angegebenen Typ der <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> Methode fügt in die Datei "Web.config" der `<wellknown>` und `<activated>` Elemente als untergeordnete Elemente des der `<service>` Element mit der folgenden XPath-Ausdruck:  
  
 `/configuration/system.runtime.remoting/application/service`  
  
 Die `AssemblyName`, `TypeName`, `ProgId`, und `WkoMode` Parameter werden in die Attributwerte der beiden hinzugefügten Elemente integriert.  
  
 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A>sollte nicht direkt aufgerufen werden. Rufen Sie stattdessen die <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> Methode.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FilePrefix, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FilePrefix, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FilePrefix" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">Der Ordner, in dem die Konfigurationsdatei erstellt werden soll.</param>
        <param name="FilePrefix">Der Zeichenfolgenwert "Web", der eine Config-Erweiterung hinzugefügt wird.</param>
        <param name="Error">Eine Zeichenfolge, in die eine Fehlermeldung geschrieben werden kann.</param>
        <summary>Erstellt eine Datei "Web.config" für eine SOAP-aktivierten COM+-Anwendung, so, dass die Datei bereit für die XML-Elemente, die für COM-Schnittstellen, die zu veröffentlichenden hinzugefügt haben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> -Methode erstellt die Datei "Web.config", die die Hierarchie für ein leeres Element mit dem folgenden XPath enthält:  
  
```  
/configuration/system.runtime.remoting/application/service  
```  
  
 Zu instanziieren, sondern eine <xref:System.EnterpriseServices.Internal.ServerWebConfig> aufrufen und Klassenobjekt <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> direkt aufrufen, die <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A> Methode.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
