<Type Name="IComManagedImportUtil" FullName="System.EnterpriseServices.Internal.IComManagedImportUtil">
  <TypeSignature Language="C#" Value="public interface IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("c3f8f66b-91be-4c99-a94f-ce3b0a951039")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Identifiziert und installiert Komponenten im COM+-Katalog.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie unter <xref:System.EnterpriseServices.Internal.ComManagedImportUtil> für die standardmäßige Implementierung des <xref:System.EnterpriseServices.Internal.IComManagedImportUtil>.  
  
 <xref:System.EnterpriseServices.Internal.IComManagedImportUtil>wird intern von .NET Framework verwendet werden. Sie müssen nicht direkt im Code verwenden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath">Der Pfad der Assembly.</param>
        <param name="numComponents">Bei der Rückgabe dieser Methode enthält dieser Parameter die Anzahl der Komponenten in der Assembly an.</param>
        <param name="componentInfo">Bei der Rückgabe dieser Methode enthält dieser Parameter die Informationen zu den Komponenten.</param>
        <summary>Ruft die Komponenteninformationen aus der Assembly ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, durch den Klassenbezeichner (CLSID) identifiziert die COM+-Katalog und ProgIDs der Komponenten in eine DLL, bevor er registriert ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assemblyPath" />ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültige Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
 - oder -   
  
 Das System konnte den absoluten Pfad nicht abgerufen werden.</exception>
        <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyPath" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="assemblyPath" /> enthält einen Doppelpunkt (:).</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge. Beispielsweise müssen auf Windows-basierten Plattformen Pfade weniger als 248 Zeichen und Dateinamen weniger als 260 Zeichen enthalten.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string filename, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string filename, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Der Pfad für die Assembly.</param>
        <param name="parname">Der Name der COM+-Partition.</param>
        <param name="appname">Der Name der COM+-Anwendung.</param>
        <summary>Installiert eine Assembly in eine COM+-Anwendung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie unter <xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> für Weitere Informationen zur Implementierung dieser Methode.  
  
 Diese Methode muss der Aufrufer über Administratorberechtigungen auf dem lokalen Computer verfügen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Ein Aufrufer in der Aufrufkette nicht über die Berechtigung zum Zugriff auf nicht verwalteten Code.</exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Die Eingabeassembly keinen starken Namen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
