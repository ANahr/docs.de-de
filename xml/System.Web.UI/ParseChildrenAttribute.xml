<Type Name="ParseChildrenAttribute" FullName="System.Web.UI.ParseChildrenAttribute">
  <TypeSignature Language="C#" Value="public sealed class ParseChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParseChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseChildrenAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert ein Metadatenattribut, das Sie beim Entwickeln von ASP.NET-Serversteuerelemente verwenden können. Verwenden der <see cref="T:System.Web.UI.ParseChildrenAttribute" /> Klasse, um anzugeben, wie der Parser Inhalt behandeln soll, die in einer Servertag-Steuerelement auf einer Seite deklariert geschachtelt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ParseChildrenAttribute> -Klasse ermöglicht es Ihnen Analyselogik für ein benutzerdefiniertes Steuerelement angeben, durch die Markierung der Serversteuerelement mit der <xref:System.Web.UI.ParseChildrenAttribute> Metadatenattributs.  
  
 Markieren des Serversteuerelements mit dem Metadatenattribut `ParseChildren(true)` weist den Parser Elemente interpretieren, die innerhalb des Serversteuerelements-Tags als Eigenschaften enthalten sind. In diesem Szenario die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft ist `true`.  
  
 Markieren des Serversteuerelements mit dem Metadatenattribut `ParseChildren(true,"<Default Property>")` legt die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> -Eigenschaft auf den Namen der Eigenschaft, die an das Attribut übergeben wird.  
  
 Markieren des Serversteuerelements mit dem Metadatenattribut `ParseChildren(false)`, der Standardwert, weist den Parser Elemente interpretieren, die innerhalb des Serversteuerelements Tags als Inhalt enthalten sind, der analysiert wird mit einem zugeordneten <xref:System.Web.UI.ControlBuilder> , also als Steuerelemente. In diesem Szenario die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft ist `false`.  
  
 Informationen zum Verwenden von Attributen finden Sie unter [Attribute](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt besteht aus zwei Teilen. Im ersten Codebeispiel wird veranschaulicht, wie zum Festlegen von Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> Klasse. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen in einer ASP.NET-Seite verwendet wird.  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.ParseChildrenAttribute> Objekt eines benutzerdefinierten Steuerelements mit dem Namen `CollectionPropertyControl`. Die <xref:System.Web.UI.ParseChildrenAttribute> legt die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft, um `true` und die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Eigenschaft, um die `Employee` Klasse.  
  
 [!code-csharp[ParseChildrenAttribute_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` und `Employee` Klassen auf einer ASP.NET-Seite. Instanzen der `Employee` Klasse deklarativ hinzugefügt werden.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine neue Instanz der dem <xref:System.Web.UI.ParseChildrenAttribute> Klasse wird erstellt, mit der <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> -Eigenschaftensatz auf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">
          <see langword="true" />die Elemente als Eigenschaften des Serversteuerelements analysiert; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.UI.ParseChildrenAttribute" /> -Klasse unter Verwendung der <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> Eigenschaft, um zu bestimmen, ob die Elemente, die in einem Serversteuerelement befinden als Eigenschaften des Serversteuerelements analysiert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `childrenAsProperties` ist `false`, die Elemente, die innerhalb des Serversteuerelements enthalten sind als ein Steuerelement analysiert werden. `false`ist der Standardwert für <xref:System.Web.UI.ParseChildrenAttribute>.  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt besteht aus zwei Teilen. Im ersten Codebeispiel wird veranschaulicht, wie zum Festlegen von Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> Klasse. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen in einer ASP.NET-Seite verwendet wird.  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.ParseChildrenAttribute> -Objekt für ein benutzerdefiniertes Steuerelement mit dem Namen `CollectionPropertyControl`. Wenn der <xref:System.Web.UI.ParseChildrenAttribute> wird deklariert, bevor Sie die Klasse definieren `CollectionPropertyControl`, die <xref:System.Web.UI.ParseChildrenAttribute> legt der <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft, um `true`.  
  
 [!code-csharp[ParseChildrenAttribute_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` und `Employee` Klassen auf einer ASP.NET-Seite. Eine Instanz der `Employee` Klasse deklarativ hinzugefügt und eine andere programmgesteuert hinzugefügt wird.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (Type childControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type childControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childControlType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="childControlType">Der Steuerelementtyp, als eine Eigenschaft zu analysieren.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.UI.ParseChildrenAttribute" /> -Klasse unter Verwendung der <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" /> -Eigenschaft können Sie bestimmen, welche Elemente, die in einem Steuerelement enthalten sind, wie Steuerelemente analysiert werden.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="childControlType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties, string defaultProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties, string defaultProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
        <Parameter Name="defaultProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">
          <see langword="true" />die Elemente als Eigenschaften des Serversteuerelements analysiert; andernfalls <see langword="false" />.</param>
        <param name="defaultProperty">Eine Zeichenfolge, die eine Auflistungseigenschaft des Serversteuerelements definiert, in dem geschachtelte Inhalt standardmäßig analysiert wird.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Web.UI.ParseChildrenAttribute" /> -Klasse unter Verwendung der <paramref name="childrenAsProperties" /> und <paramref name="defaultProperty" /> Parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `childrenAsProperties` ist `false`, die Elemente werden als Steuerelemente analysiert.  
  
   
  
## Examples  
 Das Codebeispiel in diesem Abschnitt besteht aus zwei Teilen. Im ersten Codebeispiel wird veranschaulicht, wie zum Festlegen von Eigenschaften für die <xref:System.Web.UI.ParseChildrenAttribute> Klasse. Im zweiten Codebeispiel wird veranschaulicht, wie Klassen in einer ASP.NET-Seite verwendet wird.  
  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Web.UI.ParseChildrenAttribute> Objekt eines benutzerdefinierten Steuerelements mit dem Namen `CollectionPropertyControl`. Die <xref:System.Web.UI.ParseChildrenAttribute> legt die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft, um `true` und die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Eigenschaft, um die `Employee` Klasse.  
  
 [!code-csharp[ParseChildrenAttribute_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#2)]
 [!code-vb[ParseChildrenAttribute_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#2)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die `CollectionPropertyControl` und `Employee` Klassen auf einer ASP.NET-Seite.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControlType">
      <MemberSignature Language="C#" Value="public Type ChildControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ChildControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, des zulässigen Typs eines Steuerelements.</summary>
        <value>Der Steuerelementtyp. Die Standardeinstellung ist <see cref="T:System.Web.UI.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ist die zulässige Steuerelementtyp `null`, was bedeutet, dass er nicht angegeben wurde, der Standardtyp, also eine <xref:System.Web.UI.Control?displayProperty=nameWithType> steuern, die zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abfragen der <xref:System.Web.UI.ParseChildrenAttribute.ChildControlType%2A> Eigenschaft. Definitionen der `CollectionPropertyControl` und `Employee` Klassen, die in diesem Codebeispiel verwendeten finden Sie unter <xref:System.Web.UI.ParseChildrenAttribute.%23ctor%2A>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsProperties">
      <MemberSignature Language="C#" Value="public bool ChildrenAsProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Wert, der angibt, ob die Elemente analysieren, die als Eigenschaften in einem Serversteuerelement enthalten sind.</summary>
        <value>
          <see langword="true" />die Elemente als Eigenschaften analysiert; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> -Eigenschaftensatz auf `false`, Elemente, die in einem Steuerelement enthalten sind als ein Steuerelement analysiert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abfragen der <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> Eigenschaft. Definitionen der `CollectionPropertyControl` und `Employee` Klassen, die in diesem Codebeispiel verwendeten finden Sie unter <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" /> wurde aufgerufen, mit <paramref name="childrenAsProperties" /> festgelegt <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert den Standardwert für die <see cref="T:System.Web.UI.ParseChildrenAttribute" /> Klasse. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für die <xref:System.Web.UI.ParseChildrenAttribute.Default> Feld ist `false`, was bedeutet, dass Elemente nicht als Eigenschaften des Serversteuerelements analysiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProperty">
      <MemberSignature Language="C#" Value="public string DefaultProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Standardeigenschaft für das Serversteuerelement, in dem die Elemente analysiert werden.</summary>
        <value>Der Name der Standardeigenschaft der Auflistung des Serversteuerelements, in dem die Elemente analysiert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Eigenschaft wird verwendet, nur dann, wenn eine Zeichenfolge, um übergeben wird die <xref:System.Web.UI.ParseChildrenAttribute> Konstruktor. Wenn die <xref:System.Web.UI.ParseChildrenAttribute> Klasse wird erstellt, die <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Eigenschaft definiert die Standardeigenschaft für das Serversteuerelement, die analysiert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abfragen der <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Eigenschaft. Definitionen der `CollectionPropertyControl` und `Employee` Klassen, die in diesem Codebeispiel verwendeten finden Sie unter <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" /> wurde aufgerufen, mit <paramref name="childrenAsProperties" /> festgelegt <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das angegebene Objekt mit dem aktuellen Objekt identisch ist.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="obj" /> gleich dem aktuellen Objekt ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dient als Hashfunktion für die <see cref="T:System.Web.UI.ParseChildrenAttribute" /> Objekt.</summary>
        <returns>Ein Hashcode für das aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Wert, der angibt, ob der Wert der aktuellen Instanz von der <see cref="T:System.Web.UI.ParseChildrenAttribute" /> Klasse ist der Standardwert der abgeleiteten Klasse.</summary>
        <returns>
          <see langword="true" />Wenn die aktuelle <see cref="T:System.Web.UI.ParseChildrenAttribute" /> Wert ist die Standardinstanz ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für die <xref:System.Web.UI.ParseChildrenAttribute> Klasse ist die <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> Feld.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abfragen der <xref:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute%2A> Eigenschaft. Definitionen der `CollectionPropertyControl` und `Employee` Klassen, die in diesem Codebeispiel verwendeten finden Sie unter <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsChildren">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsChildren" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass geschachtelte Inhalte, die in das Steuerelement enthalten ist, wie Steuerelemente analysiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> Feld aufgerufen wird, die geschachtelte Inhalte, die innerhalb des Serversteuerelements enthalten sind nicht als Eigenschaften analysiert; stattdessen werden sie als Steuerelement analysiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsProperties">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsProperties" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass die geschachtelte Inhalte, die in einem Steuerelement enthalten ist, die als Eigenschaften des Steuerelements analysiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.ParseChildrenAttribute.ParseAsProperties> Feld aufgerufen wird, wird die geschachtelte Inhalte in einem Webserversteuerelement als Eigenschaften analysiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
