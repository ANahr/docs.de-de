<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält Informationen über einen einzelnen Datenbindungsausdruck in ein ASP.NET-Serversteuerelement, dem Rapid Application Development, (RAD)-Designer, z. B. Microsoft Visual Studio zur Entwurfszeit Datenbindungsausdrücke erstellen kann. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeder Datenbindungsausdruck in einem Steuerelement wird zur Entwurfszeit dargestellt, von einer Instanz von der <xref:System.Web.UI.DataBinding> Klasse. Alle Serversteuerelement, das eine oder mehrere Datenbindungsausdrücke enthält verfügt über eine <xref:System.Web.UI.DataBindingCollection> -Objekt, enthält die <xref:System.Web.UI.DataBinding> Objekte. Diese Auflistung wird über die <xref:System.Web.UI.Control> Klasse implementiert die <xref:System.Web.UI.IDataBindingsAccessor> Schnittstelle. Wenn Sie einen benutzerdefinierten RAD-Designer erstellen, verwenden Sie, dass diese Implementierung zum Zugriff auf die Auflistung. Alle <xref:System.Web.UI.DataBinding> oder <xref:System.Web.UI.DataBindingCollection> Serversteuerelement zugewiesenen Objekte vorhanden sind, nur zur Entwurfszeit. Sie sind nicht zur Laufzeit vorhanden und werden deshalb nicht während der Laufzeit zugegriffen werden kann.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Web.UI.DataBinding> -Objekt und stellt sie ein vorhandenes Objekt in des Steuerelements gleich <xref:System.Web.UI.DataBindingCollection> Auflistung, die eine `propertyName` Parameter mit einem Wert von `Text`. Wenn die Auflistung enthält ein <xref:System.Web.UI.DataBinding> -Objekt mit einer `propertyName` Wert `Text`, dieser Code gibt den Wert des Objekts zurück <xref:System.Web.UI.DataBinding.Expression%2A> Eigenschaft. Wenn keine solche Objekt vorhanden ist, gibt Sie eine leere Zeichenfolge ("").  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Die Eigenschaft zum Binden von Daten.</param>
        <param name="propertyType">Der .NET Framework-Typ der Eigenschaft Binden von Daten an.</param>
        <param name="expression">Der Datenbindungsausdruck ausgewertet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataBinding" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Web.UI.DataBinding> -Objekt und stellt sie ein vorhandenes Objekt in des Steuerelements gleich <xref:System.Web.UI.DataBindingCollection> Auflistung, die eine `propertyName` Parameter mit einem Wert von `Text`. Wenn die Auflistung enthält ein <xref:System.Web.UI.DataBinding> -Objekt mit einer `propertyName` Wert `Text`, dieser Code gibt den Wert des Objekts zurück <xref:System.Web.UI.DataBinding.Expression%2A> Eigenschaft. Wenn keine solche Objekt vorhanden ist, gibt Sie eine leere Zeichenfolge ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das Objekt mit dem aktuellen zu vergleichende <see cref="T:System.Web.UI.DataBinding" />.</param>
        <summary>Bestimmt, ob das angegebene Objekt der gleichen Instanz von ist die <see cref="T:System.Web.UI.DataBinding" /> Klasse wie das aktuelle Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die Datenbindung Eigenschaftennamen übereinstimmen; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Abrufen oder Festlegen der Datenbindungsausdruck ausgewertet werden soll.</summary>
        <value>Der Datenbindungsausdruck ausgewertet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Web.UI.DataBinding> -Objekt und stellt sie ein vorhandenes Objekt in des Steuerelements gleich <xref:System.Web.UI.DataBindingCollection> Auflistung, die eine `propertyName` Parameter mit einem Wert von `Text`. Wenn die Auflistung enthält ein <xref:System.Web.UI.DataBinding> -Objekt mit einer `propertyName` Wert `Text`, dieser Code gibt den Wert des Objekts zurück <xref:System.Web.UI.DataBinding.Expression%2A> Eigenschaft. Wenn keine solche Objekt vorhanden ist, gibt Sie eine leere Zeichenfolge ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Hashcode für eine Instanz der ab dem <see cref="T:System.Web.UI.DataBinding" /> Objekt.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinding>-Objekte befinden sich einer <xref:System.Web.UI.DataBindingCollection> Objekt, das nur zur Entwurfszeit zugegriffen werden kann. Die Auflistung ist eine Hashtabelle, die die Bindungen für ein Steuerelement darstellt. Es ist nur möglich eine Bindung pro Eigenschaft, damit die Berechnung des Hashs Code entspricht den <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> Implementierung und berücksichtigt nur den Eigenschaftennamen berücksichtigt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Steuerelementeigenschaft ASP.NET Server zum Binden von Daten ab.</summary>
        <value>Die Eigenschaft zum Binden von Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden die drei Variablen `dataBindingOutput1`, `dataBindingOutput2`, und `dataBindingOutput3`, die die verschiedenen Eigenschaften der Zugriff eine <xref:System.Web.UI.DataBinding> Objekt `myDataBinding2`. Er weist den Wert von der <xref:System.Web.UI.DataBinding.PropertyName%2A> Eigenschaft, um `dataBindingOutput1`, verkettet sie mit der Zeichenfolge "den Namen der Eigenschaft ist", und der Wert in eine Datei geschrieben.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den .NET Framework-Typ der Steuerelementeigenschaft für datengebundene ASP.NET Server ab.</summary>
        <value>Der .NET Framework-Typ der datengebundenen Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden die drei Variablen `dataBindingOutput1`, `dataBindingOutput2`, und `dataBindingOutput3`, die die verschiedenen Eigenschaften der Zugriff eine <xref:System.Web.UI.DataBinding> Objekt `myDataBinding2`. Die <xref:System.Web.UI.DataBinding.PropertyType%2A> Eigenschaftswert zugewiesen `dataBindingOutput2` und verkettet Sie mit der Zeichenfolge "ist der Eigenschaftentyp", und der Wert in eine Datei geschrieben.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
