<Type Name="IStateFormatter" FullName="System.Web.UI.IStateFormatter">
  <TypeSignature Language="C#" Value="public interface IStateFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStateFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden, die ein Typ implementiert, um Serialisierung und Deserialisierung eines Objektdiagramms an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.IStateFormatter> Schnittstelle definiert Methoden, die ein Typ implementieren kann, um Serialisierung und Deserialisierung des Zustands, der in einem ASP.NET-Webserversteuerelement verwaltet seine <xref:System.Web.UI.Control.ViewState%2A> Eigenschaft. Diese Infrastruktur wird durch abgeleitete Klassen verwendet die <xref:System.Web.UI.PageStatePersister> Klasse zu einer ASP.NET-Seite Status zwischen Anforderungen beizubehalten. Standardmäßig ASP.NET Seitenstatus serialisiert und deserialisiert, indem eine Instanz von der <xref:System.Web.UI.ObjectStateFormatter> -Klasse; Site-und Adapterentwickler können jedoch implementieren die <xref:System.Web.UI.IStateFormatter> Schnittstelle für ihre eigenen Typen zum Durchführen dieser Aufgaben.  
  
 Weitere Informationen zu Web Server Status Verwaltungs- und Ansicht Steuerelementzustand, finden Sie unter [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce) und [Dynamische Webserversteuerelemente und der Ansichtszustand](http://msdn.microsoft.com/library/c1ea6a66-3307-4c98-8187-cad462e1c027).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Web.UI.PageStatePersister> Objekt, das Anzeigen und steuern Zustand in einen Stream auf dem Webserver speichert. Die `StreamPageStatePersister` Klasse veranschaulicht das Überschreiben der <xref:System.Web.UI.PageStatePersister.Load%2A> und <xref:System.Web.UI.PageStatePersister.Save%2A> Methoden zum Extrahieren und speichern Seite Zustandsinformationen. Verwenden Sie diese Methoden die <xref:System.Web.UI.IStateFormatter> Schnittstelle geerbt wird, von der <xref:System.Web.UI.PageStatePersister> Klasse zum Serialisieren und Deserialisieren der Ansichtszustand. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.PageStatePersister> Klasse.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Deserialize(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState">Eine Zeichenfolge, die <see cref="T:System.Web.UI.IStateFormatter" /> deserialisiert in ein initialisiertes-Objekt.</param>
        <summary>Deserialisiert Objektdiagramm Status aus der serialisierten Zeichenfolgenform an.</summary>
        <returns>Ein Objekt, das den Status des ein ASP.NET-Serversteuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.IStateFormatter.Deserialize%2A> Methode, um das Zustandsobjekt für ein ASP.NET-Steuerelement Seiten- oder Server wiederherzustellen, die mit serialisiert wurden die <xref:System.Web.UI.IStateFormatter.Serialize%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.IStateFormatter.Deserialize%2A> Methode lädt Ansichtszustandsinformationen. Die <xref:System.Web.UI.PageStatePersister.Load%2A> Methode der `StreamPageStatePersister` -Klasse verwendet die <xref:System.Web.UI.IStateFormatter> Schnittstelle geerbt von der <xref:System.Web.UI.PageStatePersister> Klasse, um den Ansichtszustand zu deserialisieren. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.IStateFormatter> Schnittstelle.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Serialize(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Das Objekt, das den Ansichtszustand des Webserversteuerelements zum Serialisieren in Form einer Zeichenfolge darstellt.</param>
        <summary>Serialisiert die ASP.NET Web Server Steuerelementzustand in Form einer Zeichenfolge.</summary>
        <returns>Eine Zeichenfolge, die ein Webserversteuerelement Ansichtszustand darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.IStateFormatter.Serialize%2A> -Methode zum Transformieren ein Objektdiagramms-Zustand, in Form einer Zeichenfolge. Wieder zusammenzusetzen ein Zustandsobjekt aus der Zeichenfolge mithilfe der <xref:System.Web.UI.IStateFormatter.Deserialize%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.IStateFormatter.Serialize%2A> Methode speichert Ansichtszustandsinformationen in eine Datei. Die <xref:System.Web.UI.PageStatePersister.Save%2A> Methode der `StreamPageStatePersister` -Klasse verwendet die <xref:System.Web.UI.IStateFormatter> Schnittstelle geerbt von der <xref:System.Web.UI.PageStatePersister> Klasse, um Ansichtszustand zu serialisieren. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.IStateFormatter> Schnittstelle.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
