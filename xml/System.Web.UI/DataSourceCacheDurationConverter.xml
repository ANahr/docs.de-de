<Type Name="DataSourceCacheDurationConverter" FullName="System.Web.UI.DataSourceCacheDurationConverter">
  <TypeSignature Language="C#" Value="public class DataSourceCacheDurationConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceCacheDurationConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceCacheDurationConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Typkonverter für das Konvertieren von 32-Bit-Ganzzahl mit Vorzeichen Objekte in und aus Data Source Control Cache Dauer Darstellungen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET, die in der Regel Zwischenspeichern unterstützen Datenquellensteuerelemente eine `CacheDuration` Eigenschaft, dass Sie die Anzahl der Sekunden festlegen können, dass das Steuerelement Daten zwischengespeichert. Der Wert 0 gibt "Infinite" in diesen Kontexten Zwischenspeichern und die <xref:System.Web.UI.DataSourceCacheDurationConverter> Klasse übernimmt diese explizite Konvertierung.  
  
 Entwickler von Seiten verwenden Sie nicht die <xref:System.Web.UI.DataSourceCacheDurationConverter> Klasse. Entwickler von Steuerelementen, die Datenquellensteuerelemente entwickeln, die caching unterstützt Verwenden dieser Typkonverter zusammen mit den <xref:System.ComponentModel.TypeConverterAttribute> Attribut, um eine Eigenschaft zu ergänzen, die eine Cache Duration-Einstellung für eine benutzerdefinierte Datenquellen-Steuerelements darstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Eigenschaft für ein Datenquellensteuerelement ergänzen können, die mit caching unterstützt eine <xref:System.ComponentModel.TypeConverterAttribute> Attribut. In diesem Beispiel das Datenquellensteuerelement unterstützt caching Semantik und macht drei Eigenschaften, die modelliert werden, nachdem andere ASP.NET Steuerelemente Datenquelle verfügbar: `EnableCaching`, `CacheDuration`, und `CacheExpirationPolicy`. Die `CacheDuration` Eigenschaft verwendet die <xref:System.Web.UI.DataSourceCacheDurationConverter> Typkonverter.  
  
 [!code-csharp[System.Web.UI.DataSourceCacheDurationConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataSourceCacheDurationConverter/CS/somedatasourcecdc.cs#1)]
 [!code-vb[System.Web.UI.DataSourceCacheDurationConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataSourceCacheDurationConverter/VB/somedatasourcecdc.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceCacheDurationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="sourceType">Ein <see cref="T:System.Type" /> , die einen Typ, der der Konverter konvertiert darstellt.</param>
        <summary>Bestimmt, ob die <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> können konvertieren ein Objekts in der angegebenen Quelltyp ein <see cref="T:System.Int32" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn dieser Konverter den Vorgang ausführen kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter> Klasse explizit behandelt `string` Typen. Andernfalls ruft sie ihre Basisklasse <xref:System.ComponentModel.Int32Converter>, um die Entscheidung zu treffen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="destinationType">Ein <see cref="T:System.Type" /> , den Sie konvertieren möchten Typ darstellt.</param>
        <summary>Gibt einen Wert, der angibt, ob die <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> Instanz ein Objekt in den angegebenen Zieltyp konvertieren kann.</summary>
        <returns>
          <see langword="true" />Wenn dieser Konverter den Vorgang ausführen kann. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter> explizit behandelt die Konvertierung in `string` und <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> Typen. Andernfalls ruft sie ihre Basisklasse <xref:System.ComponentModel.Int32Converter>, um die Entscheidung zu treffen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" /> , die Kultur, in der Darstellung der Zahl angibt.</param>
        <param name="value">Das zu konvertierende Objekt.</param>
        <summary>Konvertiert das angegebene Objekt in ein <see cref="T:System.Int32" /> Objekt.</summary>
        <returns>Ein Objekt, das den konvertierten Wert darstellt. Wenn <see langword="null" /> wird in den Value-Parameter übergeben <see langword="null" /> zurückgegeben wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter.ConvertFrom%2A?displayProperty=nameWithType> Methode konvertiert ein <xref:System.String.Empty?displayProperty=nameWithType> Zeichenfolge oder die Zeichenfolge "Infinite" auf den Wert 0. Andere Werte werden von der Basisklasse behandelt <xref:System.ComponentModel.Int32Converter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" /> , die Kultur, in der Darstellung der Zahl angibt.</param>
        <param name="value">Das zu konvertierende Objekt.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
        <returns>Ein Objekt, das den konvertierten Wert darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> Methode konvertiert einen gültigen Wert von 0 in die Zeichenfolge "Infinite". Andere Werte werden von der Basisklasse behandelt <xref:System.ComponentModel.Int32Converter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Gibt eine Auflistung von Standardwerten für den Datentyp der <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> -Instanz vorgesehen ist.</summary>
        <returns>Ein <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> mit dem Wert 0 für die Cachedauer, was "Infinite" darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Gibt an, ob die zurückgegebene Auflistung von Standardwerten aus der <see cref="Overload:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues" /> Methode ist eine exklusive Liste darstellt, mit dem angegebenen Kontext.</summary>
        <returns>
          <see langword="false" /> in allen Fällen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter> immer zurück `false` gibt an, dass die <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> von zurückgegebenen Auflistung der <xref:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues%2A> Methode ist keine vollständige Liste möglicher Werte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <summary>Gibt an, ob die <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> Objekt unterstützt einen Standardsatz von Werten, die aus einer Liste, die mit dem angegebenen Kontext ausgewählt werden können.</summary>
        <returns>
          <see langword="true" /> in allen Fällen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.DataSourceCacheDurationConverter> -Objekt immer gibt `true` gibt an, dass die <xref:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues%2A> Methode sollte aufgerufen werden, um einem gemeinsamen Satz von Werten zu den Konverter suchen unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
