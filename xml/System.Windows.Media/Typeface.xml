<Type Name="Typeface" FullName="System.Windows.Media.Typeface">
  <TypeSignature Language="C#" Value="public class Typeface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Typeface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Typeface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Kombination von <see cref="T:System.Windows.Media.FontFamily" />, <see cref="T:System.Windows.FontWeight" />, <see cref="T:System.Windows.FontStyle" />, und <see cref="T:System.Windows.FontStretch" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Schriftart ist eine einzelne Variation einer Schriftart in der gleichen Schriftfamilie. Ein Beispiel für eine Schriftart ist die kursive Version der Schriftfamilie "Times New Roman". Schriftart definiert die Gewichtung, Stil und ausdehnen Funktionen einer Schriftart an.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#102](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#102)]
 [!code-vb[FontSnippets#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Typeface (string typefaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typefaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typefaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typefaceName">Der Schriftartname für die angegebene Schriftfamilie.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Media.Typeface" /> Klasse für den angegebenen Namen der Schriftfamilie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#105](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#105)]
 [!code-vb[FontSnippets#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Typeface (System.Windows.Media.FontFamily fontFamily, System.Windows.FontStyle style, System.Windows.FontWeight weight, System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.FontFamily fontFamily, valuetype System.Windows.FontStyle style, valuetype System.Windows.FontWeight weight, valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Die Schriftfamilie der Schriftart.</param>
        <param name="style">Der Schriftschnitt der Schriftart.</param>
        <param name="weight">Die relative Gewichtung der Schriftart.</param>
        <param name="stretch">Gibt den Grad, zu dem die Schriftart verzerrt wird.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Media.Typeface" /> Klasse für den Namen der angegebenen Schriftfamilie, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, und <see cref="P:System.Windows.Media.Typeface.Stretch" /> Werte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#105](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#105)]
 [!code-vb[FontSnippets#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Typeface (System.Windows.Media.FontFamily fontFamily, System.Windows.FontStyle style, System.Windows.FontWeight weight, System.Windows.FontStretch stretch, System.Windows.Media.FontFamily fallbackFontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.FontFamily fontFamily, valuetype System.Windows.FontStyle style, valuetype System.Windows.FontWeight weight, valuetype System.Windows.FontStretch stretch, class System.Windows.Media.FontFamily fallbackFontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="fallbackFontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">Die Schriftfamilie der Schriftart.</param>
        <param name="style">Der Schriftschnitt der Schriftart.</param>
        <param name="weight">Die relative Gewichtung der Schriftart.</param>
        <param name="stretch">Gibt den Grad, zu dem die Schriftart verzerrt wird.</param>
        <param name="fallbackFontFamily">Der Schriftfamilie, die verwendet wird, wenn ein Zeichen gefunden, der die primäre Schriftfamilie (gemäß der <c>FontFamily</c> Parameter) kann nicht angezeigt werden.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Media.Typeface" /> Klasse für den Namen der angegebenen Schriftfamilie, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, und <see cref="P:System.Windows.Media.Typeface.Stretch" /> Werte. Darüber hinaus ist eine alternative Schriftfamilie angegeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Übergeben von `null` für die `fallbackFontFamily` Parameter bewirkt, dass ein Zeichen für Zeichen, die nicht in die primäre Schriftfamilie enthalten angezeigt werden soll.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#105](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#105)]
 [!code-vb[FontSnippets#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CapsHeight">
      <MemberSignature Language="C#" Value="public double CapsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CapsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.CapsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand von der Baseline an den Anfang eines englischen Großbuchstabens für die Schriftart ab.</summary>
        <value>Ein <see cref="T:System.Double" /> , der den Abstand zwischen der Baseline an den Anfang eine englische Großbuchstaben, ausgedrückt als Prozentsatz des Schriftgrads Em angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Rückgabewert von `1` gibt an, dass am Anfang eines englischen Großbuchstabens eine Geviertgröße über der Basislinie ruht, während ein Rückgabewert von `0.5` gibt an, dass es halbe Geviertgröße über den Grundwerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Der zu vergleichende <see cref="T:System.Windows.Media.Typeface" />.</param>
        <summary>Ruft einen Wert, der angibt, ob die aktuelle Schriftart und die angegebene Schriftart die gleiche haben <see cref="P:System.Windows.Media.Typeface.FontFamily" />, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, <see cref="P:System.Windows.Media.Typeface.Stretch" />, und fallback-Schriftart-Werte.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="o" /> gleich dem aktuellen <see cref="T:System.Windows.Media.Typeface" />-Objekt ist; andernfalls <see langword="false" />. Wenn <paramref name="o" /> keine <see cref="T:System.Windows.Media.Typeface" /> Objekt <see langword="false" /> wird zurückgegeben.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaceNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FaceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FaceNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.FaceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von kulturabhängigen Namen für die <see cref="T:System.Windows.Media.Typeface" />.</summary>
        <value>Ein <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> Wert, der die kulturspezifische Namen der Schriftart darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Schriftfamilie, von der die Schriftart erstellt wurde.</summary>
        <value>Die <see cref="T:System.Windows.Media.FontFamily" /> aus der die Schriftart erstellt wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dient als Hashfunktion für <see cref="T:System.Windows.Media.Typeface" />. Sie eignet sich für die Verwendung in Hashalgorithmen und Datenstrukturen, z. B. einer Hashtabelle.</summary>
        <returns>Ein <see cref="T:System.Int32" /> Wert, der den Hashcode für das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBoldSimulated">
      <MemberSignature Language="C#" Value="public bool IsBoldSimulated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoldSimulated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.IsBoldSimulated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob für die vom dargestellten Symbole Schriftbreite fett simuliert die <see cref="T:System.Windows.Media.Typeface" />.</summary>
        <value>
          <see langword="true" />Wenn fett Simulation für Symbole verwendet wird. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Media.Typeface> kann eine Gewichtung fett simulieren, indem Sie Strecken eines Symbols. Eine nicht simulierten fett Schriftart dient in der Regel eine bessere visuelle Darstellung als eine simulierte fett Schriftart haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsObliqueSimulated">
      <MemberSignature Language="C#" Value="public bool IsObliqueSimulated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsObliqueSimulated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.IsObliqueSimulated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bestimmt, ob eine kursive Formatierung für die vom dargestellten Symbole simuliert die <see cref="T:System.Windows.Media.Typeface" />.</summary>
        <value>
          <see langword="true" />Wenn kursiv Simulation für Symbole verwendet wird. andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Media.Typeface> kann eine kursive Formatierung durch Scherung oder Neigung eines Symbols simulieren. Eine nicht simulierten kursive Schriftart dient in der Regel eine bessere visuelle Darstellung als eine simulierte kursive Schriftart haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch Stretch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch Stretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.Stretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stretch-Wert für die <see cref="T:System.Windows.Media.Typeface" />. Der Stretch-Wert bestimmt, ob eine Schriftart, die erweitert oder komprimiert werden, wenn er angezeigt wird.</summary>
        <value>Ein <see cref="T:System.Windows.FontStretch" /> Wert, den Stretch für die Schriftart darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Font-Stretch-Wert beschreibt den Grad, zu dem Form einer Schriftart aus der normale Größenverhältnis verzerrt wird also in der ursprünglichen Breite zu Höhenverhältnis für die Symbole in der Schriftart angegeben.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#108](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#108)]
 [!code-vb[FontSnippets#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikethroughPosition">
      <MemberSignature Language="C#" Value="public double StrikethroughPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StrikethroughPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.StrikethroughPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Abstand zwischen der Grundlinie und dem Durchstreichstrich für die Schriftart angibt.</summary>
        <value>Ein <see cref="T:System.Double" /> , durchgestrichen-Position, aus der Basislinie gemessen und als Dezimalbruch Geviertgröße der Schriftart angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Rückgabewert von `0.1` gibt an, dass die Position durchgestrichen ein Zehntel des Geviertgröße über der Basislinie ruht, während ein Rückgabewert von `0.25` gibt an, dass seine ein Viertel des Geviertgröße über den Grundwerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikethroughThickness">
      <MemberSignature Language="C#" Value="public double StrikethroughThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StrikethroughThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.StrikethroughThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Stärke des Durchstreichstrichs relativ zur Geviertgröße der Schriftart angibt.</summary>
        <value>Ein <see cref="T:System.Double" />, der die Stärke des Durchstreichstrichs als Bruchteil der Geviertgröße der Schriftart angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Rückgabewert von `0.05` gibt an, dass die Stärke des durchgestrichen One-zwanzigste des Schriftgrads auf Em, während ein Rückgabewert von `0.1` gibt an, dass die Stärke des durchgestrichen ein Zehntel des Schriftgrads Em ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der <see cref="T:System.Windows.Media.Typeface" />.</summary>
        <value>Ein <see cref="T:System.Windows.FontStyle" /> Wert, der den Schriftschnitt der Schriftart darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Drei Begriffe kategorisieren die Neigung einer Schriftart: Normal, kursiv und kursiv.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#109](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#109)]
 [!code-vb[FontSnippets#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetGlyphTypeface">
      <MemberSignature Language="C#" Value="public bool TryGetGlyphTypeface (out System.Windows.Media.GlyphTypeface glyphTypeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetGlyphTypeface([out] class System.Windows.Media.GlyphTypeface&amp; glyphTypeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface">
          <see cref="T:System.Windows.Media.GlyphTypeface" />-Objekt, das dieser Schriftart entspricht, oder <see langword="null" /> , wenn die Schriftart aus einer zusammengesetzten Schriftfamilie erstellt wurde.</param>
        <summary>Ruft die <see cref="T:System.Windows.Media.GlyphTypeface" /> , entspricht der <see cref="T:System.Windows.Media.Typeface" />.</summary>
        <returns>
          <see langword="true" />Wenn der Out-Parameter, um festgelegt ist eine <see cref="T:System.Windows.Media.GlyphTypeface" /> Wert; anderenfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Media.GlyphTypeface> ist eine Schriftart, die direkt auf eine Schriftartdatei auf dem Datenträger entspricht. Ein <xref:System.Windows.Media.Typeface>, allerdings ist eine Darstellung der Schriftart.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlinePosition">
      <MemberSignature Language="C#" Value="public double UnderlinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UnderlinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.UnderlinePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der den Abstand der Unterstreichung aus der Basislinie für die Schriftart angibt.</summary>
        <value>Ein <see cref="T:System.Double" /> , der die Position des Unterstrichs, aus der Basislinie gemessen und als Dezimalbruch Geviertgröße der Schriftart angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert wird in der Regel negativ ist, um die Unterstreichung unterhalb der Basislinie zu platzieren. Angenommen, ein Rückgabewert von `-0.1` gibt an, dass die Position der Unterstreichung ein Zehntel des Geviertgröße unterhalb der Basislinie ruht, während ein Rückgabewert von `-0.25` gibt an, dass es sich um ein Viertel des Geviertgröße unterhalb der Basislinie ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlineThickness">
      <MemberSignature Language="C#" Value="public double UnderlineThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UnderlineThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.UnderlineThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der die Stärke der Unterstreichung relativ zur Geviertgröße Schriftart für die Schriftart angibt.</summary>
        <value>Ein <see cref="T:System.Double" /> , der die Stärke der Unterstreichung als Dezimalbruch Geviertgröße der Schriftart angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Rückgabewert von `0.05` gibt an, dass die Stärke des "Unterstreichen" One-zwanzigste des Schriftgrads auf Em, während ein Rückgabewert von `0.1` gibt an, dass die Stärke der Unterstreichung ein Zehntel des Schriftgrads Em ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight Weight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight Weight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die relative Gewichtung der Schriftart ab.</summary>
        <value>Ein <see cref="T:System.Windows.FontWeight" /> Wert, der die relative Gewichtung der Schriftart darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unterschiede werden in der Regel von einem verstärkten Strich oder ein angegebenes Zeichen in einer Schriftart, im Vergleich zu einem "normalen" Zeichen in der gleichen Schriftart zugeordnete Stärke unterschieden.  
  
 **Hinweis** nicht alle Gewichtungen für alle Schriftarten verfügbar sind. Wenn eine Gewichtung nicht für eine Schriftart verfügbar ist, wird die ähnlichste Schriftbreite zurückgegeben.  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#110](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#110)]
 [!code-vb[FontSnippets#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XHeight">
      <MemberSignature Language="C#" Value="public double XHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Typeface.XHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand von der Baseline an den Anfang einer lateinische Kleinbuchstaben für eine Schriftart ab. Der Abstand umfasst keine Oberlängen.</summary>
        <value>Ein <see cref="T:System.Double" /> , der den Abstand zwischen der Baseline an den Anfang einer lateinische Kleinbuchstaben (ohne Oberlängen), als Bruchzahl Geviertgröße der Schriftart angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Rückgabewert von `0.25` gibt an, dass am Anfang einer englischen Buchstaben ein Viertel des Geviertgröße über der Basislinie ruht, während ein Rückgabewert von `0.75` gibt an, dass am Anfang einer englischen Buchstaben drei Viertel Geviertgröße über den Grundwerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
