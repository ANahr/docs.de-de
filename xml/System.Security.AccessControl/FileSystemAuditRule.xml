<Type Name="FileSystemAuditRule" FullName="System.Security.AccessControl.FileSystemAuditRule">
  <TypeSignature Language="C#" Value="public sealed class FileSystemAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Zugriffssteuerungseintrag (ACE), der eine Überwachungsregel für eine Datei oder ein Verzeichnis definiert eine Abstraktion dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.AccessControl.FileSystemAuditRule> -Klasse stellt eine Abstraktion für einen zugrunde liegenden Zugriffssteuerungseintrag (ACE), der angibt, ein Benutzerkonto, der den Typ des Zugriffs (Lesen, schreiben und So weiter), und, ob die Überwachung ausgeführt.  Diese Klasse kann auch angeben, wie Überwachungsregeln geerbt von und auf Objekte weitergegeben werden.  
  
 Um die Datei- und verzeichnisüberwachung unter Windows NT oder höher zu ermöglichen, müssen Sie Audit-Sicherheitsrichtlinien auf dem Computer aktivieren.  Diese Richtlinie ist standardmäßig auf keine Überwachung festgelegt.  
  
 Führen Sie die folgenden Schritte aus, um die Sicherheitsrichtlinie der Audit-Zugriff zu aktivieren:  
  
1.  Öffnen der **lokale Sicherheitseinstellungen** Microsoft Management Console (MMC)-Snap-in im Ordner "Verwaltung".  
  
2.  Erweitern Sie den Ordner Lokale Richtlinien, und klicken Sie auf den Ordner Überwachungsrichtlinie.  
  
3.  Doppelklicken Sie auf die **Überwachung von Objektzugriffsversuchen** Eintrag im rechten Bereich des MMC-Snap-Ins oder mit der rechten Maustaste, und wählen Sie die anzuzeigenden Eigenschaften der **Objekt Zugriff Überwachungseigenschaften** (Dialogfeld).  
  
4.  Wählen Sie die **Erfolg** oder **Fehler** Kontrollkästchen Erfolge oder Fehler zu protokollieren.  
  
 Beachten Sie, dass eine Überwachungsregel für ein Benutzerkonto eine entsprechende Zugriffsregel für das gleiche Benutzerkonto erforderlich ist.  
  
 Verwenden der <xref:System.Security.AccessControl.FileSystemAuditRule> Klasse, um eine neue Überwachungsregel erstellen.  Sie können diese Regel mit beibehalten der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Security.AccessControl.FileSystemAuditRule> Klasse hinzufügen und entfernen Sie dann aus einer Datei eine Überwachungsregel.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Ein <see cref="T:System.Security.Principal.IdentityReference" /> Objekt, das einen Verweis auf ein Benutzerkonto kapselt.</param>
        <param name="fileSystemRights">Eines der <see cref="T:System.Security.AccessControl.FileSystemRights" /> Werte, die den Typ der Überwachungsregel zugeordneten Vorgangs angibt.</param>
        <param name="flags">Eines der <see cref="T:System.Security.AccessControl.AuditFlags" /> Werte, der angibt, wann die Überwachung ausgeführt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> -Klasse mit einem Verweis auf ein Benutzerkonto, ein Wert, der den Typ der Überwachungsregel zugeordneten Vorgangs angibt und einen Wert, der angibt, wann die Überwachung ausgeführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor eine Überwachungsregel erstellen, die Sie beibehalten können mithilfe der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Überwachungsregeln bestimmen, wann und wie auf Systemobjekte, Aktionen ausgeführt, z. B. Dateien und Ordner werden protokolliert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="identity" /> -Parameter ist ein <see cref="T:System.Security.Principal.IdentityReference" /> Objekt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wurde eine falsche Enumeration zum Übergeben der <paramref name="flags" /> Parameter.  
  
 - oder -   
  
 Die <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wert wurde zum Übergeben der <paramref name="flags" /> Parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AuditFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Der Name eines Benutzerkontos an.</param>
        <param name="fileSystemRights">Eines der <see cref="T:System.Security.AccessControl.FileSystemRights" /> Werte, die den Typ der Überwachungsregel zugeordneten Vorgangs angibt.</param>
        <param name="flags">Eines der <see cref="T:System.Security.AccessControl.AuditFlags" /> Werte, der angibt, wann die Überwachung ausgeführt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> -Klasse mit einen Benutzerkontonamen, ein Wert, der den Typ der Überwachungsregel zugeordneten Vorgangs angibt und einen Wert, der angibt, wann die Überwachung ausgeführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor eine Überwachungsregel erstellen, die Sie beibehalten können mithilfe der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Überwachungsregeln bestimmen, wann und wie auf Systemobjekte, Aktionen ausgeführt, z. B. Dateien und Ordner werden protokolliert.  
  
 Die `identity` Parameter muss ein gültiges Konto auf dem aktuellen Computer oder die Domäne identifiziert.  Die Zeichenfolge hat die Form, in dem `DOMAIN` ist der Name der einen gültigen Namen der Domänen- oder Computernamen und `account` ist der Name eines gültigen Benutzerkontos in einer Domäne oder den Computer: `DOMAIN\account`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Security.AccessControl.FileSystemAuditRule> Klasse hinzufügen und entfernen Sie dann aus einer Datei eine Überwachungsregel.  Sie müssen ein gültiges Benutzer- oder Gruppenkonto angeben, um dieses Beispiel auszuführen.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wurde eine falsche Enumeration zum Übergeben der <paramref name="flags" /> Parameter.  
  
 - oder -   
  
 Die <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wert wurde zum Übergeben der <paramref name="flags" /> Parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Ein <see cref="T:System.Security.Principal.IdentityReference" /> Objekt, das einen Verweis auf ein Benutzerkonto kapselt.</param>
        <param name="fileSystemRights">Eines der <see cref="T:System.Security.AccessControl.FileSystemRights" /> Werte, die den Typ der Überwachungsregel zugeordneten Vorgangs angibt.</param>
        <param name="inheritanceFlags">Eines der <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Werte, der angibt, wie Zugriffsmasken auf untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Eines der <see cref="T:System.Security.AccessControl.PropagationFlags" /> Werte, der angibt, wie die Zugriffssteuerungseinträge (ACEs) an untergeordnete Objekte weitergegeben werden.</param>
        <param name="flags">Eines der <see cref="T:System.Security.AccessControl.AuditFlags" /> Werte, der angibt, wann die Überwachung ausgeführt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> -Klasse mit dem Namen eines Verweises auf ein Benutzerkonto, ein Wert, der den Typ der Überwachungsregel zugeordneten Vorgangs angibt, ein Wert, der bestimmt, wie Rechte geerbt werden, ein Wert, der bestimmt, wie Rechte sind weitergegeben, und einen Wert angibt, wann die Überwachung ausgeführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor eine Überwachungsregel erstellen, die Sie beibehalten können mithilfe der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Überwachungsregeln bestimmen, wann und wie auf Systemobjekte, Aktionen ausgeführt, z. B. Dateien und Ordner werden protokolliert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="identity" /> -Parameter ist ein <see cref="T:System.Security.Principal.IdentityReference" /> Objekt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="identity" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wurde eine falsche Enumeration zum Übergeben der <paramref name="flags" /> Parameter.  
  
 - oder -   
  
 Die <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wert wurde zum Übergeben der <paramref name="flags" /> Parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAuditRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAuditRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Der Name eines Benutzerkontos an.</param>
        <param name="fileSystemRights">Eines der <see cref="T:System.Security.AccessControl.FileSystemRights" /> Werte, die den Typ der Überwachungsregel zugeordneten Vorgangs angibt.</param>
        <param name="inheritanceFlags">Eines der <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Werte, der angibt, wie Zugriffsmasken auf untergeordnete Objekte weitergegeben werden.</param>
        <param name="propagationFlags">Eines der <see cref="T:System.Security.AccessControl.PropagationFlags" /> Werte, der angibt, wie die Zugriffssteuerungseinträge (ACEs) an untergeordnete Objekte weitergegeben werden.</param>
        <param name="flags">Eines der <see cref="T:System.Security.AccessControl.AuditFlags" /> Werte, der angibt, wann die Überwachung ausgeführt.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> -Klasse mit dem Namen eines Benutzerkontos, ein Wert, der den Typ des Vorgangs zugeordneten Überwachungsregel, ein Wert, der bestimmt, wie Rechte geerbt werden, ein Wert, der bestimmt, wie Rechte weitergegeben werden, gibt und einen Wert, der angibt, wann die Überwachung ausgeführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor eine Überwachungsregel erstellen, die Sie beibehalten können mithilfe der <xref:System.Security.AccessControl.FileSecurity> oder <xref:System.Security.AccessControl.DirectorySecurity> Klasse.  Überwachungsregeln bestimmen, wann und wie auf Systemobjekte, Aktionen ausgeführt, z. B. Dateien und Ordner werden protokolliert.  
  
 Die `identity` Parameter muss ein gültiges Konto auf dem aktuellen Computer oder die Domäne identifiziert.  Die Zeichenfolge hat die Form, in dem `DOMAIN` ist der Name der einen gültigen Namen der Domänen- oder Computernamen und `account` ist der Name eines gültigen Benutzerkontos in einer Domäne oder den Computer: `DOMAIN\account`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.ArgumentOutOfRangeException">Wurde eine falsche Enumeration zum Übergeben der <paramref name="flags" /> Parameter.  
  
 - oder -   
  
 Die <see cref="F:System.Security.AccessControl.AuditFlags.None" /> Wert wurde zum Übergeben der <paramref name="flags" /> Parameter.</permission>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAuditRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Security.AccessControl.FileSystemRights" /> aktuellen zugeordneten Flags <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Objekt.</summary>
        <value>Die <see cref="T:System.Security.AccessControl.FileSystemRights" /> aktuellen zugeordneten Flags <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
