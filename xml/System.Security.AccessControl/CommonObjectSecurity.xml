<Type Name="CommonObjectSecurity" FullName="System.Security.AccessControl.CommonObjectSecurity">
  <TypeSignature Language="C#" Value="public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonObjectSecurity extends System.Security.AccessControl.ObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.ObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Steuert den Zugriff auf Objekte ohne direkte Bearbeitung von Zugriffssteuerungslisten (ACLs). Diese Klasse ist die abstrakte Basisklasse für die <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> Klasse.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommonObjectSecurity (bool isContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isContainer">
          <see langword="true" />Wenn das neue Objekt ein Containerobjekt ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.AccessControl.CommonObjectSecurity" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Zugriffsregel hinzufügen.</param>
        <summary>Fügt die angegebene Zugriffsregel der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List) zugeordnete <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Hinzufügen einer Zugriffsregel möglicherweise vorhandene Zugriffsregeln in der DACL zusammengeführt werden sollen.  
  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die hinzuzufügende Überwachungsregel.</param>
        <summary>Fügt die angegebene Überwachungsregel an das System Liste SACL (Access Control) zugeordnet <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hinzufügen einer Überwachungsregel kann dazu führen, dass vorhandene Zugriffsregeln in der SACL zusammengeführt werden sollen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit">
          <see langword="true" />zum Einschließen der Zugriff festgelegt für das Objekt explizit Regeln.</param>
        <param name="includeInherited">
          <see langword="true" />um geerbte Zugriffsregeln einzuschließen.</param>
        <param name="targetType">Gibt an, ob die Sicherheits-ID für die abzurufenden Zugriffsregeln der Typ t: System.Security.Principal.SecurityIdentifier oder t: System.Security.Principal.NTAccount. Der Wert dieses Parameters muss ein Typ, der in übersetzt werden kann die <see cref="T:System.Security.Principal.SecurityIdentifier" /> Typ.</param>
        <summary>Ruft eine Auflistung von Zugriffsregeln, die die angegebene Sicherheits-ID zugeordnet.</summary>
        <returns>Die Auflistung der Zugriffsregeln, die mit dem angegebenen verknüpften <see cref="T:System.Security.Principal.SecurityIdentifier" /> Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuditRules">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuthorizationRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeExplicit" Type="System.Boolean" />
        <Parameter Name="includeInherited" Type="System.Boolean" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="includeExplicit">
          <see langword="true" />zur Überwachung enthalten festgelegt für das Objekt explizit Regeln.</param>
        <param name="includeInherited">
          <see langword="true" />um geerbte Überwachungsregeln einzuschließen.</param>
        <param name="targetType">Die Sicherheits-ID für die Überwachungsregeln abzurufen. Diese Angabe muss ein Objekt, das umgewandelt werden kann ein <see cref="T:System.Security.Principal.SecurityIdentifier" /> Objekt.</param>
        <summary>Ruft eine Auflistung der Überwachungsregeln, die die angegebene Sicherheits-ID zugeordnet.</summary>
        <returns>Die Auflistung der angegebenen zugeordneten Überwachungsregeln <see cref="T:System.Security.Principal.SecurityIdentifier" /> Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccess">
      <MemberSignature Language="C#" Value="protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAccess(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Die auf die DACL anzuwendende Änderung.</param>
        <param name="rule">Die zu ändernde Zugriffsregel.</param>
        <param name="modified">
          <see langword="true" />, wenn die DACL erfolgreich geändert wurde, andernfalls <see langword="false" />.</param>
        <summary>Wendet die angegebene Änderung auf die freigegebene Zugriffssteuerungsliste (Discretionary Access Control List, DACL) an, die diesem <see cref="T:System.Security.AccessControl.CommonObjectSecurity" />-Objekt zugeordnet ist.</summary>
        <returns>
          <see langword="true" />, wenn die DACL erfolgreich geändert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAudit">
      <MemberSignature Language="C#" Value="protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ModifyAudit(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Die auf die SACL anzuwendende Änderung.</param>
        <param name="rule">Die zu ändernde Überwachungsregel.</param>
        <param name="modified">
          <see langword="true" />, wenn die SACL erfolgreich geändert wurde, andernfalls <see langword="false" />.</param>
        <summary>Wendet die angegebene Änderung auf die System-Zugriffssteuerungsliste (System Access Control List, SACL) an, die diesem <see cref="T:System.Security.AccessControl.CommonObjectSecurity" />-Objekt zugeordnet ist.</summary>
        <returns>
          <see langword="true" />, wenn die SACL erfolgreich geändert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Regel zu entfernen.</param>
        <summary>Entfernt die Zugriffsregeln, die dieselbe Sicherheits-ID und Zugriffsmaske enthalten, wie die angegebene Zugriffsregel aus der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die Zugriffsregel erfolgreich entfernt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Entfernen des Zugriffs erfolgt mithilfe eines komplexen Algorithmus, das Zugriffssteuerungsregeln zusätzlich zum Entfernen hinzufügen können.  
  
 Diese Methode entfernt die Zugriffsregel aus und gibt `false` die Zugriffsregel zugeordneten Vererbungsregeln zu komplex für den Algorithmus entfernen erfolgreich sind.  
  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Regel zu entfernen.</param>
        <summary>Entfernt alle Zugriffsregeln, die dieselbe Sicherheits-ID aufweisen wie die angegebene Zugriffsregel aus der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Regel zu entfernen.</param>
        <summary>Entfernt alle Zugriffsregeln, die genau den angegebenen Zugriffsregel aus der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List), die zugeordnet <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">So entfernen Sie Überwachungsregel.</param>
        <summary>Entfernt die Überwachungsregeln, die dieselbe Sicherheits-ID und Zugriffsmaske enthalten, wie die angegebene Überwachungsregel aus dem System Liste SACL (Access Control) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <returns>
          <see langword="true" />Wenn die Überwachungsregel erfolgreich entfernt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Entfernen der Überwachung erfolgt mithilfe eines komplexen Algorithmus, das Control Überwachungsregeln zusätzlich zum Entfernen hinzufügen können.  
  
 Diese Methode entfernt die Überwachungsregel und gibt `false` die Überwachungsregel zugeordneten Vererbungsregeln zu komplex für den Algorithmus entfernen erfolgreich sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">So entfernen Sie Überwachungsregel.</param>
        <summary>Entfernt alle Überwachungsregeln, die dieselbe Sicherheits-ID aufweisen wie die angegebene Überwachungsregel aus dem System Liste SACL (Access Control) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">So entfernen Sie Überwachungsregel.</param>
        <summary>Entfernt alle Überwachungsregeln, die genau die angegebene Überwachungsregel aus dem System Liste SACL (Access Control) zugeordnete <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> Objekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Zugriffsregel zurücksetzen.</param>
        <summary>Entfernt alle Zugriffsregeln in der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List), die zugeordnet <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> -Objekt und fügt dann die angegebene Regel hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAccessRule(class System.Security.AccessControl.AccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die Zugriffsregel festgelegt.</param>
        <summary>Entfernt alle Zugriffsregeln, die die gleiche Sicherheits-ID und Qualifizierer enthalten, wie die angegebene Regel in der freigegebenen Zugriffssteuerungsliste (DACL Discretionary Access Control List) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> -Objekt und fügt dann die angegebene Regel hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu vermeiden, versehentlich Zugriffe für Prinzipale, Anwendungen sollten prüfen, ob das Vorhandensein des zulassen "Jeder" vollständige Zugriffssteuerungseintrag (ACE) für den Zugriff (AEFA) aus, und entfernen, bevor Sie eine DACL ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAuditRule(class System.Security.AccessControl.AuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Die festzulegende Überwachungsregel.</param>
        <summary>Entfernt alle Überwachungsregeln, die die gleiche Sicherheits-ID und Qualifizierer enthalten, wie die angegebene Überwachungsregel in das System Liste SACL (Access Control) zugeordneten <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> -Objekt und fügt dann die angegebenen Überwachungsregel.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
