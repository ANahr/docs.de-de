<Type Name="LifetimeServices" FullName="System.Runtime.Remoting.Lifetime.LifetimeServices">
  <TypeSignature Language="C#" Value="public sealed class LifetimeServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LifetimeServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Steuert die.NET Remoting-Lebensdauerdienste.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verteilte Garbagecollection ist verantwortlich für die Steuerung der Lebensdauer von serveranwendungen und für sie zu löschen, wenn deren Lebensdauer abgelaufen sind. Üblicherweise verwendet die verteilte Garbagecollection Verweiszähler und Ping-Signale für Steuerelement. Dies funktioniert gut, wenn einige Clients pro Objekt definiert, aber nicht funktioniert gut, wenn Tausende von Clients pro jedes Objekt. Die Lebensdauerdienst kann die Funktion von einem herkömmlichen verteilten Garbage Collector und Skalierungen voraussetzen, gut, wenn die Anzahl der Clients zunimmt.  
  
 Der Lebensdauerdienst ordnet eine Lease jedem Remote aktivierten Objekt an. Wenn die Lease abläuft, wird das Objekt entfernt.  
  
> [!NOTE]
>  Diese Klasse stellt einen Linkaufruf. SecurityException wird ausgelöst, wenn Sie der unmittelbaren Aufrufer keine Berechtigung für die Infrastruktur. Finden Sie unter [Verknüpfungsaufrufe](~/docs/framework/misc/link-demands.md) für Weitere Informationen.  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CPP/server.cpp#2)]
 [!code-csharp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CS/server.cs#2)]
 [!code-vb[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/VB/server.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">für den Betrieb mit Infrastrukturcode. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LifetimeServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz von <see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseManagerPollTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseManagerPollTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseManagerPollTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Zeitintervall zwischen jeder Aktivierung der Lease-Manager, um abgelaufene Leases zu bereinigen.</summary>
        <value>Die Standarddauer ruht der Lease-Manager, nachdem die Überprüfung auf abgelaufene Leases.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die aktuelle Eigenschaft definiert die Häufigkeit, mit der Lease-Manager, um abgelaufene Leases zu bereinigen aktiviert wird. Z. B. wenn <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> festgelegt ist auf 100 Sekunden die Leaseliste wird untersucht für Rowsets und-Erneuerung alle 100 Sekunden.  
  
 Der Standardwert der <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> Eigenschaft beträgt 10 Sekunden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Verfügt über mindestens eines der Aufrufern einer höheren Ebene in der Aufrufliste nicht über die Berechtigung zum Remotetypen und Kanäle konfigurieren. Diese Ausnahme wird ausgelöst, nur, wenn Sie den Wert der Eigenschaft festlegen.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für die Konfiguration der Infrastruktur für den Remotezugriff. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LeaseTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Zeitspanne anfängliche Lease für eine <see cref="T:System.AppDomain" />.</summary>
        <value>Die anfängliche Lease <see cref="T:System.TimeSpan" /> für Objekte, die Leases, in aufweisen können der <see cref="T:System.AppDomain" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardzeitraum für die Lease ist 5 Minuten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Verfügt über mindestens eines der Aufrufern einer höheren Ebene in der Aufrufliste nicht über die Berechtigung zum Remotetypen und Kanäle konfigurieren. Diese Ausnahme wird ausgelöst, nur, wenn Sie den Wert der Eigenschaft festlegen.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für die Konfiguration der Infrastruktur für den Remotezugriff. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public static TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Zeitspanne, die durch den die Lease erweitert wird, jedes Mal, wenn ein Aufruf für das Serverobjekt eingeht.</summary>
        <value>Die <see cref="T:System.TimeSpan" /> durch die ein Lebensdauerlease in der aktuellen <see cref="T:System.AppDomain" /> nach jedem Aufruf verlängert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standard-Erneuerungszeitraum der ein Lebensdauerlease erweitert wird, beträgt 2 Minuten.  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Verfügt über mindestens eines der Aufrufern einer höheren Ebene in der Aufrufliste nicht über die Berechtigung zum Remotetypen und Kanäle konfigurieren. Diese Ausnahme wird ausgelöst, nur, wenn Sie den Wert der Eigenschaft festlegen.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für die Konfiguration der Infrastruktur für den Remotezugriff. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, wie lange der Lease-Manager wartet, bis ein Sponsor eine Lease-Erneuerungszeitraum zurückgegeben werden.</summary>
        <value>Der erste Sponsorship-Timeout.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardzeit, bis ein Aufruf Sponsor Timeout aufgetreten ist, beträgt 2 Minuten.  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Verfügt über mindestens eines der Aufrufern einer höheren Ebene in der Aufrufliste nicht über die Berechtigung zum Remotetypen und Kanäle konfigurieren. Diese Ausnahme wird ausgelöst, nur, wenn Sie den Wert der Eigenschaft festlegen.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für die Konfiguration der Infrastruktur für den Remotezugriff. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; Berechtigungswert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
