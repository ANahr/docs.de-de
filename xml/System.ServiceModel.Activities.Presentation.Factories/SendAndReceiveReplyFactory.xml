<Type Name="SendAndReceiveReplyFactory" FullName="System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory">
  <TypeSignature Language="C#" Value="public sealed class SendAndReceiveReplyFactory : System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendAndReceiveReplyFactory extends System.Object implements class System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.IActivityTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Erstellt eine konfigurierte Instanz der Aktivitätspaare <see cref="T:System.ServiceModel.Activities.Send" /> und <see cref="T:System.ServiceModel.Activities.ReceiveReply" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendAndReceiveReplyFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.Presentation.Factories.SendAndReceiveReplyFactory.Create(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Core.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">Das Benutzeroberflächenelement des Workflows, das der visuelle Container der neuen Aktivität ist.</param>
        <summary>Erstellt eine neue <see cref="T:System.Activities.Statements.Sequence" />-Aktivität, die aus einem  <see cref="T:System.ServiceModel.Activities.Send" />- und <see cref="T:System.ServiceModel.Activities.ReceiveReply" />-Paar besteht.</summary>
        <returns>Eine neue <see cref="T:System.Activities.Statements.Sequence" />-Aktivität, die aus einem  <see cref="T:System.ServiceModel.Activities.Send" />- und <see cref="T:System.ServiceModel.Activities.ReceiveReply" />-Paar besteht.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
