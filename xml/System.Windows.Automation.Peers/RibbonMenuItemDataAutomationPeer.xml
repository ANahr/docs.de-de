<Type Name="RibbonMenuItemDataAutomationPeer" FullName="System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer">
  <TypeSignature Language="C#" Value="public class RibbonMenuItemDataAutomationPeer : System.Windows.Automation.Peers.ItemAutomationPeer, System.Windows.Automation.Provider.IExpandCollapseProvider, System.Windows.Automation.Provider.IInvokeProvider, System.Windows.Automation.Provider.IToggleProvider, System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RibbonMenuItemDataAutomationPeer extends System.Windows.Automation.Peers.ItemAutomationPeer implements class System.Windows.Automation.Provider.IExpandCollapseProvider, class System.Windows.Automation.Provider.IInvokeProvider, class System.Windows.Automation.Provider.IToggleProvider, class System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.ItemAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IExpandCollapseProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IInvokeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IToggleProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.ITransformProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt die Daten in einem <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonMenuItemDataAutomationPeer (object item, System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object item, class System.Windows.Automation.Peers.ItemsControlAutomationPeer itemsControlPeer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="itemsControlPeer" Type="System.Windows.Automation.Peers.ItemsControlAutomationPeer" />
      </Parameters>
      <Docs>
        <param name="item">Das diesem Automatisierungspeer zugeordnete Element.</param>
        <param name="itemsControlPeer">Der Automatisierungspeer zugeordnet ist, die die <see cref="T:System.Windows.Controls.ItemsControl" /> , enthält die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetAutomationControlTypeCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Steuerelementtyp für die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. Diese Methode wird von <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> aufgerufen.</summary>
        <returns>Der <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" />-Enumerationswert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetClassNameCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Klassennamen der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />. Diese Methode wird von <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> aufgerufen.</summary>
        <returns>Der Klassenname des der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public override object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">Ein Enumerationswert, der den Befehlstyp angibt.</param>
        <summary>Ruft das Steuerelementmuster für das <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> ab, das diesem <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> zugeordnet ist.</summary>
        <returns>Ein Objekt, das das Steuerelementmuster unterstützt, wenn <paramref name="patternInterface" /> ein unterstützter Wert ist, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn einer der folgenden Fälle auftritt, gibt diese Methode ein Objekt, das das angegebene Steuerelementmuster unterstützt.  
  
-   `patternInterface`ist gleich <xref:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse> und <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> , die mit dieser verknüpft ist <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> über untergeordnete Objekte verfügt.  
  
-   `patternInterface`ist gleich <xref:System.Windows.Automation.Peers.PatternInterface.Invoke> und <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> , die mit dieser verknüpft ist <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> besitzt keine untergeordneten Objekte.  
  
-   `patternInterface`ist gleich <xref:System.Windows.Automation.Peers.PatternInterface.Toggle> und <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> , die mit dieser verknüpft ist <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> hat seine überprüfbare-Eigenschaft auf `true`.  
  
-   `patternInterface`ist gleich <xref:System.Windows.Automation.Peers.PatternInterface.Transform> und <xref:System.Windows.Controls.Ribbon.RibbonMenuItem> , die mit dieser verknüpft ist <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer> geändert werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Blendet alle Elemente in der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht aktiviert.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> enthält keine Elemente.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <MemberSignature Language="C#" Value="void IExpandCollapseProvider.Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IExpandCollapseProvider.Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeigt alle Elemente in der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht aktiviert.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> enthält keine Elemente.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ExpandCollapseState System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ExpandCollapseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Status, erweitert oder reduziert, der die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>Der Status der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IExpandCollapseProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <MemberSignature Language="C#" Value="void IInvokeProvider.Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IInvokeProvider.Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet eine Anforderung zur Aktivierung der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IInvokeProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht aktiviert.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <MemberSignature Language="C#" Value="void IToggleProvider.Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.IToggleProvider.Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigieren durch die aktivierten Status der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IToggleProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht aktiviert.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> können nicht überprüft werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <MemberSignature Language="C#" Value="System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ToggleState System.Windows.Automation.Provider.IToggleProvider.ToggleState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ToggleState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Aktivierungszustand der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</summary>
        <value>Der Aktivierungszustand der <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.IToggleProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> virtualisiert wird.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> verschoben werden können.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.ITransformProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> geändert werden kann.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> können geändert werden, andernfalls, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.ITransformProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <MemberSignature Language="C#" Value="bool System.Windows.Automation.Provider.ITransformProvider.CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> , die mit dieser verknüpft ist <see cref="T:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer" /> gedreht werden kann.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer>-Instanz in eine <xref:System.Windows.Automation.Provider.ITransformProvider>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Move">
      <MemberSignature Language="C#" Value="void ITransformProvider.Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">Diese API ist nicht implementiert.</param>
        <param name="y">Diese API ist nicht implementiert.</param>
        <summary>Diese API ist nicht implementiert.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Resize">
      <MemberSignature Language="C#" Value="void ITransformProvider.Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Diese API ist nicht implementiert.</param>
        <param name="height">Diese API ist nicht implementiert.</param>
        <summary>Diese API ist nicht implementiert.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> ist nicht aktiviert.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> kann nicht geändert werden.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Controls.Ribbon.RibbonMenuItem" /> können nicht überprüft werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Automation.Provider.ITransformProvider.Rotate">
      <MemberSignature Language="C#" Value="void ITransformProvider.Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Automation.Provider.ITransformProvider.Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">Diese API ist nicht implementiert.</param>
        <summary>Diese API ist nicht implementiert.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
