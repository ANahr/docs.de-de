<Type Name="UrlRoutingHandler" FullName="System.Web.Routing.UrlRoutingHandler">
  <TypeSignature Language="C#" Value="public abstract class UrlRoutingHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlRoutingHandler extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.UrlRoutingHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dient als Basisklasse für Klassen, mit denen Sie anpassen können, wie ASP.NET-Routing eine Anforderung verarbeitet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können anpassen, wie Anforderungen vom ASP.NET-Routing behandelt durch Zuordnen einer Dateinamenerweiterung an einem bestimmten routing Handler anstelle von mithilfe der <xref:System.Web.Routing.UrlRoutingModule> Klasse als Handler für jede Anforderung weiterleiten.  
  
 Anpassen, wie ASP.NET-Routing eine Anforderung für eine URL mit einer bestimmten Dateierweiterung behandelt, erstellen Sie eine Klasse, abgeleitet wird, die <xref:System.Web.Routing.UrlRoutingHandler> Klasse. Sie können z. B. einen benutzerdefinierten routing Handler, der Anforderungen nach einer Datei verarbeitet, mit der Erweiterung erstellen `.abc`.  
  
 Um einen benutzerdefinierten Handler für eine bestimmte Dateinamenerweiterung zu registrieren, müssen Sie diesen Handler in der Datei "Web.config" hinzufügen. Das folgende Beispiel zeigt, wie Sie einen benutzerdefinierten Handler für eine ASP.NET-Website registrieren, die in IIS 6.0 ausgeführt wird oder [!INCLUDE[iisver](~/includes/iisver-md.md)] im klassischen Modus.  
  
```  
<system.web>  
  <httpHandlers>  
    <add verb="*" path="*.abc"   
        type="Contoso.Routing.CustomRoutingHandler" />  
  </httpHandlers>  
</system.web>  
```  
  
 Das folgende Beispiel zeigt, wie Sie den gleichen Handler für eine ASP.NET-Website registrieren, die ausgeführt wird, in [!INCLUDE[iisver](~/includes/iisver-md.md)].  
  
```  
<system.webServer>  
  <handlers>  
    <add verb="*" path="*.abc"  
        type="Contoso.Routing.CustomRoutingHandler"   
        resourceType="Unspecified" />  
  </handlers>  
</system.webServer>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlRoutingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Routing.UrlRoutingHandler" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="protected virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob eine andere Anforderung verwenden, kann die <see cref="T:System.Web.Routing.UrlRoutingHandler" /> Instanz.</summary>
        <value>Immer <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">Ein Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, und <see cref="P:System.Web.HttpContext.Server" />).</param>
        <summary>Verarbeitet eine HTTP-Anforderung, die einer Route entspricht.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Die Anforderung entspricht keiner Route.</exception>
        <exception cref="T:System.InvalidOperationException">Für die Route ist kein Handler definiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.ProcessRequest(System.Web.HttpContextBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Ein Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, und <see cref="P:System.Web.HttpContext.Server" />).</param>
        <summary>Verarbeitet eine HTTP-Anforderung, die einer Route entspricht.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Die Anforderung entspricht keiner Route.</exception>
        <exception cref="T:System.InvalidOperationException">Für die Route ist kein Handler definiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="RouteCollection">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteCollection RouteCollection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteCollection RouteCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.RouteCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung definierter Routen für die ASP.NET-Anwendung ab oder legt diese fest.</summary>
        <value>Ein Objekt, das die Routen enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob eine andere Anforderung verwenden, kann die <see cref="T:System.Web.Routing.UrlRoutingHandler" /> Instanz.</summary>
        <value>Immer <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Routing.UrlRoutingHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, und <see cref="P:System.Web.HttpContext.Server" />).</param>
        <summary>Verarbeitet eine HTTP-Anforderung, die einer Route entspricht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Routing.UrlRoutingHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAndProcessRequest">
      <MemberSignature Language="C#" Value="protected abstract void VerifyAndProcessRequest (System.Web.IHttpHandler httpHandler, System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyAndProcessRequest(class System.Web.IHttpHandler httpHandler, class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.UrlRoutingHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHandler" Type="System.Web.IHttpHandler" />
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpHandler">Das Objekt, das zur Verarbeitung einer HTTP-Anforderung verwendet wird.</param>
        <param name="httpContext">Ein Objekt, das Verweise auf die systeminternen Serverobjekte bereitstellt (z. B. <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, und <see cref="P:System.Web.HttpContext.Server" />).</param>
        <summary>Überprüft beim Überschreiben in einer abgeleiteten Klasse den HTTP-Handler und führt die zum Verarbeiten der Anforderung erforderlichen Schritte aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
