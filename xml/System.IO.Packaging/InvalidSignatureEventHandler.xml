<Type Name="InvalidSignatureEventHandler" FullName="System.IO.Packaging.InvalidSignatureEventHandler">
  <TypeSignature Language="C#" Value="public delegate void InvalidSignatureEventHandler(object sender, SignatureVerificationEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InvalidSignatureEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.InvalidSignatureEventHandler" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.IO.Packaging.SignatureVerificationEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die ungültige <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> Quelle des Ereignisses.</param>
    <param name="e">Die Ereignisdaten.</param>
    <summary>Stellt die Methode, verarbeitet die <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> also wird ausgelöst, wenn <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> erkennt eine ungültige Signatur.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
