<Type Name="AssociatedMetadataProvider" FullName="System.Web.ModelBinding.AssociatedMetadataProvider">
  <TypeSignature Language="C#" Value="public abstract class AssociatedMetadataProvider : System.Web.ModelBinding.ModelMetadataProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AssociatedMetadataProvider extends System.Web.ModelBinding.ModelMetadataProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ModelBinding.AssociatedMetadataProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.ModelBinding.ModelMetadataProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Klasse zur Implementierung eines Metadatenanbieters bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Metadatenanbieter stellt Metadaten für ein Modell bereit. Metadatenanbieter müssen von abgeleitet <xref:System.Web.ModelBinding.ModelMetadataProvider>. Sie können von dieser Klasse erben, wenn verwenden Sie ein benutzerdefiniertes Validierungssteuerelement oder ein Validierungssteuerelement eines Drittanbieters, das attributbasierte Metadaten verwendet werden sollen.  
  
 Diese Klasse implementiert die abstrakten Methoden von der <xref:System.Web.ModelBinding.ModelMetadataProvider> Klasse und enthält zusätzliche abstrakte Methoden. Wenn Sie diese Klasse implementieren, verwenden die <xref:System.Web.ModelBinding.AssociatedValidatorProvider> Klasse, um das Validierungssteuerelement zu implementieren.  
  
 Modellanbieterklassen und Validierungssteuerelement-Anbieterklassen sind lose verbunden. Aus diesem Grund funktionieren unabhängig voneinander und keine Abhängigkeiten untereinander aufweisen.  
  
 Der Metadatenanbieter macht jedoch Metadaten, die Zugriff auf und von Validierungsanbietern verwendet werden kann. Z. B. der Standardmetadatenanbieter (die <xref:System.Web.ModelBinding.DataAnnotationsModelMetadataProvider> Klasse) liest den Anzeigenamen eines Objekts. Dieser Anzeigename wird verwendet, durch die <xref:System.Web.ModelBinding.DataAnnotationsModelValidatorProvider> Validierungsanbieter bei der Erstellung einer Validierungsfehlermeldung angezeigt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssociatedMetadataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse initialisiert eine neue Instanz der Klasse aus der <see cref="T:System.Web.ModelBinding.AssociatedMetadataProvider" /> Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMetadata">
      <MemberSignature Language="C#" Value="protected abstract System.Web.ModelBinding.ModelMetadata CreateMetadata (System.Collections.Generic.IEnumerable&lt;Attribute&gt; attributes, Type containerType, Func&lt;object&gt; modelAccessor, Type modelType, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.ModelBinding.ModelMetadata CreateMetadata(class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; attributes, class System.Type containerType, class System.Func`1&lt;object&gt; modelAccessor, class System.Type modelType, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="containerType" Type="System.Type" />
        <Parameter Name="modelAccessor" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributes">Die Attribute.</param>
        <param name="containerType">Der Typ des Containers oder <see langword="null" /> kein Container vorhanden ist.</param>
        <param name="modelAccessor">Der Modellaccessor.</param>
        <param name="modelType">Der Typ des Modells.</param>
        <param name="propertyName">Der Name der Eigenschaft oder <see langword="null" /> , wenn das Modell keine Eigenschaft ist.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse werden die Metadaten für ein Modell erstellt.</summary>
        <returns>Die Metadaten für ein Modell.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Attribute&gt; FilterAttributes (Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor, System.Collections.Generic.IEnumerable&lt;Attribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; FilterAttributes(class System.Type containerType, class System.ComponentModel.PropertyDescriptor propertyDescriptor, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="containerType">Der Typ des Containers.</param>
        <param name="propertyDescriptor">Der Eigenschaftendeskriptor.</param>
        <param name="attributes">Die Attribute.</param>
        <summary>Ermöglicht es abgeleiteten Klassen, um die Liste der Attribute zu filtern.</summary>
        <returns>Eine Liste der Attribute.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Code in der <xref:System.Web.ModelBinding.AssociatedMetadataProvider> Basisklasse gibt alle Attribute zurück. Mit dieser Methode können abgeleitete Klassen, die die Attribute filtern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataForProperties">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Web.ModelBinding.ModelMetadata&gt; GetMetadataForProperties (object container, Type containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.ModelBinding.ModelMetadata&gt; GetMetadataForProperties(object container, class System.Type containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.ModelBinding.ModelMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="containerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">Der Container.</param>
        <param name="containerType">Der Typ des Containers.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt die Metadaten für alle Eigenschaften zurück.</summary>
        <returns>Die Metadaten für alle Eigenschaften.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="containerType" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataForProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func&lt;object&gt; modelAccessor, Type containerType, System.ComponentModel.PropertyDescriptor propertyDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.ModelBinding.ModelMetadata GetMetadataForProperty(class System.Func`1&lt;object&gt; modelAccessor, class System.Type containerType, class System.ComponentModel.PropertyDescriptor propertyDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelAccessor" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="containerType" Type="System.Type" />
        <Parameter Name="propertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="modelAccessor">Der Modellaccessor.</param>
        <param name="containerType">Der Typ des Containers.</param>
        <param name="propertyDescriptor">Der Eigenschaftendeskriptor.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt die Metadaten für eine Eigenschaft, die durch ein Deskriptor Eigenschaftenobjekt angegeben.</summary>
        <returns>Die Metadaten für die angegebene Eigenschaft.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataForProperty">
      <MemberSignature Language="C#" Value="public override System.Web.ModelBinding.ModelMetadata GetMetadataForProperty (Func&lt;object&gt; modelAccessor, Type containerType, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.ModelBinding.ModelMetadata GetMetadataForProperty(class System.Func`1&lt;object&gt; modelAccessor, class System.Type containerType, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelAccessor" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="containerType" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelAccessor">Der Modellaccessor.</param>
        <param name="containerType">Der Typ des Containers.</param>
        <param name="propertyName">Den Namen der Eigenschaft.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt die Metadaten für eine Eigenschaft mit dem Namen einer Eigenschaft angegeben.</summary>
        <returns>Die Metadaten für die angegebene Eigenschaft.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="containerType" />-Parameter ist <see langword="null" />.  
  
 - oder -   
  
 Der <paramref name="propertyName" />-Parameter ist <see langword="null" /> oder leer.  
  
 - oder -   
  
 Eine Eigenschaft mit dem Namen gemäß <paramref name="propertyName" /> kann nicht gefunden werden, der <paramref name="containerType" /> Typ.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataForType">
      <MemberSignature Language="C#" Value="public override System.Web.ModelBinding.ModelMetadata GetMetadataForType (Func&lt;object&gt; modelAccessor, Type modelType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.ModelBinding.ModelMetadata GetMetadataForType(class System.Func`1&lt;object&gt; modelAccessor, class System.Type modelType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelAccessor" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="modelType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="modelAccessor">Der Modellaccessor.</param>
        <param name="modelType">Der Typ des Modells.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt die Metadaten für den Typ des Modells zurück.</summary>
        <returns>Metadaten für den Typ des Modells.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="modelType" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ModelBinding.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse gibt eine Deskriptorobjekt für einen angegebenen Typ zurück.</summary>
        <returns>Die Typdeskriptorobjekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
