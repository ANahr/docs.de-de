<Type Name="PaddingMode" FullName="System.Security.Cryptography.PaddingMode">
  <TypeSignature Language="C#" Value="public enum PaddingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed PaddingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.PaddingMode" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Typ der Füllzeichen an, die für einen Meldungsdatenblock verwendet werden sollen, der kürzer als die für einen kryptografischen Vorgang erforderliche volle Anzahl von Bytes ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die meisten nur-Text-Nachrichten keine Anzahl von Bytes bestehen, die Blöcke vollständig ausfüllen. Häufig sind nicht ausreichende Anzahl von Bytes zum Ausfüllen des letzten Blocks. In diesem Fall wird der Text eine Auffüllung Zeichenfolge hinzugefügt. Wenn die Blocklänge 64 Bits beträgt und der letzte Block nur 40 Bits enthält, werden z. B. 24 Bits der Auffüllung hinzugefügt.  
  
 Einige Verschlüsselungsstandards Geben Sie einen bestimmten auffüllungsschema an. Das folgende Beispiel zeigt, wie diese Modi arbeiten. Betrachten Sie einer Blocklänge von 8, 9 die Datenlänge, die Anzahl der Auffüllung Oktette gleich 7, und die Daten, die gleich FF FF FF FF FF FF FF FF FF:  
  
 Daten: FF FF FF FF FF FF FF FF FF  
  
 X923 padding: FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 07  
  
 Auffüllung mit PKCS7: FF FF FF FF FF FF FF FF FF 07 07 07 07 07 07 07  
  
 Auffüllung ISO10126: FF FF FF FF FF FF FF FF FF 7 D 2A 75 EF F8 EF 07  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ANSIX923">
      <MemberSignature Language="C#" Value="ANSIX923" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.PaddingMode ANSIX923 = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.PaddingMode.ANSIX923" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die ANSIX923 Auffüllung Zeichenfolge besteht aus einer Folge von Bytes mit Nullen bis zur Länge aufgefüllt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das folgende Beispiel zeigt, wie dieser Modus funktioniert. Betrachten Sie einer Blocklänge von 8, 9 die Datenlänge, die Anzahl der Auffüllung Oktette gleich 7, und die Daten, die gleich FF FF FF FF FF FF FF FF FF:  
  
 Daten: FF FF FF FF FF FF FF FF FF  
  
 X923 padding: FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 07  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISO10126">
      <MemberSignature Language="C#" Value="ISO10126" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.PaddingMode ISO10126 = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.PaddingMode.ISO10126" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die ISO10126 Auffüllung Zeichenfolge besteht aus Zufallsdaten bis zur Länge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das folgende Beispiel zeigt, wie dieser Modus funktioniert. Betrachten Sie einer Blocklänge von 8, 9 die Datenlänge, die Anzahl der Auffüllung Oktette gleich 7, und die Daten, die gleich FF FF FF FF FF FF FF FF FF:  
  
 Daten: FF FF FF FF FF FF FF FF FF  
  
 Auffüllung ISO10126: FF FF FF FF FF FF FF FF FF 7 D 2A 75 EF F8 EF 07  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.PaddingMode None = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.PaddingMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Es erfolgt keine Auffüllung.</summary>
      </Docs>
    </Member>
    <Member MemberName="PKCS7">
      <MemberSignature Language="C#" Value="PKCS7" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.PaddingMode PKCS7 = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.PaddingMode.PKCS7" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die PKCS #7-padding Zeichenfolge besteht aus einer Folge von Bytes, von die jede gleich der Gesamtanzahl der Auffüll-Bytes, die hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das folgende Beispiel zeigt, wie diese Modi arbeiten. Betrachten Sie einer Blocklänge von 8, 9 die Datenlänge, die Anzahl der Auffüllung Oktette gleich 7, und die Daten, die gleich FF FF FF FF FF FF FF FF FF:  
  
 Daten: FF FF FF FF FF FF FF FF FF  
  
 Auffüllung mit PKCS7: FF FF FF FF FF FF FF FF FF 07 07 07 07 07 07 07  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zeros">
      <MemberSignature Language="C#" Value="Zeros" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.PaddingMode Zeros = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.PaddingMode.Zeros" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Auffüllung Zeichenfolge besteht aus Byte auf 0 (null) festgelegt.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
