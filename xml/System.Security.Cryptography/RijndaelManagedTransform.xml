<Type Name="RijndaelManagedTransform" FullName="System.Security.Cryptography.RijndaelManagedTransform">
  <TypeSignature Language="C#" Value="public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RijndaelManagedTransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RijndaelManagedTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Führt eine kryptografische Transformation von Daten mit dem Rijndael-Algorithmus. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Mit dieser Klasse wird nicht empfohlen. Eine bessere Methode besteht darin, verwenden <xref:System.Security.Cryptography.RijndaelManaged> mit einem <xref:System.Security.Cryptography.CryptoStream> Objekt. Die <xref:System.Security.Cryptography.CryptoStream> Objekt verarbeitet die Auffüllung Probleme, die auftreten können, bei Verwendung <xref:System.Security.Cryptography.RijndaelManagedTransform> direkt. Ein Beispiel finden Sie unter der <xref:System.Security.Cryptography.RijndaelManaged> Klasse.  
  
 Sowohl die <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> und <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> Methoden zurückgeben eine Instanz von der <xref:System.Security.Cryptography.RijndaelManagedTransform> -Klasse, die mit den Schlüsselinformationen des aktuellen initialisiert wurde <xref:System.Security.Cryptography.RijndaelManaged> Objekt.  Übergeben Sie zum Verschlüsseln und Entschlüsseln von Daten mit dem Rijndael-Algorithmus, der <xref:System.Security.Cryptography.RijndaelManagedTransform> diese Methoden zurückgegebenes Objekt ein <xref:System.Security.Cryptography.CryptoStream> Objekt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="public int BlockSizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Ausgabeblocks ab.</summary>
        <value>Die Größe der Datenblöcke in Bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Transformation wiederverwendet werden kann.</summary>
        <value>Immer <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob mehrere Blöcke transformiert werden können.</summary>
        <value>
          <see langword="true" />, wenn mehrere Blöcke transformiert werden können, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist ein einfacher Aufruf <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> Klasse.  
  
 Aufrufen von `Dispose` können Ressourcen von der <xref:System.Security.Cryptography.RijndaelManagedTransform> neu für andere Zwecke reserviert werden. Weitere Informationen zu `Dispose`, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie `Dispose` auf, wenn Sie <xref:System.Security.Cryptography.RijndaelManagedTransform> nicht mehr benötigen. Die `Dispose`-Methode bewirkt, dass <xref:System.Security.Cryptography.RijndaelManagedTransform> nicht mehr verwendet werden kann. Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.Cryptography.RijndaelManagedTransform> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.Cryptography.RijndaelManagedTransform> belegt wurde.  
  
 Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Security.Cryptography.RijndaelManagedTransform> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.Cryptography.RijndaelManagedTransform>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Eingabeblocks ab.</summary>
        <value>Die Größe des Eingabedatenblocks in Bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Ausgabeblocks ab.</summary>
        <value>Die Größe des Ausgabedatenblocks in Bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt den internen Zustand des <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> , damit es wieder verwendet werden kann, um eine andere Verschlüsselung oder Entschlüsselung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> Methode wird automatisch aufgerufen, wenn Sie aufrufen <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>. Die <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> Methode wird nicht aufgerufen, wenn Sie z. B. die verschlüsselten Eingabedaten Garbage und können nicht entschlüsselt werden. In diesem Fall wird eine Ausnahme ausgelöst und <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> wird nicht aufgerufen. Sie können auch manuell Aufrufen der <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> Methode in diesem Fall.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">Die Eingabe zum Ausführen des Vorgangs auf.</param>
        <param name="inputOffset">Der Offset Eingabebytearrays erste Schritte mit Daten aus.</param>
        <param name="inputCount">Die Anzahl der Bytes im Eingabebytearray, die als Daten verwendet werden sollen.</param>
        <param name="outputBuffer">Die Ausgabe an den Daten geschrieben werden sollen.</param>
        <param name="outputOffset">Der Offset im Ausgabebytearray, ab dem Daten geschrieben werden soll.</param>
        <summary>Berechnet die Transformation für den angegebenen Bereich des Eingabebytearrays und kopiert die resultierende Transformation in den angegebenen Bereich des Ausgabebytearrays.</summary>
        <returns>Die Anzahl der geschriebenen Bytes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="inputBuffer" />-Parameter ist <see langword="null" />.  
  
 - oder -   
  
 Der <paramref name="outputBuffer" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Länge des Eingabepuffers ist kleiner als die Summe aus der Eingabe Offset und die Anzahl der Eingaben.  
  
 - oder -   
  
 Der Wert, der die <paramref name="inputCount" /> Parameter ist kleiner oder gleich 0.  
  
 - oder -   
  
 Der Wert des der <paramref name="inputCount" /> -Parameters ist größer als die Länge der <paramref name="inputBuffer" /> Parameter.  
  
 - oder -   
  
 Die Länge der <paramref name="inputCount" /> Parameter ist nicht gleichmäßig durch die Größe des Eingabeblocks Eingabeblockgröße.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert, der die <paramref name="inputOffset" /> Parameter ist ein negativer Wert.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">Die Eingabe zum Ausführen des Vorgangs auf.</param>
        <param name="inputOffset">Der Offset im Bytearray, erste Schritte mit Daten aus.</param>
        <param name="inputCount">Die Anzahl der Bytes im Bytearray, die als Daten verwendet werden sollen.</param>
        <summary>Berechnet die Transformation für den angegebenen Bereich des angegebenen Bytearrays.</summary>
        <returns>Die berechnete Transformation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="inputBuffer" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der Wert, der die <paramref name="inputCount" /> Parameter ist kleiner als 0.  
  
 - oder -   
  
 Der Wert, der die <paramref name="inputCount" /> -Parameters ist größer als die Länge des <paramref name="inputBuffer" /> Parameter.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert, der die <paramref name="inputOffset" /> Parameter ist ein negativer Wert.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Die Länge der <paramref name="inputCount" /> Parameter ist nicht gleichmäßig durch die Größe des Eingabeblocks Eingabeblockgröße.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
