<Type Name="Link&lt;T&gt;" FullName="System.Data.Linq.Link&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct Link&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Link`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Link`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Der Typ der Elemente in der verzögerte Quelle.</typeparam>
    <summary>Aktiviert das verzögerte Laden der einzelnen Eigenschaften (ähnlich wie <see cref="T:System.Data.Linq.EntityRef`1" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine verzögerte Quelle zuweisen (<xref:System.Collections.Generic.IEnumerable%601>) zu <xref:System.Data.Linq.Link%601>, <xref:System.Data.Linq.Link%601> lädt den Wert durch das Auflisten der Quelle das erste Mal die <xref:System.Data.Linq.Link%601.Value%2A> Eigenschaft zugegriffen wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (System.Collections.Generic.IEnumerable&lt;T&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="source">Die quellauflistung.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.Link`1" /> Struktur durch Verweisen auf die Quelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert die <xref:System.Data.Linq.Link%601> mit einem verzögerten Wert-Ladeprogramm (implementiert <xref:System.Collections.Generic.IEnumerable%601>)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (System.Data.Linq.Link&lt;T&gt; link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Linq.Link`1&lt;!T&gt; link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(System.Data.Linq.Link{`0})" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="link" Type="System.Data.Linq.Link&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="link">Die <see cref="T:System.Data.Linq.Link`1" /> Instanz aus dem kopiert.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.Link`1" /> durch Kopieren des internen Zustands aus einer anderen Struktur <see cref="T:System.Data.Linq.Link`1" /> Instanz.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Link (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Link`1.#ctor(`0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert der Eigenschaft.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Data.Linq.Link`1" /> Struktur durch Verweisen auf den Wert der Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, wenn der Wert für die Eigenschaft bereits bekannt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedOrAssignedValue">
      <MemberSignature Language="C#" Value="public bool HasLoadedOrAssignedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoadedOrAssignedValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.HasLoadedOrAssignedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob die <see cref="T:System.Data.Linq.Link`1" /> geladen oder ein Wert zugewiesen wurde.</summary>
        <value>
          <see langword="true" />Wenn die <see cref="T:System.Data.Linq.Link`1" /> geladen oder ein Wert zugewiesen wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 "Geladen" bedeutet, dass die Daten während der Materialisierung oder beim verzögerten Laden geladen wurde. "Zugewiesen" bedeutet, dass Sie manuell den Daten ein Wert zugewiesen haben.  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]Diese Eigenschaft verwendet, um sicherzustellen, dass die <xref:System.Data.Linq.Link%601> weist den Wert so, dass der Zugriff nicht löst, Laden von verzögerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die Quelle ist.</summary>
        <value>Gibt <see langword="true" /> verfügt die Quelle einen zugewiesenen oder geladenen-Wert (einschließlich Null).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Link`1.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt den Wert zugewiesen oder vom der <see cref="T:System.Data.Linq.Link`1" />.</summary>
        <value>Der Wert dieser Eigenschaft verzögerte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
