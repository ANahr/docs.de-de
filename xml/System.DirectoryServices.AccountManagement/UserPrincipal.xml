<Type Name="UserPrincipal" FullName="System.DirectoryServices.AccountManagement.UserPrincipal">
  <TypeSignature Language="C#" Value="public class UserPrincipal : System.DirectoryServices.AccountManagement.AuthenticablePrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserPrincipal extends System.DirectoryServices.AccountManagement.AuthenticablePrincipal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.UserPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.AuthenticablePrincipal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt Prinzipale, die Benutzerkonten den Status an.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> -Klasse unter Verwendung des angegebenen Kontexts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Benutzerkonto für Dienstprinzipalname werden nicht beibehalten, wenn es erstellt wird. Um das Konto zu speichern, rufen die <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Verbindung mit der LDAP-Domäne "fabrikam.com" mit dem Benutzernamen und Kennwort initialisiert wird, der <xref:System.DirectoryServices.AccountManagement.PrincipalContext> Konstruktor "Administrator" und "SecurelyStoredPassword."  
  
 Die Eigenschaften, die in diesem Beispiel, z. B. Benutzer und e-Mail-Adresse festgelegt werden unter dem im angegebenen Container erstellt die <xref:System.DirectoryServices.AccountManagement.PrincipalContext> Konstruktor: "CN = Users, DC = Fabrikam, DC = com."  
  
```  
  
PrincipalContext ctx = new PrincipalContext(  
                                         ContextType.Domain,  
                                         "fabrikam.com",   
                                         "CN=Users,DC=fabrikam,DC=com",  
                                         "administrator",   
                                         "securelyStoredPassword");   
  
UserPrincipal usr = new UserPrincipal(ctx);  
  
usr.Name = "Jim Daly";  
usr.Description = "This is the user account for Jim Daly";  
usr.EmailAddress = "jimdaly@fabrikam.com";  
usr.SetPassword("securelyStoredPassword");  
usr.Save();  
  
usr.Dispose();  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="samAccountName">Der SAM-Kontoname für diesen Benutzerprinzipal.</param>
        <param name="password">Das Kennwort für dieses Konto.</param>
        <param name="enabled">Ein boolescher Wert, der angibt, ob das Konto aktiviert ist.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> -Klasse unter Verwendung des angegebenen Kontexts, SAM-Kontoname, Kennwort und Wert aktiviert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Benutzerkonto für Dienstprinzipalname werden nicht beibehalten, wenn es erstellt wird. Um das Konto zu speichern, rufen die <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedSearchFilter">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.AdvancedFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" />-Objekt zurück, um schreibgeschützte Eigenschaften festzulegen, bevor das Objekt an <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> übergeben wird.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.DirectoryServices.AccountManagement.UserPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Benutzer für ein Hauptobjekt, das den aktuellen Benutzer darstellt, unter dem der Thread ausgeführt wird.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> , das den aktuellen Benutzer darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
        <exception cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">Das Prinzipalobjekt der Benutzer für den aktuellen Benutzer konnte nicht gefunden werden. Das Prinzipalobjekt enthalten eine Access Control List, um den Zugriff durch nicht autorisierte Benutzer zu verhindern.</exception>
        <exception cref="T:System.MultipleMatchesException">Principal mehrere User-Objekte, die Übereinstimmung des aktuellen Benutzers wurden gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public string EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die e-Mail-Adresse für dieses Konto.</summary>
        <value>Die e-Mail-Adresse des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="EmployeeId">
      <MemberSignature Language="C#" Value="public string EmployeeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmployeeId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt Sie die Mitarbeiter-ID für diesen Benutzer principal fest.</summary>
        <value>Die Mitarbeiter-ID des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindByBadPasswordAttempt">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByBadPasswordAttempt(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekt, das den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="time">Ein <see cref="T:System.DateTime" />-Objekt, das Datum und Uhrzeit der fehlerhaften Kennworteingabe identifiziert. Dieser Parameter wird zusammen mit dem Typparameter verwendet, um die Zeitspanne zu bestimmen, in der die zurückgegebenen Objekte einen fehlerhaften Anmeldeversuch aufgezeichnet haben.</param>
        <param name="type">Ein <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> -Enumerationswert, der den Typ der Übereinstimmung angibt, die angewendet werden die <c>Zeit</c> Parameter.</param>
        <summary>Gibt eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekten für Benutzer zurück, für die ein Anmeldeversuch mit ungültigem Kennwort im angegebenen Datums- und Uhrzeitbereich aufgezeichnet ist.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, das ein oder mehrere <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekte enthält, bzw. eine leere Sammlung, wenn keine Ergebnisse gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeit wird standardmäßig auf UTC festgelegt. Wenn Sie die Zeit in Ortszeit angeben möchten, geben Sie dann die <xref:System.DateTime.Kind%2A> Eigenschaft von der `time` -Objekts entsprechend der <xref:System.DateTimeKind?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByExpirationTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByExpirationTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekt, das den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="time">Ein <see cref="T:System.DateTime" />-Objekt, das Datum und Uhrzeit der fehlerhaften Kennworteingabe identifiziert. Dieser Parameter wird zusammen mit dem Typparameter verwendet, um die Zeitspanne zu bestimmen, in der die zurückgegebenen Objekte einen fehlerhaften Anmeldeversuch aufgezeichnet haben.</param>
        <param name="type">Ein <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> -Enumerationswert, der den Typ der Übereinstimmung angibt, die angewendet werden die <c>Zeit</c> Parameter.</param>
        <summary>Gibt eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekten für Benutzer zurück, die eine Kontoablaufzeit im angegebenen Datums- und Uhrzeitbereich aufweisen.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, das ein oder mehrere <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekte enthält, bzw. eine leere Sammlung, wenn keine Ergebnisse gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeit wird standardmäßig auf UTC festgelegt. Wenn Sie die Zeit in Ortszeit angeben möchten, geben Sie dann die <xref:System.DateTime.Kind%2A> Eigenschaft von der `time` -Objekts entsprechend der <xref:System.DateTimeKind?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="identityValue">Die Identität des Benutzerprinzipals. Dieser Parameter kann ein beliebiges Format aufweisen, das in der <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumeration enthalten ist.</param>
        <summary>Gibt ein Benutzerprinzipalobjekt zurück, das dem angegebenen Identitätswert entspricht.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekt, das dem angegebenen Identitätswert entspricht, oder NULL, wenn keine Übereinstimmungen gefunden werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Es wurden mehrere Benutzerprinzipalobjekte gefunden, die dem aktuellen Benutzerobjekt entsprechen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="identityType">Ein <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> -Enumerationswert, der angibt, das Format der <c>IdentityValue</c> Parameter.</param>
        <param name="identityValue">Die Identität des Benutzerprinzipals. Dieser Parameter kann ein beliebiges Format aufweisen, das in der <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumeration enthalten ist.</param>
        <summary>Gibt ein Benutzerprinzipalobjekt zurück, das dem angegebenen Identitätstyp und -wert entspricht. Diese Version der <see cref="Overload:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity" />-Methode bestimmt das Format des Identitätswerts.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekt, das dem angegebenen Identitätswert und -typ entspricht, oder NULL, wenn keine Übereinstimmungen gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code eine Verbindung mit lokalen Computerspeicher. Da die Anmeldeinformationen nicht, in angegeben werden der <xref:System.DirectoryServices.AccountManagement.PrincipalContext> -Konstruktor, der die Anmeldeinformationen der Benutzer ausgeführten des aktuellen Threads verwendet werden.  
  
 Eine Suche wird ausgeführt, um den Benutzer zu suchen, der "sAMAccountName", "Gast" hat.  
  
 Wenn der Benutzer gefunden wird, wird eine Prüfung ausgeführt, um zu bestimmen, ob das Konto des Benutzers aktiviert ist. Falls das Konto nicht aktiviert ist, die der Beispielcode Aktivierung.  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Machine);  
  
UserPrincipal usr = UserPrincipal.FindByIdentity(ctx,   
                                           IdentityType.SamAccountName,   
                                           "Guest");  
  
if(usr != null)  
{  
    if (usr.Enabled == false)  
        usr.Enabled = true;  
  
    usr.Save();  
    usr.Dispose();  
}  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Es wurden mehrere Benutzerprinzipalobjekte gefunden, die dem aktuellen Benutzerobjekt entsprechen.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Identitätswert ist kein gültiger <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindByLockoutTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLockoutTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekt, das den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="time">Ein <see cref="T:System.DateTime" />-Objekt, das Datum und Uhrzeit der fehlerhaften Kennworteingabe identifiziert. Dieser Parameter wird zusammen mit dem Typparameter verwendet, um die Zeitspanne zu bestimmen, in der die zurückgegebenen Objekte einen fehlerhaften Anmeldeversuch aufgezeichnet haben.</param>
        <param name="type">Ein <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> -Enumerationswert, der den Typ der Übereinstimmung angibt, die angewendet werden die <c>Zeit</c> Parameter.</param>
        <summary>Gibt eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekten für Benutzer zurück, die eine Kontosperrzeit im angegebenen Datums- und Uhrzeitbereich aufweisen.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, das ein oder mehrere <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekte enthält, bzw. eine leere Sammlung, wenn keine Ergebnisse gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeit wird standardmäßig auf UTC festgelegt. Wenn Sie die Zeit in Ortszeit angeben möchten, geben Sie dann die <xref:System.DateTime.Kind%2A> Eigenschaft von der `time` -Objekts entsprechend der <xref:System.DateTimeKind?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByLogonTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLogonTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekt, das den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="time">Ein <see cref="T:System.DateTime" />-Objekt, das Datum und Uhrzeit der fehlerhaften Kennworteingabe identifiziert. Dieser Parameter wird zusammen mit dem Typparameter verwendet, um die Zeitspanne zu bestimmen, in der die zurückgegebenen Objekte einen fehlerhaften Anmeldeversuch aufgezeichnet haben.</param>
        <param name="type">Ein <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> -Enumerationswert, der den Typ der Übereinstimmung angibt, die angewendet werden die <c>Zeit</c> Parameter.</param>
        <summary>Gibt eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekten für Benutzer zurück, für die eine Kontoanmeldung im angegebenen Datums- und Uhrzeitbereich aufgezeichnet wurde.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, das ein oder mehrere <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekte enthält, bzw. eine leere Sammlung, wenn keine Ergebnisse gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeit wird standardmäßig auf UTC festgelegt. Wenn Sie die Zeit in Ortszeit angeben möchten, geben Sie dann die <xref:System.DateTime.Kind%2A> Eigenschaft von der `time` -Objekts entsprechend der <xref:System.DateTimeKind?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByPasswordSetTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByPasswordSetTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">Das <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekt, das den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="time">Ein <see cref="T:System.DateTime" />-Objekt, das Datum und Uhrzeit der fehlerhaften Kennworteingabe identifiziert. Dieser Parameter wird zusammen mit dem Typparameter verwendet, um die Zeitspanne zu bestimmen, in der die zurückgegebenen Objekte einen fehlerhaften Anmeldeversuch aufgezeichnet haben.</param>
        <param name="type">Ein <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> -Enumerationswert, der den Typ der Übereinstimmung angibt, die angewendet werden die <c>Zeit</c> Parameter.</param>
        <summary>Gibt eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekten für Benutzer zurück, die ihr Kennwort im angegebenen Datums- und Uhrzeitbereich festgelegt haben.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />, das ein oder mehrere <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" />-Objekte enthält, bzw. eine leere Sammlung, wenn keine Ergebnisse gefunden werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeit wird standardmäßig auf UTC festgelegt. Wenn Sie die Zeit in Ortszeit angeben möchten, geben Sie dann die <xref:System.DateTime.Kind%2A> Eigenschaft von der `time` -Objekts entsprechend der <xref:System.DateTimeKind?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationGroups">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetAuthorizationGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetAuthorizationGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Sammlung von Prinzipalobjekten zurück, die alle Autorisierungsgruppen enthält, in denen dieser Benutzer Member ist. Diese Funktion gibt nur Gruppen zurück, die Sicherheitsgruppen sind; Verteilergruppen werden nicht zurückgegeben.</summary>
        <returns>Eine Sammlung von <see cref="T:System.DirectoryServices.AccountManagement.Principal" />-Objekten, die die Gruppen enthalten, in denen der Benutzer Member ist, oder NULL, wenn der Benutzer nicht zu einer Gruppe gehört.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sucht rekursiv für alle Gruppen und gibt die Gruppen, in denen der Benutzer Mitglied ist. Der zurückgegebene Satz kann zusätzliche Gruppen beinhalten, dass das System den Benutzer ein Mitglied zu Autorisierungszwecken beachtet werden müssen.  
  
 Die Gruppen, die von dieser Methode zurückgegeben werden können es sich um Gruppen von einem anderen Bereich und speichern als der Prinzipal enthalten. Z. B., wenn der Prinzipal ein AD DS-Objekt ist, einen DN sind "CN SpecialGroups, DC = Fabrikam, DC = = com, der zurückgegebenen Menge kann auch Gruppen, die zu gehören enthalten die" CN NormalGroups, DC = = Fabrikam, DC = com.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">Fehler bei dem Versuch, Autorisierungsgruppen abzurufen.</exception>
        <exception cref="T:System.NotSupportedException">Das Abrufen von Autorisierungsgruppen wird von diesem Betriebssystem nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GivenName">
      <MemberSignature Language="C#" Value="public string GivenName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GivenName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.GivenName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt Sie dem angegebenen Namen für den Benutzer principal fest.</summary>
        <value>Der angegebene Name des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="MiddleName">
      <MemberSignature Language="C#" Value="public string MiddleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MiddleName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt Sie die weiteren Vornamen für den Benutzer principal fest.</summary>
        <value>Die weiteren Vornamen des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="Surname">
      <MemberSignature Language="C#" Value="public string Surname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Surname" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.Surname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, oder legt Sie den Nachnamen des Benutzers principal fest.</summary>
        <value>Der Nachname des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="VoiceTelephoneNumber">
      <MemberSignature Language="C#" Value="public string VoiceTelephoneNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VoiceTelephoneNumber" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Telefonnummer für die Dienstprinzipalnamen für den Benutzer.</summary>
        <value>Die Sprach-Telefonnummer des Benutzerprinzipals.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der zugrunde liegende Speicher unterstützt diese Eigenschaft nicht.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
