<Type Name="AnnotationDocumentPaginator" FullName="System.Windows.Annotations.AnnotationDocumentPaginator">
  <TypeSignature Language="C#" Value="public sealed class AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnnotationDocumentPaginator extends System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.AnnotationDocumentPaginator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.DocumentPaginator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine <see cref="T:System.Windows.Documents.DocumentPaginator" /> zum Drucken eines Dokuments sowie dessen zugeordneten Anmerkungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Windows.Annotations.AnnotationDocumentPaginator> Klasse.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">Das Dokument der gedruckten Anmerkungen hinzufügen.</param>
        <param name="annotationStore">Die Anmerkung Speicher Datenstrom zum Abrufen der Anmerkungen aus.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> Klasse auf der Grundlage eines angegebenen <see cref="T:System.Windows.Documents.DocumentPaginator" /> und Anmerkung Speicher <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die textflussrichtung standardmäßig auf <xref:System.Windows.FlowDirection.LeftToRight>.  Wenn Sie einen alternativen können benötigt <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktorüberladungen auf den Text selbst festgelegt <xref:System.Windows.FlowDirection> auf eine andere Einstellung.  
  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">Das Dokument der gedruckten Anmerkungen hinzufügen.</param>
        <param name="annotationStore">Der Speicher zum Abrufen der Anmerkungen aus.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> Klasse auf der Grundlage eines angegebenen <see cref="T:System.Windows.Documents.DocumentPaginator" /> und <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor legt die textflussrichtung standardmäßig auf <xref:System.Windows.FlowDirection.LeftToRight>.  Wenn Sie einen alternativen können benötigt <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktorüberladungen auf den Text selbst festgelegt <xref:System.Windows.FlowDirection> auf eine andere Einstellung.  
  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">Das Dokument der gedruckten Anmerkungen hinzufügen.</param>
        <param name="annotationStore">Die Anmerkung Speicher Datenstrom zum Abrufen der Anmerkungen aus.</param>
        <param name="flowDirection">Textflussrichtung, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> oder <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> Klasse auf der Grundlage eines angegebenen <see cref="T:System.Windows.Documents.DocumentPaginator" />, Anmerkung Speicher <see cref="T:System.IO.Stream" />, und Text <see cref="T:System.Windows.FlowDirection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">Das Dokument der gedruckten Anmerkungen hinzufügen.</param>
        <param name="annotationStore">Der Speicher zum Abrufen der Anmerkungen aus.</param>
        <param name="flowDirection">Textflussrichtung, <see cref="F:System.Windows.FlowDirection.LeftToRight" /> oder <see cref="F:System.Windows.FlowDirection.RightToLeft" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> Klasse auf der Grundlage eines angegebenen <see cref="T:System.Windows.Documents.DocumentPaginator" />, <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />, und Text <see cref="T:System.Windows.FlowDirection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Annotations.AnnotationDocumentPaginator> -Klasse umschließt die <xref:System.Windows.Documents.DocumentPaginator> angegebenen der <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> Konstruktor, um die benutzeranmerkungen zu den Seiten für das Drucken hinzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Der eindeutige von der Anwendung definierte Bezeichner, der im Aufruf übergeben wird, um den asynchronen Vorgang zu starten.</param>
        <summary>Bricht alle für ein angegebenes <paramref name="userState" />-Objekt eingeleiteten asynchronen Vorgänge ab.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public override void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erzwingt eine Paginierung des Inhalts, aktualisiert <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> mit dem neuen Gesamtwert und legt <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> auf <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unmittelbar nach <xref:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount%2A> zurückgibt, <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> werden `true` und <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> Eigenschaft wider, die Gesamtanzahl der Seiten.  
  
 Die Anzahl der Seiten, die möglicherweise ändern, wenn der Anmerkungsinhalt geändert wird oder die <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> geändert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public override void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Ein von der Anwendung definiertes Objekt zum Identifizieren des asynchronen Vorgangs.</param>
        <summary>Startet eine asynchrone Paginierung des Inhalts, aktualisiert <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> mit dem neuen Gesamtwert und legt <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> nach Abschluss auf <see langword="true" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `userState` -Parameters sollte für die Verwendung mit <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> Methode, wenn die Anwendung Abbrechen des asynchronen Vorgangs vor dem Abschluss der möchte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">Die nullbasierte Nummer der der <see cref="T:System.Windows.Documents.DocumentPage" /> zurückgegeben.</param>
        <summary>Gibt eine <see cref="T:System.Windows.Documents.DocumentPage" /> zusammen mit zugehörigen benutzeranmerkungen für eine angegebene Seitenzahl.</summary>
        <returns>Die <see cref="T:System.Windows.Documents.DocumentPage" /> für den angegebenen <paramref name="pageNumber" />; oder <see cref="F:System.Windows.Documents.DocumentPage.Missing" />, wenn das angegebene <paramref name="pageNumber" /> ist nicht vorhanden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public override void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber">Die nullbasierte Nummer der abzurufenden <see cref="T:System.Windows.Documents.DocumentPage" />.</param>
        <param name="userState">Eine von der Anwendung definiertes Objekt, das zum Bestimmen des asynchronen Vorgangs verwendet wird.</param>
        <summary>Gibt asynchron eine <see cref="T:System.Windows.Documents.DocumentPage" /> zusammen mit zugehörigen Benutzeranmerkungen für eine angegebene Seitenzahl zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `userState` -Parameters sollte für die Verwendung mit <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> Methode, wenn die Anwendung Abbrechen des asynchronen Vorgangs vor dem Abschluss der möchte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public override bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> ist die Gesamtzahl der Seiten.</summary>
        <value>
          <see langword="true" />Wenn die Paginierung abgeschlossen ist und <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> stellt die Summe Anzahl von Seiten ist, andernfalls <see langword="false" /> Wenn Paginierung durchgeführt wird und <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> stellt die Anzahl der Seiten, die derzeit formatiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A>Wechseln Sie möglicherweise aus `true` auf `false` und <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> neu berechnet, wenn eine Änderung am Inhaltssatz oder <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> wird ausgelöst, durch die erneute Paginierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public override int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert, der die Anzahl der Seiten, die gegenwärtig formatierten angibt.</summary>
        <value>Wenn <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> ist <see langword="true" />, die Gesamtzahl der Seiten, die Anmerkung; andernfalls Wenn <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> ist <see langword="false" />, die Anzahl der Seiten, die derzeit formatiert (Paginierung im Prozess).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A>ggf. Ändern von `true` auf `false` und <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> neu berechnet, wenn eine Änderung am Inhaltssatz oder <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> wird ausgelöst, durch die erneute Paginierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public override System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, oder legt sie fest, die vorgeschlagene Breite und Höhe der einzelnen Seiten.</summary>
        <value>Die vorgeschlagene Breite und Höhe für Seiten Formatierung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A>Ruft ab oder legt die *vorgeschlagenen* Größe zum Formatieren von Seiten.  Verwenden der <xref:System.Windows.Documents.DocumentPage.Size%2A> Eigenschaft zum Abrufen der tatsächlichen Größe der Seite (bei Bedarf die tatsächliche Größe zugeschnitten werden aus den vorgeschlagenen <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, das paginierte Quelldokument.</summary>
        <value>Das Quelldokument, das die Paginierung wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
