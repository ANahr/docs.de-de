<Type Name="Validator" FullName="System.ComponentModel.DataAnnotations.Validator">
  <TypeSignature Language="C#" Value="public static class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.Validator" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Hilfsklasse, die verwendet werden kann, um Objekten, Eigenschaften und Methoden zu überprüfen, wenn sie eingeschlossen wird in die zugehörigen <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> Attribute.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <param name="validationResults">Eine Auflistung zum Speichern jeder Fehler bei der Überprüfung.</param>
        <summary>Bestimmt, ob das angegebene Objekt mit der Validierungskontext und die Überprüfung Ergebnisse Auflistung gültig ist.</summary>
        <returns>
          <see langword="true" />Wenn das Objekt überprüft; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die in den Object-Typ zugeordnet ist. Er überprüft auch, ob jede Eigenschaft, die mit markierten <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> bereitgestellt wird. Es ist nicht rekursiv überprüft die Eigenschaftswerte des Objekts.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <param name="validationResults">Eine Auflistung zum Speichern jeder Fehler bei der Überprüfung.</param>
        <param name="validateAllProperties">
          <see langword="true" />So überprüfen Sie alle Eigenschaften; Wenn <see langword="false" />, werden nur die erforderlichen Attribute werden überprüft...</param>
        <summary>Bestimmt, ob das angegebene Objekt mithilfe des Validierungskontexts gültig ist, Überprüfungsergebnisse Auflistung und ein Wert, der angibt, ob alle Eigenschaften zu überprüfen.</summary>
        <returns>
          <see langword="true" />Wenn das Objekt überprüft; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die in den Object-Typ zugeordnet ist. Er überprüft auch, ob jede Eigenschaft, die mit markierten <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> bereitgestellt wird. Es ist nicht rekursiv überprüft die Eigenschaftswerte des Objekts.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateProperty">
      <MemberSignature Language="C#" Value="public static bool TryValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der zu überprüfenden Eigenschaft beschreibt.</param>
        <param name="validationResults">Eine Auflistung zum Speichern jeder Fehler bei der Überprüfung.</param>
        <summary>Überprüft die Eigenschaft an.</summary>
        <returns>
          <see langword="true" />Wenn die Eigenschaft überprüft; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jede <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> -Instanz, die der Eigenschaft zugeordnet ist, die identifizierte der `validationContext` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />die Eigenschaft kann nicht zugewiesen werden.  
  
 - oder -   
  
 <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateValue">
      <MemberSignature Language="C#" Value="public static bool TryValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <param name="validationResults">Eine Auflistung zum Speichern von fehlerhaften Überprüfungen.</param>
        <param name="validationAttributes">Die Validierungsattribute.</param>
        <summary>Gibt einen Wert, der angibt, ob der angegebene Wert mit den angegebenen Attributen gültig ist.</summary>
        <returns>
          <see langword="true" />Wenn das Objekt überprüft; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jede Validierungsattribut in der `validationAttributes` Parameter für die `value` Parameter. Wenn die `validationResults` -Parameter ist kein `null`, diese Methode fügt eine <xref:System.ComponentModel.DataAnnotations.ValidationResult> Objekt für jeden Überprüfungsfehler auf, um die Überprüfung ergibt Auflistung. Wenn die `validationResults` Parameter ist `null`, dieser Methode werden nicht hinzugefügt. eine <xref:System.ComponentModel.DataAnnotations.ValidationResult> Objekt der Auflistung. Wenn eine <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut enthalten ist, der `validationAttributes` Parameter, die <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> -Attribut zuerst ausgewertet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <summary>Bestimmt, ob das angegebene Objekt unter Verwendung des Validierungskontexts gültig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die in den Object-Typ zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Das Objekt ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <param name="validateAllProperties">
          <see langword="true" />So überprüfen Sie alle Eigenschaften; andernfalls <see langword="false" />.</param>
        <summary>Bestimmt, ob das angegebene Objekt ist gültig, die mit den Validierungskontext und ein Wert, der angibt, ob alle Eigenschaften zu überprüfen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die in den Object-Typ zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
          <paramref name="instance" /> ist nicht gültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="public static void ValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der zu überprüfenden Eigenschaft beschreibt.</param>
        <summary>Überprüft die Eigenschaft an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jede <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> -Instanz, die die identifizierte Eigenschaft zugeordnet ist die `validationContext` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" />die Eigenschaft kann nicht zugewiesen werden.</exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Die <paramref name="value" /> -Parameter ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="public static void ValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der zu validierenden Objekts beschreibt.</param>
        <param name="validationAttributes">Die Validierungsattribute.</param>
        <summary>Überprüft die angegebenen Attributen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jede Validierungsattribut in der `validationAttributes` Parameter für die `value` Parameter.  Wenn eine <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut enthalten, ist die <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> -Attribut zuerst ausgewertet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="validationContext" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Die <paramref name="value" /> Parameter überprüft nicht mit der <paramref name="validationAttributes" /> Parameter.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
