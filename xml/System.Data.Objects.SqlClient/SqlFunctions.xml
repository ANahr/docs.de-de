<Type Name="SqlFunctions" FullName="System.Data.Objects.SqlClient.SqlFunctions">
  <TypeSignature Language="C#" Value="public static class SqlFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.SqlClient.SqlFunctions" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die common Language Runtime (CLR)-Methoden, die Funktionen in der Datenbank in LINQ to Entities-Abfragen aufrufen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Acos">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Kosinus der angegebene numerische Wert ist. Dieser Winkel wird den Arkuskosinus aufgerufen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ACOS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Kosinus des Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Kosinus der angegebene numerische Wert ist. Dieser Winkel wird den Arkuskosinus aufgerufen.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ACOS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Kosinus des Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Kosinus der angegebene numerische Wert ist. Dieser Winkel wird den Arkuskosinus aufgerufen.</summary>
        <returns>Der Winkel im Bogenmaß, definiert durch den input Kosinus-Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ACOS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140034).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ascii">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Ascii (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Ascii(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASCII")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Eine gültige Zeichenfolge.</param>
        <summary>Gibt den ASCII-Codewert des Zeichens ganz links eines Zeichenausdrucks zurück.</summary>
        <returns>Der ASCII-Code des ersten Zeichens in der Eingabezeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ASCII (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140040).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Asin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Sinus der angegebene numerische Wert ist. Dieser Winkel wird als der Arkussinus bezeichnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ASIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Sinus des Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Sinus der angegebene numerische Wert ist. Dieser Winkel wird als der Arkussinus bezeichnet.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ASIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Sinus des Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Sinus der angegebene numerische Wert ist. Dieser Winkel wird als der Arkussinus bezeichnet.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ASIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140039).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Atan">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Tangens der angegebene numerische Wert ist. Dieser Winkel wird als der Arkustangens bezeichnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Tangens eines Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Tangens der angegebene numerische Wert ist. Dieser Winkel wird als der Arkustangens bezeichnet.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Tangens eines Winkels.</param>
        <summary>Eine mathematische Funktion, die den Winkel im Bogenmaß zurückgibt, dessen Tangens der angegebene numerische Wert ist. Dieser Winkel wird als der Arkustangens bezeichnet.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140038).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Atan2">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den positiven Winkel im Bogenmaß zwischen der positiven x-Achse und dem Strahl vom Ursprung durch den Punkt (X, y), in denen x und y die beiden angegebenen numerischen Werte sind. Der erste an die Funktion übergebene Parameter ist der y-Wert, und der zweite Parameter ist der X-Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATN2 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Die y-Koordinate eines Punkts.</param>
        <param name="arg2">Die X-Koordinate eines Punkts.</param>
        <summary>Gibt den positiven Winkel im Bogenmaß zwischen der positiven x-Achse und dem Strahl vom Ursprung durch den Punkt (X, y), in denen x und y die beiden angegebenen numerischen Werte sind. Der erste an die Funktion übergebene Parameter ist der y-Wert, und der zweite Parameter ist der X-Wert.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATN2 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Die y-Koordinate eines Punkts.</param>
        <param name="arg2">Die X-Koordinate eines Punkts.</param>
        <summary>Gibt den positiven Winkel im Bogenmaß zwischen der positiven x-Achse und dem Strahl vom Ursprung durch den Punkt (X, y), in denen x und y die beiden angegebenen numerischen Werte sind. Der erste an die Funktion übergebene Parameter ist der y-Wert, und der zweite Parameter ist der X-Wert.</summary>
        <returns>Ein im Bogenmaß angegebener Winkel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ATN2 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140037).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="public static string Char (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Char(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Eine ASCII-Code.</param>
        <summary>Gibt das Zeichen, das entspricht dem angegebenen ganzzahligen ASCII-Wert zurück.</summary>
        <returns>Das Zeichen, das dem angegebenen ASCII-Wert entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHAR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140119).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CharIndex">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Die Anfangsposition der <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Die Anfangsposition der <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <param name="startLocation">Die Zeichenposition in <c>ToSearch</c> , beginnt die Suche.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Die Anfangsposition der <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <param name="startLocation">Die Zeichenposition in <c>ToSearch</c> bei der Suche beginnt.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Die Anfangsposition der <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <param name="startLocation">Die Zeichenposition in <c>ToSearch</c> , beginnt die Suche.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Die Anfangsposition der <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (string toSearch, string target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">Der Zeichenfolgenausdruck, der durchsucht werden.</param>
        <param name="target">Der Zeichenfolgenausdruck gefunden werden.</param>
        <param name="startLocation">Die Zeichenposition in <c>ToSearch</c> , beginnt die Suche.</param>
        <summary>Gibt die Startposition eines Ausdrucks in einen anderen Ausdruck gefunden.</summary>
        <returns>Ein <see cref="T:System.Nullable`1" /> von <see cref="T:System.Int64" /> -Wert, der den Ausgangspunkt des positionieren <paramref name="target" /> Wenn in gefundenen <paramref name="toSearch" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHARINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140118).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Checksum">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über das Eingabeargument berechnet.</summary>
        <returns>Die Prüfsumme berechnet über der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <param name="arg2">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2, byte[] arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2, unsigned int8[] arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
        <Parameter Name="arg3" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <param name="arg2">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <param name="arg3">Das Zeichenarray, das für das die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2, Nullable&lt;bool&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2, valuetype System.Nullable`1&lt;bool&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2, Nullable&lt;DateTime&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2, Nullable&lt;DateTimeOffset&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2, Nullable&lt;decimal&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2, Nullable&lt;double&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2, valuetype System.Nullable`1&lt;float64&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2, Nullable&lt;Guid&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2, Nullable&lt;TimeSpan&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg2">Der Wert für den die Prüfsumme berechnet wird.</param>
        <param name="arg3">Der Wert für den die Prüfsumme berechnet wird.</param>
        <summary>Gibt den Prüfsummenwert zurück, die über die Eingabeargumente berechnet.</summary>
        <returns>Die Prüfsumme berechnet über die Eingabewerte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PRÜFSUMME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChecksumAggregate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Prüfsumme der Werte in einer Auflistung zurück. NULL-Werte werden ignoriert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHECKSUM_AGG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Die Auflistung von Werten, die die Prüfsumme berechnet wird.</param>
        <summary>Gibt die Prüfsumme der Werte in einer Auflistung zurück. NULL-Werte werden ignoriert.</summary>
        <returns>Die Prüfsumme, die von der eingabeauflistung berechnet werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHECKSUM_AGG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;Nullable&lt;int&gt;&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Die Auflistung von Werten, die die Prüfsumme berechnet wird.</param>
        <summary>Gibt die Prüfsumme der Werte in einer Auflistung zurück. NULL-Werte werden ignoriert.</summary>
        <returns>Die Prüfsumme, die von der eingabeauflistung berechnet werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CHECKSUM_AGG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cos">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den trigonometrischen Kosinus des angegebenen Winkels im Bogenmaß (Radiant) zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Kosinus des angegebenen Winkels im Bogenmaß im angegebenen Ausdruck zurück.</summary>
        <returns>Den trigonometrischen Kosinus des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Kosinus des angegebenen Winkels im Bogenmaß im angegebenen Ausdruck zurück.</summary>
        <returns>Den trigonometrischen Kosinus des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COS (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140121).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cot">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Eine mathematische Funktion, die den trigonometrischen Kotangens des angegebenen Winkels im Bogenmaß zurückgibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Eine mathematische Funktion, die den trigonometrischen Kotangens des angegebenen Winkels im Bogenmaß zurückgibt.</summary>
        <returns>Den trigonometrischen Kotangens des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Eine mathematische Funktion, die den trigonometrischen Kotangens des angegebenen Winkels im Bogenmaß zurückgibt.</summary>
        <returns>Den trigonometrischen Kotangens des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [COT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140122).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimestamp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; CurrentTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; CurrentTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_TIMESTAMP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das aktuelle Datum und die Uhrzeit an.</summary>
        <returns>Das aktuelle Datum und die aktuelle Uhrzeit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CURRENT_TIMESTAMP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140125).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static string CurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CurrentUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_USER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Namen des aktuellen Benutzers zurück.</summary>
        <returns>Der Name des aktuellen Benutzers.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [CURRENT_USER (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140126).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataLength">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (byte[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(unsigned int8[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Länge der untersucht werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;bool&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;bool&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTime&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTimeOffset&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;Guid&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;TimeSpan&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Der Wert für die Datenlänge überprüft werden.</param>
        <summary>Gibt die Anzahl von Bytes zurück, die für die Darstellung eines Ausdrucks verwendet werden.</summary>
        <returns>Die Anzahl der Bytes in der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATALENGTH (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine neue <see langword="datetime" /> Wert basierend auf dem angegebenen Datum ein Intervall hinzugefügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums erhöhen.</param>
        <param name="number">Der Wert verwendet, um ein Datum erhöhen um einen angegebenen Betrag an.</param>
        <param name="date">Das Datum zu erhöhen.</param>
        <summary>Gibt eine neue <see langword="datetime" /> Wert basierend auf dem angegebenen Datum ein Intervall hinzugefügt.</summary>
        <returns>Das neue Datum.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTimeOffset&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTimeOffset&gt; dateTimeOffsetArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; dateTimeOffsetArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="dateTimeOffsetArg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums erhöhen.</param>
        <param name="number">Der Wert verwendet, um ein Datum erhöhen um einen angegebenen Betrag an.</param>
        <param name="dateTimeOffsetArg">Das Datum zu erhöhen.</param>
        <summary>Gibt einen neuen Datumswert durch Hinzufügen eines Intervalls zum angegebenen Datum zurück.</summary>
        <returns>Den neuen Punkt in der Zeit als Datum und Uhrzeit relativ zur Coordinated Universal Time (UTC) ausgedrückt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;TimeSpan&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;TimeSpan&gt; time);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="time" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums erhöhen.</param>
        <param name="number">Der Wert verwendet, um ein Datum erhöhen um einen angegebenen Betrag an.</param>
        <param name="time">Die Zeitspanne zu erhöhen.</param>
        <summary>Gibt einen neuen Zeitspannenwert basierend auf die angegebene Zeitspanne ein Intervall hinzugefügt.</summary>
        <returns>Die neue Zeitspanne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums erhöhen.</param>
        <param name="number">Der Wert verwendet, um ein Datum erhöhen um einen angegebenen Betrag an.</param>
        <param name="date">Das Datum zu erhöhen.</param>
        <summary>Gibt eine neue <see langword="datetime" /> Wert basierend auf dem angegebenen Datum ein Intervall hinzugefügt.</summary>
        <returns>Ein <see cref="T:System.Nullable`1" /> der <see cref="T:System.DateTime" /> Wert, der das neue Datum.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEADD (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Anzahl der Datums- und Zeitgrenzen zurück, die zwischen zwei Daten überschritten werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Der Wert, der die Anzahl der Zeitintervalle zwischen zwei Datumsangaben angeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="startDate">Das erste Datum.</param>
        <param name="endDate">Das zweite Datum.</param>
        <summary>Gibt die Anzahl der angegebenen Datepart-Begrenzungen zwischen den angegebenen Start- und Enddatum überschritten wurden.</summary>
        <returns>Die Anzahl der Zeitintervalle zwischen zwei Datumsangaben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEDIFF (Transact-SQL).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Zeichenfolge, die den angegebenen Datumsteil des angegebenen Datums darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine Zeichenfolge, die den angegebenen Datumsteil des angegebenen Datums darstellt.</summary>
        <returns>Der angegebene Teil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine Zeichenfolge, die den angegebenen Datumsteil des angegebenen Datums darstellt.</summary>
        <returns>Der angegebene Teil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine Zeichenfolge, die den angegebenen Datumsteil des angegebenen Datums darstellt.</summary>
        <returns>Der angegebene Teil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums, die unterschiedliche Anzahl von Zeitintervallen zu berechnen.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine Zeichenfolge, die den angegebenen Datumsteil des angegebenen Datums darstellt.</summary>
        <returns>Der angegebene Teil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141345).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine ganze Zahl zurück, die den angegebenen Teil des angegebenen Datums darstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums der gleiche Wert zurückgegeben.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine ganze Zahl zurück, die den angegebenen Teil des angegebenen Datums darstellt.</summary>
        <returns>Die den angegebenen Datumsteil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums der gleiche Wert zurückgegeben.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine ganze Zahl zurück, die den angegebenen Teil des angegebenen Datums darstellt.</summary>
        <returns>Den angegebenen Datumsteil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums der gleiche Wert zurückgegeben.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine ganze Zahl zurück, die den angegebenen Teil des angegebenen Datums darstellt.</summary>
        <returns>Den angegebenen Datumsteil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">Der Teil des Datums der gleiche Wert zurückgegeben.</param>
        <param name="date">Das Datum.</param>
        <summary>Gibt eine ganze Zahl zurück, die den angegebenen Teil des angegebenen Datums darstellt.</summary>
        <returns>Den angegebenen Datumsteil des angegebenen Datums.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [DATEPART (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Degrees">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den entsprechenden Winkel in Grad für einen im Bogenmaß angegebenen Winkel zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Grad (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Degrees (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Degrees(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den entsprechenden Winkel in Grad für einen im Bogenmaß angegebenen Winkel zurück.</summary>
        <returns>Der angegebene Winkel in Grad konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Grad (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Degrees (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Degrees(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den entsprechenden Winkel in Grad für einen im Bogenmaß angegebenen Winkel zurück.</summary>
        <returns>Der angegebene Winkel in Grad konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Grad (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Degrees (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Degrees(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den entsprechenden Winkel in Grad für einen im Bogenmaß angegebenen Winkel zurück.</summary>
        <returns>Der angegebene Winkel in Grad konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Grad (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Degrees (Nullable&lt;long&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Degrees(valuetype System.Nullable`1&lt;int64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den entsprechenden Winkel in Grad für einen im Bogenmaß angegebenen Winkel zurück.</summary>
        <returns>Der angegebene Winkel in Grad konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Grad (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141348).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Difference">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Difference (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Difference(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DIFFERENCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">Die erste Zeichenfolge.</param>
        <param name="string2">Die zweite Zeichenfolge.</param>
        <summary>Gibt einen Ganzzahlwert, der den Unterschied zwischen den SOUNDEX-Werten von zwei Zeichenausdrücken angibt.</summary>
        <returns>Die SOUNDEX-Differenz zwischen den beiden Zeichenfolgen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Unterschied (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141349).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exp">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Exponentialwert des angegebenen Float-Ausdrucks zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [EXP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Eingabewert.</param>
        <summary>Gibt den Exponentialwert des angegebenen Float-Ausdrucks zurück.</summary>
        <returns>Die Konstante e potenziert mit der der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [EXP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Eingabewert.</param>
        <summary>Gibt den Exponentialwert des angegebenen Float-Ausdrucks zurück.</summary>
        <returns>Die Konstante e potenziert mit der der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [EXP (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141350).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.GetDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den aktuellen Timestamp des Datenbanksystems als Datetime-Wert ohne den Zeitzonenoffset der Datenbank zurück. Dieser Wert stammt aus dem Betriebssystem des Computers, auf dem die Instanz von SQL Server ausgeführt wird.</summary>
        <returns>Den aktuellen Timestamp des Datenbanksystems.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [GETDATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141352).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUtcDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetUtcDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetUtcDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETUTCDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den aktuellen Timestamp des Datenbanksystems als Datetime-Wert zurück. Der Zeitzonenoffset der Datenbank ist nicht enthalten. Dieser Wert stellt die aktuelle UTC-Zeit (Coordinated Universal Time). Dieser Wert stammt aus dem Betriebssystem des Computers, auf dem die Instanz von SQL Server ausgeführt wird.</summary>
        <returns>Die aktuelle Datenbank UTC-Zeitstempel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [GETUTCDATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141353).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public static string HostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.HostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "HOST_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Namen der Arbeitsstation zurück.</summary>
        <returns>Der Name der Arbeitsstation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [HOSTNAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsDate (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsDate(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Der überprüfte Wert.</param>
        <summary>Gibt an, ob der Eingabewert ein gültiges Datum oder Uhrzeit ist.</summary>
        <returns>1, wenn der eingegebene Ausdruck ein gültiger Datums- oder Uhrzeitwert des Datetime oder Smalldatetime-Datentypen; andernfalls 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [HOSTNAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141354).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsNumeric (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsNumeric(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISNUMERIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Ein Zeichenfolgenausdruck.</param>
        <summary>Gibt an, ob der Eingabewert ein gültiger numerischer Typ ist.</summary>
        <returns>1, wenn der Eingabeausdruck einem gültigen numerischen Datentyp ist. andernfalls 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [ISNUMERIC (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141355).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den natürlichen Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt den natürlichen Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <returns>Der natürliche Logarithmus des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt den natürlichen Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <returns>Der natürliche Logarithmus des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141358).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log10">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Base-10-Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG10 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt den Base-10-Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <returns>Der Basis-10-Logarithmus des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG10 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt den Base-10-Logarithmus des angegebenen Eingabewerts zurück.</summary>
        <returns>Der Basis-10-Logarithmus des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [LOG10 (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141359).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="public static string NChar (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NChar(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "NCHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein-Zeichencode.</param>
        <summary>Gibt das Unicode-Zeichen mit dem angegebenen ganzzahligen Code zurück, die durch den Unicode-Standard definiert sind.</summary>
        <returns>Das Zeichen, das die Eingabezeichencode entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [NCHAR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141365).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PatIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; PatIndex (string stringPattern, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; PatIndex(string stringPattern, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PATINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringPattern" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringPattern">Eine zu suchende Zeichenfolgenmuster.</param>
        <param name="target">Die zu durchsuchende Zeichenfolge.</param>
        <summary>Gibt die Anfangsposition des ersten Vorkommens eines Musters in einem angegebenen Ausdruck oder Nullen zurück, wenn das Muster nicht, werden auf alle gültigen Text- und Zeichendatentypen gefunden wird.</summary>
        <returns>Die Anfangsposition, an das Zeichenfolgenmuster gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PATINDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141310).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Pi() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Pi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den konstanten Wert von Pi zurück.</summary>
        <returns>Der numerische Wert von Pi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [PI (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141311).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt zurück, dass eine Unicode-Zeichenfolge mit Trennzeichen hinzugefügt, um der Eingabezeichenfolge eine gültige Microsoft SQL Server stellen Bezeichner begrenzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [QUOTENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">Der Ausdruck, dem Anführungszeichen hinzugefügt werden.</param>
        <summary>Gibt zurück, dass eine Unicode-Zeichenfolge mit Trennzeichen hinzugefügt, um der Eingabezeichenfolge eine gültige Microsoft SQL Server stellen Bezeichner begrenzt.</summary>
        <returns>Die ursprüngliche Zeichenfolge mit hinzugefügten Klammern.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [QUOTENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg, string quoteCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg, string quoteCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
        <Parameter Name="quoteCharacter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">Der Ausdruck, dem Anführungszeichen hinzugefügt werden.</param>
        <param name="quoteCharacter">Die Zeichenfolge der einem Zeichen als Trennzeichen verwendet. Sie können ein einfaches Anführungszeichen ('), eine linke oder rechte Klammer ([]) oder ein doppeltes Anführungszeichen (") sein. Wenn Quote_character nicht angegeben ist, werden Klammern verwendet.</param>
        <summary>Gibt zurück, dass eine Unicode-Zeichenfolge mit Trennzeichen hinzugefügt, um der Eingabezeichenfolge eine gültige Microsoft SQL Server stellen Bezeichner begrenzt.</summary>
        <returns>Die ursprüngliche Zeichenfolge mit dem angegebenen Anführungszeichen hinzugefügt sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [QUOTENAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141313).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Radians">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt das Radiant-Measure, das für den angegebenen Winkel in Grad zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Bogenmaß (Radiant) (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Radians (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Radians(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Winkel in Grad gemessen.</param>
        <summary>Gibt das Radiant-Measure, das für den angegebenen Winkel in Grad zurück.</summary>
        <returns>Das Measure Radiant des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Bogenmaß (Radiant) (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Radians (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Radians(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Winkel in Grad gemessen.</param>
        <summary>Gibt das Radiant-Measure, das für den angegebenen Winkel in Grad zurück.</summary>
        <returns>Das Measure Radiant des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Bogenmaß (Radiant) (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Radians (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Radians(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Winkel in Grad gemessen.</param>
        <summary>Gibt das Radiant-Measure, das für den angegebenen Winkel in Grad zurück.</summary>
        <returns>Das Measure Radiant des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Bogenmaß (Radiant) (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Radians (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Radians(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Der Winkel in Grad gemessen.</param>
        <summary>Gibt das Radiant-Measure, das für den angegebenen Winkel in Grad zurück.</summary>
        <returns>Das Measure Radiant des angegebenen Winkels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Bogenmaß (Radiant) (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141314).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rand">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt einen pseudo-zufälligen Float-Wert von 0 bis 1, exklusive zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [RAND (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Rand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen pseudo-zufälligen Float-Wert von 0 bis 1, exklusive zurück.</summary>
        <returns>Der pseudo-zufälligen Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [RAND (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand (Nullable&lt;int&gt; seed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand(valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="seed">Der Startwert. Wenn <c>Ausgangswert</c> nicht angegeben ist, wird das SQL Server-Datenbankmodul einen Ausgangswert nach dem Zufallsprinzip zugewiesen. Für einen angegebenen Startwert wird immer dasselbe Ergebnis zurückgegeben.</param>
        <summary>Gibt einen pseudo-zufälligen Float-Wert von 0 bis 1, exklusive zurück.</summary>
        <returns>Der pseudo-zufälligen Wert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Weitere Informationen über die entsprechenden SQL Server-Funktion finden Sie unter finden Sie unter [RAND (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141315).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replicate">
      <MemberSignature Language="C#" Value="public static string Replicate (string target, Nullable&lt;int&gt; count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replicate(string target, valuetype System.Nullable`1&lt;int32&gt; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "REPLICATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="target">Eine gültige Zeichenfolge.</param>
        <param name="count">Der Wert, der angibt, wie viele Zeit wiederholt <c>Ziel</c>.</param>
        <summary>Wiederholt einen Zeichenfolgenwert eine festgelegte Anzahl von Malen an.</summary>
        <returns>Die Zielzeichenfolge, die so oft wie angegeben wiederholtes <paramref name="count" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [REPLICATE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141318).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt das positive (+1) oder negative Vorzeichen (-1) oder das Vorzeichen 0 (null) des angegebenen Ausdrucks zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Anmeldung (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sign (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sign(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt das positive (+1) oder negative Vorzeichen (-1) oder das Vorzeichen 0 (null) des angegebenen Ausdrucks zurück.</summary>
        <returns>Das Vorzeichen des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Anmeldung (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sign (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sign(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt das positive (+1) oder negative Vorzeichen (-1) oder das Vorzeichen 0 (null) des angegebenen Ausdrucks zurück.</summary>
        <returns>Das Vorzeichen des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Anmeldung (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sign (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sign(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt das positive (+1) oder negative Vorzeichen (-1) oder das Vorzeichen 0 (null) des angegebenen Ausdrucks zurück.</summary>
        <returns>Das Vorzeichen des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Anmeldung (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sign (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sign(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt das positive (+1) oder negative Vorzeichen (-1) oder das Vorzeichen 0 (null) des angegebenen Ausdrucks zurück.</summary>
        <returns>Das Vorzeichen des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [Anmeldung (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141323).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den trigonometrischen Sinus des angegebenen Winkels zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Sinus des angegebenen Winkels zurück.</summary>
        <returns>Den trigonometrischen Sinus des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Sinus des angegebenen Winkels zurück.</summary>
        <returns>Den trigonometrischen Sinus des Eingabeausdrucks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SIN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141324).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundCode">
      <MemberSignature Language="C#" Value="public static string SoundCode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SoundCode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SOUNDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Eine gültige Zeichenfolge.</param>
        <summary>Konvertiert eine alphanumerische Zeichenfolge um eine aus vier Zeichen (bestehenden SOUNDEX) Code ähnlich klingende Wörter oder Namen gefunden.</summary>
        <returns>Der SOUNDEX-Code der Eingabezeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SOUNDEX (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141325).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Space(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SPACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Die Anzahl der Leerzeichen. Wenn Sie negativ ist, wird eine Nullzeichenfolge zurückgegeben.</param>
        <summary>Gibt eine Zeichenfolge aus mehreren Leerzeichen zurück.</summary>
        <returns>Eine Zeichenfolge, die aus der angegebenen Anzahl von Leerzeichen besteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SPACE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141326).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Square">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt das Quadrat der angegebenen Zahl zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQUARE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein numerischer Ausdruck.</param>
        <summary>Gibt das Quadrat der angegebenen Zahl zurück.</summary>
        <returns>Das Quadrat des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQUARE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">Ein numerischer Ausdruck.</param>
        <summary>Gibt das Quadrat der angegebenen Zahl zurück.</summary>
        <returns>Das Quadrat des Eingabewerts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQUARE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141327).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SquareRoot">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Quadratwurzel der angegebenen Zahl zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQRT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt die Quadratwurzel der angegebenen Zahl zurück.</summary>
        <returns>Die Quadratwurzel der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQRT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein numerischer Ausdruck.</param>
        <summary>Gibt die Quadratwurzel der angegebenen Zahl zurück.</summary>
        <returns>Die Quadratwurzel der Eingabewert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [SQRT (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141328).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StringConvert">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der eingegebene Ausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der numerische Eingabeausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <param name="length">Die Gesamtlänge der Zeichenfolge. Dazu gehören Dezimaltrennzeichen, Vorzeichen, Ziffern und Leerzeichen. Der Standard ist 10.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der eingegebene Ausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <param name="length">Die Gesamtlänge der Zeichenfolge. Dazu gehören Dezimaltrennzeichen, Vorzeichen, Ziffern und Leerzeichen. Der Standard ist 10.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der numerische Eingabeausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <param name="length">Die Gesamtlänge der Zeichenfolge. Dazu gehören Dezimaltrennzeichen, Vorzeichen, Ziffern und Leerzeichen. Der Standard ist 10.</param>
        <param name="decimalArg">Die Anzahl der Stellen rechts vom Dezimaltrennzeichen an. <c>Decimal</c> muss kleiner oder gleich 16 sein. Wenn <c>decimal</c> mehr als 16 ist, und klicken Sie dann das Ergebnis bei sechzehn Stellen rechts vom Dezimaltrennzeichen abgeschnitten wird.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der eingegebene Ausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">Ein numerischer Ausdruck.</param>
        <param name="length">Die Gesamtlänge der Zeichenfolge. Dazu gehören Dezimaltrennzeichen, Vorzeichen, Ziffern und Leerzeichen. Der Standard ist 10.</param>
        <param name="decimalArg">Die Anzahl der Stellen rechts vom Dezimaltrennzeichen an. <c>Decimal</c> muss kleiner oder gleich 16 sein. Wenn <c>decimal</c> mehr als 16 ist, und klicken Sie dann das Ergebnis bei sechzehn Stellen rechts vom Dezimaltrennzeichen abgeschnitten wird.</param>
        <summary>Gibt Zeichendaten aus numerischen Daten konvertiert werden.</summary>
        <returns>Der numerische Eingabeausdruck in eine Zeichenfolge konvertiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STR (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141331).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stuff">
      <MemberSignature Language="C#" Value="public static string Stuff (string stringInput, Nullable&lt;int&gt; start, Nullable&lt;int&gt; length, string stringReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Stuff(string stringInput, valuetype System.Nullable`1&lt;int32&gt; start, valuetype System.Nullable`1&lt;int32&gt; length, string stringReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STUFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringInput" Type="System.String" />
        <Parameter Name="start" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="stringReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringInput">Die Zielzeichenfolge.</param>
        <param name="start">Die Zeichenposition in <c>Stringinput</c> , in denen die Ersetzungszeichenfolge wird eingefügt werden.</param>
        <param name="length">Die Anzahl der zu löschenden aus Zeichen <c>StringInput</c>. Wenn <c>Länge</c> ist länger als <c>StringInput</c>, Löschung bis zum letzten Zeichen in <c>StringReplacement</c>.</param>
        <param name="stringReplacement">Die Teilzeichenfolge einzufügende <c>StringInput</c>.</param>
        <summary>Fügt eine Zeichenfolge in eine andere Zeichenfolge an. Er löscht eine angegebene Anzahl von Zeichen in der Zielzeichenfolge Anfangsposition und fügt dann die zweite Zeichenfolge in der Zielzeichenfolge an der Anfangsposition.</summary>
        <returns>Eine Zeichenfolge, die die beiden Zeichenfolgen besteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [STUFF (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141708).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Tan">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den trigonometrischen Tangens des Eingabeausdrucks zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [TAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Tangens des Eingabeausdrucks zurück.</summary>
        <returns>Der Tangens des Winkels Eingabe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [TAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Ein im Bogenmaß angegebener Winkel.</param>
        <summary>Gibt den trigonometrischen Tangens des Eingabeausdrucks zurück.</summary>
        <returns>Der Tangens des Winkels Eingabe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [TAN (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141715).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Unicode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Unicode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "UNICODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">Eine gültige Zeichenfolge.</param>
        <summary>Gibt für das erste Zeichen des Eingabeausdrucks den im Unicode-Standard entsprechenden ganzzahligen Wert zurück.</summary>
        <returns>Der Zeichencode für das erste Zeichen in der Eingabezeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [UNICODE (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141716).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UserName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Datenbank-Benutzername, der für eine angegebene ID zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [USER_NAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.UserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Datenbank-Benutzername, der für eine angegebene ID zurück.</summary>
        <returns>Der Benutzername.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [USER_NAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">Eine Benutzer-ID</param>
        <summary>Gibt eine Datenbank-Benutzername, der für eine angegebene ID zurück.</summary>
        <returns>Der Benutzername.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Funktion kann nicht direkt aufgerufen werden. Diese Funktion kann nur innerhalb einer LINQ to Entities-Abfrage verwendet werden.  
  
 Diese Funktion wird in eine entsprechende Funktion in der Datenbank übersetzt. Informationen über die entsprechende SQL Server-Funktion finden Sie unter [USER_NAME (Transact-SQL)](http://go.microsoft.com/fwlink/?LinkId=141718).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
