<Type Name="ImageAnimator" FullName="System.Drawing.ImageAnimator">
  <TypeSignature Language="C#" Value="public sealed class ImageAnimator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageAnimator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageAnimator" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Erstellt eine Animation ein Image mit zeitbasierten Frames.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static void Animate (System.Drawing.Image image, EventHandler onFrameChangedHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Animate(class System.Drawing.Image image, class System.EventHandler onFrameChangedHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onFrameChangedHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> zu animierende Objekt.</param>
        <param name="onFrameChangedHandler">Ein <see langword="EventHandler" /> -Objekt, das die Methode, die aufgerufen wird angibt, wenn der Animationsframe sich ändert.</param>
        <summary>Zeigt ein Bild mit mehreren Rahmen als eine Animation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Windows Forms-Anwendung veranschaulicht, wie ein animiertes Bild auf dem Bildschirm gezeichnet werden soll. Das Bild wird aus der animiertes GIF-Datei erstellt SampleAnimation.gif im gleichen Ordner wie die Anwendung befindet.  
  
 [!code-cpp[System.Drawing.ClassicImageAnimator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImageAnimator/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImageAnimator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImageAnimator/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImageAnimator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImageAnimator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAnimate">
      <MemberSignature Language="C#" Value="public static bool CanAnimate (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanAnimate(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Das zu überprüfende <see cref="T:System.Drawing.Image" />-Objekt.</param>
        <summary>Gibt einen booleschen Wert, der angibt, ob das angegebene Image zeitbasierten Frames enthält.</summary>
        <returns>Diese Methode gibt <see langword="true" /> , wenn das angegebene Bild in einen zeitbasierten Frames; enthält andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAnimate">
      <MemberSignature Language="C#" Value="public static void StopAnimate (System.Drawing.Image image, EventHandler onFrameChangedHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopAnimate(class System.Drawing.Image image, class System.EventHandler onFrameChangedHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onFrameChangedHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> Objekt, dessen Animation beendet.</param>
        <param name="onFrameChangedHandler">Ein <see langword="EventHandler" /> -Objekt, das die Methode, die aufgerufen wird angibt, wenn der Animationsframe sich ändert.</param>
        <summary>Beendet eine laufende Animation.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFrames">
      <MemberSignature Language="C#" Value="public static void UpdateFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageAnimator.UpdateFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wechselt zum nächsten Frame in allen gerade animierten Bildern. Der neue Frame wird beim nächsten Rendern des Bilds gezeichnet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFrames">
      <MemberSignature Language="C#" Value="public static void UpdateFrames (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateFrames(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Die <see cref="T:System.Drawing.Image" /> -Objekt für das Frames aktualisiert.</param>
        <summary>Wechselt zum nächsten Frame im angegebenen Bild. Der neue Frame wird beim nächsten Rendern des Bilds gezeichnet. Diese Methode gilt nur für Bilder mit zeitbasierten Frames.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
