<Type Name="SolidBrush" FullName="System.Drawing.SolidBrush">
  <TypeSignature Language="C#" Value="public sealed class SolidBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SolidBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.SolidBrush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert einen Pinsel, der eine einzelne Farbe. Pinsel dienen zum Ausfüllen von Grafikformen wie Rechtecken, Ellipsen, Kreisen, Polygone und Pfade. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse erbt von der <xref:System.Drawing.Brush> Klasse.  
  
   
  
## Examples  
  
-   Im folgenden Codebeispiel wird ein Schatten hinzugefügt eine <xref:System.Windows.Forms.ListBox> mithilfe einer <xref:System.Drawing.SolidBrush>.  
  
 In diesem Beispiel dient, die mit einem Windows Form verwendet werden. Um dieses Beispiel auszuführen, fügen Sie diesen Code in ein Formular, und rufen die `AddShadow` Methode beim Verarbeiten des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis. Stellen Sie sicher, dass das Formular enthält ein <xref:System.Windows.Forms.ListBox> mit dem Namen `listBox1`.  
  
 [!code-cpp[System.Drawing.MiscExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.MiscExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.MiscExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SolidBrush (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">Ein <see cref="T:System.Drawing.Color" /> -Struktur, die Farbe der diesen Pinsel darstellt.</param>
        <summary>Initialisiert eine neue <see cref="T:System.Drawing.SolidBrush" /> Objekt der angegebenen Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
-   Im folgenden Codebeispiel wird ein Schatten hinzugefügt eine <xref:System.Windows.Forms.ListBox> mithilfe einer <xref:System.Drawing.SolidBrush>.  
  
 In diesem Beispiel dient, die mit einem Windows Form verwendet werden. Um dieses Beispiel auszuführen, fügen Sie diesen Code in ein Formular, und rufen die `AddShadow` Methode beim Verarbeiten des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis. Stellen Sie sicher, dass das Formular enthält ein <xref:System.Windows.Forms.ListBox> mit dem Namen `listBox1`.  
  
 [!code-cpp[System.Drawing.MiscExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.MiscExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.MiscExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SolidBrush.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie dieses <see cref="T:System.Drawing.SolidBrush" />-Objekts.</summary>
        <returns>Das von dieser Methode erstellte <see cref="T:System.Drawing.SolidBrush" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.SolidBrush.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt die Farbe dieses <see cref="T:System.Drawing.SolidBrush" /> Objekt.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" /> -Struktur, die Farbe der diesen Pinsel darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.Drawing.SolidBrush.Color" /> Eigenschaftensatz wird auf einen unveränderlichen <see cref="T:System.Drawing.SolidBrush" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.SolidBrush.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
