<Type Name="WebContentTypeMapper" FullName="System.ServiceModel.Channels.WebContentTypeMapper">
  <TypeSignature Language="C#" Value="public abstract class WebContentTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebContentTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.WebContentTypeMapper" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt das Format an, dem der Inhaltstyp einer eingehenden Nachricht zugeordnet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Erweiterungspunkt im Programmiermodell, der vom Webnachrichtenencoder verwendet wird, um zu überschreiben, wie Inhaltstypen Formaten zugeordnet werden. Zum Implementieren dieser Klasse wird die <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29>-Methode überschrieben.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebContentTypeMapper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFormatForContentType">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.WebContentFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">Der Inhaltstyp, der den zu interpretierenden MIME-Typ der Daten angibt.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das Nachrichtenformat zurück, das für einen bestimmten Inhaltstyp verwendet wird.</summary>
        <returns>Das <see cref="T:System.ServiceModel.Channels.WebContentFormat" />, das das Format angibt, dem der Inhaltstyp einer Nachricht zugeordnet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein Erweiterbarkeitsmechanismus, der verwendet werden kann, um zu überschreiben, wie Inhaltstypen Webinhaltsformaten zugeordnet werden. Z. B., wenn alle eingehende Nachrichten als "unformatierte Binärdaten" ohne XML- oder JSON-Analyse verarbeitet werden, Sie können implementieren eine <xref:System.ServiceModel.Channels.WebContentTypeMapper> immer zurückgegebenen <xref:System.ServiceModel.Channels.WebContentFormat.Raw> unabhängig von den Inhaltstyp, der übergeben wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
