<Type Name="FileIOPermissionAccess" FullName="System.Security.Permissions.FileIOPermissionAccess">
  <TypeSignature Language="C#" Value="public enum FileIOPermissionAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileIOPermissionAccess extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.FileIOPermissionAccess" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt den Typ des Dateizugriffs angefordert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Enumeration wird zusammen mit der <xref:System.Security.Permissions.FileIOPermission> Klasse.  
  
> [!NOTE]
>  Obwohl NoAccess und AllAccess Mitglieder sind <xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess>, sie gelten nicht für die Verwendung als Parameter für <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> , da sie entweder kein Zugriff Dateitypen oder alle Datei-Zugriffstypen, beschreiben und <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> Zugriffstyp für eine einzelne Datei erwartet.  
  
> [!NOTE]
>  Erteilen Schreibzugriff auf eine Assembly ähnelt sie volle Vertrauenswürdigkeit gewähren. Wenn eine Anwendung, dass es keinen Schreibzugriff haben, sollten nicht in das Dateisystem schreiben soll.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllAccess">
      <MemberSignature Language="C#" Value="AllAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess AllAccess = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, und <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> Zugriff auf eine Datei oder ein Verzeichnis. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />stellt mehrere <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> Werte und bewirkt, dass ein <see cref="T:System.ArgumentException" /> bei Verwendung als die <paramref name="access" /> -Parameter für die <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> -Methode, die einen einzelnen Wert erwartet.</summary>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="Append" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Append = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.Append" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zugriff auf den Materialien, die an einer Datei oder eines Verzeichnisses angefügt werden soll. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />Zugriff umfasst die Möglichkeit, eine neue Datei oder ein Verzeichnis zu erstellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Zum Erstellen von Dateien muss Code sowohl Anfügen und Schreib- oder Lesezugriff gewährt werden. Weitere Informationen finden Sie unter <xref:System.IO.FileMode>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAccess">
      <MemberSignature Language="C#" Value="NoAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess NoAccess = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Kein Zugriff auf eine Datei oder ein Verzeichnis. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />stellt keine gültige <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> Werte und bewirkt, dass ein <see cref="T:System.ArgumentException" /> bei Verwendung als Parameter für <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, die einen einzelnen Wert erwartet.</summary>
      </Docs>
    </Member>
    <Member MemberName="PathDiscovery">
      <MemberSignature Language="C#" Value="PathDiscovery" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess PathDiscovery = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zugriff auf die Informationen in den Pfad selbst. Dies schützt vertrauliche Informationen in den Pfad, z. B. Benutzernamen, sowie Informationen über die Verzeichnisstruktur, die im Pfad erkennbar. Dieser Wert gewährt keinen Zugriff auf Dateien oder Ordnern, die durch den Pfad dargestellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aus Gründen der Leistung `PathDiscovery` sollte nur für Verzeichnisse, nicht auf Dateien gewährt werden. Beispielsweise `PathDiscovery` Berechtigung sollte in Pfade wie C:\test und C:\test\\, nicht C:\test\example.txt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="Read" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Read = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.Read" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zugriff zum Lesen aus einer Datei oder eines Verzeichnisses.</summary>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="Write" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Write = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.FileIOPermissionAccess.Write" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zugriff zum Schreiben oder Löschen einer Datei oder eines Verzeichnisses. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />Zugriff umfasst das Löschen und zum Überschreiben von Dateien oder Verzeichnisse.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
