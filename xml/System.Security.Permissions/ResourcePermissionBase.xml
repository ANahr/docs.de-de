<Type Name="ResourcePermissionBase" FullName="System.Security.Permissions.ResourcePermissionBase">
  <TypeSignature Language="C#" Value="public abstract class ResourcePermissionBase : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ResourcePermissionBase extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ResourcePermissionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Ermöglicht eine Steuerung der Codezugriff Sicherheitsberechtigungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Die <xref:System.Security.Permissions.ResourcePermissionBase> Klasse vergleicht Zeichenfolgen mithilfe von ordinalen Sortierregeln und die verglichenen Zeichenfolgen die Groß-/Kleinschreibung ignoriert.  
  
   
  
## Examples  
 Im folgende Beispiel erbt der <xref:System.Security.Permissions.ResourcePermissionBase> Klasse. Es sind 4 Arten von Konstruktoren implementiert. Das Beispiel enthält auch eine Implementierung von einer Klasse mit dem Namen `MailslotPermissionEntry`. Die <xref:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType%2A> ist dann privat-Eigenschaftensatz auf den Typ des `MailslotPermissionEntry`. Die <xref:System.Security.Permissions.ResourcePermissionBase.TagNames%2A> Eigenschaft privat auf "Name" und "Computers" festgelegt ist.  
  
 [!code-cpp[ResourcePermissionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#1)]
 [!code-csharp[ResourcePermissionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#1)]
 [!code-vb[ResourcePermissionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">für das Recht, den Beweis zu steuern. Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</permission>
    <block subset="none" type="overrides">
      <para>Beim Erben von <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, müssen Sie mindestens drei Konstruktoren bereitstellen, zwei Eigenschaften festlegen und eine dritte Eigenschaft angeben. Die erforderlichen Konstruktoren sind: einen Standardkonstruktor, der eine, die eine <see cref="T:System.Security.Permissions.PermissionState" /> als Parameter und so viele wie benötigt, die Werte für die Eigenschaften zu akzeptieren. Die Eigenschaften, die festgelegt werden müssen, sind <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> und <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />. Die dritte Eigenschaft, die benötigt wird ist eine, die die Berechtigungseinträge zurückgibt. Ein Beispiel für eine Implementierung dieser Klasse finden Sie unter <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. In <see cref="T:System.Diagnostics.PerformanceCounterPermission" />, die <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> Eigenschaftensatz ist privat "Computer" und "Category", die <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> Eigenschaftensatz ist privat in den Typ des <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />, und die <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> -Eigenschaft gibt die Berechtigungseinträge zurück.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Permissions.ResourcePermissionBase" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourcePermissionBase (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Einer der <see cref="T:System.Security.Permissions.PermissionState" />-Werte.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> -Klasse mit der angegebenen Ebene des Zugriffs auf Ressourcen bei der Erstellung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="state" />-Parameter ist kein gültiger Wert von <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionAccess">
      <MemberSignature Language="C#" Value="protected void AddPermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddPermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Das hinzuzufügende <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />.</param>
        <summary>Fügt eine Berechtigung auf die Berechtigung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung der <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> Methode, um einen Zugriff Berechtigungseintrag während der Initialisierung der Klasse hinzuzufügen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Permissions.ResourcePermissionBase> Klasse.  
  
 [!code-cpp[ResourcePermissionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/ResourcePermissionBase/CPP/resourcepermissionbase.cpp#2)]
 [!code-csharp[ResourcePermissionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/ResourcePermissionBase/CS/resourcepermissionbase.cs#2)]
 [!code-vb[ResourcePermissionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ResourcePermissionBase/VB/resourcepermissionbase.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> ist gleich <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anzahl der Elemente in der <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> Eigenschaft ist nicht gleich der Anzahl von Elementen in der <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> Eigenschaft.  
  
 - oder -   
  
 Die <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> ist bereits in den Berechtigungssatz enthalten.</exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public const string Any;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Any" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das Zeichen, die verwendet werden, die Platzhalterzeichen darzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieses Felds ist "*".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Berechtigung der hinzugefügten Berechtigungseinträge.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt und gibt eine identische Kopie des aktuellen Berechtigungsobjekts.</summary>
        <returns>Eine Kopie des aktuellen Berechtigungsobjekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Kopie des Berechtigungsobjekts stellt den gleichen Zugriff auf Ressourcen wie die ursprüngliche Berechtigungsobjekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("incomplete - need more test")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
        <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="securityElement" /> -Parameter ist kein gültiges Berechtigungselement.  
  
 - oder -   
  
 Die Versionsnummer der <paramref name="securityElement" /> Parameter wird nicht unterstützt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="securityElement" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionEntries">
      <MemberSignature Language="C#" Value="protected System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Security.Permissions.ResourcePermissionBaseEntry[] GetPermissionEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ResourcePermissionBaseEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Array von der <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> Objekte, die durch diese Berechtigung hinzugefügt.</summary>
        <returns>Ein Array von <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> Objekte, die durch diese Berechtigung hinzugefügt wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess%2A> und <xref:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess%2A> hinzufügen und Entfernen von Berechtigungseinträge dieser Berechtigung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Ein Berechtigungsobjekt des gleichen Typs wie das aktuelle Berechtigungsobjekt.</param>
        <summary>Erstellt und gibt ein Berechtigungsobjekt, das die Schnittmenge des aktuellen Berechtigungsobjekts und einem Zielobjekt der Berechtigung.</summary>
        <returns>Ein neues Berechtigungsobjekt, das die Schnittmenge des aktuellen Objekts und das angegebene Ziel darstellt. Dieses Objekt ist <see langword="null" /> , wenn die Schnittmenge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Schnittmenge von zwei Berechtigungsobjekte ist eine Berechtigung, die den Satz an Vorgängen wird beschrieben, die beide gemeinsam gespeichert werden. Insbesondere stellt die Mindestberechtigungen, die für eine Anforderung zur Übergabe von beide Berechtigungen dar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Zielobjekt der Berechtigung ist nicht von denselben Typ wie das aktuelle Berechtigungsobjekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Ein Berechtigungsobjekt, das auf die teilmengenbeziehung geprüft werden soll.</param>
        <summary>Bestimmt, ob das aktuelle Berechtigungsobjekt eine Teilmenge der angegebenen Berechtigung ist.</summary>
        <returns>
          <see langword="true" />Wenn das aktuelle Berechtigungsobjekt eine Teilmenge des angegebenen Berechtigungsobjekts; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das aktuelle Berechtigungsobjekt ist eine Teilmenge des angegebenen Berechtigungsobjekts, wenn das aktuelle Berechtigungsobjekt eine Reihe von Vorgängen angibt, die durch das angegebene Berechtigungsobjekt vollständig enthalten ist. Eine Berechtigung, die Zugriff auf C:\Example.txt darstellt wird z. B. eine Teilmenge einer Berechtigung, die Zugriff auf "c:" darstellt\\. Wenn diese Methode zurückgibt `true`, das aktuelle Berechtigungsobjekt stellt keine umfassenderen Zugriff auf die geschützte Ressource als die angegebene Berechtigungsobjekt verweist.  
  
 Diese Methode gibt immer `false` Wenn wird das Objekt für die angegebene Berechtigung eines anderen Typs als die des aktuellen Berechtigungsobjekts.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wert, der angibt, ob die Berechtigung uneingeschränkt ist.</summary>
        <returns>
          <see langword="true" />Wenn die Berechtigung uneingeschränkt ist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Objekt uneingeschränkte Berechtigungen darstellt Zugriff auf allen Ressourcen, die durch die Berechtigung geschützten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public const string Local;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Local" />
      <MemberSignature Language="DocId" Value="F:System.Security.Permissions.ResourcePermissionBase.Local" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das Zeichen verwendet werden, um einen lokalen Verweis darzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieses Felds ist ".".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionAccessType">
      <MemberSignature Language="C#" Value="protected Type PermissionAccessType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PermissionAccessType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt einen Enumerationswert fest, der die Typen des Zugriffs werden kurz beschrieben, Sie die Ressource gewähren.</summary>
        <value>Ein Enumerationswert, der von abgeleitetes <see cref="T:System.Type" /> und beschreibt die Typen des Zugriffs, den Sie gewähren die Ressource zugewiesen sind.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Eigenschaftswert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der Eigenschaftswert ist kein Enumerationswert.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, müssen Sie diese Eigenschaft festlegen. Ein Beispiel für eine Implementierung dieser Klasse finden Sie unter <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. In <see cref="T:System.Diagnostics.PerformanceCounterPermission" />, <see cref="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" /> Eigenschaftensatz ist privat in den Typ des <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionAccess">
      <MemberSignature Language="C#" Value="protected void RemovePermissionAccess (System.Security.Permissions.ResourcePermissionBaseEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemovePermissionAccess(class System.Security.Permissions.ResourcePermissionBaseEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Security.Permissions.ResourcePermissionBaseEntry" />
      </Parameters>
      <Docs>
        <param name="entry">Das zu entfernende <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />-Element.</param>
        <summary>Entfernt einen Berechtigungseintrag aus der Berechtigung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der angegebene <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> ist gleich <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Anzahl der Elemente in der <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> Eigenschaft ist nicht gleich der Anzahl von Elementen in der <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> Eigenschaft.  
  
 - oder -   
  
 Die <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> befindet sich nicht in der Berechtigung.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagNames">
      <MemberSignature Language="C#" Value="protected string[] TagNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TagNames" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein Array von Zeichenfolgen, die die Ressource zu identifizieren, die Sie schützen möchten.</summary>
        <value>Ein Array von Zeichenfolgen, die die Ressource zu identifizieren, die Sie schützen möchten.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Eigenschaftswert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Länge des Arrays ist 0.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Security.Permissions.ResourcePermissionBase" />, müssen Sie diese Eigenschaft festlegen. Ein Beispiel für eine Implementierung dieser Klasse finden Sie unter <see cref="T:System.Diagnostics.PerformanceCounterPermission" />. In <see cref="T:System.Diagnostics.PerformanceCounterPermission" />die <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> Eigenschaft privat auf "Computer" und "Category" festgelegt ist.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt und gibt eine XML-Codierung des Sicherheitsobjekts und ihres aktuellen Zustands.</summary>
        <returns>Eine XML-Codierung des Sicherheitsobjekts, einschließlich aller Zustandsinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Ein Berechtigungsobjekt, mit das aktuelle Berechtigungsobjekt zu kombinieren. Sie müssen den gleichen Typ wie das aktuelle Berechtigungsobjekt aufweisen.</param>
        <summary>Erstellt ein Berechtigungsobjekt, das das aktuelle Berechtigungsobjekt und das Zielobjekt der Berechtigung kombiniert.</summary>
        <returns>Ein neues Berechtigungsobjekt, das die Kombination des aktuellen Berechtigungsobjekts und das Objekt der angegebenen Berechtigung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ergebnis eines Aufrufs von <xref:System.Security.Permissions.ResourcePermissionBase.Union%2A> ist eine Berechtigung, alle Vorgänge, die durch das aktuelle Berechtigungsobjekt und das Objekt für die angegebene Berechtigung dargestellten darstellt. Jede Anforderung, entweder Berechtigung durchläuft, übergibt die Union.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="target" /> Permission-Objekt weist nicht denselben Typ wie das aktuelle Berechtigungsobjekt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
