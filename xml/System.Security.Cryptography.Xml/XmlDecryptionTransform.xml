<Type Name="XmlDecryptionTransform" FullName="System.Security.Cryptography.Xml.XmlDecryptionTransform">
  <TypeSignature Language="C#" Value="public class XmlDecryptionTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDecryptionTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt die Reihenfolge der Operationen digitale Signatur von XML und XML-Verschlüsselung an, wenn beide im gleichen Dokument ausgeführt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> -Klasse enthält eine Transformation, der bestimmt die Reihenfolge der Operationen digitale Signatur von XML und XML-Verschlüsselung, wenn beide im gleichen Dokument ausgeführt werden.  
  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> -Klasse auf, wenn der XML-Verschlüsselung ausführen und eine digitale Signatur auf das gleiche XML-Dokument angewendet werden müssen.  
  
 Müssen Sie übergeben ein <xref:System.Security.Cryptography.Xml.EncryptedXml> -Objekt an die <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> -Eigenschaft, die notwendige Schlüsselinformationen zum Entschlüsseln des Dokuments enthält.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDecryptionTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExceptUri">
      <MemberSignature Language="C#" Value="public void AddExceptUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExceptUri(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Ein Uniform Resource Identifier (URI) zum Ausschließen der Verarbeitung</param>
        <summary>Fügt einen Uniform Resource Identifier (URI) zum Ausschließen der Verarbeitung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="uri" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt ein <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> Objekt, das Informationen zu den Schlüsseln, die zum Entschlüsseln eines XML-Dokuments enthält.</summary>
        <value>Ein <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> Objekt, das Informationen zu den Schlüsseln, die zum Entschlüsseln eines XML-Dokuments enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Müssen Sie übergeben ein <xref:System.Security.Cryptography.Xml.EncryptedXml> -Objekt an die <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> -Eigenschaft, die notwendige Schlüsselinformationen zum Entschlüsseln des Dokuments enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine XML-Darstellung der Parameter ein <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> -Objekt, das als Unterelemente des XMLDSIG einzuschließenden geeignet sind <see langword="&lt;Transform&gt;" /> Element.</summary>
        <returns>Eine Liste der XML-Knoten, die den transformationsspezifischen Inhalt erforderlich, um die aktuelle beschreiben darstellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt in ein XMLDSIG <see langword="&lt;Transform&gt;" /> Element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Ein Entschlüsselungsschlüssel konnte nicht gefunden werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ der Ausgabe zurückgegeben. <see cref="T:System.Xml.XmlNodeList" />ist der einzige gültige Typ für diesen Parameter.</param>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="type" /> -Parameter ist ein <see cref="T:System.Xml.XmlNodeList" /> Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die gültige Eingaben sind die <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Eingabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt; Sie können nur Objekte von einem dieser Typen zum Übergeben der <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene Array die <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A> Eigenschaft muss mindestens ein Element enthalten, da jede <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> Objekt muss mindestens einen Typ als gültige Eingabe akzeptieren.  
  
 Ein <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> Objekt in der Regel eine oder mehrere der folgenden Typen als Eingabe akzeptiert: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, oder <xref:System.Xml.XmlNodeList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTargetElement">
      <MemberSignature Language="C#" Value="protected virtual bool IsTargetElement (System.Xml.XmlElement inputElement, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsTargetElement(class System.Xml.XmlElement inputElement, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">Ein <see cref="T:System.Xml.XmlElement" /> Objekt mit einem ID-Attribut für den Vergleich mit <c>IdValue</c>.</param>
        <param name="idValue">Der Wert für den Vergleich mit der ID-Attribut des <c>InputElement</c>.</param>
        <summary>Bestimmt, ob die ID-Attribut des ein <see cref="T:System.Xml.XmlElement" /> -Objekt mit einen angegebenen Wert übereinstimmt.</summary>
        <returns>
          <see langword="true" />Wenn das ID-Attribut von der <paramref name="inputElement" /> Parameter entspricht der <paramref name="idValue" /> Parameter ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Ein <see cref="T:System.Xml.XmlNodeList" /> -Objekt, das transformationsspezifischen Inhalt für den aktuellen gibt <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</param>
        <summary>Analysiert die angegebene <see cref="T:System.Xml.XmlNodeList" /> Objekt als transformationsspezifischen Inhalt von einem <see langword="&lt;Transform&gt;" /> Element und konfiguriert den internen Zustand des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> -Objekts auf die <see langword="&lt;Transform&gt;" /> Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird zum Verarbeiten von Unterelementen verwendet eine `<Transform>` Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="nodeList" />-Parameter ist <see langword="null" />.  
  
 - oder -   
  
 Der Uniform Resource Identifier (URI)-Wert, der eine <see cref="T:System.Xml.XmlNode" /> -Objekt in <paramref name="nodeList" /> wurde nicht gefunden.  
  
 - oder -   
  
 Die Länge des URI-Wert, der eine <see cref="T:System.Xml.XmlNode" /> im-Objekt <paramref name="nodeList" /> ist 0.  
  
 - oder -   
  
 Das erste Zeichen des URI-Wert, der eine <see cref="T:System.Xml.XmlNode" /> im-Objekt <paramref name="nodeList" /> ist nicht '#'.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Die Eingabe für das Laden in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse lädt die angegebene Eingabe in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des Eingabeobjekts muss einer der Typen in der <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="obj" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die mögliche Ausgaben sind der <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Ausgabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt, und nur Objekte von einem der folgenden Typen werden zurückgegeben, aus der <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das zurückgegebene Array die <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes%2A> Eigenschaft muss mindestens ein Element enthalten, da jede Transformation mindestens einen Typ als Ausgabe generieren muss.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
