<Type Name="XmlDsigEnvelopedSignatureTransform" FullName="System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform">
  <TypeSignature Language="C#" Value="public class XmlDsigEnvelopedSignatureTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigEnvelopedSignatureTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Signaturtransformation für eine digitale Signatur dar, gemäß der W3C.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> -Klasse entfernt die `<Signature>` Element aus einem XML-Dokument, bevor der Hashwert berechnet wird. Mit dieser Transformation können Sie anmelden und überprüfen Sie alle Elemente eines XML-Dokuments mit Ausnahme der Elemente des XML-Signatur.  
  
 Obwohl Sie erstellen und eine Signatur in einem XML-Dokument einfügen können, fehl das geänderte Dokument mit der eingebetteten Signatur zu überprüfen, weil das Dokument nun weitere Elemente enthält.  Diese Transformation entfernt die `<Signature>` Element und ermöglicht Ihnen, das Dokument in seiner ursprünglichen Form zu überprüfen.  
  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> -Klasse auf, wenn Sie eine eingeschlossene Signatur erstellen.  
  
 Weitere Informationen zu den Signaturtransformation finden Sie in Abschnitt 6.6.4 der XMLDSIG-Spezifikation, die von der W3C unter www.w3.org/TR/xmldsig-core/ verfügbar ist.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im erste Beispiel wird veranschaulicht, wie eine XML-Datei mit einer eingeschlossenen Signatur signiert. Im zweiten Beispiel wird veranschaulicht, wie Member der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 **Beispiel #1**  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 **Beispiel #2**  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigEnvelopedSignatureTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Mitglieder der der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#2)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigEnvelopedSignatureTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <see langword="true" />Kommentare eingeschlossen werden sollen; andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> mit Kommentaren, Klasse, wenn angegeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.%23ctor%2A> Konstruktor mit einem <xref:System.Boolean> Wert `true` Kommentare eingeschlossen werden sollen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine XML-Darstellung der Parameter ein <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> -Objekt, das als Unterelemente des XMLDSIG einzuschließenden geeignet sind <see langword="&lt;Transform&gt;" /> Element.</summary>
        <returns>Eine Liste der XML-Knoten, die den transformationsspezifischen Inhalt erforderlich, um die aktuelle beschreiben darstellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt in ein XMLDSIG <see langword="&lt;Transform&gt;" /> Element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des zurückgegebenen Objekts muss <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput%2A>-Methode verwenden. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Das enthaltende XML-Dokument ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ der Ausgabe zurückgegeben. <see cref="T:System.Xml.XmlNodeList" />ist der einzige gültige Typ für diesen Parameter.</param>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt des Typs <see cref="T:System.Xml.XmlNodeList" />.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt des Typs <see cref="T:System.Xml.XmlNodeList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des zurückgegebenen Objekts muss <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput%2A> Methode zum Abrufen der Ausgabe des aktuellen <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Objekt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="type" /> -Parameter ist ein <see cref="T:System.Xml.XmlNodeList" /> Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die gültige Eingaben sind die <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Eingabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt; Sie können nur Objekte von einem dieser Typen zum Übergeben der <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die gültigen Eingabetypen für <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> sind <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, und <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A> Eigenschaft, um die gültigen Eingabetypen für die aktuelle Transformation abzurufen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Ein <see cref="T:System.Xml.XmlNodeList" /> zum Laden in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</param>
        <summary>Analysiert die angegebene <see cref="T:System.Xml.XmlNodeList" /> als transformationsspezifischen Inhalt von einem <see langword="&lt;Transform&gt;" /> Element und konfiguriert den internen Zustand des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> -Objekts auf die <see langword="&lt;Transform&gt;" /> Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da kein Inhalt transformationsspezifischen definiert wurde <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>, ein Aufruf dieser Methode ändert nicht den Status der Transformation.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml%2A> Methode unter Verwendung des angegebenen <xref:System.Xml.XmlNodeList> so konfigurieren Sie das aktuelle Objekt <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Objekt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#11)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Die Eingabe für das Laden in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</param>
        <summary>Lädt die angegebene Eingabe in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des Eingabeobjekts muss einer der Typen in der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput%2A> Methode unter Verwendung des angegebenen <xref:System.Xml.XmlDocument> Objekt als Eingabe. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#12)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#12)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="obj" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Das enthaltende XML-Dokument ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die mögliche Ausgaben sind der <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Ausgabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt, und nur Objekte von einem der folgenden Typen werden zurückgegeben, aus der <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die gültigen Ausgabetypen für <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> sind <xref:System.Xml.XmlNodeList> und <xref:System.Xml.XmlDocument>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes%2A> Eigenschaft, um die gültigen Typen für die aktuelle Transformation abgerufen werden. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> Klasse.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
