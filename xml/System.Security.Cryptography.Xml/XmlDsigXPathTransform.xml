<Type Name="XmlDsigXPathTransform" FullName="System.Security.Cryptography.Xml.XmlDsigXPathTransform">
  <TypeSignature Language="C#" Value="public class XmlDsigXPathTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigXPathTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die XPath-Transformation für eine digitale Signatur dar, gemäß der W3C.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Klasse ermöglicht es Ihnen, ein XML-Dokument mit der XPath-Sprache zu adressieren.  Diese Klasse verwendet einen XPath-Ausdruck, der XML-Knoten aus, die signiert oder verschlüsselt werden, während alle anderen aus einer kryptografischen Operation entfernt werden sollen.  
  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse, um bestimmte Teile eines XML-Dokuments mithilfe eines XPath-Ausdrucks signieren oder verschlüsseln.  Informationen zum Initialisieren der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Klasse auf den Wert einer XPath-Zeichenfolge, Transformation, finden Sie unter der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> Methode.  
  
 Der Uniform Resource Identifier (URI), die beschreibt die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse wird definiert, indem die <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> Feld.  
  
 Weitere Informationen über die XPath-Transformation finden Sie in Abschnitt 6.6.3 XMLDSIG-Spezifikation die W3C unter www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie zum Signieren und Überprüfen eines XML-Dokuments mithilfe der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse mit einer Signatur Umschlag.  In diesem Beispiel wird ein XML-Dokument signiert und speichert die Signatur in einem neuen XML-Dokument.  Das zweite Codebeispiel veranschaulicht das Aufrufen von Membern der der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 **Beispiel #1**  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 **Beispiel #2**  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXPathTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Signieren und Überprüfen eines XML-Dokuments mithilfe der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  Dieses Beispiel erstellt eine Signatur Umschlag.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetInnerXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine XML-Darstellung der Parameter für eine <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> -Objekt, das als Unterelemente des XMLDSIG einzuschließenden geeignet sind <see langword="&lt;Transform&gt;" /> Element.</summary>
        <returns>Eine Liste der XML-Knoten, die den transformationsspezifischen Inhalt erforderlich, um die aktuelle beschreiben darstellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt in ein XMLDSIG <see langword="&lt;Transform&gt;" /> Element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> Methode zum Abrufen einer <xref:System.Xml.XmlNodeList> Objekt, das eine XML-Darstellung einer XPath-Transformation enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des zurückgegebenen Objekts muss <xref:System.Xml.XmlNodeList>.  
  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> Methode zum Abrufen einer <xref:System.Xml.XmlNodeList> Objekt, das eine XML-Darstellung einer XPath-Transformation enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> Methode zum Abrufen der Ausgabe des aktuellen <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Objekt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ der Ausgabe zurückgegeben. <see cref="T:System.Xml.XmlNodeList" />ist der einzige gültige Typ für diesen Parameter.</param>
        <summary>Gibt die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt des Typs <see cref="T:System.Xml.XmlNodeList" />.</summary>
        <returns>Die Ausgabe des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt des Typs <see cref="T:System.Xml.XmlNodeList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des zurückgegebenen Objekts muss <xref:System.Xml.XmlNodeList>.  
  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> Methode zum Abrufen einer <xref:System.Xml.XmlNodeList> Objekt, das eine XML-Darstellung einer XPath-Transformation enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput%2A> Methode zum Abrufen der Ausgabe des aktuellen <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Objekt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="type" /> -Parameter ist ein <see cref="T:System.Xml.XmlNodeList" /> Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die gültige Eingaben sind die <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Eingabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt; Sie können nur Objekte von einem dieser Typen zum Übergeben der <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> Methode des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die gültigen Eingabetypen für <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> sind <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, und <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes%2A> Eigenschaft, um die gültigen Eingabetypen für die aktuelle Transformation abzurufen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Ein <see cref="T:System.Xml.XmlNodeList" /> zum Laden in das aktuelle Objekt <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</param>
        <summary>Analysiert die angegebene <see cref="T:System.Xml.XmlNodeList" /> Objekt als transformationsspezifischen Inhalt von einem <see langword="&lt;Transform&gt;" /> Element und konfiguriert den internen Zustand des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> -Objekts auf die <see langword="&lt;Transform&gt;" /> Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> Methode zum Initialisieren der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Klasse mit einer XPath-Transformation.  
  
 Zum Initialisieren der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Klasse mit einer XPath-Transformation, die folgenden Schritte ausführen.  
  
1.  Erstellen Sie ein neues <xref:System.Xml.XmlElement> Klasse, und legen die <xref:System.Xml.XmlElement.InnerText%2A> Eigenschaft, um den Wert der Zeichenfolge eine XPath-Transformation.  
  
2.  Rufen Sie die <xref:System.Xml.XmlNode.SelectNodes%2A> Methode zum Erstellen einer <xref:System.Xml.XmlNodeList> Objekt, das die Transformation darstellt.  
  
3.  Erstellen Sie eine neue Instanz der dem <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse, und übergeben Sie das zuvor erstellte <xref:System.Xml.XmlNodeList> -Objekt an die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Signieren und Überprüfen eines XML-Dokuments mithilfe der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  Dieses Beispiel erstellt eine Signatur Umschlag.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXPathTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXPathTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="nodeList" />-Parameter ist <see langword="null" />.  
  
 - oder -   
  
 Die <paramref name="nodeList" /> Parameter enthält kein <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Element.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Die Eingabe für das Laden in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</param>
        <summary>Lädt die angegebene Eingabe in das aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput%2A> Methode initialisiert werden, eine <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Objekts auf den Wert eines XPath-Transformation mithilfe einer <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, oder <xref:System.Xml.XmlNodeList> Objekt.  Informationen zum Initialisieren einer <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> -Objekt mithilfe einer XPath-Transformationszeichenfolge, finden Sie unter der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml%2A> Methode.  
  
 Der Typ des Eingabeobjekts muss einer der Typen in der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput%2A> Methode unter Verwendung des angegebenen <xref:System.Xml.XmlDocument> Objekt als Eingabe. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Typen, die mögliche Ausgaben sind der <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt.</summary>
        <value>Ein Array von gültigen Ausgabetypen für die aktuelle <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> Objekt; die <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> Methoden des aktuellen <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> -Objekt nur Objekte von einem dieser Typen zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNodeList>ist der einzige gültige Ausgabetyp für <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Aufrufen der <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes%2A> Eigenschaft, um die gültigen Typen für die aktuelle Transformation abgerufen werden. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> Klasse.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
