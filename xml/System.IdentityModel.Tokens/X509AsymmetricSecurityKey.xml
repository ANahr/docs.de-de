<Type Name="X509AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
  <TypeSignature Language="C#" Value="public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509AsymmetricSecurityKey extends System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.AsymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen asymmetrischen Schlüssel für X.509-Zertifikate dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Das <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, das das X.509-Zertifikat darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />-Klasse unter Verwendung des angegebenen X.509-Zertifikats.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus zum Entschlüsseln des Schlüssels.</param>
        <param name="keyData">Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</param>
        <summary>Entschlüsselt den angegebenen verschlüsselten Schlüssel mit dem angegebenen kryptografischen Algorithmus.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den entschlüsselten Schlüssel enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie das <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>-Feld oder <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>-Feld zum Angeben des Algorithmus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das im Konstruktor angegebene X.509-Zertifikat verfügt über keinen privaten Schlüssel.  
  
 - oder -   
  
 Das X.509-Zertifikat verfügt über einen privaten Schlüssel, aber es wurde nicht mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus generiert.  
  
 - oder -   
  
 Das X.509-Zertifikat verfügt über einen privaten Schlüssel, es wurde mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus generiert, die <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />-Eigenschaft ist jedoch <see langword="null" />.  
  
 - oder -   
  
 Der <paramref name="algorithm" />-Parameter wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> und <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus zum Verschlüsseln des Schlüssels.</param>
        <param name="keyData">Ein <see cref="T:System.Byte" />-Array, das den zu verschlüsselnden Schlüssel enthält.</param>
        <summary>Verschlüsselt den angegebenen verschlüsselten Schlüssel mit dem angegebenen kryptografischen Algorithmus.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, das den verschlüsselten Schlüssel enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie das <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>-Feld oder <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>-Feld zum Angeben des Algorithmus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das im Konstruktor angegebene X.509-Zertifikat verfügt über einen öffentlichen Schlüssel, der jedoch nicht mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus generiert wurde.  
  
 - oder -   
  
 Der <paramref name="algorithm" />-Parameter wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> und <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der zu erstellende asymmetrische Algorithmus.</param>
        <param name="privateKey">
          <see langword="true" />, wenn ein privater Schlüssel zum Erstellen des Algorithmus erforderlich ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft den angegebenen asymmetrischen kryptografischen Algorithmus ab.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />, der den angegebenen asymmetrischen kryptografischen Algorithmus darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> oder <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> zum Angeben des `algorithm`-Parameters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          Der <paramref name="privateKey" /> ist <see langword="true" />, und das im Konstruktor angegebene X.509-Zertifikat verfügt über keinen privaten Schlüssel.  
  
 - oder -   
  
 Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, und der öffentliche oder private Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.DSA" />.  
  
 - oder -   
  
 Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, und der öffentliche oder private Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.RSA" />.  
  
 - oder -   
  
 <paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der Hashalgorithmus.</param>
        <summary>Ruft einen kryptografischen Algorithmus ab, der einen Hash für eine digitale Signatur generiert.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.HashAlgorithm" />, der Hashs für digitale Signaturen generiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> oder <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> zum Angeben des `algorithm`-Parameters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der Deformatierungsalgorithmus für die digitale Signatur, von der eine Instanz abgerufen werden soll.</param>
        <summary>Ruft den Deformatierungsalgorithmus für die digitale Signatur ab.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, der den Deformatierungsalgorithmus für die digitale Signatur darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> oder <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> zum Angeben des `algorithm`-Parameters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, und der öffentliche Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.DSA" />.  
  
 - oder -   
  
 Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, und der öffentliche Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.RSA" />.  
  
 - oder -   
  
 <paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,  
  
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der Formatierungsalgorithmus für die digitale Signatur, von der eine Instanz abgerufen werden soll.</param>
        <summary>Ruft den Formatierungsalgorithmus für die digitale Signatur ab.</summary>
        <returns>Ein <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />, der den Formatierungsalgorithmus für die digitale Signatur darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Felder <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> oder <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> zum Angeben des `algorithm`-Parameters.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das im Konstruktor angegebene X.509-Zertifikat verfügt über keinen privaten Schlüssel.  
  
 - oder -   
  
 Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, und der private Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.DSA" />.  
  
 - oder -   
  
 Der <paramref name="algorithm" /> ist <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, und der private Schlüssel für das im Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <see cref="T:System.Security.Cryptography.RSA" />.  
  
 - oder -   
  
 <paramref name="algorithm" /> wird nicht unterstützt. Es werden die folgenden Algorithmen unterstützt: <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,  
  
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> und <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public override bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der private Schlüssel verfügbar ist.</summary>
        <returns>
          <see langword="true" />, wenn der private Schlüssel verfügbar ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus asymmetrische Schlüssel verwendet.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Algorithmus <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus von dieser Klasse unterstützt wird.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Algorithmus <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> ist und der öffentliche Schlüssel den richtigen Typ aufweist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A>-Methode gibt `true` zurück, wenn eines der folgenden Elemente den Wert "true" aufweist:  
  
-   Der `algorithm`-Parameter ist <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, und der öffentliche Schlüssel für das in diesem Konstruktor angegebene X.509-Zertifikat ist nicht vom Typ <xref:System.Security.Cryptography.DSA>.  
  
-   Der `algorithm`-Parameter ist <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> oder <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>, und der öffentliche Schlüssel für das in diesem Konstruktor angegebene X.509-Zertifikat ist vom Typ <xref:System.Security.Cryptography.RSA>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">Der kryptografische Algorithmus.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Algorithmus symmetrische Schlüssel verwendet.</summary>
        <returns>
          <see langword="true" />, wenn der angegebenen Algorithmus <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /> oder <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des öffentlichen Schlüssels (in Bits) ab, der dem X.509-Zertifikat zugeordnet ist.</summary>
        <value>Die Größe des öffentlichen Schlüssels (in Bits), der dem X.509-Zertifikat zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
