<Type Name="BinaryKeyIdentifierClause" FullName="System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
  <TypeSignature Language="C#" Value="public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinaryKeyIdentifierClause extends System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse für Schlüsselbezeichnerklauseln dar, die auf Binärdaten basieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel ist es nicht erforderlich, die <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> zu verwenden, es sei denn, es wird ein benutzerdefinierter Sicherheitstokendienst erstellt. Wenn ein Sicherheitstokendienst ein Sicherheitstoken zurückgibt, enthält das ausgegebene Sicherheitstoken Verweise auf angefügte und nicht angefügte Sicherheitstoken. Angefügte Verweise beziehen sich auf Sicherheitstoken, die im Sicherheitsheader einer SOAP-Nachricht enthalten sind, während sich nicht angefügte Verweise auf Sicherheitstoken beziehen, die nicht im Sicherheitsheader der SOAP-Nachricht enthalten sind. Diese Verweise bestätigen in der Regel die Echtheit des ausgegebenen Sicherheitstokens.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clauseType">Der Typ der Schlüsselbezeichnerklausel. Legt den Wert der <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />-Eigenschaft fest.</param>
        <param name="identificationData">Ein <see cref="T:System.Byte" />-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</param>
        <param name="cloneBuffer">
          <see langword="true" />die übergebenen Array zu Klonen der <c>IdentificationData</c> Parameter ist, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />-Klasse unter Verwendung des angegebenen Schlüsselklauseltyps und eines Werts, der angibt, ob die Binärdaten geklont werden müssen.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identificationData" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="identificationData" /> hat die Länge 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] identificationData, bool cloneBuffer, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
        <Parameter Name="identificationData" Type="System.Byte[]" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" />
        <Parameter Name="derivationLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clauseType">Der Typ der Schlüsselbezeichnerklausel. Legt den Wert der <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />-Eigenschaft fest.</param>
        <param name="identificationData">Ein <see cref="T:System.Byte" />-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen. Legt die Binärdaten fest, die von der <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />-Methode zurückgegeben werden.</param>
        <param name="cloneBuffer">
          <see langword="true" />die übergebenen Array zu Klonen der <c>IdentificationData</c> Parameter ist, andernfalls <see langword="false" />.</param>
        <param name="derivationNonce">Ein <see cref="T:System.Byte" />-Array, das die Nonce enthält, die zur Erstellung eines abgeleiteten Schlüssels verwendet wurde. Legt den Wert fest, der von der <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />-Methode zurückgegeben wird.</param>
        <param name="derivationLength">Die Größe des abgeleiteten Schlüssels. Legt den Wert der <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />-Eigenschaft fest.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />-Klasse unter Verwendung des angegebenen Schlüsselklauseltyps, der Binärdaten, eines Werts, der angibt, ob die Binärdaten geklont werden müssen, einer Nonce und der Schlüssellänge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `derivationNonce` und die `derivationLength`-Parameter angegeben werden, wird der implizierte abgeleitete Schlüssel verwendet, anstatt den direkten Sicherheitsschlüssel des Tokens zu verwenden.  
  
 Unabhängig vom Wert, der an den `cloneBuffer`-Parameter übergeben wird, gibt die <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>-Methode immer einen Klon des Arrays zurück, der an den `identificationData`-Parameter übergeben wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identificationData" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="identificationData" /> hat die Länge 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBuffer">
      <MemberSignature Language="C#" Value="public byte[] GetBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Binärdaten ab, die den Schlüsselbezeichner darstellen.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unabhängig vom Wert, der an den `cloneBuffer`-Parameter des Konstruktors übergeben wird, gibt die <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>-Methode immer einen Klon des Arrays zurück, der an den `identificationData`-Parameter des Konstruktors übergeben wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawBuffer">
      <MemberSignature Language="C#" Value="protected byte[] GetRawBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetRawBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Binärdaten ab, die den Schlüsselbezeichner darstellen.</summary>
        <returns>Ein <see cref="T:System.Byte" />-Array, der die Binärdaten enthält, die den Schlüsselbezeichner darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Array, der durch die <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A>-Methode zurückgegeben wurde, ist ein Klon des `identificationData`-Parameters des Konstruktors, wenn der an den `cloneBuffer` übergebene Wert `true` ist, ansonsten ist der Array identisch.  
  
 Die <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>-Methode gibt immer einen Klon des Arrays zurück, der an den `identificationData`-Parameter des Konstruktors übergeben wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Byte" />-Array, mit dem verglichen werden soll.</param>
        <summary>Gibt einen Wert zurück, der anzeigt, ob die Binärdaten der aktuellen Instanz mit den angegebenen Binärdaten übereinstimmen.</summary>
        <returns>
          <see langword="true" />Wenn <paramref name="data" /> entspricht die zurückgegebene Binärdaten der <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> Methode ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="clause">To be added.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der Schlüsselbezeichner für diese Instanz mit der angegebenen Schlüsselbezeichnerklausel übereinstimmt.</summary>
        <returns>
          <see langword="true" />, falls die <paramref name="clause" /> vom Typ <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> ist und die von der <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />-Methode zurückgegebenen Binärdaten mit dem <paramref name="clause" />-Parameter und der aktuellen Instanz übereinstimmen, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] data, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] data, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Byte" />-Array, mit dem verglichen werden soll.</param>
        <param name="offset">Der Index im Array, ab dem der Vergleich gestartet wird.</param>
        <summary>Gibt einen Wert zurück, der anzeigt, ob die Binärdaten der aktuellen Instanz mit den angegebenen Binärdaten am angegebenen Offset übereinstimmen.</summary>
        <returns>
          <see langword="true" />Wenn die Binärdaten in der <paramref name="data" /> Parameters, beginnend mit den im angegebenen Index der <paramref name="offset" /> Parameter entspricht der zurückgegebene Binärdaten der <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> Methode (beginnend bei Index 0 (null);), andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
