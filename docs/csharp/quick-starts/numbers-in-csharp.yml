### YamlMime:YamlDocument
documentType: Tutorial
title: '<span data-ttu-id="deb2d-101">Zahlen in c#</span><span class="sxs-lookup"><span data-stu-id="deb2d-101">Numbers in C#</span></span>'
metadata:
  title: '<span data-ttu-id="deb2d-102">Zahlen in c#</span><span class="sxs-lookup"><span data-stu-id="deb2d-102">Numbers in C#</span></span>'
  description: '<span data-ttu-id="deb2d-103">In diesem Lernprogramm zu numerischen Typen verwenden Sie Ihren Browser um C#-interaktiv zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="deb2d-103">In this tutorial about numeric types, you''ll use your browser to learn C# interactively.</span></span> <span data-ttu-id="deb2d-104">Sie sind im Begriff C#-Code schreiben und die Ergebnisse der kompilieren und Ausführen von Code direkt im Browser angezeigt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-104">You''re going to write C# code and see the results of compiling and running your code directly in the browser.</span></span>'
  audience: Developer
  level: Beginner
  nextTutorialHref: branches-and-loops
  nextTutorialTitle: 'Branches and loops in C#'
  displayType: two-column
  interactive: csharp
items:
  - durationInMinutes: 1
    content: |
      <span data-ttu-id="deb2d-105">Diesem Lernprogramm erfahren Sie über die Number-Typen in c# interaktiv mithilfe Ihres Browsers zum Schreiben von C#- und die Ergebnisse der Kompilierung und Ausführung des Codes angezeigt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-105">This tutorial teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="deb2d-106">Es enthält eine Reihe von Lektionen, in denen Zahlen und mathematische Operationen in c# zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-106">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="deb2d-107">In diesen Lektionen erfahren Sie die Grundlagen der Programmiersprache c#.</span><span class="sxs-lookup"><span data-stu-id="deb2d-107">These lessons teach you the fundamentals of the C# language.</span></span>
  - title: <span data-ttu-id="deb2d-108">Ganze Zahl mathematische Funktionen durchsuchen</span><span class="sxs-lookup"><span data-stu-id="deb2d-108">Explore integer math</span></span>
    durationInMinutes: 4
    content: |
      <span data-ttu-id="deb2d-109">Führen Sie den folgenden Code in das interactive-Fenster.</span><span class="sxs-lookup"><span data-stu-id="deb2d-109">Run the following code in the interactive window.</span></span> <span data-ttu-id="deb2d-110">Zu diesem Zweck geben Sie den folgenden Codeblock in das interactive-Fenster, und klicken Sie auf die **ausführen** Schaltfläche:</span><span class="sxs-lookup"><span data-stu-id="deb2d-110">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>

      ```csharp
      int a = 18;
      int b = 6;
      int c = a + b;
      Console.WriteLine(c);
      ```

      <span data-ttu-id="deb2d-111">Sie haben soeben eine der grundlegende mathematische Operationen mit ganzen Zahlen gesehen werden.</span><span class="sxs-lookup"><span data-stu-id="deb2d-111">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id="deb2d-112">Die `int` geben stellt eine **Ganzzahl**, eine positive oder negative ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="deb2d-112">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id="deb2d-113">Sie verwenden die `+` Symbol zum Hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-113">You use the `+` symbol for addition.</span></span> <span data-ttu-id="deb2d-114">Andere geläufigen mathematischen Operationen für ganze Zahlen enthalten:</span><span class="sxs-lookup"><span data-stu-id="deb2d-114">Other common mathematical operations for integers include:</span></span>

      - <span data-ttu-id="deb2d-115">`-`für die Subtraktion</span><span class="sxs-lookup"><span data-stu-id="deb2d-115">`-` for subtraction</span></span>
      - <span data-ttu-id="deb2d-116">`*`für Multiplikation</span><span class="sxs-lookup"><span data-stu-id="deb2d-116">`*` for multiplication</span></span>
      - <span data-ttu-id="deb2d-117">`/`für die division</span><span class="sxs-lookup"><span data-stu-id="deb2d-117">`/` for division</span></span>

      > [!TIP]
      > <span data-ttu-id="deb2d-118">In diesem Lernprogramm können Sie selbst untersuchen, durch Ändern des Codes, den Sie im interactive-Fenster geschrieben haben.</span><span class="sxs-lookup"><span data-stu-id="deb2d-118">Throughout this tutorial, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id="deb2d-119">Dieses Lernprogramm enthält Beispiele, die Sie bei jedem Schritt ausprobieren können.</span><span class="sxs-lookup"><span data-stu-id="deb2d-119">This tutorial provides examples that you can try at each step.</span></span>

      <span data-ttu-id="deb2d-120">Starten Sie von anderen Vorgängen zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-120">Start by exploring those different operations.</span></span> <span data-ttu-id="deb2d-121">Ändern Sie die dritte Zeile, um diese Vorgänge zu versuchen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-121">Modify the third line to try each of these operations.</span></span> <span data-ttu-id="deb2d-122">Klicken Sie nach jeder Änderung auf die **ausführen** Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="deb2d-122">After each edit, click the **Run** button.</span></span>

      <span data-ttu-id="deb2d-123">Subtraktion:</span><span class="sxs-lookup"><span data-stu-id="deb2d-123">Subtraction:</span></span>

      ```csharp
      int c = a - b;
      ```

      <span data-ttu-id="deb2d-124">Multiplikation:</span><span class="sxs-lookup"><span data-stu-id="deb2d-124">Multiplication:</span></span>

      ```csharp
      int c = a * b;
      ```

      <span data-ttu-id="deb2d-125">Division:</span><span class="sxs-lookup"><span data-stu-id="deb2d-125">Division:</span></span> 

      ```csharp
      int c = a / b;
      ```

      <span data-ttu-id="deb2d-126">Sie können auch experimentieren, indem Sie mehrere mathematische Vorgänge in der gleichen Zeile ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="deb2d-126">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>

      > [!TIP]
      > <span data-ttu-id="deb2d-127">Wie Sie c# (oder einer beliebigen Programmiersprache) durchsuchen, müssen Sie Supportcenter beim Schreiben von Code.</span><span class="sxs-lookup"><span data-stu-id="deb2d-127">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id="deb2d-128">Die **Compiler** findet diese Fehler und melden Sie diese für Sie.</span><span class="sxs-lookup"><span data-stu-id="deb2d-128">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id="deb2d-129">Wenn die Ausgabe Fehlermeldungen enthält, sehen Sie sich den Beispielcode, und den Code in das interactive-Fenster zu sehen, zu beheben.</span><span class="sxs-lookup"><span data-stu-id="deb2d-129">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>
      > <span data-ttu-id="deb2d-130">Diese Übung hilft die Struktur der C#-Code vertraut zu machen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-130">That exercise will help you learn the structure of C# code.</span></span>     

      > [!NOTE]
      > <span data-ttu-id="deb2d-131">Diese Codierung online-Umgebung ist im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="deb2d-131">This online coding experience is in preview mode.</span></span> <span data-ttu-id="deb2d-132">Wenn Probleme auftreten, Bitte melden Sie diese [auf das Repository Dotnet/Try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="deb2d-132">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="deb2d-133">Untersuchen Sie die Reihenfolge der Vorgänge</span><span class="sxs-lookup"><span data-stu-id="deb2d-133">Explore order of operations</span></span>
    durationInMinutes: 7
    content: |
      <span data-ttu-id="deb2d-134">Die C#-Sprache definiert die Rangfolge der verschiedenen mathematische Vorgänge mit Regeln konsistent mit den Regeln in der Mathematik haben Sie gelernt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-134">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>
      <span data-ttu-id="deb2d-135">Multiplikation und Division haben Vorrang vor Addition und Subtraktion.</span><span class="sxs-lookup"><span data-stu-id="deb2d-135">Multiplication and division take precedence over addition and subtraction.</span></span>
      <span data-ttu-id="deb2d-136">Prüfen Sie, indem Sie den folgenden Code im interactive-Fenster ausführen:</span><span class="sxs-lookup"><span data-stu-id="deb2d-136">Explore that by running the following code in the interactive window:</span></span>

      ```csharp
      int a = 5;
      int b = 4;
      int c = 2;
      int d = a + b * c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="deb2d-137">Die Ausgabe zeigt, dass vor dem Hinzufügen die Multiplikation ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="deb2d-137">The output demonstrates that the multiplication is performed before the addition.</span></span>

      <span data-ttu-id="deb2d-138">Sie können eine andere Reihenfolge des Vorgangs erzwingen, durch Hinzufügen von Klammern um den Vorgang, oder Vorgänge, die gewünschten zuerst ausgeführt:</span><span class="sxs-lookup"><span data-stu-id="deb2d-138">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>

      ```csharp
      int a = 5;
      int b = 4;
      int c = 2;
      int d = (a  + b) * c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="deb2d-139">Mehr untersuchen Sie, indem Sie viele verschiedene Vorgänge zu kombinieren.</span><span class="sxs-lookup"><span data-stu-id="deb2d-139">Explore more by combining many different operations.</span></span> <span data-ttu-id="deb2d-140">Ersetzen Sie in der vierten Zeile oben mit etwa so aussehen:</span><span class="sxs-lookup"><span data-stu-id="deb2d-140">Replace the fourth line above with something like this:</span></span>

      ```csharp
      int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;
      ```

      <span data-ttu-id="deb2d-141">Sie haben möglicherweise eine interessante Verhalten für ganze Zahlen festgestellt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-141">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id="deb2d-142">Ganzzahldivision immer erzeugt ein Ganzzahlergebnis, selbst wenn im mathematische Ergebnis ein Teils Dezimalstellen oder Bruch enthalten würde.</span><span class="sxs-lookup"><span data-stu-id="deb2d-142">Integer division always produces an integer result, even when the mathematical result would include a decimal or fraction portion.</span></span>

      <span data-ttu-id="deb2d-143">Wenn Sie dieses Verhalten gesehen haben, versuchen Sie Folgendes:</span><span class="sxs-lookup"><span data-stu-id="deb2d-143">If you haven't seen this behavior, try the following:</span></span>

      ```csharp
      int a = 7;
      int b = 4;
      int c = 3;
      int d = (a  + b) / c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="deb2d-144">Klicken Sie auf **führen** erneut aus, um die Ergebnisse anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-144">Click **Run** again to see the results.</span></span>

      > [!NOTE]
      > <span data-ttu-id="deb2d-145">Diese Codierung online-Umgebung ist im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="deb2d-145">This online coding experience is in preview mode.</span></span> <span data-ttu-id="deb2d-146">Wenn Probleme auftreten, Bitte melden Sie diese [auf das Repository Dotnet/Try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="deb2d-146">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="deb2d-147">Ganze Zahl mit einfacher Genauigkeit und Grenzwerte durchsuchen</span><span class="sxs-lookup"><span data-stu-id="deb2d-147">Explore integer precision and limits</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="deb2d-148">Letzte Beispiel wurde gezeigt, dass Ganzzahldivision schneidet das Ergebnis ab.</span><span class="sxs-lookup"><span data-stu-id="deb2d-148">That last sample showed you that integer division truncates the result.</span></span>
      <span data-ttu-id="deb2d-149">Erhalten Sie die **Rest** mithilfe der **modulo** -Operator, der `%` Zeichen:</span><span class="sxs-lookup"><span data-stu-id="deb2d-149">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>

      ```csharp
      int a = 7;
      int b = 4;
      int c = 3;
      int d = (a  + b) / c;
      int e = (a + b) % c;
      Console.WriteLine("quotient: " + d);
      Console.WriteLine("remainder: " + e);
      ```

      <span data-ttu-id="deb2d-150">Der ganzzahlige Typ in c# unterscheidet sich von mathematischen Ganzzahlen in einem anderen Punkt: die `int` Typ hat den minimalen und maximalen Grenzwerte.</span><span class="sxs-lookup"><span data-stu-id="deb2d-150">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id="deb2d-151">Führen Sie diesen Code in das interactive-Fenster zu diesen Limits finden Sie unter:</span><span class="sxs-lookup"><span data-stu-id="deb2d-151">Run this code in the interactive window to see those limits:</span></span>

      ```csharp
      int max = int.MaxValue;
      int min = int.MinValue;
      Console.WriteLine("The range of integers is " + min + " to " + max);
      ```

      <span data-ttu-id="deb2d-152">Wenn Sie eine Berechnung einen Wert erzeugt, die diese Grenzen überschreitet, haben Sie ein **Unterlauf** oder **Überlauf** Bedingung.</span><span class="sxs-lookup"><span data-stu-id="deb2d-152">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id="deb2d-153">Die Antwort wird angezeigt, um eine Begrenzung in den anderen zu umschließen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-153">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id="deb2d-154">Fügen Sie diese zwei Zeilen für das interaktive Fenster, ein Beispiel finden Sie unter:</span><span class="sxs-lookup"><span data-stu-id="deb2d-154">Add these two lines to the interactive window to see an example:</span></span>

      ```csharp
      int what = max + 3;
      Console.WriteLine("An example of overflow: " + what);
      ```

      <span data-ttu-id="deb2d-155">Beachten Sie, dass die Antwort sehr nahe die minimale (negativ) ganze Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="deb2d-155">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id="deb2d-156">Es entspricht dem `min + 2`.</span><span class="sxs-lookup"><span data-stu-id="deb2d-156">It's the same as `min + 2`.</span></span> <span data-ttu-id="deb2d-157">Die Additionsoperation **führte zum Überlauf** den zulässigen Werten für ganze Zahlen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-157">The addition operation **overflowed** the allowed values for integers.</span></span>
      <span data-ttu-id="deb2d-158">Die Antwort ist eine sehr hohe negative Zahl, da der Überlauf "aus der größte mögliche ganzzahlige Wert, der die kleinste umfließt".</span><span class="sxs-lookup"><span data-stu-id="deb2d-158">The answer is a very large negative number because an overflow "wraps around" from the largest possible integer value to the smallest.</span></span>

      <span data-ttu-id="deb2d-159">Es gibt andere numerischen Typen mit verschiedene Grenzwerte und Genauigkeit, die Sie verwenden würden, wenn die `int` Typ nicht Ihren Anforderungen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-159">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id="deb2d-160">Betrachten Sie diese weiter an.</span><span class="sxs-lookup"><span data-stu-id="deb2d-160">Let's explore those next.</span></span>

      > [!NOTE]
      > <span data-ttu-id="deb2d-161">Diese Codierung online-Umgebung ist im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="deb2d-161">This online coding experience is in preview mode.</span></span> <span data-ttu-id="deb2d-162">Wenn Probleme auftreten, Bitte melden Sie diese [auf das Repository Dotnet/Try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="deb2d-162">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="deb2d-163">Arbeiten Sie mit Typ "double"</span><span class="sxs-lookup"><span data-stu-id="deb2d-163">Work with the double type</span></span>
    durationInMinutes: 5
    content: |
      <span data-ttu-id="deb2d-164">Die `double` numerischer Typ stellt eine Gleitkommazahl mit doppelter Genauigkeit dar.</span><span class="sxs-lookup"><span data-stu-id="deb2d-164">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id="deb2d-165">Diese Wörter möglicherweise neu für Sie.</span><span class="sxs-lookup"><span data-stu-id="deb2d-165">Those terms may be new to you.</span></span> <span data-ttu-id="deb2d-166">Ein **Gleitkomma** Anzahl eignet sich nicht ganzzahligen Ziffern dargestellt, die möglicherweise sehr große oder kleine Wert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-166">A **floating point** number is useful to represent non-integral numbers that may be very large, or small in magnitude.</span></span> <span data-ttu-id="deb2d-167">**Mit doppelter Genauigkeit** bedeutet, dass diese Zahlen gespeichert werden mit größerer Genauigkeit als **mit einfacher Genauigkeit**.</span><span class="sxs-lookup"><span data-stu-id="deb2d-167">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id="deb2d-168">In modernen Computers ist es eher üblich, dass doppelten Genauigkeit als Zahlen mit einfacher Genauigkeit verwenden.</span><span class="sxs-lookup"><span data-stu-id="deb2d-168">On modern computers, it is more common to use double precision than single precision numbers.</span></span>
      <span data-ttu-id="deb2d-169">Lassen Sie uns.</span><span class="sxs-lookup"><span data-stu-id="deb2d-169">Let's explore.</span></span> <span data-ttu-id="deb2d-170">Wiederholen Sie den folgenden Code in das interactive-Fenster, und anzuzeigen Sie das Ergebnis:</span><span class="sxs-lookup"><span data-stu-id="deb2d-170">Try the following code in the interactive window and see the result:</span></span>

      ```csharp
      double a = 5;
      double b = 4;
      double c = 2;
      double d = (a  + b) / c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="deb2d-171">Beachten Sie, dass die Antwort die Nachkommastellen des Quotienten enthält.</span><span class="sxs-lookup"><span data-stu-id="deb2d-171">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id="deb2d-172">Versuchen Sie einen etwas komplizierteren Ausdruck mit Double-Werte aus:</span><span class="sxs-lookup"><span data-stu-id="deb2d-172">Try a slightly more complicated expression with doubles:</span></span>

      ```csharp
      double a = 19;
      double b = 23;
      double c = 8;
      double d = (a  + b) / c;
      Console.WriteLine(d);
      ```

      <span data-ttu-id="deb2d-173">Der Wertebereich einen double-Wert ist weitaus größer als ganzzahlige Werte.</span><span class="sxs-lookup"><span data-stu-id="deb2d-173">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id="deb2d-174">Wiederholen Sie den folgenden Code in das interactive-Fenster aus:</span><span class="sxs-lookup"><span data-stu-id="deb2d-174">Try the following code in the interactive window:</span></span>

      ```csharp
      double max = double.MaxValue;
      double min = double.MinValue;
      Console.WriteLine("The range of double is " + min + " to " + max);
      ```

      <span data-ttu-id="deb2d-175">Diese Werte werden zur Darstellung der wissenschaftlichen Schreibweise ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="deb2d-175">These values are printed out to represent scientific notation.</span></span> <span data-ttu-id="deb2d-176">Die Zahl links neben der `E` der spielt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-176">The number to the left of the `E` is the significant.</span></span> <span data-ttu-id="deb2d-177">Die Zahl rechts ist der Exponent, als eine Potenz von 10.</span><span class="sxs-lookup"><span data-stu-id="deb2d-177">The number to the right is the exponent, as a power of 10.</span></span> <span data-ttu-id="deb2d-178">Diese Nummern werden intern auf ähnliche Weise aber in einer binären Form dargestellt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-178">Internally, these numbers are represented similarly, but in a binary form.</span></span> <span data-ttu-id="deb2d-179">Ein Teil stellt bedeutende Binärzahlen dar.</span><span class="sxs-lookup"><span data-stu-id="deb2d-179">One part represents the significant binary digits.</span></span>
      <span data-ttu-id="deb2d-180">Ein anderer Teil stellt binäre Punkt relativ zu diesen signifikante Ziffern (analog zu einem Dezimaltrennzeichen) platzieren.</span><span class="sxs-lookup"><span data-stu-id="deb2d-180">Another part represents where to place the binary point (analogous to a decimal point) relative to those significant digits.</span></span>

      <span data-ttu-id="deb2d-181">Genau wie Dezimalzahlen im Mathematik kann die Double-Werte in c# Rundungsfehler verfügen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-181">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id="deb2d-182">Versuchen Sie diesen Code aus:</span><span class="sxs-lookup"><span data-stu-id="deb2d-182">Try this code:</span></span>

      ```csharp
      double third = 1.0 / 3.0;
      Console.WriteLine(third);
      ```

      <span data-ttu-id="deb2d-183">Sie kennen, `0.3` wiederholte ist nicht genau identisch mit `1/3`.</span><span class="sxs-lookup"><span data-stu-id="deb2d-183">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>

      <span data-ttu-id="deb2d-184">***Herausforderung***</span><span class="sxs-lookup"><span data-stu-id="deb2d-184">***Challenge***</span></span>

      <span data-ttu-id="deb2d-185">Wiederholen Sie den anderen Berechnungen mit großen Zahlen, kleine Zahlen, Multiplikation und Division mit dem `double` Typ.</span><span class="sxs-lookup"><span data-stu-id="deb2d-185">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id="deb2d-186">Versuchen Sie es etwas kompliziertere Berechnungen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-186">Try more complicated calculations.</span></span>

      > [!NOTE]
      > <span data-ttu-id="deb2d-187">Diese Codierung online-Umgebung ist im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="deb2d-187">This online coding experience is in preview mode.</span></span> <span data-ttu-id="deb2d-188">Wenn Probleme auftreten, Bitte melden Sie diese [auf das Repository Dotnet/Try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="deb2d-188">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="deb2d-189">Arbeiten Sie mit festen Verbindungspunkttypen</span><span class="sxs-lookup"><span data-stu-id="deb2d-189">Work with fixed point types</span></span>
    durationInMinutes: 8
    content: |
      <span data-ttu-id="deb2d-190">Sie haben gesehen, dass die grundlegenden numerischen Typen in c#: ganze Zahlen und Double-Werte.</span><span class="sxs-lookup"><span data-stu-id="deb2d-190">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id="deb2d-191">Es gibt einen weiteren Typ, um zu erfahren: die `decimal` Typ.</span><span class="sxs-lookup"><span data-stu-id="deb2d-191">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id="deb2d-192">Die `decimal` Typ hat einen kleineren Bereich, aber größere Genauigkeit als `double`.</span><span class="sxs-lookup"><span data-stu-id="deb2d-192">The `decimal` type has a smaller range, but greater precision than `double`.</span></span> <span data-ttu-id="deb2d-193">Der Begriff **fester Punkt** Mittel, mit dessen Hilfe die Dezimaltrennzeichen (oder binäre Punkt) nicht.</span><span class="sxs-lookup"><span data-stu-id="deb2d-193">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id="deb2d-194">Sehen wir uns:</span><span class="sxs-lookup"><span data-stu-id="deb2d-194">Let's take a look:</span></span>

      ```csharp
      decimal min = decimal.MinValue;
      decimal max = decimal.MaxValue;
      Console.WriteLine("The range of the decimal type is " + min + " to " + max);
      ```

      <span data-ttu-id="deb2d-195">Beachten Sie, dass der Bereich liegt zwischen kleiner als die `double` Typ.</span><span class="sxs-lookup"><span data-stu-id="deb2d-195">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id="deb2d-196">Sie können die höhere Genauigkeit mit dem decimal-Datentyp anzeigen, indem Sie versuchen, den folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="deb2d-196">You can see the greater precision with the decimal type by trying the following code:</span></span>

      ```csharp
      double a = 1.0;
      double b = 3.0;
      Console.WriteLine(a / b);

      decimal c = 1.0M;
      decimal d = 3.0M;
      Console.WriteLine(c / d);
      ```

      <span data-ttu-id="deb2d-197">Die `M` Suffix für die Zahlen ist, wie Sie angeben, dass eine Konstante verwendet werden soll die `decimal` Typ.</span><span class="sxs-lookup"><span data-stu-id="deb2d-197">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>

      <span data-ttu-id="deb2d-198">Beachten Sie, dass die Dezimaltyps mit mathematischen rechts vom Dezimaltrennzeichen mehr Ziffern verfügt.</span><span class="sxs-lookup"><span data-stu-id="deb2d-198">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> 

      <span data-ttu-id="deb2d-199">***Herausforderung***</span><span class="sxs-lookup"><span data-stu-id="deb2d-199">***Challenge***</span></span>

      <span data-ttu-id="deb2d-200">Nun, dass Sie die verschiedenen numerischen Typen gesehen haben, Schreiben Sie Code, der die Fläche eines Kreises wird berechnet, deren Radius 2,50 Zoll ist.</span><span class="sxs-lookup"><span data-stu-id="deb2d-200">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 inches.</span></span> <span data-ttu-id="deb2d-201">Denken Sie daran, dass die Fläche eines Kreises Quadrat ist PI multipliziert.</span><span class="sxs-lookup"><span data-stu-id="deb2d-201">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id="deb2d-202">Einen Hinweis: c# enthält eine Konstante PI: `Math.PI` , die Sie für diesen Wert verwenden können.</span><span class="sxs-lookup"><span data-stu-id="deb2d-202">One hint: C# contains a constant for PI: `Math.PI` that you can use for that value.</span></span> 

      > [!NOTE]
      > <span data-ttu-id="deb2d-203">Diese Codierung online-Umgebung ist im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="deb2d-203">This online coding experience is in preview mode.</span></span> <span data-ttu-id="deb2d-204">Wenn Probleme auftreten, Bitte melden Sie diese [auf das Repository Dotnet/Try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="deb2d-204">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
  - title: <span data-ttu-id="deb2d-205">Vollständige Herausforderung</span><span class="sxs-lookup"><span data-stu-id="deb2d-205">Complete challenge</span></span>
    durationInMinutes: 1
    content: |
      <span data-ttu-id="deb2d-206">Sie haben das Lernprogramm "Zahlen in c#" abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="deb2d-206">You've completed the "Numbers in C#" tutorial.</span></span> <span data-ttu-id="deb2d-207">Erfahren Sie mehr über die Zahlen in c# in den folgenden Themen:</span><span class="sxs-lookup"><span data-stu-id="deb2d-207">You can learn more about numbers in C# in the following topics:</span></span>

      <span data-ttu-id="deb2d-208">[Tabelle ganzzahliger Typen](../language-reference/keywords/integral-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="deb2d-208">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  
      <span data-ttu-id="deb2d-209">[Tabelle für Gleitkommatypen](../language-reference/keywords/floating-point-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="deb2d-209">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  
      <span data-ttu-id="deb2d-210">[Tabelle integrierter Typen](../language-reference/keywords/built-in-types-table.md) </span><span class="sxs-lookup"><span data-stu-id="deb2d-210">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  
      <span data-ttu-id="deb2d-211">[Tabelle für implizite numerische Konvertierungen](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class="sxs-lookup"><span data-stu-id="deb2d-211">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  
      [<span data-ttu-id="deb2d-212">Tabelle für explizite numerische Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="deb2d-212">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)