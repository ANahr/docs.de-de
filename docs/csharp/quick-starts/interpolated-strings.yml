### YamlMime:Tutorial
title: <span data-ttu-id="a0c1f-101">Interpolierte Zeichenfolgen in C#</span><span class="sxs-lookup"><span data-stu-id="a0c1f-101">Interpolated strings in C#</span></span>
metadata:
  title: "Interpolierte Zeichenfolgen in C#. Erfahren Sie, wie Sie eine Zeichenfolge erstellen, die andere Werte umfasst – z.B. Datumsangaben und Werte."
  description: "Verwenden Sie für dieses Tutorial Ihren Browser, um die interpolierte Zeichenfolgenfunktion für C# interaktiv zu nutzen. Sie schreiben direkt im Browser einen C#-Code und sehen dort die Ergebnisse der Kompilierung und Ausführung Ihres Codes."
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="a0c1f-106">Sammlungen in C#</span><span class="sxs-lookup"><span data-stu-id="a0c1f-106">Collections in C#</span></span>
  ms.openlocfilehash: f54d8e5e3703556b333155fd9541f9d7c7e7fd1b
  ms.sourcegitcommit: 8bde7a3432f30fc771079744955c75c58c4eb393
  ms.translationtype: HT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/20/2018
items:
- durationInMinutes: 2
  content: "<span data-ttu-id=\"a0c1f-107\">In diesem Schnellstart wird erläutert, wie Sie interpolierte Zeichenfolgen in C# verwenden können, um Werte in eine einzige Ausgabezeichenfolge interaktiv einzufügen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-107\">This quick start teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id=\"a0c1f-108\">Verwenden Sie Ihren Browser zum Schreiben von C#-Code. Dort werden Ihnen unmittelbar die Ergebnisse der Kompilierung und Ausführung Ihres Codes angezeigt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-108\">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id=\"a0c1f-109\">In diesem Schnellstart sind einige Lektionen enthalten, bei denen Zeichenfolgen verkettet, Werte in Zeichenfolgen eingefügt und auf verschiedene Arten formatiert werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-109\">The quick start contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>\n"
- title: <span data-ttu-id="a0c1f-110">Erstellen einer interpolierten Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="a0c1f-110">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"a0c1f-111\">Führen Sie den folgenden Code im interaktiven Fenster aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"a0c1f-112\">Geben Sie hierfür den folgenden Codeblock in das interaktive Fenster ein (ersetzen Sie „\\<name>“ durch Ihren Namen), und klicken Sie auf die Schaltfläche **Ausführen**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-112\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"a0c1f-113\">Wenn Sie das Programm ausführen, wird eine einzelne Zeichenfolge angezeigt, die Ihren Namen in der Begrüßung enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-113\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"a0c1f-114\">Die Zeichenfolge, die in den <xref:System.Console.WriteLine%2A>-Methodenaufruf eingefügt wird, ist eine *interpolierte Zeichenfolge*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-114\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"a0c1f-115\">Dabei handelt es sich um eine Vorlage, durch die Sie eine einzelne Zeichenfolge (als *Ergebniszeichenfolge* bezeichnet) aus einer Zeichenfolge erstellen können, die eingebetteten Code enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-115\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"a0c1f-116\">Interpolierte Zeichenfolgen sind besonders nützlich für das Einfügen von Werten in eine Zeichenfolge oder zum Verketten (bzw. Verknüpfen) von Zeichenfolgen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-116\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"a0c1f-117\">Dieses einfache Beispiel enthält die zwei Elemente, über die jede interpolierte Zeichenfolge verfügen muss:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-117\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"a0c1f-118\">Ein Zeichenfolgenliteral, das ein `$`-Zeichen vor dem öffnenden Anführungszeichen enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-118\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"a0c1f-119\">Zwischen dem `$`-Symbol und dem Anführungszeichen darf kein Leerraum vorhanden sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-119\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"a0c1f-120\">(Wenn Sie sehen möchten, was geschieht, wenn Sie einen Leerraum einfügen, fügen Sie nach dem `$`-Zeichen im interaktiven Fenster einen ein, und klicken Sie auf die Schaltfläche **Ausführen**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-120\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"a0c1f-121\">Dann gibt der C#-Compiler den Fehler „Unerwartetes Zeichen ‚$‘“ zurück.)</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-121\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"a0c1f-122\">Mindestens ein *interpolierter Ausdruck*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-122\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"a0c1f-123\">Ein interpolierter Ausdruck wird durch eine öffnende und eine schließende Klammer (`{` und `}`) angegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-123\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"a0c1f-124\">Sie können jeden C#-Ausdruck in die Klammern einfügen, der einen Wert (einschließlich `null`) zurückgibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-124\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"a0c1f-125\">Im Folgenden finden Sie weitere Beispiele für interpolierte Zeichenfolgen mit einigen anderen Datentypen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-125\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"a0c1f-126\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-126\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"a0c1f-127\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-127\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"a0c1f-128\">Einschließen verschiedener Datentypen</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-128\">Include different data types</span></span>"
  durationInMinutes: 3
  content: "<span data-ttu-id=\"a0c1f-129\">Im vorherigen Schnellstart haben Sie eine interpolierte Zeichenfolge verwendet, um eine Zeichenfolge in eine andere einzufügen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-129\">In the previous quick start, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"a0c1f-130\">Ein interpolierter Zeichenfolgenausdruck kann jedoch jeden Datentyp aufweisen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-130\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"a0c1f-131\">Im Folgenden wird eine interpolierte Zeichenfolge dargestellt, die Werte mehrerer Datentypen enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-131\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"a0c1f-132\">Im folgenden Beispiel sind interpolierte Ausdrücke enthalten, die über ein `Vegetable`-Objekt, einen Member der `Unit`-Enumeration, einen <xref:System.DateTime>-Wert und einen <xref:System.Decimal>-Wert verfügen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-132\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"a0c1f-133\">Führen Sie es im interaktiven Fenster aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-133\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"a0c1f-134\">Beachten Sie, dass einer der interpolierten Ausdrücke das `item`-Objekt in der Ergebniszeichenfolge enthält, die in der Konsole angezeigt wird. In diesem Fall wird die Zeichenfolge „eggplant“ in die Ergebniszeichenfolge eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-134\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"a0c1f-135\">Dies liegt daran, dass der C#-Compiler Folgendes durchführt, wenn der Typ eines interpolierten Ausdrucks keine Zeichenfolge ist:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-135\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"a0c1f-136\">Wenn der interpolierte Ausdruck `null` ist, gibt dieser eine leere Zeichenfolge (\"\" oder <xref:System.String.Empty?displayProperty=nameWithType>) zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-136\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"a0c1f-137\">Wenn der interpolierte Ausdruck nicht `null` ist, wird die `ToString`-Methode des Typs des interpolierten Ausdrucks aufgerufen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-137\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"a0c1f-138\">Sie können dies testen, indem Sie die Definition der `Vegetable.ToString`-Methode im Beispiel auskommentieren, indem Sie ein Kommentarsymbol (`//`) davor einfügen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-138\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"a0c1f-139\">In der Ausgabe wird die Zeichenfolge „eggplant“ durch den vollqualifizierten Typnamen (der neben dem Typnamen von der C#-REPL definierte Namespace) ersetzt. Dabei handelt es sich um das Standardverhalten der <xref:System.Object.ToString?displayProperty=nameWithType>-Methode.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-139\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"a0c1f-140\">Bei der Ausgabe dieses Beispielcodes ist das Datum zu genau angegeben (der Preis von Auberginen ändert sich nicht sekündlich), und der Wert der Variablen „price“ gibt keine Währungsinformation an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-140\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"a0c1f-141\">Im nächsten Schritt erfahren Sie, wie Sie diese Probleme beheben, indem Sie das Format der Zeichenfolgen steuern, die von den interpolierten Ausdrücken zurückgegeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-141\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"a0c1f-142\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-142\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"a0c1f-143\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-143\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"a0c1f-144\">Steuern der Formatierung von interpolierten Ausdrücken</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-144\">Control the formatting of interpolated expressions</span></span>"
  durationInMinutes: 5
  content: "<span data-ttu-id=\"a0c1f-145\">In der vorherigen Lektion wurden zwei fehlerhaft formatierte Zeichenfolgen in die Ergebniszeichenfolge eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-145\">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id=\"a0c1f-146\">Bei einer davon handelte es sich um einen Datums- und Uhrzeitwert, bei dem nur das Datum relevant war.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-146\">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id=\"a0c1f-147\">Bei der zweiten handelte es sich um einen Preis, bei dem keine Währungseinheit angegeben wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-147\">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id=\"a0c1f-148\">Beide Probleme sind einfach zu beheben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-148\">Both issues are easy to address.</span></span> <span data-ttu-id=\"a0c1f-149\">Interpolierte Ausdrücke können *Formatzeichenfolgen* enthalten, die die Formatierung von bestimmten Typen steuern.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-149\">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id=\"a0c1f-150\">Ändern Sie den Aufruf von `Console.WriteLine` im vorherigen Beispiel, damit der Formatbezeichner für die Felder „date“ und „price“ wie in der folgenden Zeile dargestellt enthalten ist:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-150\">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>\n\n```csharp\nConsole.WriteLine($\"On {date:d}, the price of {item} was {price:C2} per {unit}.\");\n```\n\n<span data-ttu-id=\"a0c1f-151\">Sie können eine Formatzeichenfolge angeben, indem Sie dem interpolierten Ausdruck einen Doppelpunkt und die Formatzeichenfolge anfügen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-151\">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id=\"a0c1f-152\">Bei „d“ handelt es sich um eine [Zeichenfolge für das Standardformat für Datum und Uhrzeit](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier), die das kurze Datumsformat darstellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-152\">\"d\" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id=\"a0c1f-153\">Bei „C2“ handelt es sich um eine [Zeichenfolge für das numerische Standardformat](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier), die eine Zahl als Währungswert mit zwei Ziffern nach dem Dezimaltrennzeichen darstellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-153\">\"C2\" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>\n\n<span data-ttu-id=\"a0c1f-154\">Einige Typen in den .NET Standard-Bibliotheken unterstützen einen vordefinierten Satz von Formatzeichenfolgen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-154\">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id=\"a0c1f-155\">Darin sind alle numerischen Typen sowie alle Datums- und Uhrzeittypen enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-155\">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id=\"a0c1f-156\">Eine vollständige Liste der Typen, die Formatzeichenfolgen unterstützen, finden Sie im Artikel [Formatieren von Typen in .NET](../../standard/base-types/formatting-types.md) unter [Format Strings and .NET Class Library Types (Formatzeichenfolgen und .NET-Klassenbibliothekstypen)](../../standard/base-types/formatting-types.md#stringRef).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-156\">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id=\"a0c1f-157\">Jeder dieser Typen kann bestimmte Formatzeichenfolgen unterstützen. Sie können jedoch ebenfalls benutzerdefinierte Formatierungserweiterungen entwickeln, um benutzerdefinierte Formatierungen für vorhandene Typen bereitzustellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-157\">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id=\"a0c1f-158\">Weitere Informationen zur benutzerdefinierten Formatierung durch die Bereitstellung einer <xref:System.ICustomFormatter>-Implementierung finden Sie im Artikel [Formatieren von Typen in .NET](../../standard/base-types/formatting-types.md) unter [Benutzerdefinierte Formatierung mit ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-158\">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>\n\n<span data-ttu-id=\"a0c1f-159\">Versuchen Sie, die Formatzeichenfolgen im **.NET-Editor** zu verändern, um zu sehen, welche Auswirkungen sie auf die Formatierung des Datums, der Zeit und des numerischen Werts haben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-159\">Try modifying the the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id=\"a0c1f-160\">Ändern Sie „d“ in `{date:d}` in „t“ (um das kurze Uhrzeitformat anzuzeigen) sowie in „y“ (um das Jahr und den Monat anzuzeigen) und in „yyyy“ (um das Jahr als vierstellige Zahl anzuzeigen).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-160\">Change the \"d\" in `{date:d}` to \"t\" (to display the short time format), \"y\" (to display the year and month), and \"yyyy\" (to display the year as a four-digit number).</span></span> <span data-ttu-id=\"a0c1f-161\">Ändern Sie „C2“ in `{price:C2}` in „e“ (für die Exponentialschreibweise) und in „F3“ (für einen numerischen Wert mit drei Ziffern nach dem Dezimaltrennzeichen).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-161\">Change the \"C2\" in `{price:C2}` to \"e\" (for exponential notation) and \"F3\" (for a numeric value with three digits after the decimal point).</span></span>\n\n<span data-ttu-id=\"a0c1f-162\">Sie können zusätzlich zum Steuern der Formatierung auch die Feldbreite und die Ausrichtung der Zeichenfolgen steuern, die von einem interpolierten Ausdruck zurückgegeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-162\">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id=\"a0c1f-163\">Im nächsten Schritt erfahren Sie mehr zu diesem Thema.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-163\">In the next step, you'll learn how to do this.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"a0c1f-164\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-164\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"a0c1f-165\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-165\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"a0c1f-166\">Steuern der Feldbreite und der Ausrichtung von interpolierten Ausdrücken</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-166\">Control the field width and alignment of interpolated expressions</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"a0c1f-167\">Wenn die von einem interpolierten Ausdruck zurückgegebene Zeichenfolge in eine Ergebniszeichenfolge eingefügt wird, enthält diese normalerweise keine führenden oder nachgestellten Leerräume.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-167\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"a0c1f-168\">Insbesondere bei Instanzen, bei denen Sie mit einem Datensatz arbeiten, können Sie durch interpolierte Ausdrücke die Breite und Ausrichtung eines Felds angeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-168\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"a0c1f-169\">Wenn Ihnen dies angezeigt werden soll, führen Sie den folgenden Code aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-169\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"a0c1f-170\">Die Elementnamen sind linksbündig ausgerichtet. Die Mengen sind rechtsbündig ausgerichtet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-170\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"a0c1f-171\">Sie können die Ausrichtung festlegen, indem Sie dem Ausdruck ein Komma („,“) anfügen und die Feldbreite angeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-171\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"a0c1f-172\">Wenn Sie eine positive Zahl für die Feldbreite eingeben, wird das Feld rechtsbündig ausgerichtet:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-172\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"a0c1f-173\">Wenn Sie eine negative Zahl für die Feldbreite eingeben, wird das Feld linksbündig ausgerichtet:</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-173\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"a0c1f-174\">Entfernen Sie die negativen Vorzeichen der interpolierten Ausdrücke `{\"Item\",-25}` und `{item.Key,-25}`, und führen Sie das Beispiel erneut aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-174\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"a0c1f-175\">In diesem Fall ist der Elementname rechtsbündig ausgerichtet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-175\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"a0c1f-176\">Sie können eine Feldbreite und eine Formatzeichenfolge in einem einzigen interpolierten Ausdruck kombinieren.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-176\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"a0c1f-177\">Die Feldbreite wird zuerst angegeben, gefolgt von einem Doppelpunkt und der Formatzeichenfolge.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-177\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"a0c1f-178\">Probieren Sie das folgende, einfache Programm aus, das die drei formatierten Zeichenfolgen mit definierten Feldbreiten darstellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-178\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"a0c1f-179\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-179\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"a0c1f-180\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-180\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"a0c1f-181\">Sie haben den Schnellstart für interpolierte Zeichenfolgen abgeschlossen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-181\">You've completed the interpolated strings quick start.</span></span> \n\n<span data-ttu-id=\"a0c1f-182\">Sie können diese Schnellstarts für Ihre eigene lokale Entwicklungsumgebung fortsetzen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-182\">You can continue these quick starts on your own local development environment.</span></span> <span data-ttu-id=\"a0c1f-183\">Erfahren Sie mehr über die Grundlagen der [lokalen Entwicklung](local-environment.md), und wählen Sie dann einen Schnellstart aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-183\">Learn the basics of [local development](local-environment.md) and then pick a quick start.</span></span> <span data-ttu-id=\"a0c1f-184\">Sie können diese Übung durchführen, direkt mit dem nächsten Schnellstart fortfahren oder erneut mit dem Schnellstart [Zahlen in C#](numbers-in-csharp-local.md) beginnen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-184\">You can try this same exercise, move directly to the next quick start, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"a0c1f-185\">Weitere Informationen zum Arbeiten mit interpolierten Zeichenfolgen finden Sie im Artikel [Interpolierte Zeichenfolgen](../language-reference/keywords/interpolated-strings.md) in der C#-Referenz.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a0c1f-185\">You can learn more about working with interpolated strings in the [Interpolated Strings](../language-reference/keywords/interpolated-strings.md) topic in the C# Reference.</span></span>\0"
