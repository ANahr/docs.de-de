### YamlMime:YamlDocument
documentType: Tutorial
title: <span data-ttu-id="9b602-101">Verzweigungen und Schleifen</span><span class="sxs-lookup"><span data-stu-id="9b602-101">Branches and loops</span></span>
metadata:
  title: Verzweigungen und Schleifen
  description: "In diesem Schnellstart zu Branches und Schleifen verwenden Sie Ihren Browser, um sich interaktiv mit C# vertraut zu machen. Sie schreiben direkt im Browser C#-Code und sehen dort die Ergebnisse der Kompilierung und Ausführung Ihres Codes."
  audience: Developer
  level: Beginner
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="9b602-105">Sammlungen in C#</span><span class="sxs-lookup"><span data-stu-id="9b602-105">Collections in C#</span></span>
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"9b602-106\">In diesem Schnellstart erfahren Sie, wie Sie Code schreiben, der Variablen untersucht und basierend auf diesen Variablen den Ausführungspfad ändert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-106\">This quick start teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id=\"9b602-107\">Sie verwenden Ihren Browser zum interaktiven Schreiben von C#-Code und sehen im Browser die Ergebnisse der Kompilierung und Ausführung Ihres Codes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-107\">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"9b602-108\">Dieser Schnellstart enthält eine Reihe von Lektionen, in denen Branch- und Schleifenkonstrukte in C# untersucht werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-108\">This quick start contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id=\"9b602-109\">In diesen Lektionen lernen Sie die Grundlagen der Programmiersprache C# kennen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
  ms.openlocfilehash: 93183a172fb5a94751c99c0f59f59af0b045ac09
  ms.sourcegitcommit: 5177d6ae2e9baf026f07ee0631556700a5a193f7
  ms.translationtype: HT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/28/2017
- title: <span data-ttu-id="9b602-110">Treffen von Entscheidungen mithilfe der if-Anweisung</span><span class="sxs-lookup"><span data-stu-id="9b602-110">Make decisions using the if statement</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"9b602-111\">Führen Sie den folgenden Code im interaktiven Fenster aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"9b602-112\">Geben Sie hierfür den folgenden Codeblock in das interaktive Fenster ein, und klicken Sie auf die Schaltfläche **Ausführen**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"9b602-113\">Ändern Sie die Deklaration von `b` so, dass die Summe kleiner als 10 ist:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"9b602-114\">Klicken Sie erneut auf die Schaltfläche **Ausführen**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"9b602-115\">Da die Antwort kleiner als 10 ist, wird nichts ausgegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"9b602-116\">Die von Ihnen getestete **Bedingung** ist falsch.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"9b602-117\">Es ist kein Code auszuführen, da Sie lediglich eine der möglichen Verzweigungen für eine `if`-Anweisung geschrieben haben: die true-Verzweigung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"9b602-118\">Bei Ihren ersten Schritten mit C# (oder einer anderen Programmiersprache) kann es zu Fehlern kommen, wenn Sie Codes schreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"9b602-119\">Der **Compiler** findet diese Fehler und meldet diese.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"9b602-120\">Sollte die Ausgabe Fehlermeldungen enthalten, sehen Sie sich den Beispielcode und den Code im interaktiven Fenster an, um festzustellen, was behoben werden muss.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"9b602-121\">Durch diese Übung lernen Sie die Struktur eines C#-Codes kennen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"9b602-122\">Das erste Beispiel veranschaulicht die Vorteile von `if`-Anweisungen und boolean-Typen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"9b602-123\">Ein *boolean*-Typ ist eine Variable, die einen der folgenden zwei Werte enthalten kann: `true` oder `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"9b602-124\">In C# ist ein besonderer Typ für boolesche Variablen, `bool`, definiert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"9b602-125\">Die `if`-Anweisung überprüft den Wert eines `bool`-Typs.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"9b602-126\">Wenn der Wert `true` lautet, wird die nach `if` folgende Anweisung ausgeführt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"9b602-127\">Andernfalls wird diese übersprungen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"9b602-128\">Dieser Vorgang zum Überprüfen von Bedingungen und Ausführen von Anweisungen basierend auf diesen Bedingungen ist sehr nützlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"9b602-129\">Sehen wir uns dies einmal näher an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"9b602-130\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"9b602-131\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="9b602-132">Kombinieren von if- und else-Anweisungen</span><span class="sxs-lookup"><span data-stu-id="9b602-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"9b602-133\">Um einen anderen Code in den true- und false-Verzweigungen auszuführen, erstellen Sie eine `else`-Verzweigung, die ausgeführt wird, wenn die Bedingung falsch ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"9b602-134\">Testen Sie Folgendes:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"9b602-135\">Die Anweisung, die nach dem Schlüsselwort `else` folgt, wird nur ausgeführt, wenn die zu testende Bedingung `false` lautet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"9b602-136\">Wenn Sie `if` und `else` mit booleschen Bedingungen kombinieren, erhalten Sie sozusagen das Beste aus beiden Welten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"9b602-137\">Der Einzug unter den `if`- und `else`-Anweisungen dient zur besseren Lesbarkeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"9b602-138\">In der Programmiersprache C# werden Einzüge oder Leerräume nicht berücksichtigt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-138\">The C# language doesn't treat indentation or whitespace as significant.</span></span> <span data-ttu-id=\"9b602-139\">Die Anweisung nach dem Schlüsselwort `if` bzw. `else` wird basierend auf der Bedingung ausgeführt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"9b602-140\">Alle Beispiele in diesem Schnellstart folgen der gängigen Vorgehensweise, Zeilen basierend auf dem Steuerungsfluss von Anweisungen mit einem Einzug zu versehen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-140\">All the samples in this quick start follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"9b602-141\">Da Einzüge nicht relevant sind, müssen Sie mit `{` und `}` angeben, dass Sie mehr als eine Anweisung im Rahmen des bedingt ausgeführten Blocks verwenden möchten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"9b602-142\">C#-Programmierer verwenden solche geschweifte Klammern in der Regel bei allen `if`- und `else`-Anweisungen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"9b602-143\">Das folgende Beispiel ist identisch mit dem Inhalt, den Sie soeben erstellt haben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"9b602-144\">Probieren Sie es aus!</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"9b602-145\">Im restlichen Schnellstart enthalten alle Codebeispiele geschweifte Klammern gemäß den allgemein gültigen Vorgehensweisen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-145\">Through the rest of this quick start, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"9b602-146\">Sie können kompliziertere Bedingungen testen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"9b602-147\">Das Zeichen `&&` steht für „and“.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"9b602-148\">Es bedeutet, dass beide Bedingungen „true“ lauten müssen, damit die Anweisung in der true-Verzweigung ausgeführt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"9b602-149\">Diese Beispiele zeigen außerdem, dass Sie in jeder bedingten Verzweigung mehrere Anweisungen verwenden können, sofern Sie sie mit `{` und `}` umschließen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"9b602-150\">Sie können auch `||` für „or“ verwenden:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"9b602-151\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"9b602-152\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"9b602-153\">Wiederholen von Vorgängen durch Schleifen</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-153\">Use loops to repeat operations</span></span>"
  durationInMinutes: 6
  content: "<span data-ttu-id=\"9b602-154\">Ein weiterer wichtiger Begriff zur Erstellung umfangreicherer Programme sind **Schleifen**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"9b602-155\">Schleifen werden verwendet, um Anweisungen zu wiederholen, die mehrmals ausgeführt werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"9b602-156\">Testen Sie den folgenden Code im interaktiven Fenster:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"9b602-157\">Die `while`-Anweisung prüft eine Bedingung und führt die Anweisung nach `while` aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"9b602-158\">Es wiederholt die Überprüfung der Bedingung und die Ausführung dieser Anweisungen, bis die Bedingung „false“ lautet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"9b602-159\">In diesem Beispiel kommt ein weiterer neuer Operator vor.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"9b602-160\">Das `++`-Zeichen nach der `counter`-Variable ist der **increment**-Operator.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"9b602-161\">Er erhöht den Wert des Zählers um 1 und speichert diesen Wert in der Zählervariable.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"9b602-162\">Stellen Sie sicher, dass die Schleifenbedingung `while` zu „false“ wechselt, nachdem Sie den Code ausgeführt haben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"9b602-163\">Erstellen Sie anderenfalls eine **Endlosschleife**, durch die das Programm niemals beendet wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"9b602-164\">Dies werden wir nicht testen, da bei dem Modul, das Ihren Code ausführt, eine Zeitüberschreitung auftritt und keine Ausgabe von Ihrem Programm angezeigt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"9b602-165\">Die `while`-Schleife testet die Bedingung, bevor der Code nach `while` ausgeführt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"9b602-166\">Die `do` ... `while`-Schleife führt den Code zuerst aus und überprüft anschließend die Bedingung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"9b602-167\">Diese sieht folgendermaßen aus:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"9b602-168\">Diese `do`-Schleife und die vorherige `while`-Schleife funktionieren auf dieselbe Weise.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"9b602-169\">Sehen wir uns nun eine letzte Schleifenanweisung an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"9b602-170\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"9b602-171\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="9b602-172">Arbeiten mit der for-Schleife</span><span class="sxs-lookup"><span data-stu-id="9b602-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"9b602-173\">Eine weitere häufig verwendete Schleifenanweisung, die bei C#-Codes vorkommt, ist die `for`-Schleife.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"9b602-174\">Testen Sie den folgenden Code im interaktiven Fenster:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"9b602-175\">Dieser funktioniert auf dieselbe Weise wie die `while`-Schleife und die `do`-Schleife, die Sie bereits verwendet haben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"9b602-176\">Die `for`-Anweisung besteht aus drei Teilen, die steuern, wie sie ausgeführt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"9b602-177\">Der erste Teil ist der **for-Initialisierer**: `for counter = 0;` deklariert, dass `counter` die Schleifenvariable ist, und legt den Anfangswert auf `0` fest.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"9b602-178\">Der mittlere Teil ist die **for-Bedingung**: `counter < 10` deklariert, dass diese `for`-Schleife ausgeführt wird, solange der Wert des Zählers kleiner als 10 ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"9b602-179\">Der letzte Teil ist der **for-Iterator**: `counter++` gibt an, wie die Schleifenvariable geändert wird, nachdem der Block nach der `for`-Anweisung ausgeführt wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"9b602-180\">Hier gibt dieser an, dass `counter` bei jeder Blockausführung um 1 erhöht werden soll.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"9b602-181\">Experimentieren Sie selbst damit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"9b602-182\">Testen Sie Folgendes:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"9b602-183\">Ändern Sie den Initialisierer, um mit einem anderen Wert zu beginnen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"9b602-184\">Ändern Sie die Bedingung, um an einem anderen Wert anzuhalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"9b602-185\">Wenn Sie fertig sind, fahren Sie damit fort, mithilfe der erworbenen Kenntnisse selbst Codes zu schreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"9b602-186\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"9b602-187\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="9b602-188">Kombinieren von Branches und Schleifen</span><span class="sxs-lookup"><span data-stu-id="9b602-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: "<span data-ttu-id=\"9b602-189\">Nachdem Sie nun die `if`-Anweisung und die Schleifenkonstrukte in der Programmiersprache C# kennengelernt haben, versuchen Sie, einen C#-Code zu schreiben, der die Summe aller ganzen Zahlen von 1 bis 20 ermittelt, die durch 3 teilbar sind.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-189\">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id=\"9b602-190\">Im Folgenden einige Tipps:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-190\">Here are a few hints:</span></span>\n\n- <span data-ttu-id=\"9b602-191\">Der `%`-Operator ermittelt den Restwert einer Divisionsoperation.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-191\">The `%` operator gives you the remainder of a division operation.</span></span>\n- <span data-ttu-id=\"9b602-192\">Die `if`-Anweisung ermittelt die Bedingung, um festzustellen, ob eine Zahl in der Summe berücksichtigt werden soll.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-192\">The `if` statement gives you the condition to see if a number should be part of the sum.</span></span>\n- <span data-ttu-id=\"9b602-193\">Die `for`-Schleife ermöglicht es, eine Reihe von Schritten für alle Zahlen von 1 bis 20 zu wiederholen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-193\">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>\n\n<span data-ttu-id=\"9b602-194\">Probieren Sie es selbst aus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-194\">Try it yourself.</span></span> <span data-ttu-id=\"9b602-195\">Prüfen Sie dann, wie Sie abgeschnitten haben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-195\">Then check how you did.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"9b602-196\">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-196\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"9b602-197\">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-197\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: "<span data-ttu-id=\"9b602-198\">Übung abgeschlossen</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-198\">Complete challenge</span></span>"
  durationInMinutes: 1
  content: "<span data-ttu-id=\"9b602-199\">Sie haben den Schnellstart „Branches und Schleifen“ abgeschlossen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-199\">You've completed the \"branches and loops\" quick start.</span></span> \n\n<span data-ttu-id=\"9b602-200\">Sie können diese Schnellstarts für Ihre eigene Entwicklungsumgebung fortsetzen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-200\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"9b602-201\">Das .NET-Thema [Erste Schritte in 10 Minuten](https://www.microsoft.com/net/core) umfasst Anweisungen zum Einrichten Ihrer lokalen Entwicklungsumgebung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-201\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"9b602-202\">Sobald Sie damit fertig sind, fahren Sie mit dem [Schnellstart „Auflisten der Sammlung“](arrays-and-collections.md) in Ihrer lokalen Umgebung fort.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-202\">Once you've done that, continue with [List collection quickstart](arrays-and-collections.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"9b602-203\">Weitere Informationen zu diesen Begriffen finden Sie unter folgenden Themen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-203\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"9b602-204\">[if- und else-Anweisung](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-204\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"9b602-205\">[while-Anweisung](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-205\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"9b602-206\">[do-Anweisung](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-206\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"9b602-207\">for-Anweisung</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b602-207\">For statement</span></span>](../language-reference/keywords/for.md)\0"
